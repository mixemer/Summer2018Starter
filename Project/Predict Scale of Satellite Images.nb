(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2420735,      46413]
NotebookOptionsPosition[   2408806,      46237]
NotebookOutlinePosition[   2409159,      46253]
CellTagsIndexPosition[   2409116,      46250]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Predict the Scale of Satellite Images", "Title",
 CellChangeTimes->{{3.7394623474184437`*^9, 
  3.739462351757989*^9}},ExpressionUUID->"755e0098-9782-4df5-8299-\
7f54266c54d6"],

Cell["Some explanation", "Abstract",ExpressionUUID->"db4efd27-b72d-4835-a486-b18956bba0cb"],

Cell["Mehmet Sahin, Jun. 26,  2018", "AuthorInfo",ExpressionUUID->"59a63784-4e95-46b9-9a1d-2c013f47161b"],

Cell["", "Text",ExpressionUUID->"85271f44-5b04-421c-bf31-0395fab10c35"],

Cell["Some explanation", "Text",ExpressionUUID->"a6bd12b6-0886-47fc-9fa5-02f0e3c1bd26"],

Cell[CellGroupData[{

Cell["Collect Satellite Images", "Section",ExpressionUUID->"35feb7e4-4e93-4e64-abc0-7b0b86e8128f"],

Cell[TextData[StyleBox["In this section, we will get the data using GeoImage.",
 FontColor->GrayLevel[0.5],
 Background->GrayLevel[1]]], "Text",ExpressionUUID->"55ddc81f-fcf7-4026-af30-\
c2c4c901f21b"],

Cell["Some explanation", "Text",ExpressionUUID->"dc3fa30d-000e-45b8-9f6e-f2ffca697a75"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7394827566211348`*^9, 3.739482759628078*^9}, {
  3.7396500673775787`*^9, 3.739650072436092*^9}, {3.739725729121914*^9, 
  3.739725730835137*^9}, {3.73973377522888*^9, 3.739733779206121*^9}, {
  3.739809215679933*^9, 3.739809219690433*^9}, {3.739811792757412*^9, 
  3.73981179607034*^9}, {3.739814250235441*^9, 3.739814252265829*^9}, {
  3.739828999105218*^9, 
  3.739829002057686*^9}},ExpressionUUID->"fc097bea-1c77-45d9-b139-\
f63fc32e60f7"],

Cell["Create a function to get countries\[CloseCurlyQuote] geo positions \
randomly:", "CodeText",ExpressionUUID->"d4717b68-e7a9-459d-b0b1-28ff62c78660"],

Cell[BoxData[
 RowBox[{
  RowBox[{"geoPositionOfCountry", "[", 
   RowBox[{
   "entities_", ",", "numberOfPosition_Integer", ",", "folderName_String"}], 
   "]"}], " ", ":=", "\[IndentingNewLine]", "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"countries", " ", "=", " ", "entities"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"mesh", " ", "=", " ", 
      RowBox[{"DiscretizeGraphics", "@", 
       RowBox[{"EntityValue", "[", 
        RowBox[{"countries", ",", "\"\<Polygon\>\""}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"SeedRandom", "[", 
      RowBox[{"Hash", "@", 
       RowBox[{"{", 
        RowBox[{"folderName", ",", "countries"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Reverse", "[", 
      RowBox[{
       RowBox[{"RandomPoint", "[", 
        RowBox[{"mesh", ",", "numberOfPosition"}], "]"}], ",", 
       RowBox[{"{", "2", "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellLabel->"In[49]:=",ExpressionUUID->"bc28cecf-a8f1-44a1-9a88-a545439b7d8a"],

Cell["\<\
Let\[CloseCurlyQuote]s plot them and see how those random positions act on a \
Graphic\
\>", "CodeText",ExpressionUUID->"7fc79341-27e5-45f6-b25b-6a94bb02c292"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingDataOfCountry", " ", "=", " ", 
   RowBox[{"geoPositionOfCountry", "[", 
    RowBox[{
     RowBox[{"{", 
      TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
        "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
       "Entity"], "}"}], ",", "500", ",", "\"\<training\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validationDataOfCountry", " ", "=", " ", 
   RowBox[{"geoPositionOfCountry", "[", 
    RowBox[{
     RowBox[{"{", 
      TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
          RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
        "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
       "Entity"], "}"}], ",", "100", ",", "\"\<validation\>\""}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testingDataOfCountry", " ", "=", " ", 
    RowBox[{"geoPositionOfCountry", "[", 
     RowBox[{
      RowBox[{"{", 
       TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
           RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
         "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
        "Entity"], "}"}], ",", "25", ",", "\"\<testing\>\""}], "]"}]}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{"trainingDataOfCities", " ", "=", " ", 
   RowBox[{"geoPositionOfCountry", "[", 
    RowBox[{
     RowBox[{"{", 
      InterpretationBox[
       DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
        TemplateBox[{
         TemplateBox[{"\"cities\""}, "ImplicitEntityClassBase"],TagBox[
           GridBox[{{
              TemplateBox[{
                TemplateBox[{"\"country\"", 
                  RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Country\""}], "]"}], 
                  "\"EntityProperty[\\\"City\\\", \\\"Country\\\"]\""}, 
                 "GrayEntityFrame"], "\":\"", 
                TemplateBox[{"\"United States\"", 
                  RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                  "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
                  "\"country\""}, "Entity"]}, "ImplicitEntityInfoRow"]}, {
              TemplateBox[{
                TemplateBox[{"\"city population\"", 
                  RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}], 
                  "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""}, 
                 "GrayEntityFrame"], "\":\"", 
                RowBox[{"TakeLargest", "[", "15", "]"}]}, 
               "ImplicitEntityInfoRow"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "GeneralizedEntityInfoGrid", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
          Dynamic[EntityFramework`Formatting`Private`open],
          "\"EntityClass[\\\"City\\\", {EntityProperty[\\\"City\\\", \
\\\"Country\\\"] -> Entity[\\\"Country\\\", \\\"UnitedStates\\\"], \
EntityProperty[\\\"City\\\", \\\"Population\\\"] -> TakeLargest[15]}]\"",
          TemplateBox[{
           "\"(\"", "\"15 largest citites of United States\"", "\")\""}, 
           "RowDefault"]},
         "ImplicitEntityToggleLabeled"]],
       EntityClass[
       "City", {
        EntityProperty["City", "Country"] -> 
         Entity["Country", "UnitedStates"], 
         EntityProperty["City", "Population"] -> TakeLargest[15]}],
       SelectWithContents->True], "}"}], ",", "500", ",", 
     "\"\<training\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"validationDataOfCities", " ", "=", " ", 
   RowBox[{"geoPositionOfCountry", "[", 
    RowBox[{
     RowBox[{"{", 
      InterpretationBox[
       DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
        TemplateBox[{
         TemplateBox[{"\"cities\""}, "ImplicitEntityClassBase"],TagBox[
           GridBox[{{
              TemplateBox[{
                TemplateBox[{"\"country\"", 
                  RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Country\""}], "]"}], 
                  "\"EntityProperty[\\\"City\\\", \\\"Country\\\"]\""}, 
                 "GrayEntityFrame"], "\":\"", 
                TemplateBox[{"\"United States\"", 
                  RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                  "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
                  "\"country\""}, "Entity"]}, "ImplicitEntityInfoRow"]}, {
              TemplateBox[{
                TemplateBox[{"\"city population\"", 
                  RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}], 
                  "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""}, 
                 "GrayEntityFrame"], "\":\"", 
                RowBox[{"TakeLargest", "[", "15", "]"}]}, 
               "ImplicitEntityInfoRow"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
            "GeneralizedEntityInfoGrid", 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
          Dynamic[EntityFramework`Formatting`Private`open],
          "\"EntityClass[\\\"City\\\", {EntityProperty[\\\"City\\\", \
\\\"Country\\\"] -> Entity[\\\"Country\\\", \\\"UnitedStates\\\"], \
EntityProperty[\\\"City\\\", \\\"Population\\\"] -> TakeLargest[15]}]\"",
          TemplateBox[{
           "\"(\"", "\"15 largest citites of United States\"", "\")\""}, 
           "RowDefault"]},
         "ImplicitEntityToggleLabeled"]],
       EntityClass[
       "City", {
        EntityProperty["City", "Country"] -> 
         Entity["Country", "UnitedStates"], 
         EntityProperty["City", "Population"] -> TakeLargest[15]}],
       SelectWithContents->True], "}"}], ",", "100", ",", 
     "\"\<validation\>\""}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"testingDataOfCities", " ", "=", " ", 
    RowBox[{"geoPositionOfCountry", "[", 
     RowBox[{
      RowBox[{"{", 
       InterpretationBox[
        DynamicModuleBox[{EntityFramework`Formatting`Private`open = False}, 
         TemplateBox[{
          TemplateBox[{"\"cities\""}, "ImplicitEntityClassBase"],TagBox[
            GridBox[{{
               TemplateBox[{
                 TemplateBox[{"\"country\"", 
                   RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Country\""}], "]"}], 
                   "\"EntityProperty[\\\"City\\\", \\\"Country\\\"]\""}, 
                  "GrayEntityFrame"], "\":\"", 
                 TemplateBox[{"\"United States\"", 
                   RowBox[{"Entity", "[", 
                    RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}], 
                   "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"", 
                   "\"country\""}, "Entity"]}, "ImplicitEntityInfoRow"]}, {
               TemplateBox[{
                 TemplateBox[{"\"city population\"", 
                   RowBox[{"EntityProperty", "[", 
                    RowBox[{"\"City\"", ",", "\"Population\""}], "]"}], 
                   "\"EntityProperty[\\\"City\\\", \\\"Population\\\"]\""}, 
                  "GrayEntityFrame"], "\":\"", 
                 RowBox[{"TakeLargest", "[", "15", "]"}]}, 
                "ImplicitEntityInfoRow"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
             "GeneralizedEntityInfoGrid", 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
            "Column"],Dynamic[EntityFramework`Formatting`Private`open],
           "\"EntityClass[\\\"City\\\", {EntityProperty[\\\"City\\\", \
\\\"Country\\\"] -> Entity[\\\"Country\\\", \\\"UnitedStates\\\"], \
EntityProperty[\\\"City\\\", \\\"Population\\\"] -> TakeLargest[15]}]\"",
           TemplateBox[{
            "\"(\"", "\"15 largest citites of United States\"", "\")\""}, 
            "RowDefault"]},
          "ImplicitEntityToggleLabeled"]],
        EntityClass[
        "City", {
         EntityProperty["City", "Country"] -> 
          Entity["Country", "UnitedStates"], 
          EntityProperty["City", "Population"] -> TakeLargest[15]}],
        SelectWithContents->True], "}"}], ",", "25", ",", "\"\<testing\>\""}],
      "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{"GeoListPlot", "@", 
  RowBox[{"GeoPosition", "@", "trainingDataOfCountry"}]}], "\n", 
 RowBox[{"GeoListPlot", "@", 
  RowBox[{"GeoPosition", "@", "trainingDataOfCities"}]}]}], "Code",
 CellChangeTimes->{{3.739291823510951*^9, 3.739291830428965*^9}, {
   3.7394446068843403`*^9, 3.7394446250429773`*^9}, 3.739445822407168*^9, 
   3.7394790893416367`*^9, {3.7394818175765*^9, 3.739481830322919*^9}, {
   3.739481927215184*^9, 3.7394819276987762`*^9}, {3.739482197758955*^9, 
   3.739482197912353*^9}, {3.7394826602296886`*^9, 3.739482660964951*^9}, 
   3.739482749167656*^9, {3.739483666475519*^9, 3.739483687541803*^9}, {
   3.739483758386856*^9, 3.7394837971786203`*^9}, {3.7394838366156693`*^9, 
   3.739483842840086*^9}, {3.739483892441947*^9, 3.739483905044877*^9}, {
   3.739484066550593*^9, 3.7394840899146757`*^9}, {3.7394851564120207`*^9, 
   3.739485161290669*^9}, {3.739493069017714*^9, 3.7394930703322678`*^9}, {
   3.739493399610229*^9, 3.73949339988568*^9}, {3.739493669129137*^9, 
   3.739493672817224*^9}, {3.739493818009707*^9, 3.7394938218099623`*^9}, {
   3.7395743419713383`*^9, 3.73957434216625*^9}, {3.7397244872708883`*^9, 
   3.739724614308051*^9}, {3.739725021006192*^9, 3.7397250611754208`*^9}, {
   3.739725095260007*^9, 3.739725097694481*^9}, {3.739725153751787*^9, 
   3.73972516459629*^9}, {3.739725214767887*^9, 3.739725217975443*^9}, {
   3.73973379581155*^9, 3.739733889168455*^9}, {3.7397833629535313`*^9, 
   3.7397833728753223`*^9}, 3.739783733493965*^9},
 CellLabel->"In[50]:=",ExpressionUUID->"0da66e61-053c-44ed-bd6f-ec8918405511"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       FormBox[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJzsvVmPXFm233c9PPjRX8Hfwq9+s19l+ANIsCz4RQYkA4YhWJAEyxAgP9iQ
1Lp9u6pvdQ19q1mse5vJoYtJsm4xBzZzosgc2MyxmZGZbI4lMitZYNEEjuO3
T/xPrFixzxRzkvmwMiNOnGGfffbZe/32GvZ/9ff+l7/zP/2nf/Znf/aP/4vm
n7/zd/+3/+Yf/aO/+7//9/9l88v/8A//8f/8D/7h3/8f/7t/+L/+/X/w9//R
f/33/rPmxun/5M/+7L9tfvjPm59/Ob+fnB5pjE0+udWWcZajUG5uJh9/dz/8
/+XcXnJucTmTq/enk59+PEz2nxwmS42lZOHh5eTdm8Pk9clhx/+Xx1vJT28a
4bPkxv3D5OaD5nG7B8mNjfS3Ow/T31682uzYF2E/v231yVGy8OhRsv70afh8
q7Gd3Hn8OFk83Anbb2ydS+4d3gjX5//K/tXmtvPJ/O6F5OjFva7zIeyz+2Sh
Vf696D4I9/3iZfr/bfP7k+/T//qde6A+2udoJG9e7ydvTv6Ye85nLzfCPnm/
U66THw6To+eHyebT9N6Ru4+Okrnt9J7n56eD8Hlm51qy83g92Xx+1FFunpee
TVV5W3G/e/vdx7w11+Yz9WbLU6ccvci9xW+ya/sy2XLZY6ifvHsuKvPb1u+2
fv3+fNc1Y+eKlafoepLf3jlIVvYOQ39y80Hn+0KbeXWcCt9pA7o2/2m//H91
3EiW56ei98u588rB/e48OkwOn6bvsb+H+e37yesf2m37i4Xifmfz6DDI3uPB
t4cf37TfB8p4fJKWnzqgXrgH6ivv+CeHq8ndxSvJiyf3B1ourlv3vawjvHc8
Q9Ut/e/9w+Fdz4pte8OWxbmp1pi6n3x2c73SMbTXpdWV7LjaMrOTfNIUPn/y
7Wry6aXrydb92cplLupT+I3nRducutuofM4PXar2of2K+nM+04fY32jzjIkb
jcOO9vLJrUgbaupX+vz57IO0PbW2nZtbTz6f2QjbkKX768mlxfWwnetsN3Uf
vnPcq1eN8JljP5nb7Thvx+cBCPchKd23WZbLKw9CWWc2tpMvb22m25v3w3hw
72EjGxOPT446dKzXr9O65Hc+I/pNda/frJ6hNsBnfvtysZF8d78R9M+VvUbz
uTRa12kkl++kdXvt3lZ2zeff74ey+fv7+Nu1VC9ufb9650HWFvis+91s7Ifz
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
bN1cybc7+TxZJn6th1jsjPo78Yj1By/TZQYhsdzePk4oNp7GzmX92f1vrE+i
+dSYniaO9LkbdF6/1l3M1jaMulJOEZWJtX0UbyNbsD7j/5qulddIvlhM13jG
RlTER+hQipGj/Mp116tc3rjWEx8hsfUFvFSNN+KeqY/Lq42uvMzqR6gTnjts
WPV5qC30+1y1/ivzqrJz8Xy1lsiw7JTqR8dhI6tzT0ONR2rqUZ9eX8zWYApr
IS2sjLw+8tqXf16IcivZ9m3HR3sMv03dTd/tSc+76H3slI/Ujvnqd3XPlpli
c10w0kj01QHbGsZlK4qVA+6Aj2Jzp/Y9Zl0i6h3fOURrr4bzyB5j1mYOYnza
OuKAWnMW1ldOaxjBR+/McybnOFwU8tzZ5zHg9XUnS8bPMO8TJ/k8DXARfnbT
60vB3qO2Rp9E2wt81FgLIjayfRl8pHPBR9iN4AH1T5aPbD8vzoCPYApsJ8Q+
+b7S81EVEW/BPt5+JH+8t60yKFYppvezBm7eNUKe/ZatiuMWDP/QZ8ND5AO0
26vw0f6L/eBXp3Vjdcwt1q/eaeuZvfJR2dgbG6vq7D8IOY74m9u8cJ5T8sb7
qn5R1o+qbMzOq4siPht0/dj75bqs74NfGdfSu6i1x/L4iH3Qw/ns6xA9XWuE
ih/hJT7DFVrTBR2+Sl/15fLqUPiIuDXYMOZPFxPNP3O/+L/Dg9wX94TAJtwX
/FRHh+yXj+Rz4vko2OhbejB1Piy9VmXX+e3c/TCu16s8ezbYXLvYpC7+7c3U
NoUvU5OJYCQ47NrM9aHeS532QrvQOCo2ss8sxkpWaNvk8SfekPn7SXuuMbFz
WpaR7DwZn7GVESNWZPvnfy+5u3uWATDSpHCRFeKi9HyKfGKxF5EvIcuxbSWL
8Whvs3E+XbYem4u7yfbf3U+fo2xIlInr4a/YFZ9leGvcdTccGT+3jJuVBn7+
rA02MnslIj6SPwf9EXo5+QKCn1dTN7++eS2wj+UY8ZHKS14GxdRzPsTqnlpH
R7wTeMCww/qTnWCvse8b11PsThgnm/xTZPfhd2uTEgNpvon1WMVJWks2xkd5
Oi/3Bxspv5zlI/KVc7/iI619W8xIbUEf1D7w0a2ddE0o+BTfOqs7Wp/DUcko
bEeeO2JxQLExsGiszeYRT+K/lc1jW/uZ9YEvOi42zzYI8ecr4qPfLGudozRP
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
H7P4pZflDCifPuxxaZnSfAzcJ3512PSmLn8W1R2v3r849nF4kOLXPfLPwDJN
24an55k/z93vHL/YK8+XKs8OFdMdLC/Jh8n/XqRz5Ols4qM0f3ujI6897/GU
W+9EOaNpr+lcaOpnpzFeMTr+Or3wEULMks7x+PvVZPPRXIgtYj3Ym9nax51y
s+C9LmorVaUf/Zd6hjF7iQmZZFE71ty93h3shuTwGPb1e7XpUU74aOp3F3vy
uZtZWUrHzyYncfzF+aVTkectT3iPYSTYCBvSMOxHyMkQbafKTyLesb539t21
/nXepqXxotf8dfSNxG/BRPBRVR6Ej5gLunz7elgH9n3gIisd6zghw84VJ33V
rpfUYqMsxumD4KPx88Zpljqc5PM0YD8iDgk+Ile34m/Q2+EB8Qt2E6snwkD4
7Og8fEZvgI/4r3x10iVsPgMvlo9gBObCtb/+w0OWq/gOpxTltPPz6OpPn7xY
y41x8Gxlzy8+kq2K+4NzUn/pzvgqcln4c7Pd5zMXH6k82PCwl8FHrIcU4yPs
ZzbHxGmWPJ03Fnthfexi/nixZ1+2LfbsqxyHD2mV+7MMpbLqWratFeURj8VE
HRvdIcZpcA6+f2IyYgDpH/itLh/Jb6euzZr9q9ZTP21lVCJ9jc/DXru1Srsa
1Lmkj9o8jaOKe7LvRK8iPipaT7ZjPrG536+/uxP46LOr8+3jZnaS1c21SuXx
9rZxtgVbJr2nw1oLVhzN50HbkWhz6oNUr7RN+67ZvjRm07f9al0+sfYeW67K
fPSyEfSSqZnZZvtaqXXtUyU+V9wwGaV1fp8DL6yHNO56GJmMnzHeB6lsUzJ2
JP7/emEjrO363R9SW0k2z93kAcVJak029QXYkC7e3W7y0G44D3YodCxsRlo7
dnF3rakfHWR6RZldZWZ3NvAR8Tiwh2wxlo3InQ0f9eJnFlvrNG/+Xzaerced
a1DavpoyyqcpfC+Yr4OLYD2/HRuSuAsRH5Hn+7dXf5Z8ffnPk28WvjCMdD7s
U3Sfo44Z6EfydF7rK2GZwvtbxOYWdf/e7lM2758XC12FvaqIjtM75tfi9fta
+5k/18ri1cJnzTk9H+l6P5w0ks8XtpML92bDuyobXNl9sd83awcdfcm55d3C
Pol1hQalZ38ofKR2XvRssRP0c43Ye6PvNpf9MO7vxKxnOshrxPioe0zcz3zp
iGkij13GVk097OLNuez9jM3BeBlne/RCnTLfARsNi4+qtM9eRO+TbNzW5q5+
W6xkGUg2dJXL5gFP4yyr66H99vOUhWviY3dubj351cx75v9l1oYZaKxRmagO
Yzkf3nsZP1e8j1LKSiG2tRHaHmx04c5msvrHPwZfO/Ux2DTQ3emTlGtT9hT4
aHq9fW74iNzU55a2w3eOgx9Yi5bc2MqrWxSbAx9hS+I/fVPb3tIIedvER36t
pKrSyzyf+AhW8vq1HR/ERnYdv6pjjdbD1TZx0LWNc4GRxEdwYyxvn+JVY+Wa
dMnTea1tpWou7uOTzrHT10MRH9XVd6ruW7SfzcVky+zLHzvH8vxU8uzFdu75
OSe6EvPJsg+Fd7jZ1q4/uJP89d3fB1vkwk7+esgx4Ty2HyHO6EPho1GKt98E
u3drjor/WnOul3P7eQXrwypuHwUfDePcVfWta9Py40zb/+HDlcBJvs6tjSiv
TuTrJeYbZ7vBrw4Zdv4Q+hWf67IfUdtWPePXaeeGNMb5GDU/L2b70qp8xPqj
G4dte3xs/Ch6F3zfTaxOxkdj168HKJ6Pxl2eD0LGzxLvu3RxkrVXtvLHwzdw
0tLudnJ7bybwDbYNa+eGAcRHMAr9ia6BXx02I/ER7KS1jBb2poPPnPoZxTcR
k6R1YL34/ojc4thfKJfN2Z3XX1n7kvezi+1fFkeS3n/7nHAKzKL74nfYsmxe
mfojt4SOe/emk4+Upw8RH12++cs09qr5W5U5rmHwEeUexphb5F+Xd0yZX32e
3cV+93pMnp3Gj7l57aUX8fpWXhliUsRHKh82hlfkE/mxPed7cXU1fV8XtoOP
Xd1nWpeP6HMGFcPyIfGRt62kfW9bj5SuqJjRoucYs3fE7CE2zm8YfORzQg5D
1ldnivWN5niHT12bj9qC7eirG3NRO1Ge7Ujj47i5SAIbwS79rl9cJvQtNn9C
Xrurc067bgOf/XyX1oW1uei9b52eR9pPVdNBbe6Fd28GN37CSe+Nn51d53Xc
ZflgZPzs8CFJl03J2JD4PL0xG2J6iB3CPmTzeae+wftZv0sMDmOz8tQpH4O9
DqyF7o+w5ir+e/RfxDiLuRRfxBqwPuc3vxHH433TyvgIXT7NfdC2x9t+r4iF
dH/E91jfOstHis2yfOT15yLfEc6Nz6BlOM73UysPmY03uvbgXPLl+dSGJD6q
orvk+Z71Kn78H4Q+0Ku+2ysfWTmO8JHXE+1v9tkOyz5XZ96StYDsOqlVc/J9
udwfHyEX7qa5bjlPGgPdLbzjWqfW54kYdXs5jaLnKdu91rL1fs5VzxWbI3p9
0t2exUeyUw3ynkaVE31ubjpX5/jNpYthfdj1e9e7jpu+PhWkrI+1TDRJtnrs
cryXo+AjRCyW93u/447arcbT41ZexVjsJvJjq43BUFX4aNhrL08vr43PhjRo
v74PYn2hSZPxM8MHKzc3w5qxSMgDYmxIT8289MkPh8nO4/VsbJOfHXxk1xbi
WM9i2JS+WU1zfMNGrCELQ4m7gi9akwvINyD/ObtOEPYl+GjzadvGVKVf0vm7
cy0UH3fnYdvGjz2HPA5+H+Urt3zE/lqH00qRfhHLv6d1PjlviLlq8hC2t99e
/PeBj1inqmrfPIy530GPHzF9twr71dFJYjqZfPGq1pm38Qy6Horurx8+8uex
fIS8eLmf1ZHNB1WljLy7v1nOz2sHG8lejS15WO3lQ5B+7DlFc0FeP7Qxf+Kj
QTLNqPjo1szXya9u3InqiMQZXZu5HuUjuOrLqa8r1/Ok2IysMA6V2XUGJdiQ
YKQiFqMcipWr2369jVPjrO/XrO1IMWZFQv4F8tIx3vtrDpJ3XzX1KJvve5QS
cs0N6rpntqMxyAQwwhil53VeBy2sA3Er5RsJ/Qw6DbYh1hGAj1gjKa8fSPPI
HWZ5vf01YCy2k8/B8hFi122x+ezER6wRq/x2dcejvPn4jrihF/fSOKuXKR8F
f5XmNn6L8VGeHur5iFzLfowSL/0UWacWkZ+dbEfUU+Cj6z8P8UjHJ/X0TPYf
pA1p0JKn79qY277Gp+P8mCM9m6L83VWu4etV+do4Xj5Rw6g7y0d5Ni2/jfJc
22jPY6iemW9Fz6mrg2Mj0rm+WEzzCp/x0WBEz4J1fnk+veq7MXuobR95/pk2
F8ogZFSxOeRcEB8t3LoafOZs7m/xUV47h5F4h63vVp26hgXGaVNSu+FdH3Y5
FCdUZquiPpUfs07MnF0T1uaqk3+pvpOLGzs2/6vwkb+On0cdhN0rbYstPhqX
jj1APjqzHY1aJoANxsxH3uYyDjbKctnNtPkojSVaC7xDjOOtnTTvt2wnvh+w
3+26SPZe2Y79CLsLPAIXEVNErBN8hL1k7WArrP8DF9k+yub/7tdvIBZ/SXnw
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
aLm1/hF5HYKu2/LFYd2kPD6ydibZZVTGHwvidyybobPBJNZ2Jt1E+8A30w/+
OuyHnU18ZO0O3Xx0PqyNBB9ZW0zROMv1uV/qenX5avL7m+dz9607xtbdh7IQ
L0LsS93rEXsknze7ZoetA+tXMcgxt5+15W9vD7YsHW21wIcP8fWAr1mMj2hT
321e6OCjomfKObAf6ZrUD3aikIeulYNu7SCdV+iXjzgnusvO460s/u6nyHtI
zFFsLuG08tGwYvDtOjDjuK+yOYlhy2CuPZi1udSfMe8wzJwLsunyfomHZMNC
uD7jLYw0rufSi9j5yHa/1uk/wr2V6ZlzW42OsVl15efjXr+uXrYQU72xnDSO
tpML88vJdyt3w+ew/f56Mr281m07as0tr+w1AiONyv4CH/VyHHaupYdXAyMx
dvA53FPr9w9x/aO/dDK8a02Azn8m1aX5nqfvQ/rdchLveVEfB1vAR9Pr6RpP
HAMjyW6kc8JHVsfynPTnP/+n2W/0/3CR2Ih8COQdFx8hZfYM8ZS++7Vu84Rc
CrAMHMN3jUt2n/aarueT/RfttWwl0hlTH71zYY0n8VGsnPqMD6L1W7L3COth
Q4o9g7pjU1H+i37Omyd1fOvEC0W5sP3+vtx2fv3tm07bYRXhGMZZ8hoMqg7q
SCwmy8bi2Nig9Huj8H1AV8BHztex2gIxQ56PYCj0LtsWivRyysJ5yFsn/Y1t
+PPBTSonfP1Ta72uLM9EjpxWPpo0X6dB3tc4+Wgw9dq/j53KInuej3mxUre+
lPfNxlLynXEIGxH9ktiI78xHfHe/UTmn5iSJ96uT7UhzANRrmvOlW8dUvBF8
ZM/nz9/rs9W6qfBRuGbzOz5pcJMvi/LH4d8GH4XcBxOg7+fJ17duJrf3rgcm
ku8Bn60NqouPPgB7kuej4XHSBOj8Z1JdtFbsfJp37tK9gxCDJD6Ce7ANxRiD
voz98bHDTuTtUJyT7UVzbOIjK7DR1fsXg30JNiJfRIjDaOpNRTakPMGPrcp+
KR+1Y89jfISEXN6HS8nm824+Uj3BjouHO4GP9Btx57H8xmUxVjE2Ul/eS/9f
9pvVifvN+103D1k/fISIhbTuRr98NOo5e5+fAWa2dWjnXavoADE+0vEpwzSC
bD3aCrHQL17u19KFOQ85MjiHnbvFj4/3H11G+x6f7IT7sfnr3ic+qvpMTqO8
H7nX+s/RYJ81//EBy6ubKv2YzeOmNXtsjknx0Tuzn/1ddvfT8nx8fjq/vgH3
UWWNI9unF+Xaqdp3bze2k4WdRmCcb1YbXbFFvgzw0+ezDwIf8dyww3+90hyr
N7YLyz4JYv2yn7zYCn52iI1BUmy64tOzzxNQ/lHy0WA5aQL0/TOpLlr/qPWd
9o8tCD4K70Mr1wI6f8xHLTDA7lrQJ8VH9G0wk10Pie9WT5KEfHWNpcAO8wdH
QeAjy0ywEYwx93AprAuEwEd2zjwvTiodo/Yqxc+wn2eXWC7wt+Z6q086+Yjv
0qvFR/rtuxBncb7rGkW+f8jTo9XARycvO4/rlY38GrF2nNF4Mkh/9l7zNFdl
pDwRH2keFh/1qnHzIY92n3m9qurJRfvhiwlHzFz7smv/qs8fvoV7YvfDOcQx
/P7lYqMj50ivopjqzxe2g8xuLyavI+08xPGZHHyD5KNRcsr7ajM6jWJtEbF8
/XX4yNoz8vaxOaW98C6VtQ2O5R1VDiAxUMwfWWzE+tXHJ5379Lrm26DFMltR
vdp8DDHGy9MxZTuKna/X+yZPN3yU5bxGL2rlWyiynTz//jAwlfioy+9uAuWr
meXMZrR+NBf4iFx83EdW9pZPUeChVky65aRx38M4+GgwnDQBOv+ZVBfLR813
QrFG9MH412BPCn5yrf3IU6c+RfHVjAFsV846vsumBF/ASXw/er6f+QZkY4ux
v4iP9B0eEitZPzwx0pvWukqhvE1eoTyK+87GwzeNaJ7yqhKznXTkuXO2I8p/
91F7Xczjk6NQRsolPvLnK+MjRDkaYKVBjF9Fv/F8bj6o5o9YRXrlI3FN2ZpE
MYnt05kzsfwco8hTFbPTxMb29ZXprt/z6iF2PGO3cnv732jj51dShoKPyEHX
bw6ASeCjUcqHwken4T7Dejn7+euZ17UfeZ9dxOaxK7PH46ua54MnrtE4Y/Ny
2v/iB8ZW628nrhJT+fd7FPZMy48x5smrU1sH1o6EcG95OmZs/de3rjz+uRTV
wdTMbDKzvJSs7m4F37h0rcTD8Bk+un1/s70+UIsd4KDZ1Y2OOFJinDjHuPX8
MqHs2IrwlXn+8g9Z+4KXQi71svzk7ykjVeWj3jlpAvT9M6knIY4w/Zyu6dqZ
i4FtmW21yT/f/SGNVdg62g7xMuIjhH2xH4mPYCZEa8fioyf9W+fHj84zxrLh
I9ZiIs/1jc2DDv87sRLsgQ+emAlR3jqYBG76qRWfYddfKhPlUMiLW9JcF/yD
zQguIq+E5yNJzKfO/3Y7Ep8kqcJFfpyOxeYo3neYPmN16rlMevWrj/nTxeKA
i8bPUeUJs2XJeybwUSy3QZ1r8A5+sditQ3k+Ita7n3un7jnXpbXFwD6/Xrof
GOmv7/4+ykjEIZGz3OexO0189KHIaeIjJDYPUuce5N/m8wbG5hnEM3Yb84Ow
TFnsnp3zEC+cHLfZ57WxFSGcU2XSnKP4SOc4zrGhSfrhJssFugd/P3m2+lh+
Hs83ds2jPD7yOR5sXr+8cmv/J0drydLyTHJ1fjbwkd1HsQA/NPUK+EHbrW0o
dl8cZ3McTKpQRu5NfKR7FR8Fm1mLkUIsVeueQ5yVYSf5Fo37fsbFR/U5aQL0
/TOpJTaHAnwztTobuCd9/xvhP+MMjKP3QXZX9mNda+Wog40+u7ESmIgcLpaR
5GNnddOjl0chtsjbj5YjNhn81Pz8so9Zgo2wz/Bfed/ER1X7fVhF5+d4+Ihx
x/ON9RmH4RDGrFs7jVp2B9m/sHnl+QjKdjQI3aEXHaGuWD7q1XaUV2bpArE6
Vu4i6xtYdQ4xJvJ1GVY9xcqYd72NO9dzc6RXeyZxPmK75jfgJPIraJ3F9pxw
I4ylihkqy2HIsdiLLtybDWz05fJqyNcNL7HeUtH9W1tSL3w0zvxuZzJ+4R2n
D7h8L53HG5SPnY7zv3ldXPF3YgDxUV78rWUe60tnbSnytdP6e8oPablNuSI0
LlkfQ2vPsffRKx/pXLrPY1N+ez3/2W47MXUU87GL6Zc8U1uPsfsqi8VSGeCj
rY3Z8D+vv4AZ6I92nyyG73AFubv5Tx672LlPQ+wRjHN7K9Xtnj/dSP6/NwcZ
J1HHxAdQz9fubQUmwofw0uJ6ykewknLzvWfrJPXKR9U4afy6/pn0wEfKW9d8
Z1jHlbVS1V9gcyHnGvl3ZQOSLyrxSXo/OEeHH958m4/goqXdgyC+H+rio8Za
ly1JfKTPaS64bl8cz0rIyv7VoNPBcaxnKxaBdfKYid84TnzEtuX9mS52sfcC
G5HTjtwL5PrGBsdnv3+R3pbHRxwzaD4apv6I3c2y5CD5CLF8pPWNlGM3b07X
j411rqcY6EHWnz3e6/N55cN+dPBsp+M+6t4LPnZ+HS+EesQHCB3r5oO0Psll
p+sh9AH0B7CRXz8sVic3t28mv5pPc6ycW94N85JwK++UbLN2jSDpOdaG1I/9
aJLW8DyT0YkYgrZEW4/bMernaKA9Eadn41GJZxSH0ba5nuw64iLi/BXT9+5N
JxNYjhHriH18Xjf1d9yf+jv9pm28v9pubU42hsr/Vnbfng09i+j8ymNk+yR7
T9ZGJD6y53ln7he//piOaeOXba67d2/qzYsszl8MAhshefvBRfARnMT3jebz
ho9svfi6Ivf3uPX8MjaiPfpnCR/Rju8ftvmIvIiw0fNW28WvgBx91qakOK2x
39cE8FExJ41f1z+TmpK17ZR7yMsNH+l9hxO0Zg+y+Wgp5GzrWv9VeRxMjnAJ
+hacBB8xLnm9zvb9MTbyfFSU70oCm/iceHxXvBLyo4ld0php7xv7k7bDUrm2
ncfzYX9inKgj1j2Sj+Ib50vUq16t/Azj1j16kSI+Kso5NKjr23G86JqxOUeN
109fdp8z7zy95twrk8bOQhZX1ysflZWJdxWBi7D5WHtPmL8+BXwU8/c5syd9
OKJ8LNZ+4veR/ahuu9A4ZbfBSPY87MNcgziKMqBXWl0UlrHMpvO+buVcsPnx
2YfziXv4jfdI+7MfbCI+0nGWiazPhmUafy/WV81y1Du33fqy6R2O1SX7WdtS
rB/29iW2cb82fx19B7q7PdbHN/ny7jyYC8/41Yt0rg47yeHBSuAh1hIsY6Nw
TJMZiNMRH4Xn+To/F2pgu0nno6b8+vZux7OAA2VLoi2Rvw/uh4/sc8WvgBzg
Wf5yrQtzxkclnDQBuv6Z1Jcszi79Dh/pXUAH+s7oKnwWH8EK5F6gzwo5vE3+
Oyupn107V4P6EF2D9YFgCvWzygVnc75JtK0qH3F+8rRxPZ/jAREfvf7hYUee
B3gHnc7GAlX1z+MccKB8+vD14x77HfOJr7px5dPejz+J2w1GIWV8FBtX8/xY
BsEDReeQf4ovi+Wjt5H/0hWKfP/6FfGRjUGyukXecUU6oM2RX4WPYB7eL61h
lHde7p+1kKbvzyQXV1ez/kBz6MrvDW/xH15SXBJlUizS9ZkvC+uk6H7P+OjD
EsVUWh+vov3FR/20Db3rRX643q6BDVd8pG1iHvGRfOl8Hm8E7tJ6BTq3eEo2
dL1nyufQuVZa+7+dn3gXqbPYceoj/X35eSh7jD4XzVXZz/CR113LbOz8DhNJ
tu7PJs+ebSSLc1PJrZmvg+6/cvtyZTbKk6L2Ajsxztp1hPIk7DMOrmjqauIj
ygz7yX8Qofzk1sl483W7HW4epXkDQ3wS55L+WJbP4ZTIoPmozUkToOufSX1R
++Y9Dbnp1pKdx6ntQ3xkBT8yfaaPJt8C7IM9nDidGB+xD3NB6F2+f4Fj4CMY
Ap8srs1nfO68r53WEYI5itiIcsvWkzf++Xx4yvMgIfeEt/0gmveOCfuj71Ef
WV6jJiNV4aM8/kq3N2qzUVEfPuxcRoMoY2zfsv2Ve6Lq+Zhr9azzruAcZfXm
17UfZF09OVwNfOTL4ctv52mL4qMlsIjmEqRXobvBg89aMYh2jnb78WrYH6Z5
WzBngD6Xzv92St66xE+/Xw9MJLvU5qO5UDa7Jm6/Mmh725lMnngfsLJ9B7UO
khilrFy8m7xfv73TyOarvI1HMT3yWbM+e3Yf+65rm5jK8pGdvxHH2b7BvuP+
/dB1To7b5xEvqa+L2Zz8efJsUPaatg4tH9GPLO81Os4bW/cIHwu4CHsRXMR3
/of7aG6Di2ZudOeOrSt5tvtQP69T/7OqvFCFo3qRX3+3Uvg79h//jsCP2IwQ
8ZHuS0xMDvNsvd5WHNL7lMduOGxkZQJ0/jOpJW37aCO818QR8V7AK7CLeMgy
iLbxO35l4iNsJ8QpzW81whjAdxiJHA7iI9sfKs4nnZO+mvER59V1Ah8d7Wfb
ysSPS/l+UHuh7PgT2nx44ibLS7IxFfGRHVNmt9O5qZgfUhWxbIZfHXwk/bjf
vn0Q+kBVwXYUyycU81OJPbO6c7vSP4pioe3nWBmK8h9Vrb+yHEp1n5XlI++P
5u+/Dh/FzqX1ysjxTT5w5R2O3c/3OT6nHBPra4jfyCsLzIXNyK4Z22/+OtrB
8UnbN+ksJun9lzzfMC+D5KMise+f9UlTzJHeV/nGsU25CxTTA9d4PzXvP2dz
fMfyPbx703ms6sr7zHk7PfYqeEVlsbFSOmfsGdAPK3+e9sHP8N5eOw5Zef20
j/JeWp2S78obmBfzg61o/d71YCuCkao8i37aV5FfeJgPrsBHFxYfpOstDVC/
X9tYCnnKy/joFXmHn6c8p7KHfI8P03Vx0/W1jkKbZB/ZkcLx3JtdG+ksP8NZ
LNL7LMrvzVpoczsh37Z95z0beSGXNtyAzWbtYCvjI60Niz2F947/vp+CwYhv
gokUw6PzWrtR3rVjzMS2Kv0cZRYf8R3bD8d7PzzLSz8aZorZlySvjov98WK/
5/W7jxt3kt/fPN8VfyR9L2+Nj9j5BzFO1NEz8/io6pjVC2P4dUYUrx3bN+ZP
V1SuUfBlzD5k+cj+5nlPepLXncpsJ/Y3xknbPygmOnaOSecjfJmevmzrmKoT
+86c+d69X1LF51T7jYKPdC2JGIh3RPnHEfGRjZ1q+zV1vs+6R5v3wDJhrG/w
TPTuTT5vqN+lPPCR9Dqty5rx3autjrX7bC5M3j2E/W/cTwU+wo+Q/+RvUk4L
rSdQxke2zKoHbETwETYixL/PeT58RRKzDVU5B3kPsB+Jj359/fe5tqSlzTQu
Ktib+tDp4SHJ0sZyWOf2i/n8NZiwWV1bWA6MtMv6Wc/TuVyeGXPa8BHPjLVi
Qz2/ToVcdtl5FHc0AUwzyXxUfs0J0P/PpFAy/9GWj92FO906DwxUxXYDH+09
Tu1F6EI2x7fXqeEL2Y/go3a80/l0zSPjW0fuLLGPZSJ8cNCrONbyEayW14/B
ZLBRWJeyuT/HE3NEGfju1yDydiVvX1L92HVqi+xMvfi8727O5Z5rUGN4v/aO
mCj2qIoNY1hSNo88KKnDTt5+Vmav8nwUsw95vxXpSYpXL9KJrNThI+KQFDtk
1zXy55DIhlwkt/ems3f50o2Pgt9dr+tp5fGR5aRht4szGZ34OYGifUfJRyqb
eEY8ZN8psZHlI333jCSx8zuenfTfnvfdm86+IRYfZMvM+c8td/KKRPNQ1jfQ
1zvvH8xg52u09oJirvDZgo/gMBjKXmNuK38e0faZ+82+schuZI8re07KVdDL
M05Zr5FMraQMEvgoRzeGj2I8WFXIMU7ObbHR8oON5LuVu4GPio7jGN2f/C35
j84GF/G8yF/3vGVzx+/u9UmTbXdacVUzO51xGRPANaeXj844aeLl5mY7v0Kz
vWtt1bRP3+tgjzyRjUnH8l6lMUfp3A+MhD3J9iVwiT8+lfMhB5yNP9Lv3tcP
mw/nsvyWp0uxD/0jfMQ9YTtSf275CClay7XIviQbk80l3pb2/cf637z8eJwH
+1Gsv+9nvLbjrP0+SJ2gSm7vSddTbZ1UtcHU3afs2BdP7ifL81PR/f2xP745
CmWWPw7vSBU+UjwRx+J/7rnGxxDwjug96eKmvc4+Br2B+RLr154nMJflo7L3
uuzZnRwfZW1Mn8/4aLIlz95b9qytnm63FR0zqnuy7KbvNpbFxwF5FvLMZNlH
9+LtT5aF7DxK3r3n9Q3o8VafI0Yli7H9sXtdWh2ntWs578lx228wZp+Bj2zO
OgR2yCuj56PDhyuF9V/Ux9o6RheQTaVqO+Eeyf2Nbx1l1v7ky4utF3v1zoOs
XrHTFNl7vMAo7E8Mkb03rpnllcuTpp4HH/l7g08pu2KL+J/x0cs/JE9fHgU+
ymxh75FP3bD4qLcyTAAPnElbmu29Iyd38zscga4uu0w5H53v4BXNScBDkuBj
t985v8X5y3z3YCNsSWIj8srZY2TrsbajmN+bbFWUDw5S3i5YhrLYOCib06tK
/+rzPMTil7I4JpMntGsMKuCjpbmpzL9u0D5eXqfIGz96OXceH41aL9WajaO4
Vhlnxp5fFftW1XWkeuGjt608IPoey6/gGcnmtZJ+pN/IeWyPVQ4I6XBF7U1+
roGPbn4ceMmvJVZVfCw796C4+FGt/Xsm3c9EbaGoL+uVkfhvGaPovR+mDcnb
Y6xNJ+YD5uertF3+apadLFNZJnobuZZ99/0cxzt3rqLngb2IOQ7p/7bMygmh
tWv9edJ5iuL5IXGcdEVimvPKYn0R+S4+6vV9tsdhP/J85Pfx92FZUf9nd6eS
r2/djOrB+NTpWDgERqLeyCsH/7DGLCJuIl/c57MPwm/Iq1edc63I5kE1PuKc
/t72n6T+dLIVan0kygQf4XOX5Z2Q7eg9ZKTx89EZJ02UWD5q+deRZ0GMkbLR
+RKOafMR+8lehI6EjgUX4ddqx7u0P9wLczVFeRe+2/ptx3f4yO4vexXn4Xte
XBD8g6BnMedNObEfwUeUw14jj4+s2HGGvDj2tyL7EnyEwIZcvyiGyQvXefU8
365Vx4fMjyPD9K3LGw8HdZ0659K+smUM+p5jdTuoe6+7zq7mkIkRsrHa7XLs
BS6yebopG7nkVEe2r/j0dsoXOgfvt46ZVD6SvmbzHysmXP9H4XvZi1TliEkU
b6vw9xWzXfv9TnrIA+mZoGyuYlh8ZPnBM4ndbvndcpN+E3NYHznPMvLbU35w
Xd/mRnj7pvOd83aoHyPnjtl4dG7/3Phv178tqht7Hu/zB4NJR4zZjrSv+Ijv
8lnsl5HqiK2bWL5SyrD08Gpy7cGl5Ovb33Xpv4o9IqaHz2LMqbsph4iPDp82
kqOnOyGuiH3Ixf3k0YNkdbdTD+BY+mu4Jjd3Xku/4/OT5511e3KcMhpCH895
1FdjF4OPwvGtnHXvm1/doPlocGWaAEb4wMXyUbqGa/rOyL5zffNaFv9TxEjs
S5wR8z6aT1IuLJ8nTH3Y0xfbIT8Dx849XAr2Iv7H/O6wI8FHPi8DjCT7z5uW
Pcj3Z7KHSZR7L8Z9dfmobAzOsy+Jj7zknQcbUh4fxXQ8ja+9ju1F564iXp/v
d9walJ4YfAlafERepn7PF5Oq5cyrk9jxeXzk54b9OcvrvdFxrjp8lJdXinZn
j43Fg+TpvsQbXXswFdatZ/2jftqN56OiHMyTJnqexHDQTk9T2S0feZtJnq3E
52YTH9Xpf2J6alk5h8FHnoPYRkyHzTNg43U8b1h2sjkYbN0dG9bhXaSN2Pzd
nkN9TjubRzzP7mTrKebTa30Cq7Rlz0P2efMZnVA+duIjX4/6rvdB5yT+CD6q
0veSb6Aff4K3b9p5C4rOIz46f3u1vWZQS75e2Ewu30l5BZuOzgcjKbccfGSf
AfdMO/LjuvjoNwu7xXxkvvu1FvCZpM7T3Bpt/7pPWjYjzaW/r7ajyeSjM04a
uyh/ncntLcHWIj6y6yC12eV88HHj/9z2TprLez+dm+U94ztzD3n9B3wEr8A3
ijWyfOQFPvI2JNhHcUhVxHKSxPJYnX5StqOycTjPxuTzPsT88eSTJx87ZHfz
dsf5Yn20Z7iy7UXbehGvz2s90EGcux9hbGOM+c3yYXLhbje7l0kVfa3Ix7/X
+rb1GdMBYnPx1TitHXfE/sotksYcdPcXshvxftsx1utT+LDDVF8s5tcZsdnM
e/tcFbzjMBJ81A8Tc36tr0l8w6TairzQPhkXYXnxETKJ5S+yEVkfsNhcjW2r
Vpe3XOTtnrpmzAZu8xjkHetl2P514gCeqf9dfMR4afsMzS/KV81zppiffWjj
vJOI540TY5t658qjzzGblPfLszyjbeI2y71576q3hdp793YzMVIsZ53/bNd6
go9ev9qr1V/AIG/d97rPOdRjznH8trw/G/hodjXf941c3+/epH5uz79P7Ud5
7VZ2Juaq7DtFGwp8FOGi2Fq0+PT4ujg51rx26gNIHx74yPrVTQDHTDIfDb+c
E8AMH5C01z9uBD6SroIua+0r0w/+umutWLgGPmK9H/KfqK9nXCfuKDbX0fGu
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
dgd9tjFMMR868bPOZW1O9ll4/n/nysB/Yo/gIOVlQJ4erWbxRfKbk62tKHZQ
jFRkdyyaQ4mxRp12nsdToY5ebCdLyzPJr6//PuMWsZD8TZVHAVsRfQH9lc4h
PsrLN27bBHykezl8vhbYSD688FH2TMjr/e1aMlz9fTLk/eWjM07qhY06cjM0
v8M41p/E9y/MN2NfIKal8SzNXcc7ynGIXY/x3ZvOPpT82cQMWeaJ2ZAQMYDn
pp9q+INRBuZ++7WfWx1E9xLjHn6jf7I81g8f+XITr6V1eheO9rvsR2sH67l9
dNkY/7p57p9aIj7CxvTLj/9lBzdVLXvZWqZ2nPBjdd45rc5QV2K+RXn83+s1
qo6NvRz35HA1ykf+PGXPmecbsxfl8VEV3TD4t/Zpb0QoF/nriD9C4KPpG+cy
XVz+MvRPPEv5FElnRE98aubYfX7kvHah+0fP0Ln7vZdehWtfvtfWGcVH+B3B
R3y3uXCq+oBaHapXoa7k21cnlnBUUvXdwv5GP2050/KR1X1HwUe6prjHX8/a
bTQevTruZCXLrdrH5q2zbGSvYflJYt8Z75tn+2yVy9po8+xHNk+DvTfakLhf
7TzWjuAjy0ZF709ZO7R8lLdPbM6piJnqttPYddk2c+N88uRoLQh8xL6NF229
QmWGj4rOHWM6f+2Mm1+3c+yRp8Hn9P4Q8nr3w0fjLvMZJw1PQts3NqSysQCf
GeX2Fh+xnXVesVPIrq/9/XgAW8VsRHE2Oh9sTehfsFUd+5F8Sfrpx3zZbX/q
uUd919Hz/S4+KuqHy/pRv4149svr02nskeMj/h+fNCrfsy/TT4aR0JOJd0HE
TF6wPUnsee4uXuk4l8Tfk62XfnRSPzbHxOoS2s/aJez1h8lHvUoeH3FN9OWi
OQ3/jOEQ3uMw9jY/M9dBngZx0ds36TPXecgD328OlCr1xvVCXGKLj765Px34
iPyC1m9IPnA2hl1spGcnntK6sDEbsnhIZeiHjwb17Ck/Ojl6IiyS2pPaa01Z
Pqp6TepgEHyEWF08rx7GyZdd7f3H7vKij0+vp6wpX0X0QvGRj1vp934sIxTt
Y+ffYnNGaa5NM9/o8nZbvzdrR1Tedc9Eto5OTF+ovtLmN7DHWN6ydWzvI2ZP
is1HWdsRzyP2PvDf5vTOe86xzzGBj3yehrxnkmebz3vGVRhK58X/xtp5+Lyz
tRjyKcSumWezYv9YOfPeA/vclKsPIZdDWDtJ+R9a68F+KLFHHxYfnbFSqbTe
gfB5pu1bV9RnoE/BLfCR1lPlfcvz4fLvqdacVU5v8tPhU8PaSun6Si3/saP9
Do7iWly7qk6gvD39jGt5/S/i+Yh+HFaEj2RHq9pfl4nOJUaEj3wuO0lZ/dcV
8VGMdRDx0UetuCYr2J/8ca9/iJ/Lckve2FT12dQRy0ee7SdJBsFHMI4EDsHP
jjwdtKnNR3PBHy4953BydlR5ZpRNfHTl/pXgX3dsbEPcK/r+zQcHgRn4zrMT
18TyZOYJ7IHfvnKk9duOBmFn4BzwEf7N36w2Mk7S+kfokFXmAzraTo95Ubqf
TbV6KHq+oxbZQ+x6teIjeFP5D2gL1G3dNlTlPov4wO4jpvG+cXa7+MjODdh9
PWfZ3ywfeeF3xT7ZdWAtB+l/Oy9SJz95se+F5zH9Rtu2fNTtr9L2oyviI39/
ZT71wSdvdabvZ9tLW7D1sdFov5/41H1xeTrKR7H7tNt+cOsuFJWR+CJrS3z6
8ij46mV2PJsPbya+VtP7Kh8eG51xUp5kdtMWH5FvDj5i7Mh71+EgbBi+76/a
hzBXbdc7gpU4H35364dLgY+wEdmYI+Wnzps/8e9/P3lmq0iebx18RH+v+V3t
16uu4O8DPlIMEvWzeLgzdD7qVcRHEr5buxP/M0bKsWO9jjC31elX9gcfT92v
Lun9FwZVrpdP7uf612EfQcevc73Xr7eTP728G5gIW5J87kal104CH9ln1u/9
DJqPuDf4CC7i+RLXid+dXc+m6vlGyUcq17D74KrPVHxkGYPt1LH4iHV3qGv0
84s3rgVWqsOC794Uxw9a1rB1FKs7zzO2/GIYG59kmUDX8twTs/nZsmhuyrKX
t1/ZsRc+8sxnWS5mV8oTy0fMBcT8C+GjMjayPgFFfKT9xEdFz6IfPqrap8A1
HEdM0eNn+yGHHe2vSpvz56naVuEj+dNRX8p3p/wLHessjV1nP+OjM1YaHx+l
cXeNNG9+ZP7Gi7cT5c0L2fOEvNRNJiI39czOtS4+Qt8XH7H/kxdrYd1Xaz/C
7lTW75z8UK8/61XgnthcoB9TB5mbgfuGE+WHyPpPMf862fT885mU+VxEfAQz
WR89RCwVs1ll3PRqL3n6/XpuzEuZL5h8R4ZVJ8Pio+X5qa7tmv8uajeyFfn7
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
/03fxWcvXjaS6eW10veN9Yj+ZmEjefbiYZIyUSPZfbKSfH+8k9j4IuVj0PUQ
1tZNr53yEdf9xMQ34V935k9XX874aNJlNHFHn9+uv57g7uZcpt/bPiNbm3Rr
MZqTYeFoP9l9cdThyztoGab9ol8+kvSyTqz3FVBfTgyHrWdseF73HFS92rHG
liNWxg9FThMf2fnlftpBlf1GzUfZPTZ5iGfCmlTYr7ArSWAn/t+/ez1ZX5tN
bt2+GmxOcJJy7+XZoLS2puId0A0HyUf+3iwfwUNcExuS8v8OU3r1s/NtrZf2
7fOh5e3n7UNtnXSw7xS+VeT4tn5nyqPgdeuy5ytuK6oXm5Na9irp7MqppmvJ
v9Pmu5Odyc9dWfuPrmOfkc6r9v3atWlbZmuna9uO0jYDz51f6eajKnXk97P+
erLn4O9mfS2575PjzrKp/vQZ1uP9FR9ZBtcz9LY28SHbxEhTUx9FbU5iIwnX
vXDrXrr2a9n7Rl6G2TYHiY/+8OhW8qdmf/jW2JHs5/CMXqf5/H8zt5Ys/GEz
eXiwGdY5CnwkPz6tAzt2ffZ0yRkbnSYZHh991Rxzt44OKvVbyMPDB7mcID6K
5VNjXaMQh/2mMRSGsf7QMRmELjooPiJ+fWtjpjAPRl75vU+45yPFIPlzD1IX
L4s3GPSznWRBF0ffHnc56jy7Qerxec//8vm/COtCxfbBNy742Z3sZf/Zlq59
1sh88JS/RevcknfEr3Xrv3s+Ij94Hh9RB+Q4QNe4NPVpZnvSPv6+xELK3ax4
B5v/qx/93Po0MY+v/t/yUVhP5Nu1TIYxL8z17BqzVduVz5nm/a5iYvts6aaV
3jvD+dZWMqi8Gzr3xZtzyczKUrbNc4G9vv2uXNOxc3r2s/4XNqecdHtYTJzk
9XD0funy/vwxf7q3piz+u+cp7z8tP0mbj6193pSPeJ/8fcfGhLw2keejbf3d
bL0pz9/8VpuJPOtoTUSxqdpI3ljlc8WG3OJNPlq5fbnrHmCUn1pxQj8c7yaz
qxvJzMZ2srq7Vf6eNbno0tJG8v1/pO7SfAvyp4OPbAyS7EZvDR9db/LeV7cf
ZHwEF0nCNZp9w0dXF874qAc546PTKoPlozI2Qs+2+bfxEZufnYrum5drWjkD
BpnH2/aBVXS+XuczhyWNnYXASXWO8WMH+qPNz6B4pBgf9VPPReNIWT1bm9M4
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
1Mra+GrCTkDDgVwpGC7ow6SMhC+p9VMeg+iZoOqYK6bJ6zVbX4yOVdmcfthr
RTmCvLcsEtrTZSOueeLsdO3K9yE9Q1uX1ucMaRnW+9ZeK2+L+xnzK70x/7Vx
dt7/a/9v16EYO9uHfv/99fSre/XXjOcz+7l0XIj85vlI2wt92e1vy0eWA/32
bP/pO6+zXtY2uy49J/L9oXNSTMPr9pNvO59evZnxETFzVdfVFyt7IW/vUfsg
4yPqHe399Cjw0fWtK52v12dCHSO28dPPe1nsneLw+G+IwTW+o6DjfdpzzMYa
O2+WPjvUe/ioznzrbUS7rsykxQsXwUSytR93Mr3pUBsy5SNetW5Y5vv9JA4H
FpKfaXV1LjAQ3/EbLAT7wErKS+A7mArW4j3/FR9Zi7VZtZhot9Xa83wU9q9E
i2KcJj761y9PAyPaGrLoIDP3oJ/HqZHe2Gg2Kh+FdXTvudfW4vOVcdjro8Oe
7/r5HDU30LP7fv7K2LrK+AgjZ+hduky/9Wh7V1YPgk7aqHxU1X7Wx3ql3z39
eCnM+5nvz21fy/wFaJFvHC53tg8eh/dwEMuFZSN8lNTFLcY08h4evbic53DY
+Bg0sK5250lj5yOZ9BvGpAtO++A54uvYf8ZXO7/u51ewpvo0/tyTj0Ovmsd6
NhjkXC27Lj1LyE8kPqJmLPdIxdS1n+d8ZNvpfRHiJPu9rjevKRfTU/F6dp6l
LKtZH5jVzfM+GOuL8serjDurdBDsequexVatn+8sH/EcwY9Pfh4T05l4d1zN
R6pZrc8+5tC3SYyE70h88/HtVBfh72udnfZ3xRpE6bWWXSfd79FWQPNOvLPS
RvP3Ume5NRv4qPX8H53l79qdte68SHykWDveT919ErZViK1r8o0aa2xwyzTr
WkleYB9Nb1mMjfzcPIk7uZbpSzGHv71zpcBI808Tv5JqPfYz6YZr++IjO0aR
l+D1qxnTEo4pttGzkvJ9aLutHVS0qWz9rPMk+Ij9Vuyhjz8kB8PXkhrF+t23
Gqtno9SG5d7PPJB5Btq0zPsneUz6zRWr+GhYPw05SLtb99z37SgX9fOLeq0Z
5uNVz7eH6QfxEa/Sw3rwtPh8n+OGht3dvVudK+uzgYGy2LJUQ0J1nGCoV0ft
Ah9p3pnshxmnmd+cRp0Sk+s0KieJj65v3uhs/3Op8+LV1lDHSPFgsf9Izw0e
0fuyufCg54WOEfyNf8jqGtj92N66X+AjllfuC7GeNlbN5iZZHorFxNk4tXfH
xXm+zTvyvqEYH6ntaoMYz8bm2e1ZLrB8VMab0t+o08/D+sb3v98OvlXl58FK
dnzy/9cxtN/bcyMWfxnyftIaAbafq9rGtqfn73YWl7/prG3cD3z0+2t3Ox/d
fBDeF9jo9pNML+Gjhe2gNwgfWX/Qs+6xuk5M6talYJv//KbbrlZn7sl+sMPn
iV6D4u2eUDtaPMRzDljptOeZjTV23syx0fyT6lqwyZjQClbGR/qesUZ8pLo7
mOcjDN6oe5+qcx9T3nadMdabtCS+uP6fmXk+urs3nS3P/k4yvs4bDOf5SO0Q
H+HzGqXui72PNDa8jeI/sjYJPhomLk7m54SxeWIdQ58BHbt4++LPaZL6se2s
HWq7jWdSrnvs+XHVWKB5aL996MdH8o8xBmH4dzHGJeofZefH6+JrwsLtzpcP
xXlmrD7t578+R2kEVvN8NIwfJ3YtHD4v6g7Yz/a4W27w8139Vz4Vyz3iGHJq
rMaC96PyevB0pbO0cDnjIy1rOUf7oXwgmwNYlg9j4wdjsXM2R9D+xvWh89Ne
H3Z7ihe0+TS/uv72vqOy42NrgNUZX8qWrbpe8RlJtw4+im3DxzB6X5hnHvud
ctdszWnbJstW1uBi+AgeIq4Og4/8dQC3ZOyysJdp4kujTtrd3z1byvhodutK
tz0rgY+OA+u2szqx/G+9e27CWWG8UCzuaY8djTV2Hs3x0WxNTW8xkv/ePmth
LIrVgl1sP+7caW935nbnAxuFmLunVwa+P5bZ2zHo39n2Wk6Cg1buTRf4CP/V
SfMRviT/vfjIxiuOsp1BmLKxuJXxEfFj4Tjt1T9ONzbq81Edf46dy9Wdn/p5
y6j5HJjV+C7G6fXno0JfuxwqO+ezy4Q5ktPZtP3QL0fCLu/j4Z79XM1HaoP9
H/PWK6uKofPmxupTvl9kcdhj8CkRF0j+kfWRDHs+6ViJh2wukzjAH0+fB+Tn
/dZvYtclhrDs4RlLXLW1Md/Z2Vwo+GHE4HyWtrY+e51tzy9aRs8A7HKqB+D3
y+bKsIzNM9JYIc0I9Z3lI9sHPqep7HjQvkH5yK637JyQfwj74tK/Z2yEwaOY
OJbrysZYWj93mU/Jjyd+ecu0Pq4x+1+XWz6/vdy5eGu588nfHybPEVIfUaYh
l9ZQCdeR4SP8SvDRzON9k3vEuLLeefLDN5n/6Nb2l525nb929p8njHTv6dXO
+iExLAkjhRpLKRM19V8ba2xIG5KP6hjcYP1GspnNv4T8HfhI31lfz2ka/q94
PF2Sd0RMHXzkY/JOko/IQ/K+O/rTxv6NpS8mwEfjmE+fJ6uKrztO4zP78RHz
DGJyeAaNHhQ5KVbzilf8S5j+U5ePRjnGPoZ/WCvjI5nqGxW2HXkGMk4+yv1S
7R79M+sr8u32fBXr4xgfldeka2Vj86hjPfyl59PYSPlKKR/Fas4O0h5ys2zf
DxprV3YOW70D+QGsBgHLoH+gubNlAOtj0PXFcsrjt3yj42yvRxvHxrKryzOd
1bV7hf+r3Uev83m893P4WDbrN9K2yjS6LR9p38VQtr6F3QfrD7PXkNUM9+wS
GxOs3sEgfKTj9s7te+H3lI+s5r3PPRIfaT2x2k7WJ2b1u20bYmOL/h/zTR88
2+3OeRI++uSOqQErPhILac5lPy+2MjbivfhIOUjwERoNvD44uBX4iPdo2L19
813go2c/Pwn7cuMfW3kNWvmPTnue2Vhj580GiK17++Zp5bjG7y9fbfZ8j65T
GR8p7k7PWEeZY41q8AY5UrH24ttSnKByjvhMDBu/TV/+r54cqElZmX6d1ZCg
T8eyrQnU3Wn4yJxzLj+u7nEgrgtOivER8V7wk6+jOAmz87FRjmusH6Rhx/Wm
WkNvMibK64paztD8h7mLcuWt78DO6fSM3M4nB+Ej2wfvjuNzKr/sr+4/WDIf
6mMj5h2xDfQ91F+cG08O2+F84fdxcJL4aBCf0s4Pe4X5qj+edc4d62+wn8UN
vvaQrhcxjvXB+GMjH4TVeogta88BLWP5CDv+ZS+LtfM5Rn5/bIyd9WPZnKV3
5nst5+Pf1CbLhspptMzg+832v+1DzxdlfMSrb2fdscBfz3YbaAN6vXu4iHpH
fB87Jn7bZXyk/gt8E2E725f03+tf8mVV33frYDvUIfvTjbudiwuPi4xkmKjA
S4ZdlJP04Z1WVsPo17TeaxJLl+Qk8T0slDDTQeeX17udu99Nh++urn7X+fTu
d0VdhtOeZzbW2Hk0x0eP29V8xBzcax5Ys3zEvIIYrxhvjDovG9Vi4zWck9Rk
yttLzLGNO+Y9DMXzfn4XH1Hv9trN/+7O876baLvxW8Xi6mRq+7j4qNFoGN3g
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
+gzKTaJWkn1fxkcxHb6Qc/ZjolMBCx08S5gQ/hEj1b2nwoeWJ21NJOUiKd5O
fCResf1Pv2j/mctLkwFWsnwk/rHrKjvv1abYtaHPCQ8X71sxxuIZJPpyMNAH
f/0yYyP4x9YZwnR/xGY38/srvh3dG8RHs+vtUhaz7Y35stF2+GH/QbYMfOTv
7/DRjaXPgs/KxtIp37DMN0Xfor+wvLMd9Lyp+woX1Zlj+e8sExVylbDG59NY
Y2fCCtcuz0Hmd/rG/8bMa2zCJfIHVdtUJ6ZxUHe7YhnPRhhtwJT/pPwB+Ihc
KPxIvPbyUNGI92PZW+l2Yu0gXoBldF+BS1ZXrvblo7J72DjtNDTsuOdJX9U+
oxvWFO9w0vsxSTtLfCQT8xSPZR6fFstl6Bd/My4TD5SdH2I26c7RZs17k3bm
dWSrtqN5/KB8VLa+EEdE/eaD1cL3sfldHZ+fGIvz58a1T7I+eXuc5x8xf4Y/
nqT11zx7WD6SP8jGJOI/CJzYfc3j3u4V+Ei+HMV58buPjfN8JA4jPo7n8GFd
r/bS/9/O8qKsD8muS9tXHWAx0sfXlzpfrWwFLoTTPrt8KTDSxwtb2f3tzk5y
TNEmI3YODQtyj25vtrPzhP4nhg4T08BG+O7q6lIwZ360t184b8RIto/V58pn
sTF4ei/mhI9C3VgTLyl/VB5DWsxj0utb49u3+Uj+OrB+YX/Oxc5L+OiDj/5X
59KVfw9MkhzL3VTHqJ2d+5jlo8Lz0e69VzF2s3MzIcYOPqrz3KX4ezvUN7q/
+FVgJL7j3s+9224PP5LlozBmvCgegx5f20+JL5XzVXz04c3VTLOu1JwOQyUT
yXhOPYyGXWONNTZ2s3VgsS8ftELd6FFinaRTR8ya11HojUPrZSPm0/Xn1O3s
fw/3Z8OYKJ+S/Z4xm/Hbx92Jj/if1diThgS/8V4xef3aw/q31m5nfFS17EnE
k4V2nFD+UdnxKWPKQazho5Mxr9Xk7TT5aG9zMWjYhfMhjen016S0zPQsvV8O
pfKP/pXGz7EfL1M/Grknep6czVvT7fKK/kPMB+XN85FtU6xtdfvS8xH+BnEF
3EMMm/QZFFMnH4SYSRrblo/gmSQXaSewkfQTpMVNPBz75PnoHz/Mh2Uwqz9N
GxTHZ/mI9rKNx/uPQ+5OiM/bni+0V8ZvF+9vh9+pxbS1n/xvN9Sa2+p8dWM2
MBLLYPiQYCTaBQOhvWf5KGiO7SU5RtceJ8eZ4y0+Ip6R2MVQ8+hpMl+/tnZQ
654qPiLXSfWkFKMo36T3Fdn4C8tV6A9igdWCfsVBFo9Iv8C/YizLXtYn9Nbk
6Im9ys6z2DgbWw69OdhIfJT8txX8RlYLnGdkiuP4pntvlZ6cjXfjPcteWbsW
+OjexmaBHW3bYu3lFT1wXx9pwca9p9uT3jevaDXY/hYn2bq5MrTppleedDZ2
N4LvyGrV9cynpBuXxspV8pA3+KiJr2ussdM1W0us+/6ze7tjm69bxkj4KKaB
PZXXdYjwE2Nq2dyDcRheST7nsQCMbeIjuEb6CuIjtYnfiK+Lrde2j/1gnBcf
4SNa6t6XeC3bd9gIW16arsyBKhvvJ2G7TxZOZDtxG19c3Un110nZWeWjmJaB
rOzZ80kdT/gIzrC1WtWekDtxnPiMdv/ZynKIvB5ctC0pa7EO5sHMoxVrKG2C
wxet4LthWfVRyGXvmtrz7rj3GTTr6MdHXtehbv+2vt8NsXa7W/cKfIRJC8Ga
ZSMtx/eMocy76QPLR/qP/q8cItV0ZX7O8p6PvJYAy0kzPOitwUqGj/z9SXoP
1zdv9PBRrleRL6/PoZZuykfc1xQXpxg5WAn+ER/xHTF0qouET4nzxfJRwlH1
2Mi2R3zEcaJf2edcC7CoD22ZSKYcwsPnRf1xjhPr4HjgV/Lnmj2H7FxfOndl
nBHz2dh8KGtwERpxvFcsnTRm8SFtfj8f/EKx+DbPR/oMs1zbmA7scXnhfq3x
wfMR5xP3ejFQzF/FHAGfEHxk/Xs8F37wdL9QC2une13RHvERrx9a/47lGc2p
XD2iYeZmpz4/bKyx99mcHgN+o3HNseQb4vVB0Hcr8tH049ksrs7ykdc2wIiL
i20DXoFzYJiymkJwEr973774CM066Y0nY23L6I8neVA2b+bps+WwzjI+gouq
tBjGMT8cxnafLAQdu3Gv933TUxi3nUc+kp0Wq54EH/k6qW9SNmKdisvS/zT/
i40Jto/wffn4OrtMGR/ZV++ny3KluufR4dPlUNvzztyloKl8deGPwTwf8Z3l
HfGM/AzMvXd+yHUePB/xu7QWgpZcuhzvxV3SEM/4a+txpv+gZ17EjcFM8E5V
3Bpa4dRAggO0XIyPYvc36soGPjLzTfs/MZM0FvgsLQzNm2Fl8RG/y+rcY9Hf
4L/sL+cWuuLiExtLJz6y9Zkwzl1eVZ+Wa5Nz8yhdjuOhOl86Z+05o3Vbn7B+
0zbC+f6iyOyKOfP1o7Jx6/lWyDPytciS87NdykR1THx08Gx3YL80sRIwkq1B
H2Mk8dHqyrWs3eIj4ufstU9b0OII/qLbT3r9RikfoU3H+TYWfYUm/6ixxk7V
CvXJutfzMDlHZeZj52Lc45lJ+fx+mdj64RrGOLgI9iljKFgGHxK1Dux6VYfJ
chnMhD443KXvYzoRZXps5BndL8mNOAs27hi7fjU1Tipn/zzbWeWjs8y9PH+Y
m/2sp26UjR1SHhI+oNj8zv/Pfra1Ru18kXpIVXzEq2L9Yud+jI9sTVP7nN7q
QVfxkd0Hux6uTfTcqP8JM8FEf7txIWMmz0fiLPwbrI/9wKT3gMEycJDlo6RG
TsJVyh2K6XJbPuJ+Iz24uvcqeITaT4PqJITn9905a5i3GkYqW4flHpYh3i6p
pdQemI3sOlkX54z4KK8XnB9DG9cl/5Jq/Koml61Bm+nMme+97kKeL5fEeMIc
747zsVttsflQ4bx8kZg957K84kc3gu+ojI94xljlN7LaDGVGjJ3aWmax64C6
Rp6P0MfTe3KR1oOe/KPQh9yzxUgyxdNqG8TTxWLp5BsqaHePa37WxNc11tip
WCE+djHRqxtPXke7e4+8GeLPvD/Ivsbi6WCToAedLpfrOkxl3FK23So+YqzW
b0U+uprpINnvFY93K/Vt0Z46+QVBx2dpunP4tDdm76zY1vrZmoc3lvDRxsPr
IT9ddprtwW+kOiyTsHExM/k29Jv/XnNHPW9H91o1HN+lenW98UNJroR0GHqe
lZvvVWvoy4e5TxldBrTjPB/57YiPfs22W5yL6X82xsnG9/XrVzu3ln+hkO//
Syvw0v2lmcBIy0tfBZ8MzGL5iO/XHl3vbG/dD+MjXIQ/SPWK6CvpOVg+wtBG
ECOxbtWeJX5OfMM9x/ORGKKMPfieY4mOgnS34dTa973Ul6Tn+3UYy7dP/qNh
77v4vIgRJM8q0aVIzk/pckszWsfwXdqvOpekOaJzXP6fI3OMbQ6SPSdYbvsH
uHY7Yx9xl3xFWl6/yX/k/ZvwEZp1sfy5JL830Ygt4yD7fdky19cvZnzEOlXL
tV+8OjlR+JBs7J5lJfERyx4+T/LCrA9J+2OvyeW15UyHwWpwT7TeapOD1Fhj
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
TlgjFtPqA58Vs/rfDSc11liv2dqw5pkC4xb5P7fcvNEykxjpyuJH4VV8dGPp
s8BNK4+vRO/B8JHyNa1Or9UugI8e7s+GNvD59ZveOY31MyjnNDZWq/biqPOJ
Qe191K6L90OSB8I9Ev69F3yEyW+xGLdhdONHsVisnfhoXBrvg5jno2cj1hka
1bh2eBZNO5bbhyfuw7J+GOa/R68PM06yy/nPoS7zG81vBn+WzzY0TxdjPXN1
XN8dF30a4+YjP26N4/mKZU3fz3WPh/1sc1oUU2b7sHS+XuI/8nw0zHGrarPV
xLDn1jB8VMYPlo+G1d+wVhZTZo8BjFrQmqtq+4AsFNu/Mj6irQmrtQv+mpgm
v4x7Of9Dy0G1i8RHsXO/bD0xPuL+E5hnda5zb+4vgY9Wt6532q35YE+373Tg
I+5P4lHaLT5STKC+p50hru5Oq0e/Lss/UvxaGnOXaR6eNUbSddhogDfWWK+l
fGQZ6avVxyFPyNYjKtP5LvMrwUzw0WE7rwvj71e/RsZMzQfwL60d3gwcxdgE
H/lasZaPWIfnI+5PMFfDR6dr4iOYg3PF8tFpm9oUi3Xn90mdN1XznR/aDzM+
4rw+DT5iv/EVkWsEEy2FWivj93+WaetayzXlDrN5bMyHYrWyfzXnnepwxfPk
63OTr3vk52tq4wvjX9I21VadT3X5KNZfox4DtQ3W9DpqVWb33X7PPJm5otex
ZvnSvJeS+RjLj7p/tAMry1WKaQay/DA5OjGmoC8sow3CR7Zmse3zflbFRKOy
UMymVoq878/P5LciH/Uz6WnL92SvTduHsWuA5altBB/Jbsxc6MzfnwrjQPBh
dX8np4gYOvgorOd4L9WpO8j4SGYZT7lwtBGjvzM+8jF2lo/M+X5m+Ujt9vvS
WGONBbN89OmdnTA/vFMZF1zOS7DR/NLngY+o17izOR/4yOY+Yr6One5l+A/g
MXKYFIMd7Hg3HQ/zZzx27PLjrfioYaOiDTInHE9fFPkInTqvQXRaeTVlfITF
9UEmb9Z3dFqmfA/e4wuZBB/JR1BnnZrrWv6J1f606/Ma6TknDX/+xzS1f3V2
/Evy3Jl51Kuj3XTel2yTNj//aSv4tobZ/jj4SOux/Tfq9ScdBmswR+k9p+J5
NdrJdfUN/XJ8Z/ko9p/YvtapCxs11Ut13w/rd47rj7QL7+XLsPtR6Ot0Lj4u
FopZmRYg3xPLgS8LhuL1YMCaFmXnYtW5H8aFo1bn2tX/DmxEfhCx03ARfiDx
0dHrvH6t+OjV643MR0Q8oGJps/17u5UdA7WNfYSPtg62w3PZUj7tnh+fL+1k
eveFfIYzMO/rsUYDvLHGCtZzvXbfL+09KPBRsX5rjI2mOrd2Pi8sr3EcPvr2
8bXONytfBGYSH+Fb0vve+1gr8FHyLHav4DvityTeLhmzmMeyTZtP/8vrw8ox
eNJ2Vviody7XDr45jo/3xw2yzkHmaZqnKtcHrTq0GeT/O23NgbL84EnE+fXr
Mx9bd1rm+Qg7zfacBz7SZ5iIbdm8Fm1XeRjrD290Fu5f7rx5uTP0uXKWTHV1
7HfocZfedypy2cvitgbtn0HGlTI+Uk3afv6Z2JwS3+so53t8n3I+Yv30VajF
49oTbIzzcLZBHy1s7YSaVGU6GOKjYc5f7zPCeLZgNXH7rZM4uc3Vm+n4kDAS
8fx23SH+r8tFGD7UZ0cPDP8k/qI8NrIdmEp+sOPU14QRcwwf8VuIy3TnAEwE
G2V8pN/PunbcedKZaKyxSZr3+6Zs5OeMVnc7NpcMuUolfIR9ezgT4vXgI2x9
9Xpna+12Z2l5oaClqfrWep6j3GjN5fU5iU9KxjRilNmmne9PsuZrHTsJPqp7
/7H3HB3HmzvDz/9tvkXd/1jfEdrevD9Jnbp+/XMrUq9wEnxEXFjVvOms8JE1
5hD4jng9zTZYnZU6uR3L92bcMnEuGuQ8DrFDb9o9ef12HXX4KBzr79c6i7en
Omurc521Jyvh82kf63FaKR/1iePpx0eW3cdl+ABi7dCxY3tlOnxlNW90nffj
NB/f0JvfFo9RY/2+X63fqOq+z75I+xvusXlLvMJD/IaxXOLT89r4xddQD8z5
ksr22V4HVaZcprrHcWdjLjBMog2xEfjoncshEh9xHuF3s/5daVzksaTtzv89
TupP8So+ypdtZ3zUk4+UHhP4aGZjtbeO7GnP/cpM+t+n3Y7GGjtts9dqmqc3
s74U8uitz4i5rHKUY2xEfVeM//18VJz3tp+vBDYipmp+93aqWdMObITBSRj5
k4GTnj8JzPTzj5vhPdvkvz++XMu0jOyYhv+I38VH4dnOj6f7/HVQPhqH9veP
JXkq1md0c+fSyPP/gbho6Wp2jNgmWt7io9PUiLNG7IXno5ul9bdGszp89HTr
jjl2p98/HG/F151ErGosN9/nY0i/ime4Zedjol/Xy0T5XKi4zmx/3/RqJ1e1
JbZ9PcfpF7921vmo3/nXL28s6nepYCN0osd9jlWNrWIE3w7pD/i2xPxMma/G
fc+5WacPdb74cyv30/fygdeRyLgo4jMizk2co/3Ve7tO7qvSHfA6GzLLSJaL
qvu/l6tCLTLFtPXkIO8V/tuPj6z/VnxEnFyo0fAWHag8h0h9y/sQf/88b59i
+fMcqKSdCR/lvjt7PBN+S/oly0mKnNd8P/s4Emd32vO/KkNb4u9rZ9vX1Vhj
kzJ/jaZ8dGNzIcTWWT7ivfiIuDf7G/4b4t2wH35eyfhI4wh89M3T6eC7+L/H
+2keUXLvWWktdR60r4fndzASXKG6tLARz2Jfvlzvss9y0Aj3Odls2+eywAnn
iY3KtErHYUkdvqnArfDQwU8PCjGRgzybG8bIs4A/pKENHy2Ec+lkc6CqjPbR
JvpIftPTastZ5KPQrpcHJ8ZHsRwRPZu2vBFiY16Wx9j1+o9S30/KTPIDxfrZ
c1XdeFIt59dn2237kFwl1bv6+s7fOoft0Zh8HM9ZtJ53x3EtAztm9Ds/o5oH
Jc+mmUPGNDf6tTF2DOrsI+eU5yOxAfGCsf/0+GzS/YnNdVsDPKMbJA8slu+S
aek59mRfxEd1+4d9H/Uc8jnFea5w8hmuYNzNcovfaruJPpzNsSpqDebnXrxe
cavz8NHfgv428XXc/0K9peNcq1vrh6PY5v7zPK4u8T3l29KcR+tXmy3DqY0c
b/g+nE+R40Bs4oW7W/G511m1Rv+7sffVrO+oe71+OL/TubV1JbDPHafPoHqv
jDVe247l+V18pJoGMvjlbspbOR8l4w5zUvERWgr89/qTLwtaeJdn/ysYfHT0
YidwE7Vlr367lcbWTYV2iTHOKx9Nos30OTqAHAPxEX2uYzdpTuEZvvhIjIR+
3VnNrQj3v4jP4aTsLMbXhXa9THKQyLUe5tiNynnngY+K2l35+xhjxOzNq93O
7fmZzvzc5ZCf9OM/t0c+bmV6BHX+F9oU5aOiHkXZOohxjvJRif+IOb89HsU4
p/r7Vnd/fd6O2tCvthTz4AKfSNfZrcvqqY7jmrFz8qifwrSDbZ9UbQJpN/Zq
zLVMHY+djDdgF8UuWG5SH+GzUY0y4uMKGk2ZryfeTyGvubUS/EfiI3xI0lgQ
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
iY/YLr4imEd8VNWXL15shHg6e46xv9Qzgo/YjsYF6aVzzFU/KvCSP9+dHty5
jLFrrLHfqkmTIb1mP1zc7Xz5oBXYiPky8XA+78iyDK/2t97llEuU+KFYn/Ud
3UoZx/NVMb5uKmMj8dH049kQWwcbaUwnvoCxGjay43rV/MRyUsjDXL2e8ZFe
R/EvnWU+yvogzUOapA+JuSdaXONY11n2nYzTvLZ3oQ8G5CPm1hxjXk/Kl1aH
j8Zlddbt+dzPRZMYs3bfPKQkLqe4Dr36ujV27AnzO1dLaRCfgT9ur148CYy0
cme609qr50/q4aM3ia5CTCfFL1vVTvjIcpbyRHhv/Us9VsFHzCcPn5dvN8Z6
3td1kmMF53poe4SP2JdBc49ibY8dk6r+0W/EmMFIn138XeU2pS+XbD/XhrMx
lb5/uefKB8mxtv5iyzN5vlsSE6dzrm7NV1uXSHy00poJ84qiDlS+33CQ+Eg+
Y+1HjMvs9Rh7FgBHMU+wXArDc3zhIba1vLNdqB1MPN1aeyevlZVq2En/LcR0
iomsRlZjjTV2eqaYOqNZh14PfPR4/36WX9TLR2V+nqkCE3lGCmzUNeZp1I5V
/F01H+Xr5j/SGucVPmJub8c2xmqYhPf7z/rzkTdxUk8sXlqbFs0HWb91KZ7n
rBt9qL4fZT2/HlfHN43iP3rf/EbYuLQZmANbPjqNfeE6rBNnN8p5IV9NlX6d
/pOzZbm2t/UN2dqusW1X7U/Zvo3KqfCR1oO23f3V5Wx7g1wvyiOq2g/pT3AM
Y+Mp467nI8/v0Ri7imflitvqd+y9/t5p6M3L1HYbX2d1HuqyXnyZWG3jnFM8
D2puz/Y/vfWg88HM/c5nX5ffk7xvVb4efY4dd9VG0rlhjwExaIpNg7ssg9u8
Iekk1Imvk24dr8SkwEW8V33Z4rmbfMbnQ/6Q+kQ89qtbzh+LmD8aPkK3wS6v
nC/O1+Cb6vIRx121s8RHxGvqGhAf8d/bT9Ya/1FjjZ0VS7koi6dLn+FdWtoN
fMS4w1wZlpF2nVjJ84z1J/XGyyWmdbEOGAdjHfrO6jywbFFHPDdyoPBxMF7x
H/zqr46eFsbkJI7rauG7srG9jkVzlwwjBety04sIL50H31FyH0w0CImhtM8P
h7GGj8Znlo9GmUvz3+3uNU0MCq/MXZmb2PopJ2GHz8f/PP+s8tG74/h8dhIW
46Nh+jFeXzN/reuPYV23ty/17H/ZvajsPsV8s058XIyPTsvHHOa/1Ic1/qNB
dPCGOZ+0v8zRZbRDJj7ifj/7eKfWtmAjr7vtDc5QHo7NyfFGTo74qNfn18p4
RdsUL/lzk31kPYxfcNHS06/DXEV85O9dOp/hGb0XH8XOI/u/mF+O/g989OhG
4X8wDv0MD300V9S8lj4D/V7Q8Oie9zASsXlZfF36v3Ot09BYY+fc/nBzLcs5
Ct91r03YiHEB7rD+BPlr6ucIJUb8262dzyt8QlPZ+sVhyfoT/5LVVrPmY1P8
fVDxdcXxeXx1Wcq0HuAjGVqqvJ4XPrL33lH4SDVDY/PGQdnoNOc4Z8Wq/Ec8
G2Ce4O/1Wf9158z8xnLh2arhK8WnnGTtKeZPk+AjnSt6r1yi2HZi/lzlRdj+
eXW023nBs/M3xXwjXSNlOUd+fyfJRz4XSow0EkeXXHPwpo5dsa/bIY/EL0/M
k68JPoy+t9cMt6xmX/3Yftp8BBtpjgub1M3vip1TuX58qzd3Ls0do2/lwwi1
SNWHaU5xaE/aprr70S/eUlxj60MnvqRWYR3cT3gWY+vBvnPrsZY88yxy+trB
/XCeYVvp8x34aKE7d+CZD+cmVnbvgo+sn61qv2Lnl/0eP5T4SM9jjl4fZCyq
+ZT63x6Lwvmtz9I1SOPqCvE8jTXW2Ilbxkd8Tq/Pre8fh9qt+BLw30iDDsv9
O1M9sXNin0SLIdG0o54rdquSqfJ8JfhIDMZYyvbgI7at2D4xlM3D9OOaZaOT
uj/CR9+sfNFZmP885C7xWXyEhp78S3Xi8U7TxjGX43iUxVAN4zuSLvJp983J
H4vkdVg+4nvmDviKqnxEZ4mPxnGc+82L0fCt6u/kfTtjm6ReUStbt12+MG93
TJI8Dy/6rO02xnVO/+rec42NGrNXNjeM9XEVH/k2Dqvvbf0usbaV6UWU7dek
DU4Ri9D2ftuVX7LIPTkfBD21t1uFZW2/Vt/ncy6Cm8q0BeP9lbCMdLf9+cZ3
XBtHr1vpOWHj8PLa32KWfvcXbYdxTfl90qcTH7E+5gNbqS+cMc6OYbFzgO+k
xaBrsmw5/1nnlvKvMI4HmnfUPKJ9me6C7XcbI+e1GKSDLT0s5RvJmti6xho7
PbP5f2lc3dTSdhhzMPGR/Do8e074aCowkOcc1TbiN+knJHlFF9Ple3OWePaD
ScMOow4tY6D4yM7rLB/xPq8xUBzTYr6jSRrjo2U/2r+zOR8YiWdWPTF5pgbT
JDXFz6INk4v1vvKRDD7a3YrXpcLHW8Y3+F9hI15DvcLXp1cbWSZ9q7q+3EF1
vOyyZcsPwuiaH6mOU2Ebb3qf4/dbX2yf87nucEzjxz90vwfVsos9I6/qU6tf
xhh9dePvPe23fIThV1BdodJ7UslvxHtXnS8+JjLGS6P4k/S/umxB/skHf/2y
M73ypMBHRX9f8X15TlK7wEcynkEV/BUlfSo+4jOxXXXaLz059Wk/PzMsw+8+
V8n6Wov9WfQN/WziLkLsxQ/rnf3DrZAzJJ+Z9B1srVnpenOulbXP13z153ex
vflrrqmX9smr3c766lzGRxcufZJpMBT4SP66shwi5ycq+PaMnfocsbHG3mPL
nlugnbK4G57FMN+Cc5hT4cuBQ2AjGXxyc+dSKR89PJwN+t9rhzeTHKKD61mc
ndfkzvUecn06voMvrH+I8U/vVZcWKxsPf+zOZR4snWwNUhs7GHuWWqv+UhqT
91vmpWFzjzSvfl/zj8r4qMy4t8f4SPWdT2tffP72pOw0+Kiq5g4a38XPhwMx
f51n3TLLR+PUKIzl/Sf73IrqfXif5Sh8JIM1qsaBSY0PdXQ2rKERh/W2L1bH
qVqPIPfd5P8ll6WqL+2c2/ZrPz5K4lJ3MiYRIzBmBM3LPu2Uz6hf/4Q6q6mR
yyM+2tmYCzrbT9LaG+Ij7oueY3R+cT742rC+f/Xqr31/LGOaDPr/zta9zvLD
xc7y2nLQt4CPSvs+nVspPsf6iAo53+bcb5ioscbOjnnNOub18JH0EsRHqiuQ
+IeKbMR3yunH0E5Aaxs+wg/Ff6XDDR+hNSdG4r/SZbAa4nZsUtwy7UjYKNcT
Z1saHzW+MeeYWzw5NmLsfBjiEKcyTqyjUWoZSTp5xP2Ij4JOXqaVNzm97ZO2
YfnI516/T9ZPvy42XwtzKqdPrRohp10jl+MY441xWcwfYs2eg9H56pu4HkBs
vVbHux8f2X63fMTx/aH9ILxa+6H9MNR/5TfeY/q+yqiFJD34YY61HX/VP2X9
IQ0Mr4URY5hKPwdWk4/65fHUuT4G9SMN48ekHqtqbZW3rVWIXfOmWhV2m/St
+Eh6AL4fxUd85nd8HP4YwUExjQK+z2sSJX4b7sExPrKfy/QMwvlhdIyCjyhl
I8tDmD7rf+T4YJaP4s8K2n3vu+Ij+iEWo6l4vtzy8RPfEXyEloI16x/Ch1SY
Wxmt7jJebayxxs6geX39lI9CPfWDGyHvBz5CY24rfQYtFrIxclbzm2VgI5iG
day0lsKY9OWj21kuUtBr2PqylI9gDbVBfKTtJbF1UyaWuTeWmNeT9B0Fn5nh
o7L63XUMPppf+rwzM3ch2PLSdMhlEiuNow7TSRhzsliO7Kh1YRs+ivT1OdSu
OAk+is3TmOPAG3fn/lLgCc8lGIzBbwd7y+E9/9N3/j/hd2OeV2LrDq/ddeYs
VM1H1IGVPd26W/gc+27x9tRIfcj1m+iW9Z93yjT/jukLVNY+svekPsvAA3X4
aNi4zHGa+Cj+ezzPCN8q7CMTH8E40o7mVWyU8ZHTYLB9WdZflo9sPJli5eQP
Uh1Xlo/3b+6fCcycxkEo/1avYiAMBsLgoX79yHqpJ6TcXR9LmbwvZ1A7FoiP
GIOUH5jVU+qOD+2dpZ7cus9vL3f+dONu58Lttc6Hqd5c4by0OUapBl1PbF1a
C6vxETXW2PmwzH/UvXb/fHcr1DoSG8kXIh07+AWrqnukZeApcpdgB39vhY14
ho1Jtw7z2na0Ax8U4zRcxPgc02awfgWNa/34aFz3S/Ei++xzpYY19lt9ID5a
eXwlyWXqvuc78ZFitX/6YS15PneGmSns2zmpA3XW7Nn3a1E+Kov7Og/GPHCc
ba9zTa/cuRzyqZmfxbgCn4tlDPp8Z30uxDbyeX19KZiW06t+12txnXfDeqyx
nP+OdfEaYx7PPv5zbF/hm4UbF7PaSNE+e1Oe8yI+GiVfx9aVYYyujK3Dauak
4wupU6ehbtuH10GvWmcr8BHn2iDrrdrvvv2nXH/pRKffSztPvirfTu2P/S2v
h9F7T7O5SfIJkS9kWYjX3Y3FYDDQ1vpixkbDXuOHrZVgtn22bpKtO4tOnmc4
NCTeHLXCfUh8lB/LVsZHsBDxc7xi8BF9/+HN1US3O+1XeOmjha2ci+j/Lv9Q
Xwo77fldY401NqIZjYYP53fC/Jy4Ne6Piqk7eP4g8Imv8+oNxpH+pvhIz2j8
WMf3bMvXPSpbJ5z09NlSZXy5+Ag97f2SGgzjNLiRtg86b/Df2ZyqmKlelJgJ
3xJ+JsXnoQUhvQdrMT9TUl/idOL1RvUfva82jtqwZ9GqaqVMwibFR3VzXkbV
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
MM5Xs7/P5iP0P8eFWLn11bnAhcxX8H2xrK458VHQWrB5Qt1XvtdYCOfxChNR
D/biwuNCflLBb1QzZ66xxho7hyZd0PQ6n1lfCvFtiquzdd+4/6GrkNdCqs6N
8fcTxkm0BlSDNvDP/mb3u9nwvUzrpJ4sWng2d7TMiK2r+v2s8hF6gexrzO8y
qvVjxrqWaXltLIRX5rO634qPmMuLn/6x/bjzydxauF8l7RgPHw2SD1/HBllX
2RxT+hplfFRWj6eOPf9+bSRN3DpWxkeYfvOfM+O72PclVoePHq3cCJpxk9jX
e4vTnXsLX4xwvpTXS52EjXKur3XniePQPozngiSxzUmtzSIf+eX8f9ENqLwf
DcFHr38pboPPtnbvsPtt86nKlrtw4d9CvtFnF38X9M/IJ8KIrbN8JP0G1SyK
1nW19Yuq5t3p78o3snykWE7GDfER907LOLzCK5aPFlxtc8Yz1iP9WLiHOYH4
yNbvwC/EMuIjxVivtGbCZ/ERy8X1FHr73o+Z9r38XpbFdG8IOY3d+w58KD6C
l7Qc/CRtBfxCsssL9w1L7YT1iY96jlPjN2qssffH0jjn8L477sJHMIz4iGfN
SU2Mzaw+UswYH2PjnD5bzYGY1gNshC+Kbaguknwn/eaY/fjorJr4aBK62+Pi
o5jZmIy5pc87l+c+yGxmYT7jI3hp5W49P5Z/Tugtlhc9KcP/pbyYqlgoqz94
r3vNJLGm42kDta3Ok753XU7qZ3AS/g/OH+/riX2u6w8itq6sZlCZJetu9/hS
Bu2bYXxWo5zrbC+pEzv+fCdbf0Y1aJJ7Re9yPq+sb85NzTqxtn88H2W6ZBXj
RT8NPMtH5f3QyvioX5+x7/32u079UPaduTxz96p25SzfyviIYyQW8vdeX9tc
nAUfbX4/H/6j/+kZqWrH8l+YQv8VH/GbmIlX8ZHXsvXHQjGaMd0Gtik+snl+
xbwjo3HbHU+Ur6Rau/iDxEfFPkve8zv5RzY3qeAzavTpGmvs/TLdl7rXPjp2
8JHue5j4iHyYvFZsbuiC97vHMzZKg8HG58m2v98NY1jIge3OTfndaof7uLqi
bl0rus2zbPRvP7/YKDYMH3kNjDpm77fio0+v3wv+JuzuXFzf0BtziLNU83Rp
d7/vXDh5TppfDwupBvs9c95a4xwmZ7vOOXre+GicRozgk+65A1vjf5S/Ct2B
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
fRSDJB8u2Cg0Nln+sXxk5f9GfMSj9sU8Dn+g/Z+uZOdbJNV+nMe11Xk0maPM
y370MYocDWXfaZMfYPL1YtQ4xieJ/8VPGz/2ykfy+WPNhXiQUK3rlykfVfEN
LMqvWjYe2TW994GPqgo+Wrt+JpeRmm6XNnqb2n54rXxzsFFybR9M+NrDR8T5
FNli64zXeeJeWd/+23B1bWm4vbGUnTf7LlqP497bOrof44+ioqJqy/ex++rG
UWobvzfRP6nGW944VbcPxn6CjxwSH9kYJHIy8EgO8D9uPBh+eXFpeO72dcdH
H0rseVd81IX9SHyUx5OWj2Q/0ndDfFTFllQmtqGcV5aPimT5yPrthdTHNcUf
P/LR7NR0/YN7iVx2fR2Xb8NwdqbfTe3OnthE9x3nJhbS4/7O5QmfpLrtXHVt
zOej0HewHx3frZZnXdeYbebtu1Z8zXvER3n39+qVb4b3dq9W9rEL+YJwHyq2
SO/z3OYa534SH/F9sQ6PSHnttE1t560XW9RkvsB1Ijcd9y18tJ/mobfbgo/W
cmqE7D3aHNfqtf51CzDvioqKWnDJfmTq88FHyvXtS3lleE4eu6a57Gy8Z7j+
UcJHsBH68ta9jI/4XL+tOr5Qv2ne41xf6sJOwjXYe3w1OI5Kyl8nblHb8qi6
sV2KOKbsGo7mksQpddFeRbwktfHfi3w0Wy0yH4XeJ47c1dh8tOVyN2hdvrv9
TvJRl+1cd45bZBuCj4ihaXqN61x3f6zok4/y2kg5setsi3sj9BsY1/JRk75G
fER/Zeu3Wz5S7jrlrxPbK98331HuOn2f7aFxfdbmtiyXY5I6wKm+/vGvGSNJ
/J9CfLR879yYj8RGmu/Me94VFRX1fmjtgasX656P+g/qxYb6KuWosX0x+Vjr
9nm/vRkMHz8f10/Azyw8R07sDzARbIQu/Xvy3aK8OCFFPipTWZ33ZKwWB8FH
b34bf854WmYHqstGIT5iHO47J7PlI99nj2Po0wZFrc4+a5dyDe//nOTd4LFp
XuhFUhv/2fXrZ3s7rnnwke2bWW+Ht7tq4ybt3BUftT/+2fFR0f1Qtw3z+Ajt
7Vx3/U8eH1UZH8VHSR655D3uTXzS7O/lY6ftio8Yh21Nc74jPtL3io7DfsZ5
SNR85REfQvpejo18DPjV+dvIW5sj7uiHn+4725Hjo9E8J8YdRUVF1RV89MnV
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
fX2ch/zGacZHf73yPzNfuz7YZtaCiWAj8dGsasNKoXyDM9nvnOxHnJ/YaGvw
2Cn0PX3Oo+aHodwMXdSLbCqxUVU+Uj6reRzrLJXnG0yebXIdkGd7XsfWpP3h
o7oxZtM+zl0ce73YzKZ8xLXr4rhVN7WLa5Z33VzuojeHuXP7PDHnJ17n9vaV
lCm6z6nI+iE+DaHPqC/7w/K/DL/+5p+Glza/nOAj1XsLnQ/XhXFKa5PiI/zs
sB+FGE/2I4SvXd7xipFC+U/go2wuE2OQoqKiOpafu059J7Yi4mdsf1jFNhOc
g7yWr0LSlzInexfIzVBUL1bMBCNdPbg0PPh509l78L9Dly9/vhB81IVfBWON
rsO8bUfJmDib/bThI5tnvsk1sGyUd7589uDJ5DxNfJStIYzmEl3nmq8j5s3M
HWyeaIn3EPkbkF5jR8mr8/ihaJH5qOl1rsNHfTF73f9aHh/Nqo/pio/K22Xg
+nHfPy/UXvR7qs3aJv94FTGG5/l/wEfYjVQ/fS2ND+b7aOMknCvRz2ejmgfi
o9BvLB8hGOnx8+n7gXvF5oi0n5/ZOJqYx8TasFFRUV0qq4c00qerR0l9z+fb
zs5ed/0rT/Rlyr0tPuKRPpe4IcUXldeKPZvxkfz9OD62s7pxxs1L1ZczNs1i
vO1bs7YdzUtN2ehdjupux/IRDJT3PZ+P7HHw6GqAtsw11UbE61Mr5/mzQzf3
l2RTQnl8hPQ6j63895H9vn7P9g/urk1se1EZjBikm4Eal4ui0P3MPBpGmvex
1VUeH83K3gqHzIKPqlxLxi7lYOC/0ZUvXZE0PtpjoE9gvPx+6f/N+Ig+7Pr9
b93Yy2vYKY+Ppq7lqC9fXllKayvlf8/maKjrs8BaLsr861D0r4uKiupSij9K
+ejGaPwgZzb2dNl8/H5dr/lek5wI8rdjG5aP8Cez9qL1002Xp0AK+d2Jj6iH
dH75n52fXduaRYukyEf5smNoGzaS5DtnY+SC++2xlmhb+bFHIT6CB+xrXy9z
hL3Clz6rykelKvgN2/RrqIrp9Frf8e1l9vOQiF1fv352oa+tr9WV8xN5xN4H
zdt+VIWPsrWOno9JfDRPXuMYvv/hn5zwrVvdPOveFx+xToodCRX5Zth+l3ty
7fad0n2TWx42Eh+Rl442J+a5Ci9/unY8nsfE+KOoqKiuZfuUlJFuHiX+xtiS
5EtsOYk+E5+2Jnzkb4vHnx4uT3EPbHTz4T0XD5XHRhLHoVikReAjbGXwXhfH
sQj+dU1Vh1Wq8pHun7a5Csv2USc/1yLlvu4rd10ZH0lF3NWFtI/QsViVbefZ
k+Q75DiQ4Kdba987+xv345PBTiVemlf8FrVhnz7u3h+L+7mvnHzwUZ4dcRbt
CB/ZfAF5tuBZ5SQ83F8fzpOPXO29pS8cHy3d+WPWr8JDlo+2T5dKt2X9jLEf
6b3lO/lchQ2IuQf+dvARtV/J911Wl2vn5OEEH0XfuqioqM414qPMx270GjZC
p8+T+jsJIz1KfamT/o66pfBRXpxFyL9I41DeGDidr27ZsRHSe+S7hplCsUon
TzccH50581+GK7tn5+bjBKdZPmqaH1Z6H/moSc7r3389yvioaG5i+YicgNdG
Yzi6dXIxZfnZr//3OZ+sK2whTfOavS9aND6al8RHXTNSn/czLID9aBY57ELn
YPmo6Tm2zRWBb6TqG6Ery2fnZgckDwN2I5c7NuUjxGvqGtGfVuUjidqzf7py
0z1nHPj6x78O7x6H12zI16S5iGxJMBL5l8RJ/lii+kef+vWP5j2XioqK+vDk
5fj+8+bt4fLe0fDczqlbP0LM+TWewEf0n8oh8Op1krfhf799OPztzcA9olB/
qNhN+x7spfgiSXxkeYjn6NrhObcd+ePBRvDQ8v6fnfCzw99uluMM7ePXu+V1
m22+j2yka1z3N5aP3DZy5qVsm/H7/uietDkWr6W+8lWPzz9GGz9kGavK/HjR
7Ed185rVvlYLdL5dizwN+zuXHXts37wwl/qrdfT2twfuOLvannLcVb0PmqyF
lOWw69OOBJ+Jka3/eJ326SSP3oiRiM+B16gP1EWcb13BPcQbwUj0nVrvpH9l
bQ8fErgIO5Ly10nWB8Ta8pM11FPHROSXQ+IjeIccDNiMaEP4C8FIrt5rOh/5
emPMR/jahfgI/tKabuZbFxkpKiqqBzk+Uv8y6ncyPkrzcfv9N0xCDlOew0fj
3J4JJxX5KIRyIsNaGycXC/MzyN9u9fi646fVo4uZfx3boE/nNWzUVW6JamPm
qTs+8RHPu/D/+qj4CP+6nXE9whevDoL3TfZ9cs8+vJJxkR55r8rx2WNkX8Qg
w/3cSza3xyLbD0LnhQ3kfazns4iifixxSfM+jkT59yHXnNxes75Xi/ioqP+v
y0ehvKlt7FuyIYVia8u22wUfsX/iSsVHtEXfY9XTX25P5X8QH9Fv2twLvC8+
gpl4LV97HedknonxmC4+on2xI/H56trS8Ivre453EM/Jq/DV+uHw0dNHU3yk
ukg8uvqLo+3wX6TNtjeWhl9d23HK7Ed2fTcqKiqqa6XrLzafHe9/cfM0HQen
+2/4iLkk/njkdfBjlcrGGf+9aT4axxzhW4fgI2KTLB9h3+L3qqf04+bnw62N
C6M592x87MRHshl1lTvvY+Ej2AjZtXqYBV7x8y4Mnm1neWctH4mRmnAp22Ff
xB9z7apcv0Xxp/PbfVH46Omvi1FXqWksCW1InMzzZ93nFAsdT5W2kr00xAvY
DLdvnHe5N7o+3jwewPcpqd1Q896Aj+6ud96GVXV0d2W4tnLesQl9N7YcxezN
4n+tvG5Hh7ec7WiWfKTYL8bMC6ufOPl8hOhjud/ER+Ke0HH6uUO5H8RH3Duv
Xp8mcUjra45r4CPsSdiWiCHCXqRcdgguYv4BI8FP4qOtn5J75trdU5fbW3zk
5iyB2kduO/OeV0VFRX0Q+uTqXvI8wEfqC6drYWo9aeyXVGWMUZ1Cu23648k8
DJM5GZSnwcYesd6v/dp6s8Qgba6f732sUxtgf0BdjnPvKx+F7pPCe+HFQdCP
Cdbx44ksH/mqEnvEGjv8w73G9m1uJvHRvNuujVz8UQ8x+31e/z7Vho86b5Pf
w7Vw3vyW9IdF9y/3axEfIf5H2zcu9MJIoevr++FVWxc7Ha5dP+PYpO7+8uxU
dY9dfAQrwCr7uyvuEV7Rvvpsu7rn3oXIv7C88kXGR3ARtiPZj1gf8u833ltL
1/vER6Fth/5j+r74iHuF+9zlEx/xjvjozPUtZ0uyLOOep+u1n17ddTyFxEfu
+35uhhEf2drxVvOeV0VFRb3/yvjIrMWozoAdp0J95KvXx+n6Un5sR2jMs+Om
jQ2twkeWjRAxQD4fEWs9y3HofeUjn1Xbt4P3ejQ3JIeC78fu7h2Pj/yx2sra
i9ge98BVagSP3q9Sb577hbwOjPuWj8RdRb/1bVOLaEPCfrQIfPQ+C1tC0zrF
bVR0P/H/efjsaHjw6MAp5H86Sz4KHmMFrqB/vDWjWlPUx/PbFRsKfKY8euIj
juv29pUh8Ul2DOv6P45/2Kz5iJyP5Kjj+cHuNaetWxdc3NHl/W9cfJH/G+e/
XJJ/tSpHiqVlbxzv41HGR4pVgoNC8UTYmLhGcJV4Ckb65Oodx0eRhaKionrT
iIn+sLzpnn+2kvjy0t+Qb6HuGFm337Rjp28TWLoXrht79ejbCT5KfjvJUydP
t5yfnY1reV80b9sRa4b4nDeNaQjdA+RU4Lr4Nhpi4m3O37y8iPjB6drCM3o/
xEd596DlI9mh+P3+o62Mk/LOCT6ya/eLYiOxinzUXnAGeS5C935i55nPcXE8
rMUX7Z//ErFI8N0ixs7hRzsLPvp1xI8hPkJrgbpRlo/a7Bf+eluQOxUWs/nF
ZyVy1O0eXnZ9mPMHH/WX4iO/P5Yfhs9HobU/GCeUYy4k8ZGfu5vfyp70xc3D
bE5ieYffce/DT5ltCBtSzMsQFRXVs1iDUYwjfHTh9kMXG0lMUNu+OX+uavrk
J3uGcc6mtiLfhnR2xEVjPtJ76sfH3z3rbEm8h/0IPppHfqA2mjcfwQm0JSxR
N2e2GNm/7nl8xHy0Ch/VOobR3DBvfmj96jPeHt0zvL6Vc7+zXq98jYusefER
9aLq1IzqWsQ71bo/SuZz7p7cveZiU+z75N9aRC6eao/RPeDyf7fIZdgkN12Z
iLHfv12exz+kB0+q32P0X3k5qWUzmj7f0yw2CHH9YaYq8UH45vFb7DJ5uSew
S87DfgQLWj5SHiPJ74+JRbr382q1bad8RE65qsfDf0i/0f2F7x1+KvCR7x/3
7fbA8RExR9b3P4uXjnwUFRXVo7L8LytHw++2Hji9e5vkTBg83248Tob8kkPf
g4/ou+GaaxN85NuREv86G4MkPlK/r3VD1xeP+Ghl+U9zWbNro774qKoPHXaS
pnyExCb2euNbhw3Ij59g3pBXM7KJ4Bh4p2z9nPPSWqnloyQ+aTx2K2fV+5DX
+uTwxkdpP+qajxB+al3el3X23cl+Rvc//nZ919apcz74eolBatWPrvn/g4/y
/MPy+EiiZiscY/koOeaBYxsxjs0HJz6irXkM8ZTyijMWzXK9Dnsd8UY89/ko
xJB8XrW2ufIx1OEjBOuKj9TXsh7rxw2Ro0FrL3zHMZLmLXBRIC9DVFRUVJfK
csCsPRh+un48Mx8S9uPPl695fnLTfnZnh74vHQynuqzkSUjG1Adufq+aSLMa
j7rQvO1Htm2r5oRjPkabcz1pd13fst8xZ8Cfqc3xao4mNlLdWMUZhe+9wURO
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
J9NMUTYHKbIhqf4s35EtyeZqSNb+xszRNG+ccuPaY+2ajxhTrP2k7PviI7go
5IcnPnJMNXp8MvgpE2Mkj/njsH9syWNovikesnxEzIoVNiV80X43NXKrKMRI
ZbEwlo/aXhNb/1bqytds0Wsf9ak837Wu9aHzkRXzWOKDnv6S9O9v0/6+Lh/B
RHY+3Fbio77P3/YtqiVQZx3Dbx/86dDu4eXKNjjGVNgIDoKP0PW0tgHMKvu2
8rxVPZbEPj8dX1vmCwEDkSfw8NH94d3ju07iIzEwIlaIR/gIdfXfFB8t7w+G
X28Mxrm+VSvW5pOKioqKmoXU/6S2I6Rc34wZ8MuN0bxPtpmucp/acQpu2Ty9
7tbv2A+ytpuqfXCZj53zpUr99sRHh956l3I5NOWjh08T2fe64CPsbNfS/Ni+
DSX0fT/eJZSr3TLSqYlr4jkidkF8xPs+M+Xlh2CsK+Ij+LTIDik+4nnoGmIz
4t607RCqo4Tq+gwpt8KrN4duftLEXprU+zjurMaiuLaLbc1TTeoFzCo/dhs+
Ir4Izbt98xSyf2ADwOaR5Qp4k8zDVRe8ynaVX6Aod/UiyvLRWot4U3HI6uZZ
x0dVfiPbUGJfXsrsR/Ktc77do36nzjj7q+uz8q916Loh2YWUnx0+ou4S8WPL
K0vuOWwkPvLvqbb1P+Ah5ZHg8fudQcZH2JAu3DZ2JFPTfu5zpqioqI9Dsl+r
3xm9tnN8+mnms9Z3rat5n8Yptn+DPEajR9a5YCP8lOtsS7U+y2Rzkml+T/6E
3189mOCjuvuXVg8mcwB2wUa0k/X/8/nI5qFumwsAWT6STck+l40pLy/E2pVv
nEJzeu6nOrmuLffAO9wfIT6y7YLdiO9U2Y8/vjM34beRj7rXgydhlugqrqJu
zjqrNnw0y5j4on3ltWPo/d//fujySDM/9r+r75fZxPit8jLM+lzbXnv5w7bl
o0ubXzqfOsaNKvu0/nO8Bw/BR/xeaznio7ZrkeKekJyPXMpCYiDHQ+l7Vduz
af14eEh8FJqXKFcDNZG0fuvy2UU+ioqKmqWsj29qTyKXnfp0BC9cPUp8ujQW
NJ0XwD/arub38ntj/isWw2ZSZ5tFOb5DfISIRYKNEK+VW40cFU3Ojf7evm7L
R3nxWb5vmb7P8TfJK1FV4iMJbrKCocRGykkt1c1Ljr+dn0eBc5ONx7KTn4eq
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
zsOfJXn7fD4q87Hzcw5HPqou36+36j3Xhc3zfRVzf9iHOH/m/7bWjeUjcYLs
AlrDOP0lP9dZF30S26/DpMFab6O+47oXuymfZubmofvI8pHlHcs9vvRbHQeP
+N3hyyc+kn2I79PmGussH9VtI7+2bui+t4xi2cut5ZT4jdr2bMpK8lnnWoiP
GN/XjjdcH89zV4825SPLRgg+EiOR69vl+16A+VNUVNSHK5uX4etbx055/dy1
wNo37627OV3CRwhbCP1hlbxDobGP/psaMv77bXL4WjGHho+w58B94iP6ZvgI
OV+5NJbe9xMhtqiMjSY1GLXTuYyNpFBOvTyVxa20yVXblfqYZ5ITDpuLz0d5
cyY/z0VeuyjXHHny7nv5pSwfFQmmOj4c551Alo3G+inVzkSMFPrrrc8nXhNv
lZ1LjXzo76O69ueTzXER7ttZtV/beCj6OexCaPXq98PfX0+vj5HDRnwkRlL9
Gp5jr+nrHNvwEf9pP4e26g+N1/mWMr5RngMY6NL5T5wvHedr+ah8n8k4xaP6
IWsnUZuzvXcTvz9tFHPry7eb2WMbP07uS9dTfs1l7Vv3mN5NHN+DLNeq+AhW
un4w6ocf7bnj8HN/S5+tpXkasB2tHM10nhQVFfXxyfrWLe8NCsfbEB9pzu/b
l8RHi2DXCI8jDzI+kg8XvMLYsbe9lNbJOOvk12KCj44rxjWP2+5cxpOsXRJf
VOf3shMtMh91UQ83JJ+PtBbKPMQfzy0b8btQrm7lseJ6M3fx+aiOfD7Kk/JO
EEeF35/YCs7y+cjZoH7ec9+V/FgqeMt/LhZj3X/e90KZqta2qaN58FEfNu5Z
yuVEe3bobEerV74J1sQJyecjXvcRv1b1Pkn8xCbZTnx0YfWTTMsrX7hHxQLx
2vKR6ga1OTbxEZJv99rRkpv/37r1reMu8ZH87PqK1Qr5tfNafDTdZrO9/7j3
xEeHj+67vN6heYrLfWdzNEQ+ioqK6lmOj9TXjB4/Xc8fG6zdpcyeYVWn1mvf
Yk6Mb1uSTzV5j9f4wsnvGz6iLhJxQiG/Lvzv6tY2YtviMEQ8V53fcxzK9x3i
pCI+6nrMy5uD9sVHnLd/HVTH0P8uXOv7sNk1Wa6D6ieJj9SmvN9HDSOrEB8d
310L2qcOdq85H5+wX+DNzP8vxEdV60wh5YCYet/kXPfr/PK8z3aapT5mPkJN
+AjBR/wHsfF0xUfkska21s+YWcL/TeKlVteWnG+g9XdTTgTLR0X7dpxi+Kjs
fIrYzcb8KNfd2vUz7pzsdywfdR3nE/qOPVckRkp+m9/3adtF9cbqjDN8l5ze
+B/CRkt3dx0f2ZwMVvCR5ikTMQELMIeKior6AJXm9s7qw6Z89MuvyRzY5vmW
Xfz4yZ7rT993PmJdUX5uLsdBykfMw8kNcfny58O11TPBOFneW1upnzMuy2s6
2kddPvrH23GuAvERj9hIlM9u3m3bh5+SagKJcWgDztnnI8Z25YizfOT781s+
Qqq7Rd64UKxZmdwcpwZTwS+nR/Vsj1KIj1SXl/eSx5uZvco+Fwc5Ge7h9cR3
7GclfBRiLPkRjn0Kx8q+P7g9/V76fh2uC4pteNuxvo7+sXPct9bq2XIn/tM9
8/QsBV8M/tdPlb/PGIHtCLudcpPlyeZmsxIPwWfkxrN8RD5xpFo/eXE/lo8m
8xIMJnzsiuo2yC/Nxj666/v3cXyP/NBUY7WIB+inyE2OT518+uAjPnv15jCt
sR4aW5pfvzo5kHTOx7/cL+WjPmy94iPyem88uO1EXFKIj2Aj976xGcU6sVFR
Ub1r1Of8YXlz/NrkiIGPNh7sDFeOlodbR5ecb5jWnarU5LFzUOVsa+tf3VYu
VjfX/nV24rMQH/Ga/N1N+Ei/r5prIDTm5rXxrNpPMWWqE4W0ht53HId8VZQ7
m3xv+gwOCrWLz0c2HkH35izvP+w8TfmoSxXxkfKnh2r5TuaxuJnJ+hD6foXj
393MrXU15rybE9/Vc/an70n7+5P702/tsfj79I+Jx+0b07n6PzbRLxGDVNc3
8+7xXRejA5uQ/1r52MQ/2Et8JuJ7ofo+cJCen9y/4WT5yN934ic29mcTw9jv
0DfRZ7D+RV+Qxw/iHsXgyFdTLKRtV+EEmAgfavnzIVfrKM13Ch/h1x2Kz23C
IU3ZhVrHdo3pVSD2rEspfwocVhRnZIVPHXFHUsZIMX9dVFRU30r5yDGS7NXK
oWk1+gw+op6P4nLqMBI1gMRH9I/iLNvH911/xcamVNHS1lfDSxf/x/Cl8YkQ
H/V5nHmS71jIv25Wx8CYDlMw5+BaipFYR++bj0K532gLbD/3vfg3+7mLK0vX
+X//+6GTWOvtb/3XaKGdnG0yZZJF4KO+VWZXsSy1CHz0MTMS/mRwDXxUt8a0
+IhtyB9UUj1TW/tUz8vq+zSV7/8FHxXlPVCOC9XkCfkJVvEh1H7pGy0fwYeq
A8v3qPUDq8FHeYw0K4mPJvPT9cdI47pIydi/c/KwcG6SxRz5fnSxRmxUkbTG
z/N4n0S1VOZfl/edlI++Wj8Ynts+dnkceKzDGr7IT+DnGe1zLJAfVdXjw46E
YKPzy/88sa2NrTU3z+3jmKsyon8u5GGb1bhKbkF4hPVY5sHSrPjIryFUxEfS
RE2hESfPko+Yo7F/+cBFPiqX1u1ncaxFeek/Bk3zUfVr9/DxofNt8/lo3uc0
cX4FfGTZSDVl/RzxvF+0fcaB3cPLLtbJ+dHdOeeew0TiIx0HPndoLc1p1MSn
t0xVxiXZ3kI2t77FuE/sWm4uBmMz0txD85TSuUrUR68/LG+7e0T3ykSMfVRU
VWkdpup6TFqXTXx0fmNvuHp83atfmm9TwoaUx0d9C36ow2+cE2uAsBGyOZbJ
z/DTv12fa61I+Ig4Gs3zQ/nQ+x53LR/NYn7588s7Tnk2orX0mvEeDGSvuc9H
HDuCq/o+bp+P5nXPzErkDLx094dW/jqsbT962u1x+Up8so4/Sj5ytWZ2k3gf
8jLgH8drv+a1lNT++XGiDhAilw18NItjFjO3zWnuq4gPtC8baxW6j+AjOIic
EFdXvx6+eHF3ypYFH2Frh6GwIRXZtKqMLeIb/7v0b29dPrxyzi1qy7y8Dl20
eREfoSxXXZrPW2wU446ighrNTT+5cnv4h0u3Mj7SZ5GPohqpiZ3aY6pPVw4c
SzxL64orj4PPRcxVJ/3bEv88m9dU41TXPgfO33m0f8Yk8u8lPoLljMRce3n/
zy6X3eHedSe2Jz7qYw7QVLPgo+mx9UFmJ/DrIxaJ6wwv+LVQyxTiI7ahOAF4
8T9e7mT+dJaPFJtt7UzYoWbVVtzTN1e+G64xF715IauzxXt6rjlnX3kAZ3lf
rN1faZzbLS83YR0f3LJ1ce7Tp78mLNcVH2lNfp7rJlWFX9uFC38YXjj/uZvX
q7YRDJSXB8HykbZz8svAcUPXNZBC145r2lUNvLJ9+RIfjc9z4Ow/sM7Ftc+c
vcjyUbLd0ykfCctH2retuWtzP5Td7zomn3Hq8FEVES81eazTedTrbhM+Cs0v
Mp86m6uOuUbMVRdVpJSPgnkN03X9uR9j1Psnc9/AOqjOb/k+tiS7rsa44ce9
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
Ewofuy62tWHysYmPUFkeglA8TZXYmqp5m+vkvvb56H+/PZk6Prgm9FvGVj7n
N+Iey0e8X/U4xEdjrhoE2yqJ8xoM/+HldupTmpvO8j4t06L411XNJ1xnDm63
F/I58tWGj7iHFVvJ/4Y8h8rXpXUe5tXzbmfp9vYVVxeJuXfZGsE4vj/JVZBn
e1hEPlIfVha/w7Wjv728/83wh+V/yfgIloB9Xjw7dOK7yn9Au4mLiKuh74KP
/PaxfGTrlIlX929fyQQjPT7ddnrycMc9rl75xvFsHh+V3df2v1VnDfGd8/E+
cMxYlodC9z81sNXe2IwyPrLzBM0PxEc2X12s4RkVFfU+ydqEQms7aR9nffEy
PkptTmKkr24UzxHkq1A25lmbC5pHPdSu+GiS9ya5JpS/O8QdfO/S3R8cF+Wx
kcbIOnxk7XdFms7NMJjIw81zlLct+QiGzreuP9s4x0Wi588Oc/ioPH9Yl1o0
PnLzmQXM7y11eV1cnu0X4TwFVk1zjFTho3m3Z9Kmo/71+aGbc29vLFVk0oSP
nr7eydowdG0WrV4WvCv/rjxuE+dcT23w+NBRz2jv0aYbU2RvgYOwC5GPjtdc
07epDUl5B8RH3Ae00+buRcdZl85/4h4tG43bPVmj4Vi5Lkh8pGMkRgyOPdi7
ntmXKt+Xo9+xLR7Jx1G33pvsSJxn0b3COYuPeNw5eTg8s3E0YS9ycwU7h7Dx
9FXjm6OioqIWRBM2IH+dR3XcrI+dzamY5npwfJR+V3xEjSQ/b5DLc/N8x4mY
oLzxXfm2sbUU+W6pb+9r/F1a+XH4+kW7NWHO59pEndyzU6zn57gLyfKRnf9b
1fWjUZ2qPH96qzI+svrXo2+dL5L9vs3BLTvTC5eDeWzjaSrxkfW9q+vv14UW
iY2kReGjOvdmE38w1dXp4xopN3voOBfJZuSOddTfYIt4PKjTL47O7++HU3y0
iHkYrGAO2CiJEwozkuUj5aeDa+Af+Y3d+3k1i98RH9GO+LzRDvTXfEc5G8RH
tzd+nIodUl76vLYrWxNwOVdHfS0cZd/HH0/sZP3yxEcIvnL1iWvEHnEenE+Z
byD3vzhRfPQ/1+5PcFFwjZW5wtU7meY934mKioqqqlx/YLGQv+Zj+MhxkeGo
z1buOv86p9V7wbyqvLZs5I9p6tuVoxfZuS5rnaov62wPo21pDbfr8ffxYNfF
IZHvu812rgX8BddNjmrLRzaep0x11wp90bb305ofRdsK5fbW+J93bJaPrM2o
Sc7tKtI+rI2qTZ6FJuoqhwVt29Va/di/bjzH7yIvZJ1zmcVvQnwUsh3SFqr3
2Xd93nm0I2xUlY8U5//qzV3HBcyV9Z+p6g85L7kcCoaPQvN72XzwqYONLB/J
RsQ5wz4wEH50GkfER+yHdRfp6O6K81tElo90r7W1iYqPnC/eiHck8RE2Iiux
kfiI9ziuvJq2oWvq89G7nNoaiS/efWc3QuIj8tHFnHRRUVEfmnLzI2Y+xHv5
/Z5sTn7u+ZSV0Ne3jjMGUl1AeAG+wUcFaUxJ7Pz3steMYX5dJJ+PpDw7Euu7
bXL5dMFH2MvERDruda+Gj+b0ylfXNR/ZcZF5IftD4qOi7eWxEdJ8Iq9Okz23
pn6SVZlK7ab6SLPmoy7sR137A4qPVMsRO0He/KcPVZ1jd3XOiq3Pa8v3lY+q
auvWheGVpS8qtPdplqftP98mNb+xH80qN3lT2VwBqi2F/ONm3FCfAxddXf3a
cREshHw+4vs8wopsG1uS9iNGwl8RHrq3ezW47mff8+/7qv83az+i9i8xUS9H
jz4X5f1WfMTvuRfYhv+dum2u/xN8dGfwcPjV+mE27mMTyvhoAeYzUVFRUV2p
tPZwUUxS3m9MXrvP1g+cbN8svy58zYrmRYxhYgrFhYqP8ubiVsoZ3oaPiJlV
PaQ247rGGB17Nq6mczS1ifiojJOW7n2fsYDvy1blWPidfN5UVyhvvlhl3h/i
I/87dfjI1hkuirmy8vkIu1yf/pdN2qmK6rJCYT64tD4sfkZZrucF5IIubBXk
jFMOSOKRtP5iOZm2UA0kP2ZIcej0NepvmspxR9rOVXJHdCHsl9g1QjWPlOPb
1jb1+Yj/yizq50y3lV9TJ/+7XB/LQuSMx36Drcgeu+Ujxwkv7o76yV2npAbe
IKtzJD5a3TzrxPftc3gTm5z4qOv71opzV5ySzzYh5a4LpnwEK1meqnu8/rWA
j6zffYwnioqK+iClfg4bUfoeNp8z1zbG38mrT5y+/pRacCNN/Ea/S7lq9eBh
5gOndTTxEfaivL6ZuU7I7qC4ow0v/oXXSFxk67LCJSdPt+qN268euLW8w73r
heNH1fzAPIqDNJfXuYyZcRzDU9XPrq7PGseitq3CD1Xm/cwFOQfLSU3nCIoF
nrxXqm1P5wUz6nkdOxLzB9al8z4rml8sYvxRVT7qKy9Z2f9DNuWm8RpWb39L
8rocPDpI5tmj81RNIn0nrwZS5+0e4KO+84TAR8zf31awK2Nn47+v2Bl4cJ58
ZBmpqE1tTgzeC+Wd53vL98Z9P5yAstzaI53cv+HE+he+bLdufTvBRI5Pnh26
/h824rhgsWm7ULNzzvtd1f+h4qGK+m/uA/GRz3W+4J6ysYBcdZ8qF4N87+c9
h4mKiorqUVkcUfqaOkbZZyZHnXzxMr+7lJFgo2/W7jhl2/Xy2BCTdPzkyIm+
1tqQfnFx+kkf/NDUH7T5ry0faR3U56Mysc+8vt/OCxhXYCJ86/J8GaSyuhuh
sTvPL9C+X9XHTnyEzURz4PE55R8bc7eqvjRN5v1t+Ci51uO8DWKuUK2kkOz9
VCd3eJnETig0L2uaG61PiY/elcQfqe5Qm7bx2yn0ndD8sks+KvsO9/0sah3T
ntwjzKmJi3rwpD8+4hqvXz+b5fOuwkdJ255OPJ8HG0nEERXZjtSX2XuI79v/
odjn0uaXw4trnzmJjcjnZ/koi98Z3HbiOfYa2W7ER8T9aPtcx9Dx5d27ReyU
d55lfKR6rfyXXe3zZ9uF6zZcU/hPfIRvYOh78FHRvjleN76n84RoO4qKivoY
NJGDM63z6n82VSuW91K7E9/f2Fobnru2Nt6uPjd1k8RGWv/T/N7OZ9VH7z2+
ahjgrGMh2Zo0lifbODsM1UtaOfo+86/CjqTcQ0VzBXI9wEVIMUdV+KjuXMDa
xZQbwc/LUJWPQt9jm7RpV7EsTfiors9f0dxCefKq8pFVl3ykeULefKRL+1FX
165O/aM2vkJV+ajqfnXudexaVeLxmvBR2+vAHL7PukHYxM5/+9+Gqyvn58o4
fQo7D36DyoWtR9mCLPvAR368jtXd47sTfGT3o/sWxsRuZPkI+0lZnreqKrIf
Fd0rYz6qtz+1jfjIv0/8HOmKV9TrjI/SsT3m6o6KivpoZOsYGPv51DqR/PEM
H9nP9NyylHskZ8P6gfO1o7999GwnsyGdPN2Y8LOjLxYf2VwMtrYqa32Do1tu
DW29oIaQYphgpaLxg+1s37k4vLXyXeX116ayfGTn/X5+arEPj/jbVWUmy0dd
+Mfbef+saglJfg7xWe67TTuhJm2v9u0sX0EBH3XlK+SrTxZg2/d/TmxdIRte
FVk7n+ajbXIyz1svn95ztiOu9byPpYlgEPLCZY+GdeAgl7ttJDGS8rUVMVAo
l4G9X8rsVMofZ+8T8REsUfXc8tZSiv5robUFGzembTb5n9Fu3P9lHG19C2iP
k18GE3HIuXmdoqKioj40pbnopmxEfj/o24WsPD7So/hI+/l24zjjI/pf5fG2
eafon0+fJz4BqoWEVKuH2KA3/99xxkcJQ53Nvqf4XLbLmluVuuKsrfXNR9io
UBU+8uORLC8ph0MZK8FixF9UicnPmzPM028M/xF4DztQ17agrlXHflQ0F+8j
f12dY+hamu+pNkxTfvLbxW6nzrnoOrG9KnnUOX6YbNHqo0o+H/VxXZtcM+Wm
pl9Vjmr4J2Mgn4tGj1P5q1P/N35PP2TzWZfZ9n1V4Wn9/zg+7hNbh0if1eGj
ov0UtTW+fE3avMq1Jx8etjG/xpKVP17+8NP9iTXUyEdRUVEfowp9i8vs6rae
LK9VK8nUjoOP/LkGzAPnIPJ/27gc+EixSMz3VRsVPgr17bARKvKnC4lxfGvj
QudzCyt4Tr5+ynstPuKc68RTVVUbPgrVPpqtBs72Bw/O7xiqqQkfNZ3Lvqjo
51PHv64v2bXuNnV1ivior+uk/So+H05aRHvSzZXvhnu7K1kbd7192pp2Q/gn
ImwsyL6271s+emFyVOu5y19t5LORrSn0n7+dzCRuTLJ8tJ+2q9pBvmh5sUhV
1jiqfKetHbZo+5yXamU9ebhT6fefrh1XmwNERUVFfYzKyfedxScpj4Pff9rX
5Gu4cTTV/5JfzvrT6f3Ef+6sezz04lrI50Bs6avX7W0Lj0+2C3PVdSmbXxtW
Ima+Tk4G3wevzJbE94p8DPPmVLOck+S1k45/nsdRRW05sg4z9cVHfcz9m/BR
V98JqW2c2KLx0emD7eEa+QcOi3OUWTl22b02UYO0SFeWz07xUeKjNcjiQbG7
Iz/HQVbLx3BRnbZWe9v/V5/3h4TdSgwBI62tnHda3/7bxP3c6trl5HwYn/9p
JZZqehxcL3JX2Px21Df6bOXAiefo+sFexkcT/iBRUVFRUZl9XbYhcoGT29t9
ZuKSgmtL1lcvjW/K6/OtnQg70E+Dy46ZxEfM8xFc5OoxrJ+25iPYCM3LVoL9
rAkfScTpKDee6gWFtufnOCira7gofLTm1dNdRLW5dyw3dLn+X4ePuvbts9ut
khuv6r7btk8ffGR9B2fJT1eWzgx/PP/ZcH/n8phn4B6PfeTjhh+bnvvfEcuE
RO0fGAHbie5Vn4+6vEbI98Us+3/1FU+HOH/LR1WPv4t9J/Wc22/HXae3Sb0r
/7Pb21fceV3YPsj4KDT28zz61kVFRUVNy+8byVlH7u5K9eJMLaVz22HfOIQ9
ZeVoeaKGobUrSfjdsd0Ltx86tZmXML8g30NX42m18Urj6IMpjqkSWxTiI5sX
WxwJWygnBHxEu+Xl+vLH4XnnrFY7zPMYqkhr601/X8fvrOp9Tt5ndO92OKdv
m2Ot+xtbD2jeqnKd6sZJLQof2dqiL7181S9TGw7PqZ+zdOePw8v73zhZW4/k
72vN5ccb+xp2fY9YEfPlt//YZtXs922FrYU2+svlixPXve/9d8VHyP0PA23o
bEOqc+jbhuyYHopJjoqKiopK+sZ0HYm83hkfBT4PSn3t6DvkAwqNqXBQUkt2
XMsUbaQMoLk+8/zN48R+BB/JnlR7zHj1YOH4aPngu9p8FNoHbCQ+kl1J/mr8
hjzcivUKzQnnzUfvQ9461Gdt2KZzo774qInIkYKqfLcsdr3tXLGPe9rmI+f4
sJe9et1fru3nP++5a7t1a2m4eeOvw+fPxj5sPh+Nj/HU2eNhI/Ke6L91vaLv
KjYUpPPMm/83za1mFcrhpvwNXbWhrUlbx3aJHc3mtitiJD+XA99VzTwxVJMa
EW1EDj7GV3wxyAdI3u6Mj2yepqt3JtY8Y82jqKioqALJTpTWSYKPkPzsyvgo
+3y0ne+2xvnq7Po5c3nxEa/hoqtH37r+3PLRo+dJXKl87JI4pPrjDXxELdiX
z7upbVFVxHonY+7AcQq2HrFRV3zkS20HJ/l8FFJT/7oyX8Gq25F/3SyvSxP1
yUdNJd+6eednQB8CH3FceTnQ1IfxX4KLquZEaaLfR9cVuxEi7ghOqnb8Yz6S
zyqytbeL5PNRUTs1zcPBb1k3m+aK0yE562w9otbt+GbMKXV/K1+7Mray/KXc
DeImxqvl/cFw9WC2dlXVl137aWc0bntjdcpHE+/59Q/nPQeJioqKWlAVMlCo
f5VsXTnDRxr/snF4NIdXnjc4ifgjctrBR4zvzEHsnF58hJb3qo81ypNEzrrQ
uiT7ku3K5s3rQ4xX4iMbQ1TVz64qHyFtn7mRtm/bk7VlPQ/xkc354H9WNYaq
aluKj/zc3j+/vDPTOUWZPlY+apOPTuqzXlKX16qIj9Dffz8ZPnx25NSnjx18
hE9dVS6SVG/OqiofKcaoT3tyHhtp/+KjrhiJ/ZAfweejqrkfsCP97eblWtda
tZPFR321ZeH9k/qsw0d23J7IM7sA84yoqKio90421sjzTS7M/Wns92wD+1Oo
/xaLMH5jOxIfaUwn17flKcYn/OvYR50xZ3+32KfOxjvpmMrqzDYZq+yYpXqo
deKP6rDR9Hg9yDhJvAMfsf6tPFWaLzCPsvzD87e/TcYx1bF5lTNSEkv16vX0
fbJoORs+RD7ifrSsjOCDujzTZZx8F9zR17WaFR9hM2rCR6H/YJ0aCPjqHfSY
37OIP7F5vHhx16nO9cu7DsRP4Zsdupfr8NHq2tLw4O7NRuc7q/pjof2ShwEp
1ijmpIuKiorqUIaHKq07iY9G/TD5vZE/PmEv2jy9nrERwo6zcvT9xLjux5iq
vnkdPiKXN4wU+oy5jj+X2DhpvnaKLyDnYn1uxETvzD6pywfvkEchNJ8JcVNT
PtJ+LR/Z7V9c/TTLQa54L98+5OfD84+Nz8W6XXJd5KNyNal9xHq6vT/FwVxH
5zMW8CeqYkMa5zzr/7zLjqeva/XOe96XXQw2unTuk1rHxbGE/oNFvrW+qJOj
PNBdX8cHTxJ7Sh4fqa/kuWxYVe65vGsAH1WpF1sk2sDy0aztoE21dvuOU8ZD
Gr8jH0VFRUW1l7UVXT+o1rca2xK2Iz8/g8a0ncFlN3arXiyCL06ebmTjOv53
k+Pno+D2ivT6xVEuH4V8Udr41zG2w37++zAREjexXl/ER0v3vp96D07gd7CN
as/WObY8fjl3+Z8r2YHEKXlr035bKvapLR9p3xx/3XPuWl3PuTvJj/zq2OUd
abMN7qv7T4r9mT4kPuI+4nyTWKmBY8KDRweZTcj3xZpHLSTijurUEMrjo7r/
mSI+or0UzyQpD0SVbT96Wh5bBj/BNeSirmI747shXz3E+6iIkar8B2kHakNR
K0k5K8hx1/U15zi7jFNyfMSYbOp1REVFRUX1oCp8JL+81LdOPPPOk/hIgo9g
I7SexqPg+1Y13jtP8NHu9rRNSIzRJR+hEB/5Yj6BDemXX/cm7EU8wkYX95ad
Lt39obW/jI4JhWKd6vIRx5600TjHuES8kM9Hrcf49F6QbavrOUkdLSof4Yt1
tL/SeBtV+GieevMb8+Zq9ZUk7A+cl+wRlqfq8tE8BB+9e1s+V1Y8j/LWtO0r
bP64EB+hUP/QxTmzP8tHoXhRn4tDfNSHT9ur10dZ7grikfrgI6Tzb7udu8fG
VpT6c8x9/hAVFRX1kSuz46f571YPHma5fbJxeDTXHY+vZx0TEfdj44GISWrD
R8eHt5zWVrUWO55v+L58TfiodY6t1H4ke5H4SO+hkK+d7+9WRdaHrgkfVWEd
+Ij2s3OoUH6HuloUPuozbr3NvfT769PhyeHNmdT5lX9Rd3Vfkkfiz5zeHLbO
CcfvbUydL9YK4Ab2xT11/B9bjo9u/vu/Ow57/PzEadbX0Wp15XwlPoKN/Pn0
dfM/Zx2mzn6pK1tktwnxURc+sMqDrVzYh/vV8nzPOk6O3z/5jwNXH+n+o71O
rrWV8+c7GLjzgvvwSUR1t0M+bzcem/XKec8LoqKioj5mJTUV9sYavf7yuz9P
rEW+eX3faetIPl9nXdwOn8FEsBKPqI7vfEjbdy46+XyU52/WVf465l++f6Ad
m5nDIbFQXq6G0PtN2iTERsv3yvmI31WZY8nOw6M/h2rblrJ7dT0XqatFjD9C
RXzEPfZk8NP0+z36jNXN/YxfEbV9EDaftnzkfA5rxmS9S9tKx29jsOrmLmtz
7KcPtofbNy+4mkdV6teG+AjmIw+oaiXU2X/ZGgDMptzhXfKRL9ioag47neMs
/CDZB/F72GdsDdkutw8fkVcCkRv8m63B1PpimT5bGdcgLMynFBUVFRU1G5n8
DFq7go++/OL/Gn7yL/9HJthoaesrJ+w76PLlz4dnzvwXx0ddjTewEf512kf2
foCPmub3Ztz69dW97DV8ID5iPsGcz2ca5mK8r1ikKjYcWAVfoCbtEOSju3+u
ZD8qs1eFjhP/pS59bxZBfdmPurI5wEjMrRGstLV6brh94/xw/fpZ91g3F1pT
vY98FNzOm3Gdz1m0Gxx7+eLnzl9S90WTe0N8FLoueb/Rfqrc46yXWBtV1/5s
6j+rrkfIzlanBmxTiY94hN9oL9WQ6HIfCD7Sa55/uz2odH7EumZ8ZMbhuc8N
oqKioj5m0R8rl8Po8ezqqhM5Eh6fbLv6rGKkzz75Px03ff2n/9tJfMR7lqds
3088Eds5urfqahpVHXOoDWtfWz46TGMRfHtPm/HdzvGqzPdevvp3pxCzwSeq
B9WUj0LcU4WPlNeszrbFR47nfu3GB4VjqBLb1acWnY8QbICe/5y0+8tf7rrX
jx5stc7jUDZff2ce6/g92Tkf9/gvLe+ZrvloVtfT56NZStegCpPYuM1Ldy9k
9bpV86fO+YfuKfHR7Y0fncq3Ee5fu2Yl+byJmcVH5ERnPYK8Fn3EPomPzm6X
/684tq2j+5P+dBqT5z03iIqKivrYZfriT2+cZuOU+Mgfu2AjuAhd+OFfHCch
a28STyGei49kd+J3587+k9uGP2awtveTN87CQth8EOtteq/OXKLy+NaCjxQ3
1NbPMC/2qAof5W0TBmK9P/S7rmwVqhk7Cz4qu66aOy5yjl+xURkfVZ3H4bvV
lHWaiP/iq9enjX6r43z14qBxDR/5tLU5D+aolhWr/Obapa8cGz2vEfePHSMv
d1sdWbtLlTUA8RH/fWxV2P+a1Mzy88q5eqbH55xtinoPThX4qMl5+u834WDV
0xUfba7/0KkdyaoqH1Hv6NO1Y6eJ8TjyUVRUVNT85fXFTeYaMA9+cdTne/L4
30ZzvMTH3PKSbE8wEWwkPpL9CZbivf+/vXd9jtva7jb/8pmqqXqTqnkzc+ZL
Ujk5sc8rW5ajq2PLpHyoiyNRJM2rIlKkLFKkQlKkSpYljSXLHpUrVT397O4F
LuzeADbQQKObXB9+xWZfgA00GtgP1lq/NXvr3wb4SEv4aJQK1fSIZ67k9DMP
aYqPYnPrkPY2kzHyOI+P6qoXgo9kmT/s1zdXCinrOJV5FTUh/F/3PeJR9VYl
LsH8l9/C/s5C9NiKfOP0OvO2pa77+Vnz3Kcves/DhEV8xPvYLn85smzYo4xf
nlaIj/Jib/Swot8RjFTmvoLwUQwj8TuV367veaP3Z6zHB/cqhI+EkfL2dWjb
/c9wTtR+lSyf8XwsWUNVdDyHxjd8n6SDRvlIfPPzzlFsQ9ITlmuv7vHe9pzA
ZDKZzrp0v6T+c/jXNXHNEAkfzUz/tXPnzsWEjTQf/VKil8goxFwgFFcS33Hh
I5nT6DrrmD40/nMDfBThzaBjSOSw6L4nHz/uJfl/ek5TNx/JuPdf/eDU1vcF
V+h761VrQ0IqW3tdVR9/feZiK8zH8QNfmv3a1SVJzRLcxPxcHjM3XZz9yn2m
aPwxx+Y48RHSHNOkdF+D0Gt4MuDnTXy9zHLxSUDEWWLfu3YwyD8yLjikCQ/E
rO/dj9lwTlzev+EkdYt7T+ZSzOHvw7q+v2H5CM3du+IYqenjyd9u/BwuLh92
rizvOiXX3r6HbOtzApPJZDL1FLhfhQfPKK4bSNhIcvnGUfBOFh8xT8jzjCvL
RyFv7zLxI+Ej/znhI1mHfr2u/SR1YuTXxfahbELk1jXBRzLXH8U8XatOPgpt
U+h56Q9aZR/pubTkwPnLIhfQ3Ufv8hHbF1OrMcr9rrlOxjYMH2mWKMo9hY2I
cRDryfK0c55xXR5BdW932e2Scwhj2n180tvL/91lxYPKfq8xvWSLt/Ogc//O
5c7W+h2nuo8fzsHuuvF7Ov8UPkKpPkcSOzI+MplMpvGReNip50bBR3LdkLhR
0+ur55pX7v3M6cirKTPPHMa7rkiSa9cUHyHNR5LPw/9le18Oo7y69VH4ZjUl
zei/vHriuOhob9n971hpYao7R113Maf0Z7N/z+I37c9lmXty7P73x3LHPe9d
3nue+j/v869ebHb2Hs+1vm+ztkX/T84mdUdV66Xevtt27PM2wreliI/wF0DH
B+3chxA/z3v9+zHuu/T4qOp+PtkH+Z8p6y/hi32HiCXVnWt3wke98z/j5LeG
zi/unPBR9/prbGQymUxjqAy/nLr70v+k6gMOd5fc9Z97/OJ9x1/qmNq41sde
w0dx/3oUfIR07VSd489b/6h6xmbVrcv3N+58lDW+whjLm+78e/17VxvD/8Q4
kIs7daX7isFQ5PDxeHNj1s39pWaLGj96sPq9evIkeYCyfJZNbAuWQIPM1hM8
9+xJXO+cNsWxs7W17PZV1WXEcFGsYCNY5M2Ic5HJ+dO/6WVVZyjndP3+UD5n
KO/OP78WebXH9JuKEXzkPBTX7wxdk+Rvl9yLYZwP/+vQyXkxCAv1c9vNz9tk
MpnGU5/cWkn9//zVkVNT11j4SMT/5NaJt11TNbOjUB3zbsmv03VCwkchdiqr
prZdj1c8xtvio6z40aTzUYx+63II3g7k2xkf1SeOHfLqbs+cH7rnU10aJR/J
bwc+EkYK1Uf5v73QsZx1n6nM/ae6+Mgtq89HeNsRH+TvMPtIS7zU2Q/wkVxj
XW92ixuZTCbTWMvnI3y+b22WmwPonqt5+vD2aWenO1/SPkfCR5cv/T+JNzge
4DsV81ia0DBzVvzsYnvZUpsg/WiFhzQfif5jtzwrNbFtIr0etiG0/t8/jqbn
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
azfd+oWPpqY+Se5bkU+3+3g2tQz46H3fax8PO6k7cv1hzePbZDKZRi6fjb5Z
v9e5sraaYqORxY+ETRQjse5eDVI1Trr2oEJ/vYjr0bjPT/17wpLbw5xQ+Ajx
/9bDO46RxsP3KVuwkfARf9seT57GtT6tbeUxkvSNbXL9T1/05qAwCPLHho4P
152PXeg7hIH4/RB/Jb+uLB9p1hI2Wl0ij+2k9oblMDb5jcbk1FXZ58S5fH+1
EB/hd/DqOJz3VuTvmMU6q0tTnbl7Vzr3Zr/sfH//ouKjG7Xl87GsLK4Tjtl7
PO+2j1iTiG3VfJTFafqxriuae/RN59tb3XPV/U9P1OUjYSRiW3pcOiYsfJTy
+I7M+TaZTCZTffL5CDby+WikY4KNAtcD59VQgY++356pNo4CRhrn/LqQNB/J
fUyElwN+wvSGhZPaHmeRLn75Jyfy7FCdsa+2mGZScuVi5HrCjgEbZuXUMZdf
3nve74l76HgM4Q2w/vxOj026DAUfbW6fHFu6D7MW+XTJuWbnquMZfldl+Ahf
cdTUvvgYyLXVXuS+fH884aMsRkrt998P3DaFYkGjPgYYL7EaHXdyLPPgdoqP
4OHjgzUn+IjtJb5D3Azu0VyUtz7NR8F8hmv/4r7zLD6ip/nOcS/HTvNRwkhj
MF8wmUymsyI/rw42mnn8bXt8hGAkUf+5Ey+7cnEk+OjbjUfl40injI/kvjxz
N+kxyVxO4kyTwkciiSPVmWs3DvP6JiU+Ak2uY1L56Pj1vosFyfuOXuy4eb74
oGXl0kp+ms67I5b0h1pf1jEGWy3NTw3NR+k6q/7j3w+cYCOR/kzReVO/V2Iq
MXy0+P1VxwG1fIcV+x2LQuNln/B9Css83nvc46M+I5VbR/gY455TaJ/CVxxT
1B/5n7m/fajO0Uedc+r64/go0P/CZDKZTM3J5yPNRq3xEcrgEzjp9nb4/lyR
bm4tlxtDzj27uz8ejsU8sKrIrdF8xJyK67fUQIy7NB+hSWK70yrmdcRe2v5d
cExL39aQGB+ecttH24mq8BEcpOt3yIMTn7KY3kvk6M2tXE95M8SK3+rD5Ruu
zkXHN/gd8BwiTnLn5nkXQ0HyWb9vqRY1QeLLJ5K8sxh+4H3M/0fpjVCVo+g5
NFz/52zfjyLm9KX5iPFcmN9xctcb716hyWQymZpVyJvh0sr6+PBRINduWD4q
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
n1GDRF4P19m67zOOUseH6yk+yvNyGHcZHzUn7fvmx3dGwdOsr0oOXZ78eSk1
O8Qe8+KPOgY0zLqL5sZFgoPwn6PmMMRH8vfB1t8697vcx2Py3ZBjoAV1btOC
gwJ8dE6enz3xDUg9lxUj6tfOJKwTiCENnGv7fKQ/m7BTf4zwCzwWijVyHhOP
7d6x0/Ni4H0pPpJ1sr7vH6XZo78tdfGR+CyG+kadHI8HA17lKS+7ecuzM5lM
JlOOMrx8yuXZpWuONB8NLDtwPSd+BB9VrX0YFwkf3Vj5rLCf4SQIHzvrhVS/
JCeMeXdWf9Am1TQf4YFY5FlXFxvpfVaGj2Td1DxyDto+2nYeMfqchIithPhI
8t40D7kcuIWDAU5yc3L56/PR/OD7/ThRZt5cmbm9Zqt+/CQ593f/x9sBEU/S
+0n4SPshDMSM9LaoZabG238uth946Lig/nPn5Xyqr632KWecT4+Xk/ezLr0c
+Eh8K2TMlmdnMplMpqAyPO24zn+/PRPNSLCR9mRwfnZP5sLr856Tudqk8xG+
dcwLl/anJzp2JLJesc0oj49GIeaUbfJR3b2RNVuW3Y/wETGj6fXDzHOk5L29
fbfduf7dZcdGIT5KnePy4jr+e9QyUvzTVK8exUeaXVzO3WIvV5Dvx+/ZJd9b
Ugelx97nOb28FB+pWFLVeiT4iL8SuyOO1PPPOejcevJNwkc8Zvm6T5TEkhI+
6nNcEktr+zpsMplMpvFUII4k/Yxi+Uh6IBWuS13z9VyNucqVMeyFFCNq0ZHr
AfnT0kh6JjYt8WhoexynXXgiorJeA3XlpQ0rv4cO9wXWFqacXwny3183Hw2z
XUV8hO82uWf4LFyfW0nlwkm8KJVfJtJzbpVzFlTgtZH06dE80z8vsz0SQxK+
EH86iRslfOTXNmWMV7ZRx5ZC9V2xYlw6dsRvh2vQzOMpx0aaj+Qz2mcH/tN8
ZDEkk8lkOoPye8Jm3Y/MuFcZy0ezu7cSnwZdd4yCHnb9dfnzpOn1evholPfk
3f3yhetJvUUMHzU5P6xDwkbGR4Nq8riqe9l5v4M663/84xk+enW87qSfl5hZ
3fvNj3WUVR4fza/94HLPzilfhZkfFjv/dmfRPef85fxzXPd86uJL/cdJTc6Y
xSpS9UgeH02pmtLknK5rnlT+X9E1yOcjiSNVZSTNR7AP1x5hIzgJjstaNsdr
0jNWezVY31iTyWQ6G5JrmfI7ys3b8O4Bir9CGa8GcvJSvkzze53PF7cH5w/9
a7GfZ1FH/Ijr5ijzlX57f5DiIzcPfDd439wf46jGV0X7OwtOk55jN+k5jsNq
FHyEdG0/y6OnKX6OKPkufj+prc9bTtT36sWgqvKRrl1iPs34EHEl/nJ+CvHR
u+5vnnrDc99vnHCQJ15LnVdj8u5GLX1N6MfG8LWjXxJ8JIzk+0wE/cML5Ofy
CaPE1iRlHzPPkviRXIcY9+Hr7N8+dWV+jM/4yGQymU6/knt9WdevrDhSxvN3
d6aj+QieQm4uIXw0v5deZndM15c3k+sVXl7i0bA85PWy6fydgetzd64ES5SZ
k407HyHxZ4CRiJGNar23Z847TV3/16H7L8XyEV4a41ozJuNq0u9Djseqx2WI
j4SR9Dqy7n/oeqzYdemxkqNbduw9r4H8c43L/z3a7Ezdu5/k1cFDRXzE+4gv
8TiJnYzr/Ltf95TlE+HyCBUfJfVEJWujBvLwZk/4qGocCeEXijQfEUda2ptx
fIv8YwM+Snrs9scxjvE9k8lkMtWnJH6jrse3Ng87l1fTPqzBzwc8v6ktiuUj
3fdI/OuCfNRf14WF3rwbPtKvURMwCQyBXr/YdN4MMe9lHidqe9yF89AuEyEY
qWk+etXdhzDRhfP/M8VlSJ777NzfJ68x9y5aJnUJawcz7m/b+3ISFBPfyRPz
UI7rH58+6izNTzl9/LVX90E8Ru6BBI+1EnwUUlY9Sx43+XzEuhknOn6zntSD
sV3cA1ndXHV6vPfY1bDw1+XYSZxIn4P7sSYep9hjDK4PA9Js4OcZ6Pd5XnpV
vSN87zz2k/7+qpz3yWkO8RGP+Rs63hB8RGxQb1/r34fJZDKZmpN3fUvxke/J
6stjJPhIYkJl8uzk87DRl8uPE0ZieW4sfT6ChbS3rmhS+IjcOr/OIkvCRsPG
yPS8sIl6DjeH6LORqKnYimYhHl+98o9OvDZ/7+oAH0lsgtcuXfyTizPpOMU4
Su5j63zSYfPamugVdvw6/HzRWOW3ypguTn/XOf75wAkmgrn4y3Ef6gXNZ45e
9WqAytw3mJpf7Tz/eXdgnDo+K32mssase+XKnNnnI8bv+r8+2nW6cm/VibhR
4mHnnbtcPp7io7GPTWjP74z+s7XmCOo87+5f6afLvYwqsUy8GPjOQtci+Cjl
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
nOTOxfN7Lt+ujHdDLB8h6VlUt1dDkzEkRMxkErmgTuEFN0k+cL6mrv+rY6RJ
7Gt1Y2nNsRC9i4gTIWJGAz1e76w7GReZJkl+XylhAfoRIVilyn0H4kfPXvZi
QWU/K3z0H0+OhvKykzy4T26uOJWJ8QgvaTYSiX/FwOf613erSzKZTKYKKvDk
KfL//uo/F5LHWV5CWcKHG06KGmcJPmrS/03y7M4qI3389Vln7s5lF7doeyxV
xXfXJh9VOT65741PHbEi5o3afyE5/nWP17bPKyZTVXl9kPCykz6vEv8p+xsS
PiqKH2nfHr9vteYj7SEXsz2OjcRHISOnLk9Z+XaXV9N8pHPlnbR3v9UlmUwm
U7xK8BF9XpGOKcFHT17MOZWd8wkfRcWQIs7v4vHQVH6d6Ozy0aHTaeAj8fq+
fu3PTqNcPzVEZT9jfGQ6M1K9WF2stMtHIn4LVTxg4B7hqxAjSf8jzUdPXtx3
9/zkvt/vv+338uwYo2Ke3G3RfW/7KstHmfVGfV1b6+0b+f/yqhdP0mMoWE+U
J4TJZDKdFemec95r5NldWVvtstDVzlcPF5x/g/DRja1p99zD57cqzxXp21Jq
rJH3wOpgpKw8jt2tWRdHanueP3r1+Oj29Oed1xPMRyI8JmAkdHvm/MjWCx8V
+cszB6R/8XR33kPNESKnTphI59M5mXeV6RRJ59i5OFKXS4bhI5TFRsSWqG9C
cAjveftuO+Gjd+9P8iLuPj5IeZxE8VHBtuZxycP/6vV8ch4ROZ/ndTgJCR8l
ywzwkbzuq+3v3WQymcZSOedyuEj4CBFXgpscHx3eLvRaDYl8BxRdg4RK8NGw
3sr0vgheZ7tsRA1O2/P7UQsfb3R35sJEx4+0qKNCeNqNipHgbmKnee8hVsRc
bXplK6kzmr49k/am83tGtn3+MJnqkuSFKU+EpmpL4aOra0fJuvHL2/vpqYsX
Ic1H3NfQfkFFtT1Fr2s24b6J9MAVCR/xOvyWtQypRcIDnWsqf3XOnat36vtd
GAuZTCZTSeXE4WEi/5yKfwOcVJWPRKX4qEQPc5YrPZGIU5WNKenegqm5a5cN
zmovJPz7EP1y2x5LHRI2GiUfxUgYSseMLt/f6B3bzB37/gvOg8H8F0ynTbrX
kMq1w6Mh6/dS5TdGjzKk+Yg4lfTrQ4c/ryXXN/jowvyOk3t/Qd5aiI9C3nQs
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
ff3gvtPtrd55TPeK1ee4l283kt8q90a+XNpK8VGyrtA4hC/KjE8tT5hI9yzK
iwnx+jB8JOtkGbKvgvExPU47P5kiFOIjYyXTmVFOTSqi9iiWjUSrh8dOfFaW
U2ctEmyEjl/XP98NvtblCMm3i1kWcYzXLx45jZo7fPl85PrJq3y/rQe3nar0
jqoqmK7HjodOdfIRgmMlpoZPg3g1SG1SnceL8ZHJVJ/8vkiaR8izQ/AR8SPi
SFnxI81H7z8cOD5CqTzyrOue8FHoN+zVFyXc030Ob3AkHEQ8h/Xf3z508pcl
n53b6flR4NtXZZ8V8RdK1SfVUCNlOhsq4iNjJdOpVU7dkaiMd52W5Nk1Mu6+
nwRju7X1PJmryjqrjJf63cy5cJcnYvsjkatGzVEd3tl16Zf3O6n5ghbbRZys
bt++PPl8VPfy8QZ/1fecEO/2qnzEsYU+/NqT/zq9idHlpd2kBqnonoPJZMpQ
oAYolSvW/Z/7EEV8xDkPybld1x4N+EEElOVXl+TX9XPsEiYJjFv4CNHTqap/
XUw9EuvKeg+vpeqT5vt1VLF+fEjeax4PZ0pl+MhYyXSqJNeI5FzfqzXS72mF
j4rOwf0cO5H0y6jKRoVz5D4fxdTqjCMfZYnaKGJHbfBRlTqjWIX4iH5ICE7C
r6FMvqTvM6xFHJPaIzR9eyY5Jq0GyWSqSfyeJF+sP0//am2h0J+BHGJ+o8JH
A7GjPDYI+NX5nOaPMXlPf7nEdeQ8AR8Nkz8Xo8ur6eX7vJTk3/nbF+tZ3q9d
snPb2VFVPjJeMk28vPO88JHWo8Pq81TY6spqc9cEzUcI3zx6XfzRwJwbRmKe
zdweUecSeh/1NKPijGElfNTGuokfNcFkxHpYNowKI338dd9J6p3w+5aaJERf
2aW5ryv7kh8frru4ESLPbqBPrN1vNZmGU/935Piofz+PPDvxasiKIy3v3+is
7s86briyvOsUzUcixQQx/m+aHciZQ5yT8NITPhqmD1IZhdaTPCfbLvdyss5T
molk271+VabTq7r4yFjJNFHK6XeEpK50GD7is6PYFpdv8Z93O3O7tx2PLXev
SaiJeT11/yiLj/CTe5/hNzdugk/a8q4j1w1fCNmfdS8f3tneuJt4QFCrxjHx
9EXvdemNBCNJbIn/qVvK8wP0ZXxkMo1IKt+B+BGCjfiL97fPR/g5OHW5SGqX
pP9R6bl93u9Y9Q/UfEQ+2299j/Gf3pzk2I2Kj0Ia8A9n3Fm9nbI46J46x7V9
TJgaVRN8ZKxkGntF8BF8Mwwf4evgL7PU+EpsD3GkC/PbnQsLewkfhepFhhVz
+fl7V53E00Dn0t2e/rxze+Z8a8xTRvSFbTLPLffYqJmPpE7If178+eCYWD7K
Wn7oeXLvpuZXnf4a6hNrPg0mUz0K8BEcJLVI+DbMPJ5y+m5rIeEj6VGWXFMq
9CkqGlcSX1HXLc1H6OhVT3g1lGWkurmKXLukHknzkb7uKjZi3cTC9BiMj06/
muYj4yXTWKqgn/b0+uHQMRj4yK9nakqaj1gn82CZC9clerZS20LulghOksfE
KSaJj4gfFfmDNy2J7wwbc8vjI9gIza38EPRiZB9c/PJPCSuJ5x3Pw0vk6YX8
/WR9Pz595OSOQfFosBwUk6k2MS+XGqRz3fk8unJvNcVH1BiJxM9bPL0TX++6
2Shnmfgi+OckYkjEklK1QCX2QV2M1Lv/GeCdkB9Ff93HH3ZTYzA+Ov0aNR8Z
K5laV8G8Db64v/3cecMNO/+FsWS5Tdenyti1dwM1Se/UPbxhJBwkNS3EjehB
pPmoV39UvydbExoHPtrfWVQ9mOrfbyzXMWtX+K7DOdQn8Vg8Gn5+2fNyIKal
40ni5+A/J7EmcvjorbJ9tO00PTc/6GFnfGQyFSqvd6pooKfPbC9vTrOQ6NJq
7/mEjcrWHcVI911Vz3OdIzZD/yP/fgxMwnO8Nuz+Gubzmo+SZel9IzVfHh8l
4zYPmjOhNvnIeMnUigrmbMSOqOPhbx1zVBhJ6plKjdPz1Qv56+UJNtJ8lNfj
qEjUG8FAko8GGwkfCSNVrfFvU3BC22OAKZviIy2+H9YFIxGvIr8Q+Z4acBIi
duS88JT/nfGRyVSfQhwUfK/U94QYyWMj4SPfnxVl+XZXVuA3Lny0c/zceedp
zyCuQXXwkd53VT6ne9fqbUk8MGS/9bdN3puM285tZ0JtM5GxkmnkKogdIeEj
6o+G4QoEH7G8g5+OnKqMOeStlyX/s+TdwUnDxMOYT2s+Og0idrS2ONX6OCTu
Vmf/1rx1VeEjaqSkZknHlcjb0354n37xD51P76z3ZF64JtNw0r4HMif32abP
O/j0CB9Jz9YBX+q65/UBBoONHuw/T/iIax6PuY5Sw0N+Hbl3aNj11+71oOJG
CSvlbXfbx4epUbXNQcZLppErgo80J9WRZ8dyyNlDTeTZFTET105qk1h/7JiF
C5lLCx+1zRJ1iDoqyQkch5iX8FFbY8FzsOxnqFfyY0qw0aWpy71j0uJHJtPw
0j5C4hPn+0L2+Uj86Vw+nf7tNVFzpMbnOMIbF9c4WEjuCQof8VdiMXXxUSN+
eLLfNYt6rGn3fk6/2uYeYyXTyFWQXyBMoTlm2DkoXgmyzGg+qtEfuSof6d6g
UrPSNk8Mq3Hjo5eHD512t2bdeN682x7puHq5feU/R0zJ9Zv97p+cqBW/sfBd
75gzfwaTaTjpuFH/ORiIc7mLFd07yaE79/1G2r9bx0Hy+vvUNM5krIH1SK6d
8BHeDIiefXXcKxQ+GpaTCllLx+/Ml/NMqG3WMV4ytaKCOlW/t+uwXnbCR21u
s/Ns6MfEYnokcd/v2cveY+mLs7l2s3WeGFZwUdk+P00KFlpbuF4rH5HXIt9d
karEj9zxYXxkMtUuOOOTmyu9uAx5c7PbSf8i4SOXQ9dlISfm9XCRN28P+bE1
KvFqCKxTanfk/iB8RO0iXt+la3N1r9z+c03FkRhfsj91bdIYHCem5tU22xgv
mVpRST7i/A1PkGtXJd+ucq/YmntswkiXl3bdthWNmZpa+lW4+fZPj08NH/3y
6kni5RbyrR61hI/Q7PKVzszGBccaawczncOf15zKLvPV2yPXEzbmvVX5SMZ+
9+k1p1tPLneuzK6c/L5sLmE6y8rKh/MVqBOCj1yuXD9WhPBcoJ+R+NUJH6W4
SB5LPGfUcQ4Vswr52kleHRI+KlWLJHExfCq87auTj4h5oYSPzK/uTKptljFe
MrUmXVsauH5Jnh08JB50VWuRKucRNJAXIXy0enjslDduzUdbD247tc0Tw4r4
0dLs1529x3NObY9HCz+E69f+3Lk++4ljJFFZRhoVHzEuGeN3a5ccf3OM1e6T
ZTJNkDQj5NWrJPlzul6v/5vRfAQbTa1td64s77p5+wAbEbvpe9vl+gqMUl7d
k/bou/u4128V/hBGilmezjmUcwwseeL1Wm6Mhb6BIpZf5XwW8K8wTY7aZhdj
JVOr0vWvORI+gpeYe6Iy88i2c+u04CM4LyaGJBJvaISfd9scESu8ZKmhkjoq
F+8YYz4SXqE/q8SR0OKzZnz2JG5FbJC6rDLHw5MXc525vW+SMSaxo0BPFJPp
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
tYDXrD9DUP8/samZyA==
           "], {{0, 442}, {840, 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
           Association[
            "Exif" -> {
              "Software" -> 
               "Created with the Wolfram Language : www.wolfram.com"}, 
             "GeoMetaInformation" -> {
              "Software" -> 
               "Created with the Wolfram Language : www.wolfram.com", 
               "TileSources" -> 
               "Wolfram Knowledgebase with data from OpenStreetMap"}]], 
          Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {840, 442}, PlotRange -> {{0, 840}, {0, 442}}], 
        TraditionalForm]], PolygonBox[CompressedData["
1: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
8GxnSTbinl/9nlwSYcuovpt+lWehtbXhH3ejRFhtG3anJRoxsbl66YAEEY6u
uG96OfERgsvQ9cJ7Ipw4x8tY8V4GGnkMsOv7SPq+huOr1qenYVdS4paEPOl+
tv2a7pSVip/kb2/LeirC72eDL1gW3MfkitM7jUUifFl8caZySQqqV15xnlUr
wsyqr3nJwjt4xuSTx8UmEZqWXW1flXQbDT/tO7XthQiHOr9WV0iLxwMLG2/d
fCPCDWNFO4NyY3D20utlq1pEGJsov+B16XXcnK8qt+cfEXrreqhMS47EID3L
+V2tIjRcfX+XZV4ITvpoeKL9XxFquvQKv5F8Gi1+BL2y/yTCpV/a9HOSvXEw
PDLX/yxCi3FTOs3XJukreYws8JM+63/t1oHTI2g9cOsP0e8D9/vf6f3Avb+Q
9gfc/txp/8Dtfxl9H3Df50/fD9z3P6XzAe582uj8gDs/1XPd5wtJ7Hxz6PyB
O/9tdD/Qwe5nNt0fcPc3l+4XuPt9TfcP3P3/S/UBXH3oUv3AY1Y/IqovGMDq
y5bqDzRZ/cVRfQJXn2ZUv8DVryfVN3D1XUX1D1z9p1N/wAzWHw7UP3CV9Y8p
9RcA668A6j/g+k+Z+hO4/lSk/oU21r8fqL9hEuvvCOp/uMn6fzv5A3D+EEj+
AWHMP+aTvwDnLy/Jf4DznxjyJ/Bn/hRI/gXtzL+qyd9Amfnbn+R/wPlfKPkj
ZDN/DCL/hC7mn7+Tv4Ie89dG8l+YzfzXnPwZUpg/jyb/hiPMv0eSv0M48/e/
yf/BkPl/C80H2MHmQ3+X7vkBm9n8cKD5Aq/ZfEmi+QP92fyJpPkE8Ww+qdD8
gvlsfrH5Btx8G0HzD8ay+feM5iNw8/EGzU/IZPNTTPMVAth8raX5C9/Y/O2k
+Qw92Xwuo/kNQja/2XwHbr7/TfMfLrD5/5L4AMYwPogkfoCtjB9MiC/gX8YX
U4k/YCHjj6nEJ8DxSTPxC7QxfrEkvoEtjG9ciX+A4x9V4iMoYXw0mfgJPBg/
KRNfQRXjqxLiLzBj/MX4DJwZn40ifoMjjN+qie9Ah/HdDuI/MGP8F0F8CBwf
9tTu5kcIYPx4g/gSXBlfziL+BHvGn2uJT4HjU8avEMv49RTxLaxkfPuZ+BeU
Gf+6ER/DPsbHJ4mfIZjxsy7xNRTZEV9vIP6Gua+IvzcQn4My4/N1xO+wnvE7
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
PsBYlg9yKT/w5/N/iyT40g==
       "],
       VertexTextureCoordinates->CompressedData["
1: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
q3j9/wPXrfQB
        "]]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{0.29127020300525375`, -0.12292005725311031`}, {
         0.48545033834208945`, -0.12292005725311031`}, {
         0.48545033834208945`, -0.22527063821047172`}, {
         0.29127020300525375`, -0.22527063821047172`}, {
         0.29127020300525375`, -0.12292005725311031`}}]},
       "\"Wolfram Knowledgebase with data from OpenStreetMap\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Wolfram Knowledgebase with data from OpenStreetMap", 
       "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{
      {RGBColor[0.790588, 0.201176, 0.], PointSize[Large], Opacity[1], 
       EdgeForm[{Opacity[0.4], Thickness[Tiny]}], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {0.23510245272583072, -0.18508973117919475}], 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.24289909060773596, -0.17669116085455486}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.24728413473510105, -0.1736784438476177}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.23660499764157783, -0.17225562573103817}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.03375415173556624, -0.18865625682794288}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0338830128374333, -0.1816415702488661}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.22013318194542864, -0.16381610371439803}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.04814705576779465, -0.17832790940756021}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2260920553249733, -0.16077122570110589}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.043864530329410366, -0.1713571360278599}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.057124582447347146, -0.15414601135255912}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.22886419714191933, -0.1261360592966064}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.027961509086529328, -0.14227286383908122}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0023051414914445874, -0.14225732369043206}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2169472950239707, -0.12606679529846107}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.021491237166728, -0.138729269008618}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.030222572687815582, -0.13820370838381998}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0631780728115994, -0.1350402412320904}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.08590688455604205, -0.13385896348548523}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.01664636686518988, -0.1359539138218685}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04985243777391133, -0.129836083325367}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.06286455375892931, -0.1292447710199338}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.21544633714502617, -0.11466503361965968}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1707340715058234, -0.12023332262686857}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.05267147647490697, -0.12821997021767734}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.16239320943445132, -0.1128278755472223}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1722667411182774, -0.11064387752237677}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.10349964026878869, -0.11553445228329165}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.07088496167349313, -0.11685997688957162}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04835074018601057, -0.11398927794465126}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1209543953422631, -0.10798845559153515}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.060150646143823, -0.11147228449550148}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.19628188914968342, -0.09862470952676851}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.15124916041518907, -0.10188660242255781}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.043379905307300126, -0.10850259648991029}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.05275172154448999, -0.1058616276683165}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.18782209803058997, -0.09234432532362258}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.09555721200897202, -0.10049167898620028}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13149887366784196, -0.09758514990934897}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.09927103597882427, -0.09873636138120795}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14575259632718726, -0.09285028569991435}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.07681259037604778, -0.09787593272299051}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.07453861063096942, -0.09777644676201092}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.009714278345476227, -0.09953721859933021}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.07403447249617022, -0.09484683687627639}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.05937304679306449, -0.09317174748120965}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0056398833721516516, -0.0940066053916808}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.017167717447003506, -0.0938857719920113}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.014055092575079725, -0.09336455190821849}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.19342306743462367, -0.07881505413461552}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.01841916521590506, -0.09110732017003625}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.023966186926907773, -0.0904121628909687}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.07221516359957512, -0.08836093484995564}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.22487150637243283, -0.07151753491558126}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.06274667780453266, -0.08704326716002103}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.08568715935921355, -0.08450862761435146}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.07134925437049189, -0.08440640327220408}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13306324265544922, -0.07940842050281406}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.06530681350472776, -0.08334309124148526}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.035721801067767116, -0.0831769791340451}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20860761488207188, -0.06731013638654602}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.06288076293300746, -0.08056085362317775}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.006189246211164195, -0.08115586451226586}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1660783004489816, -0.07113163698357622}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.23043621196056774, -0.06155640447840556}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.24841477118155852, -0.057710544420770664}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.15589864726840227, -0.07105806119886067}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.09835663218803652, -0.07610441694690885}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.00806565906133192, -0.07858716069875624}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.10345879769361412, -0.07478907590915605}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2401089780149893, -0.05716121303167998}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.01705037757760458, -0.07757311320452694}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.21208351107149165, -0.061462793567472127}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.12985822750274892, -0.07142987360616296}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.029471239007901266, -0.07622245305586352}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.11908560835127342, -0.07078853583029243}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3031108278864617, -0.041768556580516404}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2199236773979127, -0.05751285393676591}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1735363784861728, -0.06338757010394909}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.020421449690503246, -0.07391841971737158}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.18396326463271545, -0.06155816268496843}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.16640345911425894, -0.06338804877269501}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2054044539414651, -0.057807956273246676}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.09041209222585958, -0.06905589765594503}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.06551362191836128, -0.06967270849963855}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.13913550592874724, -0.06239007098357548}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.026417256912317513, -0.06808275428490519}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2496610650353977, -0.04517880024507152}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1608145258341586, -0.057940111019301695}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.05022437545241092, -0.06490334305974119}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2097758094739843, -0.049897927867944884}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.15101629118241705, -0.05689160257757648}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20251629250869607, -0.050175611051884415}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14457213945145456, -0.056557906010317426}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2620888494246616, -0.038578100972311125}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.12509038036336648, -0.0578670363330602}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3124570227789136, -0.02737960115419026}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2469243239923647, -0.04062051581164875}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2509471586006547, -0.03944195509540467}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.11763383178791963, -0.05720241314881138}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.16589767194685984, -0.052167526832300005}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.15021421463443094, -0.053918045361145986}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04671874758768659, -0.06101632106687532}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.10278401666720703, -0.05714310283087191}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.006417232722715828, -0.06088712562340793}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.30911464509197817, -0.025060169426113752}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27107224863472607, -0.032592252678785474}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.047967960315609924, -0.057772814227096854}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.11479449986965688, -0.05185686151289467}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.05587291099832286, -0.05513646565132089}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.09218700992559901, -0.05217370320572988}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1968004661302577, -0.04088135126524462}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.09424318579511815, -0.04997408021854305}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.32026751495905603, -0.01162008214359218}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19903893487846147, -0.034187527870649645}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14163457739414834, -0.04061348781363058}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2504197068672009, -0.024351540369288997}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.13985437198267178, -0.037990522744786696}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2681162714255357, -0.0176657619209049}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.011206940869185552, -0.04422293317948332}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.23128366378371384, -0.024255031967056653}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.08756133017281738, -0.04082466568209259}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.023345248784636365, -0.04245416697244665}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.15737036416694786, -0.03140045578355629}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2947587278127714, -0.007795998025399124}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2269100539809791, -0.020906990564725166}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.22904931919863702, -0.019449458807037166}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.04309919768246662, -0.03807841162048907}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.15867882073958078, -0.028329534833790918}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2848275221333487, -0.0059257917119511}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.06794019214754675, -0.034606838293625854}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.10353793104207122, -0.03135545304167098}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.08911802311428253, -0.031673008209420636}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.037374407654101445, -0.03378122670589124}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.06470161628245122, -0.03233430811749731}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27974616454323775, -0.003846029122779786}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1420043633169208, -0.02500849535928692}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04155827956364258, -0.03065204974537117}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.10489129373381469, -0.026976828542991854}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27812287259470053, -0.0013386796962381131}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.00899712567481896, -0.03024975082940468}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.052959147660074535, -0.028210756942730498}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.26327234068818695, -0.002413831599174369}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.17493419501873197, -0.016941746932988347}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.23623258562091046, -0.005287536381283125}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2281042045088058, -0.006559021958083113}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04406816103085717, -0.02455927632405899}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.12816068766432784, -0.01901608359749061}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.041631544500061894, -0.023026261666858342}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.23199524212174982, -0.0025441556484088624}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3426258100034617, 0.022745421992252473}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.06000213248383899, -0.02070571659463766}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19973209040115225, -0.0066879450485134}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2648140905263876, 0.00504107615507784}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.03509143337212484, -0.021079656573299087}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.029453531105513603, -0.019790657810570322}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1137562043370012, -0.01513458632899367}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3151454260096381, 0.018719194977945504}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.03832099424795263, -0.018720640619370007}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.08207494474376242, -0.01652998014989576}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.18897377504111182, -0.004386146034179788}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0821110772605188, -0.015302941488188416}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.27590629523397014, 0.014183567845733608}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2886087888696495, 0.017175048622540295}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.02908650456900674, -0.01248630760523206}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27347323321850003, 0.01641846716939046}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1551371860873401, -0.002820503357392352}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.16205827942588516, -0.0018340238892067756}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.04360877379994075, -0.01015168822324948}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.010598842186623573, -0.01062029467000856}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.11687637607368229, -0.005255595391551283}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02519770664472669, -0.010024730073592844}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.23415215995416247, 0.014731059280065056}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2964790073736724, 0.028154455548129086}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.040730018507455175, -0.0033080787550725708}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.12260631174118275, 0.002809828840445728}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14402985593372578, 0.005612391894477499}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.003503788607970611, -0.0019537037956797562}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0026565408320348986, -0.000494626366897239}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.30679328306227693, 0.03704081269841558}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.17045510354281646, 0.011337842914192606}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.14113992470138162, 0.00901941784115442}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1878202964259688, 0.01599281413491925}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.17132778156161818, 0.016257623424799604}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2048670327078995, 0.0228615410696135}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3013929721856788, 0.04240436722406112}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3093501251089057, 0.04618817823441081}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.048778239931696395, 0.010012377109145914}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.31317487314691306, 0.048508564049902586}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.011422517193819951, 0.009902360056255182}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0875006128361319, 0.01303953752121089}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.18732289197439625, 0.02379246055702579}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.20844794521336654, 0.02744670750057467}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2611379911556246, 0.037417749021291226}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2244316041620037, 0.030407305236668007}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2092915769086983, 0.027833466414253487}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.11588867476281474, 0.016136181194914657}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.16203150303010153, 0.021332476358831398}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.07771635579284969, 0.01374141702554849}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.01203748417371018, 0.012255677249497122}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.20645876340283817, 0.029317496556871308}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.026790996536339786, 0.014187820889236922}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3518230040489797, 0.06398631023355968}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.11423483552724364, 0.020414691217195337}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.16839232947027574, 0.026484871725987104}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.11854414541641596, 0.021339074443439843}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.05711045936319098, 0.01899970258757265}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2683574098795246, 0.04809776723829284}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1772812383341853, 0.03180523248595022}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1632554240153996, 0.03020203902054252}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.005990291697256692, 0.020595344993726075}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.10164369630805048, 0.0252129793492683}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.08961093936473905, 0.024730673456405766}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0008708771374123092, 0.02188250537973188}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0632919447863728, 0.02522460155320105}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0984723100426533, 0.029827051286857018}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1418347984412309, 0.0343820139383553}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2224330799057538, 0.04759168008201538}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2035579068618934, 0.044700196258380086}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.019139315069509576, 0.029381316335248698}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1879757397010003, 0.04346792603254568}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.03393253885999649, 0.030211937653328972}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0979557217893849, 0.033657350189934425}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.08338997696958124, 0.03365070647149555}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.044273286884613974, 0.03189429877046719}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.19519113364138194, 0.04693409236686182}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.22296274524045176, 0.052316755230124044}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.15262719653863796, 0.042129630509972815}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1142943785480157, 0.03849350681348469}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.29768856150188205, 0.07029610171706085}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3297667865476702, 0.07930052819867266}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.022930242950719427, 0.03524567768516137}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.09023109948854084, 0.04083266147557069}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.009516157958665625, 0.03835384219216797}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.10806244650508622, 0.043722887570853894}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1855927885471838, 0.053334977305031894}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0797638766412718, 0.04353736310118027}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.17299436784510716, 0.053876316810619176}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.020507437314982224, 0.04209042441874588}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.11734680880140613, 0.04748364888177071}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.017175527127577653, 0.04268786495968655}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2505048912560137, 0.06844807803827742}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.031438394190832206, 0.0447672088118815}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0329382813524849, 0.045004695449150346}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.23605400454009023, 0.06737673454406597}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3487781214995761, 0.0963198059157117}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2216101261128355, 0.0655947634144018}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.07941044506040117, 0.04863276826865529}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.10226153576820055, 0.050506097953452435}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.08028359834237192, 0.04980968629013895}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2409226958411018, 0.07121455712136375}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.247771433865676, 0.07283310865290188}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.26666589387202283, 0.07739583091703775}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3355917271442005, 0.09603868069943437}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14373143030023827, 0.05957219227046986}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.21333996325111937, 0.07052747570907639}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.060927930251508375, 0.05521290451521742}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.09286426994658428, 0.057238833752983005}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3213443646364298, 0.09755854045118972}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3654003480827982, 0.11119868702006123}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.21209307878636846, 0.0736386667123199}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1660020720739294, 0.06658523327365287}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.03762395698796357, 0.05638107502740641}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1372624517877379, 0.06374998821846006}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.15642606898873, 0.06708666931359791}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3190242728112404, 0.09990805948418272}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2869474825055524, 0.09166775882719656}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.05512470041677777, 0.058683577987511025}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.34010761621941377, 0.1063646047235782}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.06432846864170948, 0.06018018228690945}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.13807219924238456, 0.06655457926461351}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.12933642078053856, 0.06592546241781279}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.05157364486603109, 0.06074789154350788}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.11578046224636211, 0.06594470927835354}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.32722115584137623, 0.10576174066878234}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.12198458007072659, 0.06756318719501071}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1525042312759672, 0.0721460827238813}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.025010125544825346, 0.06283715979847075}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.14368898482710601, 0.07201932341807779}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3216369545141242, 0.10838035948682427}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.005462257557088582, 0.06622465786988407}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13127167457713113, 0.07403374158124608}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.23127964522719524, 0.09050083855642432}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.22198982005839085, 0.08891359196035141}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.035927936196620026, 0.06905518322850594}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.279368315704249, 0.10226702878699377}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2642901290172375, 0.09882362742408815}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1449784363757172, 0.07841818470693851}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.07458411679730226, 0.07225646938072014}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.08027675508060107, 0.07407111865120236}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.09216010641679417, 0.07545017187185951}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.246240226628314, 0.09944868761466961}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.22577825531746862, 0.09588598403751725}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.27915272558106474, 0.10765057102383742}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.021045836739608855, 0.07469924377749837}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0029701576727412795, 0.0748069594277471}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.35333818479639245, 0.1294840554017207}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.34648410382194694, 0.12742113006606734}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.15139002534650645, 0.08573815987428025}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1431546943593137, 0.08546661447702854}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.15047580348041148, 0.08754776009265688}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.05689332116624106, 0.07976443575532116}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.06969512281478436, 0.08071100934303475}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.043634370884688634, 0.07955672056091824}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1436120709901634, 0.0889384200626179}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13323619999590627, 0.08926987318123329}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2867315140282935, 0.11737451192001498}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.04610265836724483, 0.08370017126354788}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2314501853818316, 0.10650378204974038}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.005266044917955487, 0.08430283296265256}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28510989023778815, 0.11948964187966882}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.15165747338802807, 0.0941134350966879}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2459047159010159, 0.11041291809901743}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.300933763112177, 0.12399440754679619}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.03622619753675862, 0.0854524947977459}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.33421703649117, 0.13454676337837745}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.012282792631234902, 0.08574460609273077}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.13800733007752716, 0.09402926153095972}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.09530867410106778, 0.09016850330499193}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.15976251106377273, 0.09746514806095466}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.22977249066296404, 0.10961015859769166}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.22905694919504654, 0.11013500415682573}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.03382815613898518, 0.08844190776972626}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.061185994735206785, 0.09029407838907899}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04915307849030515, 0.09029685939617128}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.29401346115130594, 0.12700620138215168}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.01668899151221689, 0.0901885782726828}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13608871216055704, 0.0982812706007833}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2578713866993266, 0.11961825763346479}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.23061262552422968, 0.11385381081077901}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1417857567998818, 0.09974512771445418}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2357181212744642, 0.11572610171409088}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.035164421815756075, 0.09299575843859924}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2621297217268981, 0.1227897391810746}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.05206805529271965, 0.09417954538377976}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0758124849394026, 0.09566309033929453}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2684546734416375, 0.1252233582867645}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2206369674579295, 0.1161784882600865}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1356219550443659, 0.1033192825107707}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3142122196839157, 0.13899864250326346}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.15515296552076413, 0.1060939035130189}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3224212230988206, 0.14254539720965154}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.30288060307112236, 0.13785051818884642}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.21826985844971114, 0.11819466881891598}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.09025143315562253, 0.10141698107537102}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.08186663299280433, 0.10080485116637432}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1028128455791078, 0.10313448583486653}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.21484806637892517, 0.11928691509520037}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1026778235595441, 0.10403445357174143}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13741845865563415, 0.10789512642589238}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.010696534179236078, 0.10000320552968912}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.35130636583746316, 0.1554602942427471}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2475911778889254, 0.12762352319945994}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.057088251584618645, 0.10270631934692435}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3156604383164488, 0.1463093512677796}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.23375616323748363, 0.12667149321912624}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.036308135083825376, 0.10374733701931586}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2495704249072763, 0.13193424054796432}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0870117144683271, 0.10801034608413615}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2535775600752409, 0.13331463230889226}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.26635097256005974, 0.13685268129284367}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.024730777567861476, 0.10578860073911847}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.05609132301901985, 0.10704375013844346}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.07236296254147895, 0.10832760697158798}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.13587486533085302, 0.11474179114140746}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.05766675874559703, 0.10961703858952353}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.10078216878459349, 0.11263014934972898}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.11560620947262122, 0.11551187258474067}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.30097211385823924, 0.1509514599324894}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.06507511474095097, 0.11247073139585052}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.046358860474457725, 0.11195037523728922}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13606468358828103, 0.1194102852370351}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.26957611980023466, 0.14373094627468608}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19679237712930087, 0.12927896279932574}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.15694609594959066, 0.12311968620794567}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2479997743826184, 0.14091089443692598}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.17241960767928208, 0.1267853009039175}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.015365229086301472, 0.11477458495145967}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.07297570079524146, 0.11736937099013967}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.29700349401002607, 0.15788474190486432}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.07538614138851704, 0.12087251717538502}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.05060000874154897, 0.11955678268089857}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.09432259574484929, 0.12381323827367059}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.18120130876154816, 0.13454218193680328}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.15190031666935622, 0.13203516584329897}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.041188974375152565, 0.12308706069636514}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14531881187930598, 0.13239396582889348}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.268674464883057, 0.15624771196983792}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2891119280484447, 0.161651125917926}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1589463395766618, 0.13489037056151626}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2183559864587666, 0.146887172586257}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.11785738882657665, 0.13171387891195788}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.18876213994394705, 0.14174508427839635}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3134867208671252, 0.17410938424839864}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.09722239625184606, 0.13455467543076294}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.022057108956450914, 0.13172919240979555}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.13940366286493314, 0.14080439048767407}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.10580339915186796, 0.13775194034916527}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0360090302196396, 0.13334642161393803}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.23111412066404935, 0.15711457108010055}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.17158920129385766, 0.1465827523149097}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.22704755353720812, 0.15772907242555553}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3177794803850153, 0.18153359954385362}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.17629325507916527, 0.14888722940685747}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.23969480530871154, 0.1621272363857377}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.06807259462928675, 0.1382926380369985}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.14988698260891056, 0.14713987563741462}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.019260164261462237, 0.1377488119819671}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.01797374403306872, 0.13803188697205576}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1871853901471408, 0.15440377214981713}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.24035295411533802, 0.16531175818230331}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.15897714394483042, 0.15038161022288588}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.024076208007571737, 0.13989906853942316}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1518652951021259, 0.1502654579582149}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1848958859806687, 0.15599890431949745}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3275025185795058, 0.19219142977625273}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.12844141397576878, 0.15081420364633674}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.09997313363113398, 0.14822356471161216}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.22762567729892114, 0.1679139144415097}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.13666137577753537, 0.15313351490232022}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.10124879432189748, 0.15025303997057346}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.007142446059864549, 0.14656289509889558}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.12512865171967283, 0.15403192148742295}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.10695423523499896, 0.1526174411684373}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0332059133794413, 0.1483766528168647}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14775665182735626, 0.15912293829781607}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.004298628293543912, 0.15013981285885664}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.21218854743417656, 0.17166011743033024}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.07701625557828937, 0.15374135358528904}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.20370176672579296, 0.17037430209668886}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1771768024459179, 0.16680983668017135}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.23209350503871384, 0.1779341336478975}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.26071196390778195, 0.18507660735901385}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.044719193414520284, 0.15590478793527116}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.012456824546874107, 0.1561797138371925}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2487769085109373, 0.18600779123166433}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.08220261180398716, 0.1607727525787446}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2420443545964735, 0.18614796379289678}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.26522939583116795, 0.19219586423679894}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.03367326444558481, 0.15945242931328193}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2941441154052892, 0.20048208397610365}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13539329086321605, 0.16794633145837282}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.00959912571506637, 0.1595929113861897}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.30957859544642596, 0.2058722520874321}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.09613403826475111, 0.1650000037574845}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1346279382028666, 0.16958227063634412}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1211542860552154, 0.1682321457900081}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.18399112040704976, 0.17960276741074874}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.10698244497779923, 0.1697584070795873}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.33020825110522195, 0.2177178644845405}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.057367093854150786, 0.1665782392048069}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.06546835430282015, 0.1672686240301592}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.12989402613743345, 0.17336796339160643}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2522536263239075, 0.1963642074694489}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0950231369868096, 0.1715092256953398}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.21949061674822667, 0.1904461171855631}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.15591491557938023, 0.17938146522348755}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0973432498166007, 0.1724080708559628}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.030756196074131846, 0.1684270926221707}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.05245386640012684, 0.17249750554104099}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.11866064372696883, 0.17878104385429777}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.031218275075350254, 0.17288723380631574}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2565009087054837, 0.20495997193627213}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2493123019389745, 0.2036753049832534}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.10767587309107537, 0.18058886306751198}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.10333053185249753, 0.18043030497665627}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1139535099107465, 0.18189531071933074}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.08756988150801012, 0.1797735417572133}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1275862341066166, 0.18411347968171668}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.051748834914974236, 0.17842633462321125}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.17867912919274467, 0.19446475561423196}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.050104035417971676, 0.18057311773223203}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.09049161323501911, 0.18338358073994787}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.23664237650513614, 0.20678289181046058}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.13337234596871625, 0.18828233635081082}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.32484484570056693, 0.2325723982260006}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2797893384628112, 0.21969780092642568}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.09096120772240801, 0.18591637952303824}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.11387632037017521, 0.189336925108246}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.24151948794441835, 0.21169483671320913}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.30766579641709396, 0.2312057488173558}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02368749197923513, 0.18464883292007475}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2631410668686774, 0.22053978029716192}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.01834345865768295, 0.1865464989861483}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.24832148689581976, 0.21680152409023096}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19579804965004985, 0.20571252482054123}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.18557557335131006, 0.2050138007804943}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1732168741056254, 0.20425000690375156}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.01595228900075696, 0.18983864107207069}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.10363258274637856, 0.19592841830873156}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.24281717493962346, 0.22023495881809033}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.021813626498968054, 0.19154708162971246}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.025403453343058532, 0.1926099595684519}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.06268165106677916, 0.19681933839329532}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.045715208793830724, 0.20153359368992416}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.03257907952225094, 0.20135456619481357}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.06750782746615785, 0.2032704304413818}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.17252083306312355, 0.2161867946128824}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.044659466362869944, 0.20350160637899628}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19255990792949576, 0.22105590780139903}], 
        {Opacity[1]}}}, {}}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{37.36282438256349, -96.01511083627571}], 
       "LongitudeDetermination" -> -96.0151108362757}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{37.36282438256349, -96.01511083627571}], 
       "LongitudeDetermination" -> -96.0151108362757}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  LabelStyle->Automatic,
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{{{
          RGBColor[1., 0.607843, 0.], 
          EdgeForm[{
            Thickness[Tiny], 
            Opacity[0.4]}], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5]}], 
          GeoStyling[None], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{25.736851423331768`, -81.06035931825636}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{25.736851423331768`, -81.06035931825636}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{26.144852182144376`, -80.49862695755616}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{26.144852182144376`, -80.49862695755616}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{26.276059917430313`, -80.19523050312327}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{26.276059917430313`, -80.19523050312327}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{26.451098850633663`, -80.86045531245071}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{26.451098850633663`, -80.86045531245071}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{26.516758166273867`, -98.1670050307425}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{26.516758166273867`, -98.1670050307425}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{26.92011839093826, -98.18360407944202}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{26.92011839093826, -98.18360407944202}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{27.0676699586007, -81.8408153395171}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{27.0676699586007, -81.8408153395171}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{27.08917930516886, -99.10189683375194}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{27.08917930516886, -99.10189683375194}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{27.191098323756197`, -81.43548969084257}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{27.191098323756197`, -81.43548969084257}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{27.497138922889057`, -98.83847247225106}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{27.497138922889057`, -98.83847247225106}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{28.46085973261192, -99.72805301141354}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{28.46085973261192, -99.72805301141354}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.1268461932209, -80.9599467812694}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.1268461932209, -80.9599467812694}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.189455291344963`, -97.84570758961227}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.189455291344963`, -97.84570758961227}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.205090719363504`, -96.16603720542942}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.205090719363504`, -96.16603720542942}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.232145703552266`, -81.73611948781787}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.232145703552266`, -81.73611948781787}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.39903748107802, -97.42513486337027}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.39903748107802, -97.42513486337027}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.420614346786877`, -97.99853194529834}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.420614346786877`, -97.99853194529834}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.543440982936005`, -100.16798724259858`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.543440982936005`, -100.16798724259858`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.546433748959664`, -90.3660105404566}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.546433748959664`, -90.3660105404566}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.561935813788846`, -97.10910953661859}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.561935813788846`, -97.10910953661859}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.87081489643389, -92.72734946285233}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.87081489643389, -92.72734946285233}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.87657658852407, -91.86830207311422}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.87657658852407, -91.86830207311422}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.889625344486035`, -81.73616633625758}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.889625344486035`, -81.73616633625758}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.90667191256213, -84.71867051161242}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.90667191256213, -84.71867051161242}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.957977952106937`, -99.49211114602264}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.957977952106937`, -99.49211114602264}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.381714079405842`, -85.21860443169626}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.381714079405842`, -85.21860443169626}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.441769410761992`, -84.55052652474917}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.441769410761992`, -84.55052652474917}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.53126401927061, -89.13469068702655}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.53126401927061, -89.13469068702655}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.565813141686704`, -100.72622426458565`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.565813141686704`, -100.72622426458565`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.78262859178152, -92.79501226102813}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.78262859178152, -92.79501226102813}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.88623118987847, -87.93962700568814}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.88623118987847, -87.93962700568814}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.90196794029118, -92.00336051842808}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.90196794029118, -92.00336051842808}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.951025520005672`, -82.86595221002656}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.951025520005672`, -82.86595221002656}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.07275090376127, -85.88689352276229}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.07275090376127, -85.88689352276229}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.10617240797305, -98.91427638479469}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.10617240797305, -98.91427638479469}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.239929544965126`, -92.48404520723689}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.239929544965126`, -92.48404520723689}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.370866835365046`, -108.65201982438755`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.370866835365046`, -108.65201982438755`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.422578795135035`, -89.60121008654455}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.422578795135035`, -89.60121008654455}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.42773486664521, -87.18013163913346}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.42773486664521, -87.18013163913346}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.508696644940677`, -102.68524215240183`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.508696644940677`, -102.68524215240183`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.619526187423144`, -86.1969577662953}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.619526187423144`, -86.1969577662953}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.636019815914196`, -90.84893246748734}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.636019815914196`, -90.84893246748734}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.648518734339007`, -91.00136581834136}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.648518734339007`, -91.00136581834136}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.65554041225106, -96.66817795179803}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.65554041225106, -96.66817795179803}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.817743501372277`, -101.00438770789775`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.817743501372277`, -101.00438770789775`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.952493810015017`, -100.02153579272444`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.952493810015017`, -100.02153579272444`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.974025571475206`, -95.63459696458368}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.974025571475206`, -95.63459696458368}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{31.97573351110881, -97.17344624082658}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{31.97573351110881, -97.17344624082658}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.007558542264604`, -96.96376305987029}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.007558542264604`, -96.96376305987029}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.094887767303604`, -82.89057011001293}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.094887767303604`, -82.89057011001293}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.13419485524192, -94.77009751812828}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.13419485524192, -94.77009751812828}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.169375119402766`, -97.63575779236511}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.169375119402766`, -97.63575779236511}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.19437385970716, -100.90245975524157`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.19437385970716, -100.90245975524157`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.24352674755455, -111.32355102904742`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.24352674755455, -111.32355102904742`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.29533848574882, -100.26592694481248`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.29533848574882, -100.26592694481248`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.37232628911457, -90.20276291803954}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.37232628911457, -90.20276291803954}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.42325220711855, -100.85645103321414`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.42325220711855, -100.85645103321414`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.455857633273204`, -86.96952432072338}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.455857633273204`, -86.96952432072338}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.500678115671604`, -91.58025520797504}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.500678115671604`, -91.58025520797504}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.57014923823521, -93.58821825049006}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.57014923823521, -93.58821825049006}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.62271469090898, -81.76292805434679}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.62271469090898, -81.76292805434679}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.666242216667094`, -91.73699548583582}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.666242216667094`, -91.73699548583582}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.710888404368966`, -96.4362229046576}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.710888404368966`, -96.4362229046576}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.727959869526366`, -107.35401926030535`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.727959869526366`, -107.35401926030535`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.75321930418008, -111.80106547122098`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.75321930418008, -111.80106547122098`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.79471394973292, -113.05890410768552`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.79471394973292, -113.05890410768552`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.79831867585551, -106.66360676729877`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.79831867585551, -106.66360676729877`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.80598796324241, -89.3080150157431}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.80598796324241, -89.3080150157431}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.85764052977055, -96.56482868103711}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.85764052977055, -96.56482868103711}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.86036117607443, -103.07546140916212`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.86036117607443, -103.07546140916212`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.90791674328823, -112.50300638086216`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.90791674328823, -112.50300638086216`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.91122971466734, -94.85228119707263}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.91122971466734, -94.85228119707263}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.92313202700215, -110.5586776216774}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.92313202700215, -110.5586776216774}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.927564959446954`, -104.89049503082398`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.927564959446954`, -104.89049503082398`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.97698941575682, -98.02671617529279}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.97698941575682, -98.02671617529279}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.01841257818154, -104.16028874283339`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.01841257818154, -104.16028874283339`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.06879931107112, -116.95833338073449`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.06879931107112, -116.95833338073449`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.076976258098696`, -111.13011593510744`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.076976258098696`, -111.13011593510744`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.116129144628495`, -84.10916968357543}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.116129144628495`, -84.10916968357543}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.11819878517089, -94.6189854551205}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.11819878517089, -94.6189854551205}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.14401624075548, -108.64629802016262`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.14401624075548, -108.64629802016262`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.165397499998186`, -107.4349876292972}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.165397499998186`, -107.4349876292972}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.186103348044846`, -81.89030927259365}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.186103348044846`, -81.89030927259365}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.23920147337049, -102.21071273072744`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.23920147337049, -102.21071273072744`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.28279959340096, -100.50473378413764`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.28279959340096, -100.50473378413764`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.39180459426959, -105.5796781526285}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.39180459426959, -105.5796781526285}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.446998620815265`, -94.20201444474397}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.446998620815265`, -94.20201444474397}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.48437402306888, -113.28795680641237`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.48437402306888, -113.28795680641237`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.51200806052196, -107.09459602748345`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.51200806052196, -107.09459602748345`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.59194182255168, -99.46885192633631}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.59194182255168, -99.46885192633631}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.59534968188735, -110.51475332013939`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.59534968188735, -110.51475332013939`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.634134530569625`, -106.43086701284741`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.634134530569625`, -106.43086701284741`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.641135865980544`, -82.01471293836546}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.641135865980544`, -82.01471293836546}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.69215758464262, -86.03920215473413}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.69215758464262, -86.03920215473413}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.722690590109096`, -114.21510118302639`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.722690590109096`, -114.21510118302639`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.725343888700124`, -104.64459488959407`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.725343888700124`, -104.64459488959407`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.74632068995254, -117.80000035481685`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.74632068995254, -117.80000035481685`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.76770621752528, -78.875535794795}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.76770621752528, -78.875535794795}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.79237136617279, -113.44360237472783`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.79237136617279, -113.44360237472783`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.800371391896256`, -87.89451313247775}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.800371391896256`, -87.89451313247775}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.805634419238594`, -84.54265326704606}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.805634419238594`, -84.54265326704606}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.80813512298489, -85.63327991416661}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.80813512298489, -85.63327991416661}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.821530339861276`, -92.79375866555765}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.821530339861276`, -92.79375866555765}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.87097848087092, -103.11375667477878`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.87097848087092, -103.11375667477878`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.87286486080302, -96.4577486324756}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.87286486080302, -96.4577486324756}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.91754713388188, -117.60699455988765`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.91754713388188, -117.60699455988765`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.957635381074155`, -114.90496276414916`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.957635381074155`, -114.90496276414916`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.004871402593885`, -92.70028616596724}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.004871402593885`, -92.70028616596724}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.11884497923672, -88.06063779515473}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.11884497923672, -88.06063779515473}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.138924701505346`, -92.14737342292587}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.138924701505346`, -92.14737342292587}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.1973908957866, -102.40542019871923`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.1973908957866, -102.40542019871923`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.21312566544409, -109.71156875794844`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.21312566544409, -109.71156875794844`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.31513099898639, -89.47259610820942}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.31513099898639, -89.47259610820942}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.512059127925625`, -118.57497820693358`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.512059127925625`, -118.57497820693358`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.57267571264073, -109.9306043108368}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.57267571264073, -109.9306043108368}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.616490219671824`, -86.1323046659502}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.616490219671824`, -86.1323046659502}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.64229168147041, -113.59066688886031`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.64229168147041, -113.59066688886031`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.776146219310476`, -105.79238169714709`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.776146219310476`, -105.79238169714709`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.82274418343387, -77.13175071078993}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.82274418343387, -77.13175071078993}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.82620898461767, -95.23307573912409}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.82620898461767, -95.23307573912409}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.84115817248224, -112.26862008671014`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.84115817248224, -112.26862008671014`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.86314815578996, -89.89633564878254}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.86314815578996, -89.89633564878254}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.91880159910398, -94.38409755186376}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.91880159910398, -94.38409755186376}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.041501223883856`, -107.06079154697414`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.041501223883856`, -107.06079154697414`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.05415148841534, -116.87829663118583`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.05415148841534, -116.87829663118583`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.071325596619126`, -80.02672424598111}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.071325596619126`, -80.02672424598111}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.13257433253025, -112.16887045503938`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.13257433253025, -112.16887045503938`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.14195132165697, -99.03509158299396}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.14195132165697, -99.03509158299396}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.20708637809074, -107.17643176221664`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.20708637809074, -107.17643176221664`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.27991402598992, -116.2182743715449}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.27991402598992, -116.2182743715449}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.28264997503243, -91.24444448166021}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.28264997503243, -91.24444448166021}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.33977454181442, -88.73386526072808}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.33977454181442, -88.73386526072808}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.3802533703624, -89.7470006273784}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.3802533703624, -89.7470006273784}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.39774334884311, -98.64219175773644}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.39774334884311, -98.64219175773644}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.42171106209515, -100.56605605719868`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.42171106209515, -100.56605605719868`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.456392412057234`, -115.89543412877168`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.456392412057234`, -115.89543412877168`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.50165778376187, -85.9959520165618}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.50165778376187, -85.9959520165618}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.56997092010571, -93.08747438711526}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.56997092010571, -93.08747438711526}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.58366268107554, -103.41455763556183`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.58366268107554, -103.41455763556183`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.6149449451474, -115.81839799777863`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.6149449451474, -115.81839799777863`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.627860979631045`, -95.38096650889514}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.627860979631045`, -95.38096650889514}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.68691276474883, -99.75194683967894}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.68691276474883, -99.75194683967894}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.727097448947205`, -114.76766157292207`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.727097448947205`, -114.76766157292207`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.73761773879655, -83.61823810594024}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.73761773879655, -83.61823810594024}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.855671239487336`, -79.19153638311724}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.855671239487336`, -79.19153638311724}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.86519348257682, -79.77676473333457}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.86519348257682, -79.77676473333457}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.91428345185764, -92.89697670311446}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.91428345185764, -92.89697670311446}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{35.92206429531524, -105.10168194656356`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{35.92206429531524, -105.10168194656356`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.00651168661699, -93.06599214409181}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.00651168661699, -93.06599214409181}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.05195984584799, -112.57478279283771`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.05195984584799, -112.57478279283771`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.0784696002982, -120.70054374067581`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.0784696002982, -120.70054374067581`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.0994755500477, -91.7585265990245}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.0994755500477, -91.7585265990245}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.11819758211077, -110.25700183475085`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.11819758211077, -110.25700183475085`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.12475942440865, -114.97826524806557`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.12475942440865, -114.97826524806557`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.12869969355516, -93.52555306705442}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.12869969355516, -93.52555306705442}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.21031141372692, -93.92344095687817}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.21031141372692, -93.92344095687817}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.21770184595673, -87.92280067287568}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.21770184595673, -87.92280067287568}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.250019981601206`, -118.71377787447541`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.250019981601206`, -118.71377787447541`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.258721472899204`, -98.73842728639701}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.258721472899204`, -98.73842728639701}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.27110822439593, -101.85287935538241`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.27110822439593, -101.85287935538241`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.33803607010874, -82.5093000634914}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.33803607010874, -82.5093000634914}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.341098088488074`, -90.16947658928149}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.341098088488074`, -90.16947658928149}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.50307808782542, -76.14120672144146}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.50307808782542, -76.14120672144146}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.51291900118896, -116.82805482916967`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.51291900118896, -116.82805482916967`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.62915192028348, -98.09194705618556}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.62915192028348, -98.09194705618556}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.65620939012531, -115.75051554757022`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.65620939012531, -115.75051554757022`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.67819910173329, -107.13450721601122`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.67819910173329, -107.13450721601122`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.68658390735969, -107.63537433786102`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.68658390735969, -107.63537433786102`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.74004165264969, -99.13382562839662}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.74004165264969, -99.13382562839662}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.75189443139743, -96.77302865292847}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.75189443139743, -96.77302865292847}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.76518712635581, -87.64042696457572}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.76518712635581, -87.64042696457572}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.774710497738404`, -94.21256970862817}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.774710497738404`, -94.21256970862817}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{36.99789766875654, -79.08781875329318}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{36.99789766875654, -79.08781875329318}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.01874107987539, -117.55714443136517`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.01874107987539, -117.55714443136517`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.13713767763935, -93.08710282571039}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.13713767763935, -93.08710282571039}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.1947185363329, -104.85217917343331`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.1947185363329, -104.85217917343331`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.229226809198245`, -85.62080904229538}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.229226809198245`, -85.62080904229538}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.250617423201724`, -96.26731395685852}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.250617423201724`, -96.26731395685852}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.33433009636687, -95.82367987083468}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.33433009636687, -95.82367987083468}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.37082717870147, -118.43564852330671`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.37082717870147, -118.43564852330671`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.37171554922833, -83.67571522882078}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.37171554922833, -83.67571522882078}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.44083533003847, -106.22864525709376`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.44083533003847, -106.22864525709376`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.497972744431, -82.38327953337685}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.497972744431, -82.38327953337685}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.643549231717856`, -83.56625499324824}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.643549231717856`, -83.56625499324824}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.7371794074879, -81.08298260804403}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.7371794074879, -81.08298260804403}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.738789119235065`, -118.14333426875717`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.738789119235065`, -118.14333426875717`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.838255279530514`, -118.77615849639886`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.838255279530514`, -118.77615849639886`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.88389295569787, -99.55730607326875}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.88389295569787, -99.55730607326875}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.91227396547344, -119.09008194917116`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.91227396547344, -119.09008194917116`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.927305062964884`, -96.84481857568375}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.927305062964884`, -96.84481857568375}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.9402442223096, -89.6513169661429}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.9402442223096, -89.6513169661429}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.942268246431766`, -109.6932980883985}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.942268246431766`, -109.6932980883985}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.962201623072595`, -111.25869011989035`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.962201623072595`, -111.25869011989035`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.96817728526717, -76.84639319167329}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.96817728526717, -76.84639319167329}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.97434730028764, -79.58313096667716}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.97434730028764, -79.58313096667716}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.97610035089802, -111.32411954860837`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.97610035089802, -111.32411954860837`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.98893955878608, -104.45610577524582`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.98893955878608, -104.45610577524582`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.99948534464489, -84.18960164319284}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.99948534464489, -84.18960164319284}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.01615178133249, -101.67184753302212`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.01615178133249, -101.67184753302212`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.06181491169811, -96.89108963195703}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.06181491169811, -96.89108963195703}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.08577478930362, -111.13723735639586`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.08577478930362, -111.13723735639586`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.15978802239552, -94.06273914464309}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.15978802239552, -94.06273914464309}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.17729258900296, -122.14081681459739`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.17729258900296, -122.14081681459739`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.2411472549682, -104.36400686741024`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.2411472549682, -104.36400686741024`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.24439864298485, -83.67999090456316}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.24439864298485, -83.67999090456316}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.27144020904, -87.34638853329666}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.27144020904, -87.34638853329666}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.378623498805275`, -100.1910244387035}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.378623498805275`, -100.1910244387035}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.47537642559665, -115.86666832810596`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.47537642559665, -115.86666832810596`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.47647715154976, -82.98094068533055}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.47647715154976, -82.98094068533055}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.49295128594155, -84.01790695472603}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.49295128594155, -84.01790695472603}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.542068598392284`, -96.45390347959655}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.542068598392284`, -96.45390347959655}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.575437737233585`, -103.47523005596439`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.575437737233585`, -103.47523005596439`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.5995172718116, -89.43815509946836}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.5995172718116, -89.43815509946836}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.61660760609099, -96.07896860451253}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.61660760609099, -96.07896860451253}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.71807231398238, -91.36491313389591}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.71807231398238, -91.36491313389591}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.852924358398354`, -88.760412207059}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.852924358398354`, -88.760412207059}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.877081137706874`, -106.48422554632613`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.877081137706874`, -106.48422554632613`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.95731021989101, -79.50471469518264}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.95731021989101, -79.50471469518264}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{38.977546149888475`, -111.11018453780032`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{38.977546149888475`, -111.11018453780032`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.03803191014118, -97.42685894764242}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.03803191014118, -97.42685894764242}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.04664226812878, -82.07483373057329}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.04664226812878, -82.07483373057329}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.06786413406862, -98.51937218170433}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.06786413406862, -98.51937218170433}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.07375593040713, -88.77615349048301}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.07375593040713, -88.77615349048301}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.13320678404335, -89.8498356699667}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.13320678404335, -89.8498356699667}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.14589754982739, -99.28651323941658}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.14589754982739, -99.28651323941658}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.179095561466845`, -81.50617961644946}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.179095561466845`, -81.50617961644946}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.21660141904958, -112.62713721441199`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.21660141904958, -112.62713721441199`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.24466168600458, -107.34509020251393`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.24466168600458, -107.34509020251393`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.27078277831594, -104.4895040223063}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.27078277831594, -104.4895040223063}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.32259478409689, -118.36658255670334`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.32259478409689, -118.36658255670334`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.35112249787203, -120.86725051789631`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.35112249787203, -120.86725051789631`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.370395441053724`, -94.3157525529914}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.370395441053724`, -94.3157525529914}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.516340929991806`, -89.30646917502776}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.516340929991806`, -89.30646917502776}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.55840466338415, -96.72219281096986}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.55840466338415, -96.72219281096986}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.60038317645162, -104.06351831873161`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.60038317645162, -104.06351831873161`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.62339922860242, -109.8913069241635}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.62339922860242, -109.8913069241635}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.71153764029888, -101.96050267195338`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.71153764029888, -101.96050267195338`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.757825990230124`, -83.06475977889154}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.757825990230124`, -83.06475977889154}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.76496254466724, -94.48675726033088}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.76496254466724, -94.48675726033088}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.766660756734, -104.77876028685067`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.766660756734, -104.77876028685067`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.802075319562, -94.73441649727806}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.802075319562, -94.73441649727806}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.81718887765202, -77.14774786993131}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.81718887765202, -77.14774786993131}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.905278601682284`, -98.36304883193759}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.905278601682284`, -98.36304883193759}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.91666175440576, -98.4755061735401}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.91666175440576, -98.4755061735401}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.92033858503577, -78.22923500320812}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.92033858503577, -78.22923500320812}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.97300281420264, -122.60539369224415`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.97300281420264, -122.60539369224415`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.97392719742135, -79.32209184972744}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.97392719742135, -79.32209184972744}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.003992952382305`, -90.07109783868836}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.003992952382305`, -90.07109783868836}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.01517758163329, -103.67574863721046`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.01517758163329, -103.67574863721046`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.06802680520407, -90.00002808794233}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.06802680520407, -90.00002808794233}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.08046572577829, -77.81241804578877}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.08046572577829, -77.81241804578877}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.09273443399654, -114.74889119259271`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.09273443399654, -114.74889119259271`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.1195567926779, -75.81245073980311}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.1195567926779, -75.81245073980311}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.16938924916749, -121.63727738648441`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.16938924916749, -121.63727738648441`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.29475468009878, -85.18643488582985}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.29475468009878, -85.18643488582985}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.333952786680506`, -112.16178301057306`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.333952786680506`, -112.16178301057306`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.440305866741056`, -100.60290957445096`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.440305866741056`, -100.60290957445096`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.44182368415715, -89.01696620224998}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.44182368415715, -89.01696620224998}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.47218910157711, -120.6240773638242}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.47218910157711, -120.6240773638242}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.49262239288626, -124.15574191629533`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.49262239288626, -124.15574191629533`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.52081286814882, -112.11089132000187`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.52081286814882, -112.11089132000187`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.53134225440705, -83.45086988906064}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.53134225440705, -83.45086988906064}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.56065012083897, -93.17808972944638}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.56065012083897, -93.17808972944638}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.5743271846115, -106.39618791546896`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.5743271846115, -106.39618791546896`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.631956389966845`, -84.16382767538317}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.631956389966845`, -84.16382767538317}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.63516560326002, -120.50158888921227`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.63516560326002, -120.50158888921227`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.643737214900234`, -117.9688746892904}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.643737214900234`, -117.9688746892904}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.654616006053075`, -91.85162460981016}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.654616006053075`, -91.85162460981016}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.65595797197712, -122.19183779086147`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.65595797197712, -122.19183779086147`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.7145579035401, -91.1513223835532}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.7145579035401, -91.1513223835532}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.7284083898675, -106.48174477723927`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.7284083898675, -106.48174477723927`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.74742193793936, -105.81860363321009`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.74742193793936, -105.81860363321009`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.781643452800616`, -99.91747838700293}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.781643452800616`, -99.91747838700293}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.82646519323699, -87.23350714368624}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.82646519323699, -87.23350714368624}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.827605271334825`, -121.22925539128082`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.827605271334825`, -121.22925539128082`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.883959203351125`, -105.27742961851843`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.883959203351125`, -105.27742961851843`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.9470893275421, -84.40864558511076}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.9470893275421, -84.40864558511076}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.94902515241179, -97.91161552959134}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.94902515241179, -97.91161552959134}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.0014473919238, -106.95494805269735`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.0014473919238, -106.95494805269735`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.05614819416943, -120.87179009994368`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.05614819416943, -120.87179009994368`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.15720760345136, -96.43055976099798}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.15720760345136, -96.43055976099798}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.19651789748733, -85.99686174392163}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.19651789748733, -85.99686174392163}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.26316749460746, -113.79125282844048`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.26316749460746, -113.79125282844048`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.27477795558232, -78.9621698813694}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.27477795558232, -78.9621698813694}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.28963209943356, -98.75371586724377}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.28963209943356, -98.75371586724377}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.32913155754819, -117.60076116580771`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.32913155754819, -117.60076116580771`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.3351790579942, -116.40846280348448`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.3351790579942, -116.40846280348448`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.355726661118624`, -107.11309251377773`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.355726661118624`, -107.11309251377773`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.37165793785089, -90.31893294399477}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.37165793785089, -90.31893294399477}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.45446121484846, -89.87559786722856}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.45446121484846, -89.87559786722856}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.484525672524214`, -88.96116876879246}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.484525672524214`, -88.96116876879246}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.590624231494616`, -76.96930890664302}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.590624231494616`, -76.96930890664302}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.623933092079106`, -78.57217244531303}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.623933092079106`, -78.57217244531303}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.628457752407435`, -74.34500940369597}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.628457752407435`, -74.34500940369597}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.633215709192804`, -94.40276481111798}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.633215709192804`, -94.40276481111798}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.64973717619364, -95.78752278781583}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.64973717619364, -95.78752278781583}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.67980561320535, -123.70205700286145`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.67980561320535, -123.70205700286145`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.685524545263284`, -123.14325316092625`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.685524545263284`, -123.14325316092625`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.7254957869387, -84.3568605591436}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.7254957869387, -84.3568605591436}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.76820791412671, -84.98831968531904}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.76820791412671, -84.98831968531904}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.834684312537604`, -84.40827739323888}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.834684312537604`, -84.40827739323888}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.85662657850476, -91.63953828079221}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.85662657850476, -91.63953828079221}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.87196681307649, -101.37796280223364`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.87196681307649, -101.37796280223364`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.87666080765688, -92.65897992842355}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.87666080765688, -92.65897992842355}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.96206873224234, -107.11055359651793`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.96206873224234, -107.11055359651793`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.05006500376771, -85.71230396005015}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.05006500376771, -85.71230396005015}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.059159003303904`, -118.44375112916603`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.059159003303904`, -118.44375112916603`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.10869637533241, -99.573893132288}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.10869637533241, -99.573893132288}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.15390503874965, -77.97639422884808}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.15390503874965, -77.97639422884808}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.193783675942086`, -96.42200062196738}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.193783675942086`, -96.42200062196738}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.19785607421065, -118.36285544921365`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.19785607421065, -118.36285544921365`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.19821308245144, -84.25015419715585}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.19821308245144, -84.25015419715585}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.20377616015668, -76.81104164859762}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.20377616015668, -76.81104164859762}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.2180712029274, -72.37909837396516}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.2180712029274, -72.37909837396516}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.22869960363101, -98.81630966650008}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.22869960363101, -98.81630966650008}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.272956610892635`, -122.39283292876361`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.272956610892635`, -122.39283292876361`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.2734902573807, -95.06486921887027}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.2734902573807, -95.06486921887027}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.28916501820663, -106.72906067464238`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.28916501820663, -106.72906067464238`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.31059784635075, -88.62619112527476}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.31059784635075, -88.62619112527476}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.32687129840798, -108.43926701571033`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.32687129840798, -108.43926701571033`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.345949711550546`, -113.97531613716407`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.345949711550546`, -113.97531613716407`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.38322806963064, -78.10124613508042}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.38322806963064, -78.10124613508042}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.40409548664203, -98.63793673019278}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.40409548664203, -98.63793673019278}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.44717219541802, -91.26583021177086}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.44717219541802, -91.26583021177086}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.479547152938174`, -92.19877052006971}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.479547152938174`, -92.19877052006971}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.48358688343645, -72.84059151199193}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.48358688343645, -72.84059151199193}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.52523730274109, -94.7188957038144}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.52523730274109, -94.7188957038144}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.54343704948813, -85.40881335087694}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.54343704948813, -85.40881335087694}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.566823939914144`, -116.29347475116835`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.566823939914144`, -116.29347475116835`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.57312187664541, -114.10785115960765`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.57312187664541, -114.10785115960765`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.58797002320454, -84.95397504120173}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.58797002320454, -84.95397504120173}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.61906767621819, -77.50016851262471}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.61906767621819, -77.50016851262471}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.662877974617174`, -93.27758811713137}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.662877974617174`, -93.27758811713137}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.68777264266627, -75.35303952502181}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.68777264266627, -75.35303952502181}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.694767380585034`, -100.07163254993198`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.694767380585034`, -100.07163254993198`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.70560647386764, -90.10458771350213}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.70560647386764, -90.10458771350213}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.73944734696208, -117.20670218452119`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.73944734696208, -117.20670218452119`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.81338617236738, -113.37809495454212`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.81338617236738, -113.37809495454212`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.83272146645916, -106.63331938117246`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.83272146645916, -106.63331938117246`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.83389355552587, -120.98263013850655`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.83389355552587, -120.98263013850655`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.850810189692176`, -83.85202024548255}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.850810189692176`, -83.85202024548255}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.896336426813285`, -121.68736949086934`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.896336426813285`, -121.68736949086934`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.94500571488658, -120.09431245162587`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.94500571488658, -120.09431245162587`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.95167326403403, -78.80321734046294}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.95167326403403, -78.80321734046294}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.9757681928265, -88.94579029458524}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.9757681928265, -88.94579029458524}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{42.97622141505797, -89.60414773600468}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{42.97622141505797, -89.60414773600468}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.01422725073218, -104.07673794370034`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.01422725073218, -104.07673794370034`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.049367148257815`, -112.97943688812173`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.049367148257815`, -112.97943688812173`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.06624949198789, -104.07279322640697`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.06624949198789, -104.07279322640697`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.08057052325052, -85.21264016860859}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.08057052325052, -85.21264016860859}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.09216296467709, -96.85332775959958}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.09216296467709, -96.85332775959958}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.10512660542657, -124.19327041801718`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.10512660542657, -124.19327041801718`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.13856124111417, -115.64831657186294`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.13856124111417, -115.64831657186294`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.16969575862335, -91.53347028064987}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.16969575862335, -91.53347028064987}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.20773626467421, -121.25917419007351`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.20773626467421, -121.25917419007351`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.251144106066036`, -114.5624276098176}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.251144106066036`, -114.5624276098176}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.277218742566376`, -93.16086821401318}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.277218742566376`, -93.16086821401318}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.35305127768798, -115.87900609281722`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.35305127768798, -115.87900609281722`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.366609143246116`, -102.87269951208572`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.366609143246116`, -102.87269951208572`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.37917116608154, -75.81583383834645}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.37917116608154, -75.81583383834645}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.40861780250008, -74.76107436266604}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.40861780250008, -74.76107436266604}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.41174772637249, -94.0670327212436}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.41174772637249, -94.0670327212436}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.42090915699485, -91.5940677226162}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.42090915699485, -91.5940677226162}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.44259967738846, -101.72279008463202`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.44259967738846, -101.72279008463202`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.479893032345075`, -106.76445330730141`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.479893032345075`, -106.76445330730141`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.56385477441889, -91.45926422296948}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.56385477441889, -91.45926422296948}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.56622742372479, -88.04288295631916}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.56622742372479, -88.04288295631916}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.6506242395747, -86.8523602034556}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.6506242395747, -86.8523602034556}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.68754789787016, -120.23716478246698`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.68754789787016, -120.23716478246698`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.704631512891005`, -101.16881891753789`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.704631512891005`, -101.16881891753789`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.72683638125028, -99.68649673701057}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.72683638125028, -99.68649673701057}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.743796988747555`, -85.20424279173467}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.743796988747555`, -85.20424279173467}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.74413872573303, -117.6549228887225}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.74413872573303, -117.6549228887225}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.79462613803238, -111.72316122824246`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.79462613803238, -111.72316122824246`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.80095946907674, -108.51092551940133`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.80095946907674, -108.51092551940133`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.870089834333626`, -76.10829577923703}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.870089834333626`, -76.10829577923703}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.88027119949727, -82.25627047654092}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.88027119949727, -82.25627047654092}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.9366238857192, -94.79452627091436}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.9366238857192, -94.79452627091436}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{43.95774050304793, -101.81956541759355`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{43.95774050304793, -101.81956541759355`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.12541744497701, -120.08593406620209`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.12541744497701, -120.08593406620209`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.149199377744154`, -89.99965271348931}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.149199377744154`, -89.99965271348931}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.152501747221656`, -100.0506413765082}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.152501747221656`, -100.0506413765082}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.236253449857, -103.55693564785327`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.236253449857, -103.55693564785327`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.23933697452015, -110.56994415540372`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.23933697452015, -110.56994415540372`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.34516122402601, -83.81494760970013}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.34516122402601, -83.81494760970013}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.376705566064416`, -99.31172631436719}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.376705566064416`, -99.31172631436719}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.41515408227047, -84.33422413852216}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.41515408227047, -84.33422413852216}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.44525336117128, -117.83962185204652`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.44525336117128, -117.83962185204652`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.4491721053005, -119.5556847534057}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.4491721053005, -119.5556847534057}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.451190140332805`, -83.22097743161657}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.451190140332805`, -83.22097743161657}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.55376528921518, -113.6987206136321}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.55376528921518, -113.6987206136321}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.560271054239166`, -86.53160054539197}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.560271054239166`, -86.53160054539197}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.5736095339726, -111.27116432568319`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.5736095339726, -111.27116432568319`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.747516355932326`, -70.27793577333276}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.747516355932326`, -70.27793577333276}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.83558537067818, -88.16238164533219}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.83558537067818, -88.16238164533219}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.90335973214724, -97.79566112501047}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.90335973214724, -97.79566112501047}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.93545835199069, -107.31569098773348`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.93545835199069, -107.31569098773348`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.97340845184564, -104.58374935570015`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.97340845184564, -104.58374935570015`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.975412830925116`, -98.92590463856503}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.975412830925116`, -98.92590463856503}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{44.9762546804831, -114.89008677509439`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{44.9762546804831, -114.89008677509439`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.004954214565146`, -109.9686399948016}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.004954214565146`, -109.9686399948016}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.05865898803923, -114.57751856924267`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.05865898803923, -114.57751856924267`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.07790695670259, -122.27361837262796`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.07790695670259, -122.27361837262796`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.09272285319935, -110.37744519383415`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.09272285319935, -110.37744519383415`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.14999799112186, -115.66636842056435`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.14999799112186, -115.66636842056435`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.17314585459348, -90.49044665110452}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.17314585459348, -90.49044665110452}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.21664377425902, -108.23133998263515`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.21664377425902, -108.23133998263515`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.2519273651987, -97.5790389290786}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.2519273651987, -97.5790389290786}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.26941827979846, -97.47500225281311}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.26941827979846, -97.47500225281311}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.30081759023436, -111.33186604946383`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.30081759023436, -111.33186604946383`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.31838691418698, -115.7798979244368}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.31838691418698, -115.7798979244368}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.32745531642234, -109.00422891711388`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.32745531642234, -109.00422891711388`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.36999612117368, -97.97411937127211}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.36999612117368, -97.97411937127211}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.37827722447163, -83.60163569892703}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.37827722447163, -83.60163569892703}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.41271002986567, -111.1713740454733}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.41271002986567, -111.1713740454733}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.4863799852638, -123.31472594213405`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.4863799852638, -123.31472594213405`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.58029457668415, -85.49333589547217}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.58029457668415, -85.49333589547217}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.60214380958346, -104.19727721350824`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.60214380958346, -104.19727721350824`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.61871692336064, -114.80952202563358`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.61871692336064, -114.80952202563358`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.655258165261664`, -107.22974227743039`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.655258165261664`, -107.22974227743039`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.71132986231401, -87.71243017938596}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.71132986231401, -87.71243017938596}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.76646128788145, -96.6001813329906}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.76646128788145, -96.6001813329906}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.78532178500836, -85.72983833813431}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.78532178500836, -85.72983833813431}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.8152073806221, -104.80359965826459`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.8152073806221, -104.80359965826459`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.84313227944586, -93.29088026297111}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.84313227944586, -93.29088026297111}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.91245162360855, -83.82753420786788}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.91245162360855, -83.82753420786788}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{45.97281730752959, -96.36849130587694}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{45.97281730752959, -96.36849130587694}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.00644518963388, -113.63105096571164`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.00644518963388, -113.63105096571164`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.02401892942011, -102.35963648209753`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.02401892942011, -102.35963648209753`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.027881460279154`, -112.92038711718011`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.027881460279154`, -112.92038711718011`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.094854320331464`, -110.70552551168521`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.094854320331464`, -110.70552551168521`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.12155725802412, -115.35970818648926`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.12155725802412, -115.35970818648926`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.141325596280076`, -117.81911488174005`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.141325596280076`, -117.81911488174005`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.2517035078434, -92.31939900580878}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.2517035078434, -92.31939900580878}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.31627610881835, -97.04535860988398}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.31627610881835, -97.04535860988398}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.35493403157555, -116.87436903840428`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.35493403157555, -116.87436903840428`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.404712000031715`, -102.83354224591854`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.404712000031715`, -102.83354224591854`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.45113168641036, -116.33085035920931`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.45113168641036, -116.33085035920931`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.46908722927035, -118.34203783503077`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.46908722927035, -118.34203783503077`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.47834765485572, -98.80860798668671}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.47834765485572, -98.80860798668671}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.48649779296098, -120.87417380337254`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.48649779296098, -120.87417380337254`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.50594951410977, -84.73737538305838}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.50594951410977, -84.73737538305838}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.514106706282455`, -96.81177755200824}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.514106706282455`, -96.81177755200824}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.526817671871044`, -122.25410762727684`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.526817671871044`, -122.25410762727684`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.58038453253766, -104.01815054676483`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.58038453253766, -104.01815054676483`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.60443242625528, -107.24840188485508`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.60443242625528, -107.24840188485508`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.61968944469618, -85.91060925102956}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.61968944469618, -85.91060925102956}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.74956657679773, -111.45920565804845`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.74956657679773, -111.45920565804845`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.793240214722836`, -104.95939893030754`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.793240214722836`, -104.95939893030754`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.804176045036314`, -67.79340232209942}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.804176045036314`, -67.79340232209942}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.82984666679122, -91.22398213407487}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.82984666679122, -91.22398213407487}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.84276648499225, -101.48523860899134`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.84276648499225, -101.48523860899134`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.853227803112134`, -85.13105006476015}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.853227803112134`, -85.13105006476015}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.87951271475499, -117.37951234280531`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.87951271475499, -117.37951234280531`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.95814343296962, -103.97910452385855`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.95814343296962, -103.97910452385855`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.97018614084058, -114.57173229964974`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.97018614084058, -114.57173229964974`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.994144420014784`, -109.133856642627}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.994144420014784`, -109.133856642627}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.997506862732095`, -104.18013118913133`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.997506862732095`, -104.18013118913133`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{46.998974995672796`, -98.59032065969818}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{46.998974995672796`, -98.59032065969818}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.184074463399305`, -91.60677632640719}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.184074463399305`, -91.60677632640719}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.236786314940666`, -106.02143584185521`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.236786314940666`, -106.02143584185521`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.254523712310665`, -98.64112063864741}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.254523712310665`, -98.64112063864741}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.29402649443162, -117.91939576652877`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.29402649443162, -117.91939576652877`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.32281696024593, -117.29925848139867`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.32281696024593, -117.29925848139867`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.407436361897645`, -105.11862098851786`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.407436361897645`, -105.11862098851786`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.423339153984955`, -87.27817110097544}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.423339153984955`, -87.27817110097544}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.44409558212152, -105.65877154392412`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.44409558212152, -105.65877154392412`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.467716761796446`, -103.4206270622829}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.467716761796446`, -103.4206270622829}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.48069006585086, -106.82753512781326`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.48069006585086, -106.82753512781326`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.52646685713864, -91.63888761128095}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.52646685713864, -91.63888761128095}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.63839869609229, -111.25473042905152`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.63839869609229, -111.25473042905152`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.65432540423163, -100.26203955434558`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.65432540423163, -100.26203955434558`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.66010313567833, -88.33451238813163}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.66010313567833, -88.33451238813163}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.663745810093914`, -116.31950561424314`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.663745810093914`, -116.31950561424314`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.6765274578994, -107.36268928067183`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.6765274578994, -107.36268928067183`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.693388582555954`, -124.23681935045198`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.693388582555954`, -124.23681935045198`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.75652547474299, -120.1911742151818}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.75652547474299, -120.1911742151818}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.80269505046418, -88.27411852232218}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.80269505046418, -88.27411852232218}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.869038324851964`, -105.72828225689838`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.869038324851964`, -105.72828225689838`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.87095287122317, -116.83141754896094`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.87095287122317, -116.83141754896094`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.92325224171186, -122.79320953011363`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.92325224171186, -122.79320953011363`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{47.9420623407575, -93.99747045277246}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{47.9420623407575, -93.99747045277246}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.05410192790129, -118.8344671985625}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.05410192790129, -118.8344671985625}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.057420374527595`, -94.44938746826172}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.057420374527595`, -94.44938746826172}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.06012234553443, -117.51271356288497`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.06012234553443, -117.51271356288497`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.09322176568979, -112.88355634461752`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.09322176568979, -112.88355634461752`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.16244372236987, -112.0095054133902}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.16244372236987, -112.0095054133902}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.24293427483608, -110.95190377251603`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.24293427483608, -110.95190377251603`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.24911761905298, -97.38159004573991}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.24911761905298, -97.38159004573991}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.30702813060117, -104.92298758990864`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.30702813060117, -104.92298758990864`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.325124556919526`, -117.13084134332412`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.325124556919526`, -117.13084134332412`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.341279764896136`, -97.8869998158254}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.341279764896136`, -97.8869998158254}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.39772095792664, -98.19745081491564}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.39772095792664, -98.19745081491564}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.54803685577764, -101.41924129434481`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.54803685577764, -101.41924129434481`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.8705435998923, -99.97907639618238}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.8705435998923, -99.97907639618238}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.889236991183566`, -98.84038223219798}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.889236991183566`, -98.84038223219798}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.900748457746985`, -101.87544743948763`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.900748457746985`, -101.87544743948763`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.922709599285795`, -111.08727176050589`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.922709599285795`, -111.08727176050589`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.98641173538188, -99.8960569075885}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.98641173538188, -99.8960569075885}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{48.988797341795205`, -112.8894961944655}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{48.988797341795205`, -112.8894961944655}]], 
          Opacity[1]}}, {}}, GeoBackground -> GeoStyling["GeoPlotMap"], 
       LabelStyle -> Automatic, PlotRangeClipping -> False]], 
    "BasicGeoRange" -> {{25.736851423331768`, 
     48.988797341795205`}, {-124.23681935045198`, -67.79340232209942}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> 
      GeoStyling[
       "StreetMapNoLabels", 
        GeoServer -> {
         "Wolfram", "AllowProviderChange" :> GIS`$AllowProviderChange}], 
      GeoCenter -> GeoPosition[{37.08178856846654, -96.0151108362757}], 
      GeoGridLines -> None, GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoModel -> "ITRF00", 
      GeoProjection -> {
       "LambertAzimuthal", "Centering" -> 
        GeoPosition[{37.36282438256349, -96.01511083627571}]}, 
      GeoRange -> {{24.42787464689936, 
       50.297774118227615`}, {-127.0589902018696, -64.9712314706818}}, 
      GeoRangePadding -> Full, 
      GeoServer -> {
       "Wolfram", "AllowProviderChange" :> GIS`$AllowProviderChange}, 
      GeoZoomLevel -> 4, 
      MetaInformation -> {
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "TileSources" -> 
        "Wolfram Knowledgebase with data from OpenStreetMap"}}},
  PlotRange->{{-0.48545033834208895`, 
   0.48545033834208945`}, {-0.22527063821047172`, 0.28648226657633535`}},
  PlotRangeClipping->False,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.739483702062114*^9, 3.739483749084817*^9, 3.73948378592521*^9, 
   3.7394838223055553`*^9, 3.739483872537073*^9, 3.739483932440518*^9, 
   3.739484152232882*^9, 3.739485214994322*^9, 3.7394931134761057`*^9, 
   3.739493152962872*^9, 3.739493435953285*^9, 3.739493694304549*^9, 
   3.739493854013755*^9, 3.739574363259782*^9, {3.739724526924625*^9, 
   3.739724540906638*^9}, 3.739725014717834*^9, 3.7397250706901417`*^9, 
   3.739725113415202*^9, 3.7397251990907803`*^9, 3.7397257429116592`*^9, 
   3.7397339050176373`*^9, 3.739783946217455*^9, 3.739784604933227*^9, 
   3.739809260822057*^9, 3.739811811306488*^9, {3.739814262094508*^9, 
   3.73981428839732*^9}, 3.739816879867934*^9, 3.73982865617334*^9, 
   3.739829011293665*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"55e061f4-ed51-48c5-ba92-bdb25dbd427a"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       FormBox[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJzsvVlzHVe253c9PPjRX8Hfwq9+9Gs7/AG6w+0Ov1yHux3hcDi6o7ujbXdE
3wdH27f6VpVUrYGqUlFUlUiRlAiSKmKiCBCgRExFjEUcAJQ4NgmBbIihiPT5
7Tz/zJXr7BzOBIAiHhbOQZ4cdu7cmfu3V/73Wv/VP/if/97/+J/+1V/91T/5
L9p//t7f/9/+m3/8j//+//7f/Zftf/77v/4n/9M/+ut/+D/8t3/9v/7Df/QP
//F//Q/+s/bC/+U/+au/mmmv/5+3v/9mejuJW+vUjsumtpJ3b6yk3yc2krO3
15OfDneD7T29myztjSfTm+eTu7vXk/ntK8n1tbPBJjY+S17s7yZre/n62NPn
u8n4vd3kzK1W8tmdVrL9cDfZ+r4Vfjt8uZ2t96r9nf2wb+3T27VVfjvXtXxi
czJZ+346bPv4+XLh+EdlD59V/74wd6Xxvl637cdXxWXU1cz9S8l0azGZefAg
2FznE7u9sxTWwV7stwp1y/df/+pfBPu7X/6z5J3257vv/Mvkl3/3z5Jf/fKf
h097LK7zj2b7Xm1hvvpcObfXPeyP9V8e9H9taJf2f/bl61fLe913L+fRc5va
XYguX2rthvtIdVO2/cuDrcye76+Fe2N8/dNwz6w+mEqevVgdWdn99Ystv756
LrPLK5eTaxMfJ/vta/DoeXqOK7u7yfTabnJlaTeZ30qvI9eIz37qvek2o7ym
Mq4fz0a7bO9Jes5qi1XXVubbdj/GPijL1vfl98XGg/T3o2gvZW2GZyzl5Ddr
dfvBFubGsu+cD8Y10LW2z1x9ss7qXvpJO/TPB9ZTmViPfah8+wfFMu53jvna
HOv1YV6G14f57yqPNe1H/3M82grHf91pOyqf1rPb2HNT2/LnrmW2nD8ddq/H
59RaK5nZaN/DK2m/XvZM17IzH/6b2msd6/fsfu1v9jv7npv9vHA/aDs9K7gu
4fnxMj/Xg/1OfbxMt2Ed6tHfV/68zkwsJ+9NbQZWujp/M/lhfzPs6/rKbuDX
925uJ5futjKe/XS+1W4/rZo2v9c+Tmoce2Fvqs07F0r4+JSXj9syRu5wcuya
ipHh0nvt/pb2dXtzJ9yz9G96/vPJsk/mWtkzBfPPGzGy7EanLy8ycTcfs54Y
GRZo0q8M8/ndlH17YeQyo45ubl0M9eAZeXpnL1ncWYuyOoxc1u+Lkb3B0dhv
3v0/ey5nGSPbZ5199seeQ76+Y/xqr0PV9p6r9J1PTP3MqNtNr7Z1bzq6nL5R
jNy03C9friffPf82cDH3buvxXFcdDtPKylW2nGt06drlwCJiRbiM/8/ND4eR
m5jaxKivbYyRdT1irFBmg16/JvcQ9fHlQivj91GbHx+oXNynd7fzMjU9PzEy
da598wnXHOx3H9NzmRjZMznfxaZabhnePuNoyy8P4r/ZZ6DlZc+4lvVgZBhV
63FuKqvft2dey5E/HRb3X9c+7P/ck2oTde3w0d5C8NHYa+zr0ZZLv+t+LxsP
qdyWk329UWeYWNhva//3jO3vi92dxeTyrfmcT9uc/MGtVjBYmGVcG9qp+Lis
TtL7fy/Y4au0f1/emwicTFt/vt+Ej09Z+TjsnbHZ9Pv4aqNxuq632Jh2dvHu
Tli+srudrO3tBD+yGNnvAx9XkYPPGUY+W8nI7G/3Ue99xSB9kO5Zvh8lI2Pc
R/jsxciek/093fR8X7b3+6Oxw/Z4Q4wcY2j5oLuO097229nLhX3JJ+2fRyrT
IMzThLHrbBiMPApmm5u+0LXM9iVV5eCestf8qBm5l2snm5y6knw0k75rgino
fz+7sxMMRhHjDJuRXx/mz6WjYmQsxshig+MYs+m8/flT77S7o2wrnlNlYuRe
DUaWz1f1bJ9BB/vFY+s723D+fKr/kq8x5r+Vj1q/8z3w2UHxmJ59Yz6DmD+Y
4+PP57hiZLHzfuTYlpFVRo01Mcv4noFfm3Py99zMRiswctP6n526kLz/m/8r
2tY5Hz9GUb2pr7V1ZK+TfoO/va86GyO87NTHy3JftG1z8uN5hj47tZT6jy2X
thkJPtb/PL8YT7L+/Fb6/Ul7Xzc3drL7inIcdtj90fPlYD8e7oS+feu79vjn
QXr8j266Y53y8smw9jXHd6zvy61W5rOqM43X4GN8ynfupzoLfMgwsp5Pvm2+
2N9wfuMyRs79y/iwe9VV6L7r5xn72n3XPe3Zl+U8xzEdq18+jo3t0bpw/jN7
24GJZwwjY76sdfuPLYePsZcvUvO8i4mRMfmcraHlwGLbenaO1XXsHLje01vn
29d+rPYcqtpAL3XRy7Xqpe6bWMwf3y8jq4yxPsKX+Ti4ef/pWvLx2f8v2Vyb
Ce9vLy3kbKK+UveV3vuPgtuOio+rzDLYcRzf3yNi5Nhvw6x3X/exd/1V17zM
1xjK/cN24GRpJ6y/94XjY/u/9Ydgegeq8pZxlmdcy7ry+7IvsafXM9gy6nhi
N/Wz+xH+9u/K7DE9g8qs7/Tpi7Wude0nxv3JfdhL+4Rhz7bvb1tPKidl0FjE
nodlZMvD2t62hV/87f8RDH+1rUcxsr+uvo3Z/20d2+vS2lvvZtGpreS9wEvb
XX5qbfsk+GBSHQU+43S99H+OcWd3Kll9NBeW8z++5wvftgJv98/Ip6x8JIzc
/kRrBPPCu1X3wP7BXuBp7h3WFxuP32uFT/mV7VgVXxZajRvrlyPaCu8zPpds
PpzJlsPIPx7WaXxys+29nz7DvxsqexbruWb9HTBy1TZNTH4uMfKlpbEuPsb2
D4p1Mux+toptrYmRZXCz1T/zf5kfusrSaz8WPSZamzqNrfwDw6yTtP0X/TW9
tK2y3+p03dXWivYrVTrDYddJL3pnGFnt4xe/+OeBl/FTSa+pvpznCn203h/J
D3YStTL9mngUTaOW1Z3fINfPvtuus1HdPzrH/YPu/XvfYV0d+PZMfe49aQVG
FnvqOc3vsfkK+i4WtmNTtUV427K2yuAZmeXWf813aSNi61t+9b9bfqNMYnZd
w33DvZ63vR/b+711H20+nE3Wv5vtqkP0tmNLrXD/+fqua6PoIODk3fvz2baY
yitG5jix51HdeP/x4+Vszs3jx2vhvcCLF62wL71nbjr+pQz03/YY6Cven1iN
MjIG1/p3HPJdS0uh71ZfQZlg5Efheu4l15ZTfUbgsPHI8U55+fiNa975fH9q
I/AtbRdGjs0jgUuY4wW/wsiwMPcS22G6n3UPFrRb7T4UHXG1BvlsYD+WpfP5
8t/g5KZtfpA+1POxPmP+4fT91XY4d3Gt1uunb9HzQ/9TZ9IkU18xTi7rX06S
iZGtiaX9/+JjfNqPni1lvm3anPVzv9jfDGMIrRM7bpPnpG2zvZjvc3ptW94G
Y+T8XLy+yfa3sb69n+P4cRP/4/Nvuv3e/bnCuwnPyNzDO0/y+VGUnd+Pw+c9
auOcMTEy/iT6Td6t180NRu9m/YJN6qdpHaotjarOxUz6355rk2OW3Xvywd6e
TeftiRer7nHPyeJRq0eRTzp2HjoXfyzLrbYs+4aH/XXzGmV7DPlatR+vE/Dr
e/N6D/YhRtZvus/wbdrzbDK2Zh38x/h4pUd+6a6x6tVqqpu0Ufus4nkvRmY+
Mu8cYWRxsuofjonVrz7tOyud34un68nS+lI5e04V+xr2sfs49Rd7Rj58lfoT
WYfv221+/0v7vF+11/ndxHLywfhKYON3/7Q0AkY+ZeVhWGG+Xvvai5HL7gG0
jfAqvNJ6vB60x4/abUqMWGjH7hkGW3tfMbErrqx8XuBjdAWKeQGTw4lN+3Le
yY6KE2OMzPnj67LzFgfVItvxunzpzFOc3d0osLG0F/45clI5uc7EyN68Jtqa
ZeQYtzXRfPj3bP1cryYsXuf/bMrIaAOn11fa+4q/V1F/7f3Kvm3wvamvpazc
qf6pFcrC/R1bh+cJvJfr87YDI7/X0Svy3Ph3v/zXyUezqR4ZFiljZHQXbzIn
e72YOEX92Xs3WwVG5n++o9W2jLS61wrbiZHZhnUHacexdiSO8b/pnXm/WjaZ
5UCrgW1yDp69fNnxI/Nd8QysbzV2ruK21A8dHx/oONaXoecH7VRt1ZbN+on1
DCjTRlhfsn1eWA2C9T1bPvZaZm0f23esnvmO33jjQfru3zPyT4fdvOl/Yx/4
eGHk2Dp2HoDVdpddl59cWb0vWZoLtMlnPv5/AyPbbWHkmLbM6jJUFta7OjOX
xbCI8ubERohzsfmA4+T+YdnrjraCzyf/IWdk/RYY+ftWcv72amBku9/RMfIp
Lw/MyMaXXPdcEiM/Ne9VYeTDyPt43zbpQ/GFWv8wfDx27w/BWIavWIwsFv/p
sL5ftM+BYfQPMYN9/b2MH73fY9p34mXnpHh7MDJx4GTi5DqN9pvME2VmGRlu
9v7oGGdb/7Rn5LJ3r0011b2816uyiasfJz810BMR66/umuud5igZuRcdvD0O
moybC/Nhfih92Pl2X8x1W9lYyuaIM+68tJDOE1LsO83te9PaNOWd3LyQ3L7/
ZeF+Ze7Px7OpRgYfMv/DKJw/XMxvYmQ+MdvfadnZuVbGyHwOq36q3pOIBQfZ
v28/8o/2834mVm7ra8higVUwMgYr0eYwq8+w69k64FrRhqkLMTLt1c4r55j8
7+9Je2/68patZ/2/tr5em9+8f9r2jboPPSNrnV50x6XjZsOuvt7seIj72epZ
yurZP7P0icZCx8GfzOcvf/FPkzMf/Ju8Xl8Wt7fXVH7fp8/b993cYmDjQgyL
iD1+ej+x+oln+xuJ5WTxsb7L0FXot++eLodyvCctR5uPA4cdCSOfsnLPFq5L
K1wn6Yh5TseeI+iJ4Vh8d03uFRlxfvU99YvmWgv2hf5iafd20BvbGMwy3TNV
xzn4IX6v9fuMjS2Xztiu52OMNvEh19WXnm+HQY97Lrm8fDn5fGEu42O0F7db
t0sZ2Zdx0Pp4k63KH+310rF16vja1/sgPryl+bFG2u8yRi7z99m+N9bfNDW/
fi+MbP+nf/jN9bvJL/7uXxWeRegt4Av4BNbDjwpbSIs5jHHISXrPAlfBwZwz
ZWIuB9/FwprDE+Njz8kyMfIwzlPXjWtgdQc8Y5sycq++iyp/Yi+Wz7Eey9pc
XYwUMTLrqN1VHQOe1JxtxZsWIxPj2543+7McKx9vLBZF7NPzsvcR231YHtU5
2+1i/InPmHGpZeR+24+4NcbIfr/y73uNSKwd+uUwcsjRsDKZ6S5+/ct/UWBk
e0zphcXNGmOIkSuZkrl6kxvJH2fob+U/brV5Zj757tlCojl6XmuBMcZlnhff
7++shljI4RkoXzU+5DK/9SkvH6sxdnn3q8WMkYlFwXO2jJEx7y+O+UL9OxHl
wpjYuBqJWXEu01WEfuPpYnIr6G/z9cre4fpn4qDP1dj9LGuqn2htzNSuW6br
8s8O6hoGpp7QpDBvj/qYun87ZeR2vdrrEbsW+0Osl37tpDBJU4sxsvzUnqMV
08P+bmNQx/zZZce1jBxjctUj9wPzGDG9Z4m245r5kJnu+4eG65XEPOk1jkkZ
I/O//KbwcVNWOq72Nei7K+JE0UdZRhb3DtLnfbHUOyNXPY/gO8ooLV0s3n1d
HVn/YRl76rkove4wro8YWb7kJnXSdCwGU9o5gZT57tZO4EwYWVoIz8Z23p/X
YViWtfOC7bjH+5h5t6L3LGI/H8dC68bmSPJ/TFdhy113//m+y2ogYuvYdeXj
F8tzHsxx8uuqzfmxg80NAydfuPBOlMltG5AtbK4l52/eDfqJOkZ+9h9yfYU4
+M8PbgZGVmw3aSrkS+b6X2ufyye37iW/n1pMZv68GvzHwYcMF4+vJu9cmTlm
Rj5l5VLDxy9Gbl8r5c9p+gzy94WWvTJ9o2L7yspy6qHhEAv/2NE2spyYVr2W
Y9i+U+5Ny711Ojw4ue7ZbfuD2HnY92KKJ2112zLGFjGdy3FY2bN0GAwzqI92
EHv6cCVZW5roebsyRvas7ZdZHYnVj8DisRww9nfP67HjxnTf2peOYc2XNXZe
TctljwcT57H4e2dk7kF4BN/dSWvzdduEeKgdfQR8wjlYv/EgfR3b93N/Vf0m
ju9nv9ZXKg1DrE48yw16bWKMTD0Pq38ozK02836lCdIz/GC/6Cf2cZtfVrCw
ZVyrpfDvhjRusYxsz9PuP9dbpO2Ee0h5e/pp27YsWib9A4zsx0cH+zkTa5kd
P1B/yiko337ZcdjGzp8K8TR++S+S+Vv5u+uHe4uZD5n9kydvcmE5mVheD4zc
6J6a3Egu3l7ONBWUW3lArNZCuf1gZO7rD2/tBEbOfMUhdlxRUxF0Fp14cifH
TgCfngRzMd/4zhy0fvsH/leuAtnN1npxnllrsTQWMpwc7oX2vev300s5+rUy
/276rL2S3cd1+7k9dSF52b4PBykL8abx62tsDR9jNhaIvjMOGcb5n1rcyBHd
DyMPar34UcvGEGXtuZ/ykCsGX7ddxliWdx3Y988Wgg4I/zb/40eO3cf0zWiQ
iSklH/YXSzvh+YNOuWnd4N/EX4c/b9DYyeIM+bSGUV9Vx5LGmDqg/INysbdb
671xctlzzcZRGMZztspH6+M1DKJJzvb5Io+JKC1EWXyKqutl58eV1Z/Vc0gf
xPoHLiay2pn8n4of4jn4p8Pive21FNafLF73vhddN6+5SrdL2wg86n01/jyr
rn2sTmJ6C3v+5Ajy2midT6uTd7Opv8uW/eLnvw6aZBgZVsanLEZG868YE4rr
hga5K0+IM9j4weOdjIt/Mn5ixa6Qb1k588TJv59rhVzVmN9veI/fseNn4lNe
7rIsHl/OyOiR+9X82Rhtdvnk/ekCIxObQXlDYrrjfm0Y/VjVPuRHbpJfZe/+
/MCczHXg2lAmNNrSW2C+3mBk3rm/7drjURmxfIfdnoZpJ4WRZbX1EnnvQWyS
nccbnXmLzep2EEaWD0vcYRnZ5jYY5nVif/jHmWNXNg9vWIZ/fhjl9fMtmlhd
ThTqPeYnrtJh9Gsw8sT87aw88iVn83I7PmtbVl1/ux/v77VlFj/b3Omaj6YY
LeI98Sr1Kn2Eje1gy2V52WuPtb7XGHs9ctXYJr2H0pwGZXphu26dPtD/n8cv
Xs7OgfJwD2jspWVWa6J6tT5vWw77P/Vo89FwHW7OXM90yXz+5ne/Drp/GJlP
7r9o7OOYdfy+U2utTnlzrcVrF9NCOgsbCxlGJn+efMWWi/N4CcfNwKesXMrI
xo98fXmwZ2oaq6IYi6Isnm+qS84ZGd+TndfXj9XNH2niA6kat+p5Y59pVX0H
+X/mZy72dS4cg+uCL1nHvfdgqlSnIuvF937S7STxfr+MHLOj1Iv0qkltUg9X
L37QtRwtkGKU9poL05aVeBdoMn77278J8/f0WRb7GuO+J15cLHZy1bkf7Kf+
nkcdHanykxBvTnwzrDaYxqzI47vxP8dg3seoGBmDRQYptxi5bj3LMfZdW12s
w/0SHhRj99uOdHz28/n4VMbIsfL6OMUs0zPezu/w56S+wupoFR9Z+TFiOl3L
6dIRe52F1ehaDa6df2fHxPacLTOX6fgwfGJwn+f3smeG5VeddxUz23gTdvmP
r/IYIPiSX7vtLP9r3GHjf9vYIBprsC/8zoqLTd1dv/pJ8CfDyCx/79yZwKQw
MryDduL96frcz2dv3gt5PqgrMbH0xpaHNV9Pc/akveEetzmmM59xR3fxZjHy
W8bL8iG3Pz+8Ph/s9t3bXW2+qYmR8SsR01hzzSwbM9dM+UH8nLxBGFmxLAd5
rtrnnn9GKJ4Fuq2m7wAH8SFzX4mR7fJyTj7XOL/Km2L2eXzcZRmmzqJXZj2u
8y8rJ37erXvTXWXEN/z6sD52ZJVmHUb+89aN5PqVM8GmJs+F+HDSNhNPGW62
fuiCbvo3/zr59a//76BrJr9MVV0rt7XN98v/+we5X3HQmI4y27fAxBwPX9ao
+zGO1Qsn6/lnGcvzb2w7sVwvvnzpFrxGITZPY5A5Mp9f+TxZ3FgrPcd9c66v
3bmIZ8Vl+lRZtUy8aM9DvGbrUn0LbKj3CBe+LeqPbZ3YeBQ/HRaPa9nR+5i1
H3tetl7YN8wHJ78uqbuqehefMq6M1T2/o0OGkbUPxai2+eaVV8CW3Y9T1L5s
O7P9r3z26v8VcxlWXW+tp3lF2uvMfDOTvPvHPyYf3PimN+1ve92vN3YSOw/v
8X9Yz7QU0lUo57T0F6EtvGR8vJ18MrORHfPoY7yd8nK/luUOYRzTvn7n76wG
Rj47O5d8OLGUfDH7dU/9Qvo82Orc6ykjj29cCpZrAq4mX210a5Fh5Kc95LH1
ppjvvWzjYwBVjaGls9Czs27f8PHE2G/7Ohfd/8Tgs4ycxt2L+4/1e7/1d9Is
Fpf0OG2YjDzK8xpmbJcyg5FhV7sMPzL3vG+DP3bislTtL3a/xRgZHzZsznw/
ONnayrfXkqXFyeTmrSvB8D1rDmGZHxpGFg/vPSnGl9M9OKxxN/7Crn6F3Fqd
uEKyUfSdcFgTfZjaJj5uq3+1vFo2X6NfnsXEP+LL15F9DmrECNt/sZmVz7Km
9Q+L/SwHa5mNQ2zHDradWM2AtrFz6VR/YuQbK/l8E5VN63HN7DFtvXr9hPcD
2+X+/iL/kN5dnDV5v5qO3VVPdeMhMfLVsTNdPmeNATRGtfmOvK/a30/2elk/
s85D7ybC3MAf9jr72Atz68J7mwufN7vP2lx09tZKMrOZ1pE0x3Avz7vxjQvJ
jdUrWXxklpM/z8dFzuJXdPb77rVvTgDTnvJyE3tnbDaYZeRri/cDm023x5gw
8szcVE/PItr8zOZc1l+ik/Xz82L5pzVXr1/jfuBdy7Ceqd7EyE3fv4qR0Vv0
czzN1bXPiDJG9rGqT21w07vA4Gdqs1k/jMzzmvf5wypTFTOo3+8lJlevpnZ/
6dyvwhzG2Dr4gbn3Q5y49if/Y9zfYdnL9SxOjeLX0X59/Louf1Z72xgjw9Dk
67PvZ/FNaU68/M/iaH8+lpEz/9NBnmvN+zN7rSuMe/jmRgkjt5+/sDHMYll5
FLzM3EBbRrQpLCOWBoYWhE8xsjjGMmudRrtKq9akfXsGKqvTXkzvBHgWT02N
ZfsWC8tfiVltq4+lpnfnajdeh+HZ2vqNPedKjw0ja18xvYNdVhbj2B/L11mM
kaVLsPfb68h3b9aHHWPk4CfemCnM15O2IrYvf/29D9yv4+tB+7b1ZnWQMLLY
lvx2Qffw5VfJu9fvJh+MLyYfTS+Xax3ay7kf7rZ2M/8w8ZC3Ht9NFvb+FBj5
8vJYiHXM/h8/3+qK+8a2IRaC8SGHOG/HzrGnrNzIzHy996c2Cv0BjMx3cbJn
5TKtQchRtH2loAkoY2TmnvEd9uvXhzwsrWXT+TnNNYqtwMgrd68PHN/CmtV8
Hwcj27H+Uepqj9P6ZWTV17DKMWpGrruevTIyeYHg4MWdxWRuezLLFQQv7x9s
BP2yxseWketyqMDFF87/KliMkVXW1511x66fDZyMP3lu+kJgbHzT/KbnmDQW
lpH1nknzCPtt71yTD27l+T0CF1vrMHIXP4uXhzjnnePgw1QeORjZ/z65nl6r
7H1/J7dvv+OFXu4VXcem7/yb7M8y8uxceh8fdHQCut7iX+mILTeLw7ROTDsc
0zdY3bDV0Hpdr+U7Gz/EarO9BtnWlXyoqjev67W2/TCNoULsYTjZ8naVBsrv
S/Hs/PXyWuSNe1OF87Pn7a9zTGNR9yyyjBzjaV0H+BhmXV/9JmXkPy0lG62/
BJ1xGSPj//1sfquQR5rP+dZ4+7n1afuZdjW5tnYpmftLK1naWcgY2eYQOXdr
NRwrzNVrf755c/TeXl4u5J82jFxsi63kQfvaw8dTt64l09Nj4X/1RbYdK+8X
mmJ8x2WaAMt4sPGPDfLuHrc1zR0Sszo+7rXf9eMN5V0Ztfnnsn1O/dxtEEY+
arN99KiOgQYiVh+pHjn1D3NvN2Fk/Mi0Yz6nt84ns/cvh237nfdn6yH0kT9s
B0aenLpUzPty5v8Jn3D246frab6TTnu272/FyLA1jM06hwf1mmtraUzN7XxO
Oz7i9vezt9eTS4s3g5XO2xsRK1cZ+bLJm40+getgGTn2HDiJ5v2tWPAjT3ye
vHi6VtCwSlMs/mX5K3cvYehlxLqvzLGsftrWkbjWcriPo+IZ2ebi0282N3es
7i0j2zLZTxnn5nUddc+OWB/lfc36P9Tni61C7hD97v1LXldh/6/S7kjXpfXs
WCFWbjHy9NzXydLK7eSD8TSexPtf3Qnfs3we40VNBFoYYlLAyOJj5veKkbF7
332dbD/5czKxuhOMfNOKeQErrz4wufTe6Pl5byEvZ+2hVYhp8cr5cGDijIvb
vFemvYCRs/jHO3shBrLn49s7S4Hp6Cub5AU5KdYvI3/fuhPiv/FsPjz4y1DK
kmtUzmU+ef02ynfsb5Pf2BuM7N/TnzTz8458X9pP2yi73viRyxjZfqrt5O/q
0zkK0lbAy1WMXJU/MHbcsnPg3D0jX713oSvfCf5oW26rhZaJkX2eFGJxLN3t
biNpzI0iI384vhS4+IuVy9V8bK39rM60yyP2RV1fPRfs6uqF8MlY5vVhf88A
baP5b97XqvUU763KB9r0eMyr1nEtl8LGYmTljbaaGqsdtj5ky7Ri6VeHxXvN
zm3xOm77bsPHQLZ8zTowsp0vKrb2Pu2fzHaeO+t0ExrzxK6lLXPZNbBljz1X
dh6sJ2fb40kYWfMArJ/X7tfG7SjzMfty8FzQGLqJ3wamuTh5K2NkdBa/vnIr
MLJv+8Hn27nf3p9aD+99NDdPnHyN+6LNx1fXLoU81M/3twMf7x+0snwibLO8
uxv2oVx6b68P+Q3lZaOzQH+s9kS+tqqcbfBijPde7G8U4lfYeXpZ7uQ2IzfJ
KX3SbBA/8osna8nm6lRgZT4HKUeZHlksMUxGrvMXnXQ/0jDtTfAjx/xM6i9t
Xgzb9/U75kF3gF+1ybpoL4h7jL04WEvIWUD/prm9/A4fw8u073Sd3UzDPGh9
ZNrW9jPNzuGDkS/On43mBcS3jH6Z/3/97r9MPv3iV+31x7ryH8pu3v0y+fza
+yHGldVh8v87f/ysyxcsRj5zq7+8Wnae3yjm+MHF4X1V+xOf8nafc4Gl77Y+
+XAtDnLfp3yLPv/FIPcCcRLUBuSDtfPC0CQHzm23CeVphJVbT/IYgPZdgtVJ
69PmiJaP1OohdHyVwd6Pfhxr713p460/VWW396/3Udt72tehvc/xhYuR654B
Td4XxPoczdXTPRDTzdixR4zzY/vVMj92tvUYK+/LF5vJ2RtzyZk/fRu4GEYu
sCpa4fFUExEYuRMPWTr9XIuc2ur3X2d+5Bvr55OJjT8mO0+2w28z7ftleY++
Yi+5/ue1PLbczy6Oxc+cl13uEMvIdYZPFI2tX0679TGQPSOzbP77BwM9/47D
BmHkrH5Wp3rexrMOn8SR9nz8MvLu9ygYNjaGPy52HuVxPSOfFH+6fbfrfXS2
3XhGHvQ8YOSYHtlfg9edfPLoKrQMDqbN8km75TdYGEZGjzG9vpLZ2oPe3zUp
jpT3A9r2qRjO+LPh88u3PywwMlzMJwwNJ5LbEqa+sXo+8PKlqY8CE8PSfIqR
2QY+wIf2wcVruc+387z9w507wTfL/gZh5My8DmMIPip001kuz44/2fokLdvU
XYsyX6b4WO1SelJ/rfppo7rucK/8r9Z/q32ur91Obs+OZYxsYwDCyJZBYzpk
z7ved2zbm5bZcYLnRHza9l6NcXbM52rHgXW+fs1LLePnmNm+p8o3jX326d+G
9i9G3r0/H0zrco6qY513zLdc5p/+ya1fp814+JR339vJJ+NzgZEtD4f3MvCw
WKjDyGJZMfLY4k5gZOktHrWfGzAyn3d2bwRG5juxLV69/Etg5EfPV0M5YeQs
xpz8yMfOoW+KHTMjd97biZHRxfXCGGJGjWc11pXOQnGQM81sazHj5lEx8qi4
ZRh8jEaF/GRryxOVPvqy87LPSzQqft4e//e636pnYr/b+PH8z0Wj0YSR8c9g
9LeKZ8//oyyXZ2T/DrTMV+W3qWp7seuMD7lfRi6rvzRWcG6/n+uOvdpLe+Rc
xR3Wv7f+/ULgYuZM4Bu+993tYH/4+tOgUbaMjC85cOJayspX7/0hsPL4esrW
3mcH81tG9r6jL5fHAhufm18abt4Qq8MYgm+ZssHzaJI5b8YTT1+slV67qutQ
FidTbNx6kvNrGfOU8ZKfa2b1Cdx/0t5K5+E1CPDb7NSFgt7X+rzFppq/6efh
Wf2A9inWtvvA9CywMaHtXDO11dhYQTHg5L+2bdyOV7T9wX75NWmiNY49B7yf
2m4nPYX1HVs9sjQvytcYi2fn3zFk739qrj31ffBDvk/FIWGd3Uebye+u30rO
Ti0mZ246f+54PpeuwMi6B5Sn+uZ2Fuf4dScvCNoK4lsoZwhMLB/zrb9cDP9/
ufCX5KNbfynGRD527nxT7RgZOWhuNrq07lW2uTqVzUOz90kYHz5dTG621pOJ
tdmu/BYze9vJ5tO9wMjDzjVa19cPYsNgZFlrYyawctP1PV/qmeLjg/AZ8yX3
YnVsXPb+q8m2b7rF9MjqhzGYOLadfD+jKpf6U733tXNiXpsyXFpoZblvqq5V
0+tIXfgcImF75r01GKuVMTJlDO+Ch1Bn9JWekamni4uzwU8K+02sX8l8W8wr
XNmbS9Z3F8N3WFj+Y8vIrMPci3TeULG++Z9YERn/Hsf7VeNbHnRfnMe1e9eT
9e9mAyP384yNPTMUi1rPbf3v259/H2/9mWWaX/l8uS8tb1pfa7inO/tbW5kM
sRdsPDF9F5vavOQqt73ulpn9vDz/XseWRz5qMbT3H9s68LGj7X3/k6uXsrFt
WX7Yuutq687v3+uL4GLiIbNcjOzPKVY2y8j2+uIL9uvaOtEYLPiMD/Jrtra7
HjRNMLJv12gtMl1F2T3aYVvy4+FDFiPz3ca5sDoMrrvizD14vJPuQ+92TrUW
Q7Kj11mcudXqKU7+5upUVDeQ8tq5qF6Wd6lhDs7TvaGyrPZV1afaZ1Q/NkxG
Hsb5wsLE1uNd9WEnvtYgfDxo/bwNVjZnr8m4YpSMrGN4f5r/HW6D4/kk7pfi
Plv/U9PjhX6/3e58DhHZswYxHG0/C6NeWtgNsXkHYeSqc2B/7Jf+1DKyfH0Y
sS1ubd1ILi1fTbm4ozPQfEJ0IGhELCPTHxNr9vy3qW4xfcZ2nuWdmPPH1pe4
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
7eO4+wsbO06MrLmVMf+mv9Z+TKL1bcwuG38ttg97jFgua+tb9rpmvlNWdCtc
Q5hY78E/mk3vNc6HdZUzm+/EgZ5cn8zmn8HGl5bH0vjYqxcKbGwN/66tF9gY
/QNce3Xs02T82iepxtnpsm27jI0p6RNh5LJ2LWM9MbLGA5w/z5nYPScOt8uU
I09248pHGQ9f+fI3yblLv+16J7PXuhvWw09g57lid+evJwfP17vu85gvXeMH
70/3xnJivImJL95tZYzMtfWMHCybh1Vs373ooRQDzvuVdbzMh6zcE6eM/MZZ
QW82Vd+3v2qoixAjw3HKNy1GXnq4ERhPfjaYE062mgsYmU98xvyu2Blwsvcj
w8hwouVuWDll2eJY2bOy9CBi5Bgf2/1SxkHiT/RilC8WK8THB2n6Tj9m/b6X
L7NBGe1NsSpGHlb96f1vL4w87LL0ez1j8/Zi8d/qGFm8q3lL8Iv8X8Qjhm/o
Ez0r2TlJsXf51nfp++ZHJq5CGat5Rs45uJyde/FRsX/7zuC4GRketqZ5fXwX
I/s68/Vm55uJAcVAumZWZ+s1qGXvN8R11I+f22d5M8wX2891tIqhi0lvASfb
dqRjwMiwsHiYzzpG1vJY+yFm3sq9uVBOOBle9loj+FbzA/X+RFpojO9VzwX9
ZteljqzvPbadfMWWi+dmLrbZ/kIyNf5Jxsj+Gvj5hnDyvQeTQWNh+9DVpfHk
6cOVQjlj96HKaOOclDEyc/TQHMOm+JwVR+KT2XLezfjWLu9nLGtiHZfGyTid
p/dmmonz9157vNOkH37V0Vc06SdTP3Ka7005p7HJ+6l/uRe2g5HLjosvFf9q
7PnQxGDez679ssvEobe2LmbrwudHxcj41P05o/uw/D4oIw87l8XbxMg2D3VT
a6Jh8P+XaWFP8jWI5RKxjPyiPSam38S37OO+7Ts22jfcBI89Mu+b955uZyxs
taNWm7F/UJ7bMNbfer7y9QlTlfmOKxm54XOZuVX2eCkfDyfOW78mNp5Ym0uX
dbTKfMcXO7fVKtSnrzfLN34unpaLkaWbsfmfrf5Y7cHHSWs9yY/jf8t1NEXN
sdpXme547+lCyL39xcrlLhYWM1t29r/jc0abHOuPMt3Qi63AyMzts3PY+a75
f2JlMXJZjBjfttPvrbDN59O3g98/9oywmmKY+FKb269fPRe4eGbiD4GN6543
/jlF+a9ceDfYVLufUp72zXtThfP0dWPvQ3wE4T5/0n1M+fn5fe7b6Sx3Hoyc
tlnjP/a6CsWwGESTLDPcm3GycvXZ+HKnjPxmmdPSnK2J94bha41xKrpYu5z1
0PGK5cY3LhUYGYPv/DuYfq2pb7vMZu5fKvhmxciwMJoH63f2PuxRGWMCGNkv
L2pBBmd19UNHcU4/JxsVI8evUT7Xx793PUrr5bgLc9eSqxc/qN5f11yG9Fz1
e0wzLJ1xjJEfPVvK9vPIxLOxeYKr9BzWr2zr2tb9+L2dLP5xEzYu+pibPZt1
LMa+aK4ZS6ztbAQWjc3VS2NqDK9vkC5XWoovFu8li631wHsZI09vZ7EBWM8z
smLhSids61eMbHUw+we5xtjm24v5pWXSVUjT33K5q60/0vsfFVND69hce74N
4EP2/EtORuVlxPApxziZOlMe5FedOat8Wj0Dx4BhYeTZuYkwvw82xr+sOBlh
WZuVl+5eC/uoY2R7DrDx77+aTdY3876LnNDw8MXPf50ZLIt/+OOzv8gYuel9
H9Mz8f/FT3+Z7rfTZ33/bCGsu3z3emDlh+171t9n2jbTuTzP9VXW126Xc/1s
bLcubUVnnl42V6+KV4c1p67D4acxLN5Qc4w8uVo9r03zU6W/t8azHC6m3aLT
iuYMaS0mN9vP2YnNycDI6C+Oo5/vOq/2syZWXhjfvh8SI1+88Ksj4eSquYEq
4zCOo/6jbi7YqRWtX0a21gtz2j7juDTkvZSX2G9xRs79WNZ/7GOl+vhttg7o
D5m/iGZbGuQQT2d7MtvWMrLl49g5aB5hTFfhGbngFw55aXMWtlqElGV7Y2Q0
I1Nr6yEOlxiZ48JUzJFjn/iYmcdHTFu49MuFVsbIw4h1obwk7Evz0fiEE/cP
tpOF9hhd62oO3zt//CxoauWHhL/EyPsHeWxf1aHVUrSe5Pk+rJ7Y8rLnIn3X
urI9w8iv3XUvyz+nslg/gdenY/iSrX9YjAwbi4/FyOSVw9TWxMjfbK8k8xuL
wTcdi8FBjAsxMloMGweD+ud/zctr4ke2dnXsTOBgrk2Iy9b+JO7ExYvvZAbL
hmO1j/3FtUu1c92baLGYz/ekfb7BV7b+aWBk5uzByBcn381yJcTe2aj+fY5v
O84hdsXV6akQ862KkcXHgZGle4px8qmv99RkaiPt9nK1Yby39BnXzch2zhj8
GMutN3bvD4GR9b/XRhy1oQOZ2Pisq5z4lHU+aDjE/9zH/HZt6XfJla9+kxwe
/GVkZcN37XXI1tBXNNG79BJTj34M3jjOa/Im2TAYuV87akZWv1SlYfTWCyOL
XxSnzfrzLNfiY6a/ZI5eiKUwm3Kyn/ulftX6CcsY+bWLOycus/vEYFLPvWJk
5bw7O7eZnJlZD59i5VxnUc6vnAvnoWNx3O+efxPiJPC/GFlaBNXNq44f/iDE
P9noi5HZ786jjcwfxzGJ1wATipF5/rFM5cOvHLZHh9lhZOzcZ/8+sBixGvhf
uhl7HcSrYkQxsl1mr5X1H9pzl4bG8rbm+1m9s9Wk2/3r/ZmPJ6j2aNuKZ2TL
yWJkq72Aj+15pvtuBUbW/uvubxg5vSc2ss/XhXun/h7UmOV3n36cnDn/ebg2
H374N4GN/+7f/dOMkekLucbEME7vs3abvPxlmPe22Krn5KqxM9pldBVwA3qL
8Q4bXLl9psDIqmd7XrHcmlqPNkPbQPMMJ783tVng4pgfOfseGa9KlxG2O43N
dmo9+pDLzMZwKdwXEUZGR4tvlt+Omo/9fea1FRg8bGNEKAYxjOzXHSUj4z9G
41HmR+6Fe08ZeXQWZ+SjiVdd1z+OQjvjmbHOyLfnGVnxkfW/4n/UMTKx2Gy+
BM3dQ/cgH6LYKJS10+453uPn9zt5+FpR35uWZdqNJ90Mw/9Vc/MsI2N5juiS
XHvO8Cv+ZMrx4Pm3aZzdx8tZnV+62yrk22AZ/Kr6ZD04vlfNshiZ/dh92xi/
YuQQe65d1vXvZkOMh0uLNwMnWkZm25mNVvLOmV8Eja3nXjQR+FVbT/JYGJpP
x7qcJ9vjS2du5o2VVrYevxGP4av2dWf5vZ1W2B9jhKUWvuhW8EfrHhEjo+Xm
f+qU8zzYzxnZ64/tWND6vjl/r0O2Wotbf7kYfL12e8WgI89ck3sp9p4ojDNe
bBbaQmyOgrVLX34auBg+RjcR/MSf/jJ8h5GpA64pWke4WPOG8udHzsi2bryV
LQ9lbvdf87NjgZFZhhYZPh43bCBOntoY6zqnMva28xKIY0F+kMDHNe9pYnoH
y8U+fvKxM9qpHa81ZGQYmDHey5JYVvz+7MW97H/8mzHf7LB0AcMyH78ilhfb
cz7/axlaZeJhjCJWcpkOuR/rNTcL8ROO+9q8KRZjZPoB+svZ+5cHmkfZxKp4
tReWbWq9cjdluHLxN/n/Tntsl8m3Jqbw78Q9I6uPhJHJ4aHtlLuNPp/x7q2t
sRCnmnuWa8L1YY5gWXktI1M29nf+23I2Vtww+Ix9WEaOM3XqM75zP+VD7reg
ETCMHBi0zaa0I3yXcDDL9Ay2dShGzmMCbwVfZRUnn5tfSs7c2gjr4LsODPlg
KtsPx4QHqQv2j7aC8uhdP2Xxmluei5alYFz4DE7eftgKOVDgW5hXjKy6S/Na
pNugG2E9yim9h8YfrAvPa13eJbCcZZyHGJkYuezzszvpvji2GFnX2mqUfewM
y6HhPjfrwHLej2zrYWlvJtsH9ar4GXbMVTa/TW3YrqP2/sqNLWPby+Dgd/54
Pvnw0zPhOyb/cL7tVtavXb2X94X4eTVmnFlaCnqLKhb32iT73Lk9/XmY7/f9
zp3wf4wJYOTrsx8HJg9j36fFZ4F/jqEBUX6+uY31wMiF/HklrGPn5pVysbUB
8mGe2s/EDCPXv0tplTKyXc67FNhzfOMPXfcCy0bFCr1bqzCf8GlJn8lyTDGe
LTMzDiAvCqy8uHFj6GUcFiP3YprDcvzX582wWOy3lCHuhjFXL+9Kep3D16tP
dxDz7z+bGj7iS+d+FTnXoj/Xvo/X+3DpVy2zWn7WuiyLMTLPJRgZboGRw7hd
LNO+f2Mx6LDUt7hZysjyGcN6ulfsdfjszk5lTDjly8OfKf7Fn4cPEi6FRS0j
iz8x9p9qgteyd/esJ7+ojaMGE9rnvc2DCyOjlYC74N+FEGM91VbwXYxMOWBn
9BZ8D3PP2uUO801M2VhfPlTKw/nglxYjM88M3cClmbuZzlP8a8vlTZyveYNp
Hoj0O+wLA4uf7ZgARvb7Ylv7bLNjMLUbXX/pmjUmVCw5Gf5cH9NCc/jEyPYe
1T7L7nWrNfJ8nmmMXnT3wf4ZQP9LfDaYGC4NY54Xm52YTykjc230njTGrDCy
1r06MRZ8yVeXW7XPgKLPtxXiH8PI+n253WaIDSVNsj5hZHTJGqvAyOLk2DMO
RqauVjZXAh8Tx+K9rxa6rnfGxNIdd3LgVXKxNZvz49TeOivEQ263BXLYVPff
zd4fc48W45KdPB8yvj2e8ep3Yv7jrvNqn3/qE2wFZmYb60+GkcvGEP0ajNyU
gY6KlU7q8Y/LYn7kKkYeZj1Vvf8cxfUdhJFtHNTXzqyudO3BWkHnYI/p80Lo
PXYas2s77U9drADPyOPr4xkjw8Gx+Xky5kVdvJv6Wn3sCjFyrJ6sXrkY8y2f
08d6cBa8qfxscCYWnisRHy3rwaCwKtuFMcOLlBd4D3/4w1amVaEsPK/C+KK9
Ps87ls1sTSSTa4uBj8XIyoeBwcWKUwYri5FtWVUWz8hsyzH1Dp95h59MpTpl
MTJx4qTJUMy4mHlNNXWGPxYupu53H6U5VWBkfmPuZtO+z+fkEJtJf+zfVdh8
fXZ99MacP35lXTtxsx87KVe3bSevOnNEfzLHibXFGGOXtVniUbzz/r9NPr30
txkj857XxsDQvBqY9ev7lwITe26FkVl+aelKYOSZlXuFstY9z4gTJ30Fxrub
KfPeVsdSLDg+4WRdEwwmsXM1MXgYI38ejNylrTBMI8aJxituYqc+5LfafM6Q
Yc7/uf9otuBHvrVzL9hR9OXwufJIaxmcwnNcGhD6C7TIyjHt89PdDGPdc4Xl
Pt8zcxJ1fszfk49nWMb+0XEcRZ2dWv8GIx/Xsd8ERsbQI89NX8j+b8LIrKdc
0Pa7z9Hn87F53xNsDON99/zbsI5lZM2jZz27TXgH3+bjc1c+Ty5du5x8ML6U
vD+9Hvyd11fy3MWxc4Wb8VeihxUr//sQU3MzbIvWX5oGy51oj9MYb2sZt1pW
9owcm/+Pn9GevxiZY3FMNMUcT2xn2Vh8rOuxH2LctIKxXGXl2SkeZBs7h02M
rDxOmot5deJagYuJH0cZPr7wafj/g6m1Qt9EDDd0FLAvOhTqdPxezsjoKTBx
LcwMIzfVYKNbvbu1k90/qX82f5dhYybYdu/1P8T3wEI5yL/XrgtpUKhv61f1
8TW0v58Oi/dA2T0Uu/fKGJkYEnzXPCH8VlwL8njAvjBpLI/suNMV8j/semXl
YnJh6nbP/hrm6MHJtDvGqlPR3FxnA6vjG17u5JKVBka5p+29ubE2E94RhBjI
5K6xHAvPtI2YFcptM7Af+FST/NaaZWTyhgyrL72xdi7TVUxv305m232CbJh9
to+7hhYi1Rfn/Z98eKm/N+1nYGT4mM/Ye3DleK7yfbOOGPnq8tnksyu/aJ/3
Z0M7N2JZKIf2MOtMNsp4CG+bP/k4GbnXa+n77KO6zjCy9bWLcTXvDpO/yJax
jJFj5wU/KS6C4iszR8/O22O/k+uzycT6lcAx9N22Hm3dUN7JqUs914sYWf8/
froezh9NNuOE14db4fkBR8KYxK2AGcXIerdl2VW+ZUzvyRXLAv+xPvH9phw7
E5hNrCpG1lwyfrdaCfGyGFnbcoxsHt+Lrc6245X+bulGFMt5cWcxzFX7/PrV
5INrs8nn82sZI8PMcDL7DRrl+60spySMTEw7Pq8s5tcW/XGqOd4NY44QE/l+
yuLklW7a/8HTzPcjfp73Jdu5epaVvSn2icZMrA8jsw/qB/+ybaOv3Xc7N1Lv
ROz60htYrmaZ5hjae5+5cUGD/P6/zRg5P1aqawrzJCKMWmcwMr7k3UebXeOy
KhMjL5s4sMwH8PvnnRvvmxbmrxS2D/W4mo9f8BvDxjEdDTxTiOs2DE7qMPdx
s9qpHb1l7xza1/+jmxuN2nud6f2UGDnzsa6eL3DyMPQI+KlhXP0fi8WMfzjt
+7Y6PJtrieFnfvcaC3zFfo4e63kfsphbOgs0yd4XPYgRf3nv/vzQ9of1Om+v
X3vbGPm44r7Z+n6x37zere7xqMp48cIHIQZcVgYz90gxuYlj/MzFFijOr2p1
fM3dz6ug7e0w8v5BN8ugqeATvqY/xvj+ssPNP5pPMYAYGcbNy1Cst7q4ApgY
mbHU9StnMn/6q8Ncjwyz4q+FYy0j885e/ysGm3zD3i8JI/M7nKxYbfAanLvd
YXLPyJh0tGiJMfmqFec+fH+8HFgXHTX6DGJZiJH5/9q968ns1lj4fvb2evid
GHRiZPU70hGzDiZGVlxn/Q4v06bFyOgpFDcZw7fMuApGhovT9XrPz817AeU8
oV5tPAqrI1Y7sjn/aGtiZP7nU3GgxcjS1/s4JNqvzxknRtYxLCPrXmGZfwfD
b/hg4WM42e4zXWc78x/3w8iYGLn73tsuHMv+Rm4QGNn6py0jo01eDjr39j35
JB2riJO9Fpv/55aKc/MUn21k+TlOYyS/tTZMRs6fJZsd7dvdwr0lNr69Pd6J
dXEuen/F4i2XmRjZ6jm+bV3LvuOnOezkyuY5Lp+v+PerjZRx6SM8/8ZivLGd
5vRJa80yzdfDfz1MRl5pP++8D5k4F0eV2y9mvcaqfxtslLGRe/UPa55bzMfj
edjGqT2KepIPNVYuMbJYAn9xmIP3UOfWLBYsPIIPMsbI8iej44gxtrcQI3Zj
JsSt8/Xc79jCMvLm2kzgTml6eZag/YVRrX9W/Kr/+Y2xhTTGPKvw/WqenBhZ
OggxL8vhb8Wp+PP3kxkjWx8w68hvDVeLkVkO93otg3LvwcjEf8NvqnWUn6+0
H4JteB8+sdGVH9Bux28wspZLx2KvL5xs87Y01lx0mBzmxrdNPA2bY8S3Uztn
VLFIpIcX94qFGZvYHIHW1JZYn7Ym9rR5UGy+DDuPTYzsx5Fi5DLNMFoHG7vC
ml0eW+fa8tnk3KXfZuUMfqdnS8HHVNdvo/3An6y4ctanbHOjwMh8Mt+w6l7H
jwwna95dxsej0g6fai3ePuto2PX945nNgX1KPx5uBkaGW/G7FmNanHP33Lk2
485l8zoG6acVuw1mbj2ZL8xL4F4UI3fHocvLZP3RWIyRMRhZumbt49NLf5cx
8jCZwjPyy3bdEiv5OPTJMAWaznTOzyknF+rmGPOHWHuTGZlP+c3kk6vTWf9o
9BMvO75ffNC8h9e8K+sLjDHyS/dexfuHLSM3maPUxLYfbAafsmVkcp59OfXb
wpw9O/8rizVpGDnlr43AyRvf57pmuw/LyCHOxONUO8F37dPGzQh8vpbmfmPf
8mmiiShjZBkx5CwjK85Ek/5IOfo848S29+zM9cbnjA8ef3CvMaFVVnge1sdP
jn9YrIt2XLHbpAUSI78y7xxsPmubw8Rql70G32qR179fyPhX+7c+4yzOy9O0
LPa9EYzKexr4GL6MtU8b4w3dhOXhy/euFLjYa5JlMDJ+XO1T/mAfT87a5sp0
iI0c3su0GRk/Nr7j8A6nXab1vdlCrLvQ3mbHTLmL+yPOW9Ah6xoqntsoeemU
kd8+M/GQL97dGUo/CSPjP/Y6C+mS/TKYVvMI/Di0V3+l9ueXw8iwq/UvW7+w
vjO+tnUACzd594QPGUZm+2EzBVpk/MYYugv4WHP44OdRxGMuXoPi/4r73nT7
UeqdT5KdFEaWqZ/211Ja3ti8+KPg5K1701n8N7jWx4zulZFl2hfngC9RYwTN
/8P2nm4HvYO4Gv7DPCP7GFOU2fuRPUfHPm29+vp93Wkze/fnkqWFiZCnWYyM
3W7zAZ9fXP8wW2a5N7z3erWbMbLmx+kTHoZn4WVY18aokG8T87niLCMTs65X
zsXYxm6rHCBNt89YWf1TD2yiGM+9MrJM8ZfRJ3MPeUbm/YSNdfGTqUu1N+kp
fLxl6xPWMpt/2upl+Dz4IW+LbEseaOauiZF1r1hNsmIgp+x+37TX7dAvl82V
s9wsdi5j5AtfnC20ZauZKONkGJkyqExiZNUBsUmkOba5EuFkYiX7Z1SIp9gZ
S2Vx3Y5CC3HKyW+PuZwhN/7cqs2H2TRnwHJEExx41HEz48ndJ3eyeQTcQ0VN
U76s//f7rTTmU6Q8ntktI+N3Lotb5/mYPNF8H4X+AQZm/7Ay/iwxMv7klbv1
ceoGsaDNNDGJUn7Y6mkscMrIx2Ne3+it7l5v3Eb68KXCyJlf9mWx/wt9+2Gu
scCX1yRGt/ajWMo2Pxmx4ODjze+2A6spL440mTyH7L68pjvGyIrXrGPY49n/
Y3wss3O19P6emGi7rcXAzWJk/hczz81+Hny0cG9gpxfpGMMzMnwMDysXnrTL
af7inOvQFYiTFbcMrkY7LM6N9R/iX/87WgjF7CD+hGVk/LxV8Y+9eVYuxF8a
oencxMliVNoijEy+F+UfFc+KkemrbHwVtQXYkecmflNxoh2L8SnNsdXf2jhz
0nCoLGqn3CewM+vByMRAZl+K86b2Rrso68fkP7a+5TKDkTmG9qs4xxjxMsru
0cnrZzt1dT87P31yTn+6lzIy+RngYuqSOYdiZNV32Ndqqxiz+KjYleOdcvLb
YY6RaZfD6De5J2cjeZ0nNq4W/pcmQYwsDrYsHFu/iXmGQ3vBcTyj2//h4di+
6p4X6Cvg2FHn0hYj6390XfDyKI8Zu7YaS7SCRnEwvcXPaU7fSWRkGwviJBnt
eOLqx4Vl1ocmroBHLCPE9uXZM8bIrMO+FJOYHCD89qyjmYKV5c+O8WyMkWN+
eMs3ZVoXa9LS6h295ngVtCE/bBcYeff+fDJ26f1g49c+CQY3L929lqyv3Q6s
JkbGH6y5ETq/VIO2m8Wbg5FZb2JtLnAh/mO4e2qtnGWVvyOmM+Z/nb+uGdoH
+FiMXLXvmAWdKbysGLdwcwUro/cgL8pvZ5e7ytbLcT0nc02IfSFG9u8NdM3Q
S/xklsGEMDIcyvWwLOx9CNaPHIulofZhfa3hft+eD3xMPj0xcl6GVDNMH1vG
x2X65DK71G534mQ7/2885Ff02qXtkD+ktTFbYGQ9p1SHykEI77NOeCd04d2u
e13+ZrUBmzPvSAw2P42X/LO3bEze4eNB37OSfxqDNfHPpj5aMei5wMjERRYr
6z1LzNBreJ6FkbV/+UvKtg8M1+Zi3i3Z+MzsM/cdd+8/tk/0GdI6s63VM8Oo
llu7zmOoDNjNo2gvhrf/elPMIJ65d0NOgbsD7U9+kaM8h1HZSWTkk+zDL9Mk
W30EHMJ5pPdRK/OB2m0070CaT8vTdplnZMXo+tG8Iy8rqxjZspC0zlpHzCyO
sXGaywxGVjk0P8vmC7R+RJVRjBx+e9GJB9L+XJgbS2bb42iYWfPvLCNjr5ym
hLhpaIfhaRgZriTXRxNdBcePrYcfWX5/zbXkOtrxgxgZDTGs3UuflfmWa/zJ
aIqXd1upn7zN/cTW6EejrPNJfZt5Huo799M+k5jI9DfUM5/oDmBkO4+O/8Wh
L/e3Cxqisj7C1pedrye9hnL/2XcW6JDhZPjyxf5Gtq0MH2+Bc5fy3LI9M/LU
+yE+sb0PpbnIObnVmVe63dFHp1oLr1Pyumydv1gaX/JeK+9rOP/Mh3wUOuQy
k77jNN7Fz87e/Wop/d5h5J1H/fNciHlj4lfAsHDp2L3iXD0b840YcHX71T1S
do9WzaFlriC8CyfHNBXTXZqsPI6z5z7u8e+fpXNxxchYyEFy9XchlmPVeYxS
4wkjH198i+HM2fu5+JJPIiOPYr/Das8wss/bbRnZc0TGv35+XUcPJH7wZbRz
qy4tpJysPG1NGZkYVNaP7OPR2mOLdy3fltWfONsyssYHlrPDe/hnxfGkZWQx
BssCI+NT/m42m6+Xl3Mr25ZPNBCBH7cmMn5EEwEn1/Uh0iPYZYoFbe9p6lm6
BM5BvHxrfTdjZJb14lsWK9etBycTc46xAfqafjTKxEsgj5sYGR+n1dOIkTE0
hnP3J9LcNq+KbZp+xTKyto+1D9u2bLtSWxYjhzHTo1aIxYb/GEZWe0zvmfRe
IScH5SvTF1tGbsrKl26dK8ypwzTHHT+KNJKvDv8SfsOHLL+zjWtux7Q6bz92
IE4H/mTenfI/16Cgs7CxB47aTmPC/fzMaiw68d765RQ9u1cf3K68n6buTwU2
Jo8IfMyyJvHRYGRpiWFSH0tOOTSXO7lVZWyD/xdWbnK/49Nm3Rtr5Tmy07m4
V7J+hvt1Yf7LUka2esRhMEXMQhmO2Jec22lcC2sniZHRWKBXPIpjNdVAeIOP
52/l75LwEcOrYuOmjBxiJXc4uVTzaziYetl5nM/T0+9l50E5lxYnOz7D7phd
Nk6BzY9dxsjRtuM0FpaRs7gGz7r1HV7zrOUwMnMA8Su/eJprSOy28t9absRn
2oSPtd2Fb4taC7QX/r0Q8yepc3FybCwiRlZ/0ohlpbloUE7KxX578VljZ9rb
fTK7Eexiezxx/2Er8JnafR6TbTubq6brpXrQeuJo4jeggyB2ms0pbffn5/D9
dFj8TdplvouP+bT6Cn8PwMnejywm9vEtyvrJLq3y7MddOqhUhzffOaf8Xp0a
/6SgYda9VHZPpJr5VG8BI5NLG190yEcDI1s2PU5GFlMdN9ed2tCuZWHeQ3ss
1u+7bt3HyyHeZjUjp37ac4GR7fKmx5Lf1zOyjDJI66H7Ek00TMsn27OOjXuT
+5dT/QV8XKXfyJlgu81C45V+bNUP/vl+6rYXG/a8vZP8fv4kG4wMT+HbKzPW
KfttmGXhnta8tCqL9VH2HW8Tg8er1rd8a5cztizmpG6ZeUlpjhB8kNp/Hjcr
j5GsbT0jV50DzwD8aZqnV8WxuqZpTrzdLA+E3UZ8im4C3tl5kjKffMRl+/Za
Vp0j/n9pLiwje991le12cg7ByWgwfBzoMK/vcZrz2fIo39Hy1vUjZQwbiwkR
i6/i68C2FeVZbKL3iMWJKysX+4Wt8PvCvk14+epyK1jrSbo+pvczlFV59XTP
qU/gONaPLEbmupILUH2uzQ1SaM8R/4rVI7ANxyDOBXmhicWW12F3vyQdSIyR
LRvX+ZDtOoGX24yMzhjNRVEnUYxXw/mxni2T5hiqvP5+sPemngtru+uBk1dX
Ovn1jkuPHDPN5Tvucpxa3+bHWe9NpjrkXvtfey/An/ILl1mZ/rcXRsZnqW2+
3bkaeNfmmGeZjV1RXnY7n/Bc+E6fSxnhafrN2ftfds1zz+7rNhujP56bvVjL
yEdlw/Yj183bHKVf/E02eIp5aDAVdnf2y+y7tSqGlsGP1uA/vyxmWo/PlZ1W
HpekY9xH+fe03F4DWDU/rql5faFlV1tfS/NjheWvVT7jR9Z+FHvL+pILek1z
XmWM/OJgLfA073rhBuK4x9o01wAuJr4isdlszrQYI4d9R3wNdX4y+91rNKyv
uldGlomRiYGhZczHQ3/Rq0+1idl4EHXnXHaNDjpx/7A6f3IhPlyNwcU5l6Wc
GeKH1WwDI1tfry1ryKfX8d3aOG0cJ7QVk+sDNvYadjv2K7uH/HFZH/0Hcx+v
TowFHzKMvLwwUajbfP10vh6ftP9S7cRS/TtXy9Csf3Xiw8C+nn8992K887Tr
6Vpo/dhzJ31/spRv02ZkfMsfji+l193HfjtuzhInn87neyOtwMjta3j+znb2
3qhfE2+Sq647N0dR6+sZGcbFynJdcd8oh3Su/c9/xzeseX2UA82w5XJ+VzwL
u898PuHZjJH1O/lMKFOMkWGP29MXKufoHYfByMentzg1GVzl9bUxRu7FyNkM
R2LhnX/n05pfpvWvTVxJJqeunGhGLpu3Z7UK+i5u4hzw3f1w0CqU155T7rsu
slqMkT1/8Em5fN5pq5W052cZuYphrV/R+67tnKwYG9t5TVXv/WLMaRk5+PPI
nbe2WOgLsA+m1op9fUk/UpbPg5wbGsfEYn7YdlHV1lQHTRm5l3fs8K6OiQ8W
HxEairrtYGnbrlRWtrf6Bv2Wzb98mvO4/T/W1quuI8ehr8Y4BzHyO2O3k08n
p7Pfq+5JcWsZ93pGrvMpf7F8M3A5OmPYN9eEbETjv3lGzs+1VfherJ/tjJH5
jbafMTLt1sYEPAGMZe+nU05+w6x9vbJ21P5OPj3FWBnk3boYOY/3kHPwxcWr
4f8rK58Hq7rf0EiU7R/W5bMsJi9MCytbRrb+azEx+2E+odUoxzTR9KOx54sY
ud+6GqWRh2/UsZKHaT+XeXrWYow8SmvKyPiztQ5zz/Q7xm8s8+aX87/M/h5b
L7a/smM0ZWTN35ePOdUXp3oM5c0r9rWdfWX+5nLtfIyRNQ62jOq5VhyYxWhr
6Oe1DNzVhhwjxxhSPvYy/6M3GBl9suoURs7Ys6Pp5L31tfml5L2pzb7mIBHT
TWVTHnFbtjKduOVD61cmtppiy1Ueu8eYBrAl2mjl4xAjYyyHP2Pb4U/+6bCb
Z/kuxkbLbc9Nuhldr1gsQLUXH4+bfpnYZpQRrhYDp/Gq0/PgmDAyn5SBskv3
ke57q/CuU3PobJy2MhZuMm8PRsaXpGOsLtzIjkV8iykXqxWWXu70Ua8L1kqU
h9rGcmYci9kxFXpmWPvq4kYhv0wTXfqRm/zJp/P53gzTmKbjPx5WPy09752Q
v67oJxYj++WxXHsxRsb/i6YCNoZ/yziae9THiUMvETsOJka+0Skb69X3a9tB
X7F3vzzXZp2NUqNwb+Grke371JrZMDXFwxpD0Gc2yb+RnUND7tK6yslr+Sam
K4yd2972tyEPc+E3oymWT0lz+asY2fpWvb63rPw2jpyOizGW8IzcPU8w37+d
YziM62x5StfDxjGw+pMqvTNG/GNy98HIxFDGn7y0N1NgZOXQK/hse3xnbBnZ
Mm8v9WDXhw2b9m298pGdc0fdwZdqb9Qx/58xbA6rw2R5u0/vc9q++Jj1sd2S
+SeekTk2TF7WPuUzZj3uYfgXTi5oQwwbwswcX+eicsKwljvpx3yevV5jvmU6
i/Z29n0refT0Hb0/5ufS3529nOw/WYu8l2l1PTfEx3asCGMv3RnP/ci2HZwU
vYW109hwb4a5OBbDYmQ4VBoK67Otu780by7XMZ/LfLxVx4sxMve8lrNfuFqM
HGLkP1/uivN2w2g/OGYTXfH+042gTey3rkbpN2VcPWpGDjm6Xp4M/fVJNXQR
w9iPYpINq1yKJxCzOp4tM71LLttnWVwrjHZEnIj52Sul7Gn9p+o/gy+5oxfR
fnUM64drysjezymO2X+61rVOXdu37Fp1nCZm84domY2XobLG+NiXgZgWayuT
wYgJd/jDVntssJb3C9Pb1XmmzfvsmBGLQvlEynQDTczOY7Mmf2mdNYmXbM3e
Y/C42pmtR5gUXy7nRjn0G/PGyfsmRsbkky7U/X73deKTOZ2sX9Y2pd9gXXEy
n5bbs5ge7etz5lYrY2Sr76XvU24/3o3Kj1yXi7qJKXaF7TtvL1wK/mNiRImR
/Rx4tBZPH65E26xvz4ppQay8teXpsK0YOWjpPXvWtNVj5a9TRj7RFsZXGnO1
r1U/8/SK1kqW9r4yjHy2i5H5RF9hYyQrR4f+j83167UsaJW4X8XYN01OTDTS
xGmWH9v7mvF9N2Fk/IMzE38YyE84akaG33n28H0UcwnFyL3m1auKL/Bzs2Hp
LIbRVsQqsID3bdXpjZtcrzpGVv5o+T71G/w5OXWpVNNf0Kt2fMb6X3oLr20V
Q/eio7Ya5ly7rPe5WyEm3b6JmUacDa8THmVbqvLBe02y1WyHOjZls4yM5oKc
fehY35tIWYLvjKFKGdn4kol3Qb4R/YbvmGNqW7glVi+W6cvat9e76H/YsEnu
6l7m7mFWkxCv5+1OWcqf+ZSTc7a+W2ti5Nhv4nJ/vWFd9qnxkPTL2I2V7YyH
fdw7lklrHe6VNsfDmDy36R85HzTC/K88UHUcXOdfjvUz07c7ubY6jAyP25x6
qW65O85ieo7FfNOpfinNDyQ+pn9j2ctXa8ncxnpoG/Ll99oGjtxOY16cSPPv
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
MkZ+72Yr+JNh1VEyMvuOcfJJZ+RRzc1sYoutoztWVzyJJ/TBe10xkj2vD8LI
3rIYcRF9Rx4PYy/jYduve0amXP3WwSDX3DLyMK6LclXYZZWMXPIeOhY7wdsw
n2WZztSVw17jsnmHsbzEYuQm16Zq7BPzp3rNdMbHEf+xWFdcrO92f7RFflMu
6rr28tNhtZ4qr7Oirlf5qsWd6fFS36w41N4jvu5idcEyGJm5d2gt1Mejq9AY
Vvs/zPzGKft6Rta4V3HhbFlhcJuHPtU1r6XzU6W7mEpjgouRz9zcLFyjY+e0
JnYa82Ikll3/9v3J2Io4wmV5mWOxCJrM3/UxiGm78i97rTLL8/s1vVdgZDj6
xf79gfUGPB947ouR4WNs59FwtJhiZMq508PchzfduFZ+vp4YWXwKJ/M5aj+y
tVj7hZ/rtPWjMhhZWm/PWkd7vdK5LHziS51r7Q2N0V8fFvtLb5ZBxYoqh+Vi
7UOMKh23NPCx/feSp4H9pu+Gy8tPDET2mb6n3cz0kKwHmzJPtR9GflOMmMbR
vqMihqzixVVZL+8r6nQp/vg2bp29v6K5qktyrnFvNG3rts3UrV+aBy/iz7T6
4Lp9N2HksrLb73nct42CP1h9fp5/Lz8ePmbpndBLSAchLi6LZU7MCjTJYuSg
j3i1lsWnyNdvGW1F6mNONRXp78ofQgzlkGOkdTfEV2b/lFHrpu+utgIj0/5o
H9IiS9/DctggY+STrreItOdjL8PPzAqxACc2ahk5lkukzmKMzDHK4svJxMjw
FO0WP/ewnv3eXzIMsz5kMfJJ0hCP0rwf2fpusaurxbHQUTEyz+yYPlna5FHP
UfMGI2d19irlwqM8Pu0RPxlMfHV5J+R+wYc8LL+e9AxN/IgwsvjXage6fVDp
p5/rmLNyfz7lGCN7HoOLOY7VIeuYId9t+7flb68nU7cvJC+fbRzptezF+h3/
lOoUSvgYP8ugz7yy62+NduLzbFBW2BJeLNt3jCliDJTmaW7WluvbWToej/q7
Fau3XZ+cC+uM6pnk58fCgyEukfEdi5HlI+Y7/Gv9YtL5pvfKdrY+JkZWPpKq
tqccIKzP+2vuKbbjfx3b++NZJzDxnWshvx5z/vh/buZigZH5jRwk9vjoTmgb
8k9rLMf3+fub6RzKDjOHeHEdXfIwNOJHbqesPDQjNnKIjzydx4W8UTLnqZ/3
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
kVmmPCdWQzCKvCBNrFcf8qj8JTzvrnfiqu0+vpPFFVHellHWgfhF8ZCJ/fY2
xb1rYm8KI2PSNMKw+Czh2DKtdV18r5j5mAt+H7F9aU5PkT9yX/J+zRjZbhdj
5Fg+MLvMx5BrMsesjNVfPF0NnDx/82KyvdWfX1na4qq6te/ZPevzvLScDSN7
tovqLSp4oSrHntWSei3AcTwrwrmJgaZTPq7KP1IVfyPX7WwX2qjdhn2n88y7
Y+llOanbVqZ9iZl8vzYfdF6v24Fn9w+2u+rX5ueSz6DOpxFy1H2/nOzsrXXi
F6fHgJHxL7Mv+h4xMlpky/FljJzlzzSMHIvf/Tord95e0HEvt+8jcfKHn57J
5uYV4merjq1f0DBQgYtZ3mkXsuPmtFM7PiuMrdqfs1t3CnEAYN48TlvMh3yu
sK5t/9/sjQWfdLhf2oy8vHAtWVsaT2bnpoKJkcPnk9XAzc8f3suYmO0Y3+r/
Qh7Yjh9ZjNxUNzsK65WR5SsbZnmpe3Qq1Bl5V3jG8LzStRmlT1fPOPvcPY7r
cNLNMrJ9j3LSxxIwlvy9sZgTw7K6/fo8e/Il6/+UXVq1umT17/64ZTlzY9en
V01y2fosZz7f7YW5vtpCWcwB66O1WtSq/Yyvf1qoz9K4FjV+5Lpz8O8JjouR
4Sj5bSl7HSN3t4ti/jdyKOu75bq6uY9ZGTq59uoYWZyoMvC96plLe/eaDM/w
sXPC1D/LxMjoiDUesFpmcSxG3+3jI8eO4+/r7rrt/tTvG2szydy308nc0lzQ
p8DIZZwjDvZMHM01faqrODXM5iJvfx9bni34HqXbpE3G+BguIw8IxnbP94v3
Kaz29f2LgdsmN9PxZZp7fTcwMrzMGJBPOFOMDC+T3+rZs+U2A89l7361X3zI
fi4L2oM3hZFHbYrDZxnZxuQb/vl3P+OOwvqZO3WcVuZHPmXk1JoysmdjvVvS
PLtiX5qv31SD4K/JKK+P9M1wcr/tuYwxlWu4W//a6pqvis8vfT7ny3qN/SaL
5ajzmuNa//sR3BPEOgj57eZXQ5nL5j3b72XlDvktXhU1XIxLCnrYsno0dUmM
hbpyyxchVuZ5X+eXELfW+UrQ9MqYAydG3liZCHHYlP+ZT7S/9Nll7yjpt8sY
uXitt8O9XZgza66FxrR+XIsPGUZmjp3Mjt+sH7ngCxQny0d8ysOnFjObK6kz
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
lc/TLKVrSswbmfuYWByYZwDwMa9ujOrb/ewedhbbUsVHbNJ9FWsftq3Fchxi
jGx5VeI6bGW51U5np3evQwYeMXGekY/3b7kaIXqV/M/+d1UZ2fdoliwjT9JG
3TL+K6m7XRgXLai1Z6W6e2Xn/aT3yqE8139E2hLbBruTD0H9ijJO5n6hMhsb
ZXHjtD6F/Y2xgswbpmT+sfF62hbfg01S/rDNJYaN/flwr11Ua7Uo37rqsYHP
iU+TM8G19saVbxw3+9syqn+dxpCH28G5TU4y8+C3sTF460kt6a9XHro4sRj5
wdGDwaVbd5Ic5JRnct5us2atXmdPnt/bpbuPszF0sCwstXGccJ/lW59rFRPm
lVrHihXz3mfkGFeH65MkjCxOvnRvabD48HvHyDpXNUYCPhUXV6mFJUYWL9v8
DKfUd045XJP02fOkNhnZ7y+bxJBnUSt81oKfjvbr+4v4Xr+zZmS3Dm/COQxt
yMaY7Pdw6a2V78c4NsSz4t0nj7bc/yz/hhiZ42KZlVfuZ3wxnf8d+RG8+tyr
16rbDeOuXTvnaos03XcxDg3tz9A09jPsVpY7UJWRQ/csoeVXuXcuy4uxz+9D
+SOI+Arb5sZxDfmY2mxFy6zEyJ5XRVH9CfhcjJzk4x66Wng2L5n84YMnu86L
2HqwwcHkD7t8iZSNi8bXye9C41pj0xUxctFxsx40an9w8bXFrxwjk4fBOvKd
js37NB5urwPUyGM7mW59+29JvkTKKLCxxHlCzJl95e5ztvfG2+TyXqW22atX
SPIq5/0X60eOkRlzByeTQ8z1F0b2Y743Uh7W935+8TXDyMk8Lrt54p08ms9C
ASOPOJn/aNwgz6GJs9k+knMSPuY9MeVYHLmKQjkajpuNH469h7f/nfcYctKv
tTMOKBY7jHkNxPvi9vJWz5LKauyFrv3uuuUxsnL/Z+17R3toi5OrsNH2zYvu
WhtjUVjVxmjZ14f3V9z7+/c3nDSNXsXGPiPr/3a/awxgl/sUPiae3ISTdc8U
4hzLyH5eSSxvpjIjV2CRKoxc1g5cTsGrB5Vi0WJkOCrGyPI64Fk+nsTy/AgJ
FivcF+n49yx2Kb8xbzri1neOVef6NIsv4Ntw8HQjl08MI69vXhgsrXw1WN1c
yPlO2OPMcU+eHyTfuefAQy620rTwpfPDibAw/UrtNvsmv99Z/x+X/sXlbPJM
WYzMvSi1ENhWMTLTJvM4yRgZnwobd7+4tum+h4sR20DsmJoh59bujXKV/fhx
z8i9msgbqwcjX7hzMrj3eDOrp8c5Zvk3nheh30ff6T3zYX5iZOan78THo3GB
+fmS50F+AOcd0yf14fN5mmJk/3xtIz4Z4mVqaa+tnh/VGkrHB5MP/THFm5uo
LiMj5bR+CrnIUhNGnmdNm5Hf//3R2D1qnXUN+SVUaX/TZGSu/zAy2zr+e1Vf
uOQ5Ns/aQs/vfUa2Y6f8/VPKyOl1pGwa37fB90Ku0h7U5xYdJ1+x6wHbJUbW
Oopd/X0FH8eupWMxY/t8P8LIzFc1Mci/hRkRvGzH1klwMtdFn22Vt8s9s8/I
qq81qtuc/G8/9cGx28hnecyV1cPz93Vo34qR7XKc7+CQkeFpXtluYt9My7Yz
DfzMeDsYmdiwJEZmGjwxmBeMHGSb3rui1yTyPbSHn92YgeF5A6uKX7n/470f
9x1x8EKObcmFuJHysf1e9feUjyFPudF8Lo/V9LMq6kfJs1Dunn6rMoaoiegj
xMiqpX34cDWpEXjnahJnNvkZs/Cfm6WajtfjuH1K8eTnv+xGGTnmvzDvmmbO
zCSMbGXjqaHfiM/nfAWmGK+HkVdXLo7WZYL7JlcL+NU4j477SJxE44dRPvSu
K2XTcI9S536k6XG1vB/bf8Q1/RwI2DXUF1Vh5Gi8Mq1fQa4J87D3CaqRBw8T
P0ViZB0TXuHWtcPF7Jq4Nrx+WmbFO4L58AqTwsbUE+cVVta0HF/izapfQDtD
1FYUI/Mb0/nPHeVXbL9Tewn5fLNMxb7z34/fjxEXJmeE+x+u6dy7EBsmz8K2
Ty2H38hHtrnKudhxz8i9mkhsrHN5+PrdxpFrezAreQzEeMWx8kUuHleX/E7d
D8fIh+cL/jPyj2M5mr88yWByndOKN+u+OdZ3hhi5K7Gf7HbJq12MHIo7+2MB
Nf64y/XsdB+8O82Nh7aaxNOiZ+SK+39OY8wuLvQyPt6oqUKsRF7xlQuftzrv
ECf73iKZl9oUWJllwciwQ9Fxr8qS/N+ymX9fKqaxjGzzSwtrUUsVxkX57aPI
E6/ML6/ouJbdV1ArhPzjb8/9wXntkmOMLCNrPJ/qfozF0q3nbtkz/eVkTFno
ONu60MpJVjxYPOxfS9dSb1V/PlyTHv6y6n7X/6hXwDUVDuZ3ez3le5bF94ot
2/pfZXH+hKXVXvLPPC5d+swxss4j9qdyX0LPbsit5tqIP4VfD5zvab/7Tw7c
c5HzGx4D97nHvVrQ59d3x+LH+7/cczU+yGmQNxjnELK1Q25456jixMkYvYSR
0Q3znX9eJ3Wjz2Xj//Bh5tyEkeFme45ZRo6NSaLm9J2Nyeq61ZW2e93ro3yF
vOd4pfYB53s2LjAbG5i8n+a2NFERIzfJtfgU5cbsPVhrtv/nlJGzbfttPJ+h
7ec6tMFJ25rGcdnPdf6f1CTpdl9Sk5p85En8X0Lez84f82mSf2FzWVHiNxbf
JzxvjF5jKjAynKk6qH6daD43ybvKe0KP5lHkhSxGLpt3UY4J+RljNY0DgrHJ
E7CMnNS2ydfZsJws37cQIyuWxLQwrbxZEddYGJlXmBgRT0a8h4n5HQ4Wh2vc
L/OCeW3dkfx+G3/PPGwOh9Wd+/lzVIwcmveT50mNENqlGFm/sS/EyK7eNLFj
Wxukzz3u1ZZsDvKwLS1sHLhzRYxMXrBivKodDR/DvD7vyhuO3+Q94XKLn1xN
p8/7tXHO5n3fFhwf+/e18DKv8ppTTDp8nZoOI3P+4wWhbSoa61AkMfLqxvnB
4vD+GlH/hLwNMbKNO4fGBs6rJq1B/SkJTwV8C+7/fC0o2khRHbl51jQYGcHJ
ZR4ERSqLj82DdndWGj9viG2rtjepl3yS47GyunalHnA1aonEGExxxjpj+fzn
96EcWfs/ebwV9eFitdj2qp5xGSOr3ZNzqxrNyTqP8pHtqxX8GYohbxz/5H5T
jUT4VrFnPnOtFSNzfWd6iWs2vzGdjXUwjyrXtFCM33K+HRNILrI4meXqGUJy
H5OPOcPIt3d33b2nXY+twwN3f0F+Mp5umccFsuMjZ81WvT4O2XrT60eO9TiH
kucwV1zcGI7lfEOw8ngNvHOZf9jPT5ec7wU19pTDpLxkmBmfNvEwy1AecpJ7
nHznn3MwMuuQMHJS+xpGZvzeP97n+0/6n5X17tlMdbSVM22ZvokUT0fw8fa9
y0m+xvC96mrDz7A0jPzi2W5SJ8nUDUSx+dPHdF132lfPyNVFHBmfBeffO9QY
J9+5mnGyFOPpoIb/5/Xh3etORdPye9vbx7Xw3ukT52GlmGHby5ickcd9yLpS
0+1nGxm319TnuHDe//Ukx8ihdfZjsaWMXCEHlDh02X5RvLHO/rXxyRAf2/kR
r/zqu6+jbZcxe8H19+tHR7aX+wD8MYiFWkaOxTvwdgiNk4Nxi3IcFTtWvrHy
jGFh5Vc4P4lXd7P3ijH74/Us3yKfYf118z20Nb2tEch4vNA4dk1j49VPX566
40JbZ79xj0Lc+Ph/J17I/r7O6rGoVuGs2arXRyF/rC3nl3KQlX8Mn6rWrdjQ
St/ByHArXsVwLOddwsgLgwt3l7P8ZMVefUZmmcxDz4ecN/pwPppeeRa611U/
aP1leC2KI7d1DWQfab39nJCqy7Zx8ZCYr7zxeC9GVq6GxgYqx9mvsU3/S83A
rvn41es9d//kf98zcnX5jIwYhyb5nyV5HsX0+o33+dVeJUZ206RcPcbaqSxv
632OwQPT8fnu9rVGXtBlur1+aXB77Yda/0nyiPO1p+uqSS6y5Qk8ressC0au
k1dStfZDmU9yaKwb+eZj1xXVUpZKnnWTS1q0XlXXzyrkz1H2n8/+vwu5/Gze
w2ZVGLloG/0xeRKMjIdbaF3eR/yIixiZ35QfIz7mOurnXay569ZiLi9Z06m9
4BEBM9vrmv/eTTdsu6FzJ5TXgv+EPNzGj9cjtx5axt6DW46PiRWLkYkXS46R
ba1C+YbMAVP1+sjk+b0pz4FzRowMp+2ntbxGjLyQY2T5wTENEiNvn2xk53o2
hm8/8WxTfWrJ+l7wX2LRnLewMeslRo713wjPN78mtT9d3etZSGLkSedRxMih
PJZQHrbNbdZYwatX/+hi0Bpzc3P/YlZn29YQbGNfcKx7Rp5MZd5vdVTGyIj3
b347dNJv/mcnPvvftSDaKLm1eD35jGk/636hynZTk6BOXY7Rsqozclvx7w/e
OtThbPabZWQ+v3xRnbPz6zCem5xrS29H4/r4nTgg9S04txHvx5hY0jWmJKbn
M3LdfR06dlW9+6wYpwcns07Eton98p7X0HiwHJtFGDnkW2ElToZJE++yUV6C
z8hJvGh0TeCaGGJk5ckoViy/N8WNkZ5b2hwL9iOvil8zHfPT/vXjxPT5RYws
r3ZX12P4XowcPRfN9sLI5FSQZ+z8Km4e5XMq0mOQ8UvvW9GrI/lx5D/f2nd+
yJw7t9LxefK3EP/6jGzH7GksLHnMnJMhbxjE9yHPt9A8WRbn6vHzjZwfuX9O
8h05CUWM3JZ0vzDpfGxcXjWHifmyD/1YfZ35ipHdM/nhq9Odq1kdwZC3hmLP
jIWo47MhryD/+7PKyGX3UfT78i/xVSfWZfXyl93M2+lTEXHwvQfDfuXWJddW
xOR4NyyvLrpXRGyYaYgTUxsvNC9i8DBy1+vcpL5FmeowctK+Tl0cnn2yefOv
jRk50Wi54t6Y4HLLyNru0utMAbuQpxHyY7b7usm+tXnMVaaH02Eweb4VjkNc
Pxn5VkR+h43JDShrQ9SMo14efMznsueRcKS83HStFRdrjJ3ey7dCY/TEyvK3
UJxZdURUU0QxMutloWXrPXysmLXWWbFlHS+xuj2et64vZNeWonpR9AUu/wUu
Hu5n8o4VJ9Z9ScYufU3pXh0qx8jkJK8eJufNy+2s7g7nFrX28vet44yseC/K
+5mP9w2cP8m97EIBI+dr99l8AVs7z+aWwchd5xTG/dTr9+diZGLmdv9YRia/
u+54QOqXxH6zMWcr5W6IkV+Z+oGI63BZHW7r49sGIzeJB8VUNh/WvewY2tj/
7WF7tzUeqy4nJPLL24ojnxVNwsh8T86G8jnJQyYWP412EtKkfU4o/ze+fnme
5nz86eZfgtOWc+9PY9+VbSNco/WtxMglDGP9CvycZ3lS1M1F1jxGvh0nwXgn
ch7Hae27sbjw8HXMA1nTBepISxqHWNa+VGPOcmaddsM12mdZjdlT3Fjj9cS/
a24M/k/uvWK8lpH1u/KT7fg7LUOMnPdKfJTlIWv84Gi8ZOJD58eRwx7KT1yN
bfIsYGTuNVxMP63bWLTfe/XqRBoHmjLypbtbLi+YcwA2Vv4/bXzECAtjY/dg
5FifEGIPzl9i1SM/uXMuHyPG4fjC/erVUkjGYo/mjS/yNGsXTCoxcp7/k+dc
xM3r9pkS9wp1/yNOllSvF08yXskpFSPzvD6JOd/NGPo/DvBwH/m7t8HI06q3
Bx+LkYv8FhJv/VFtG9+T1F938jWrrD9xZPbxrNvjrMT91/bNSy5WSb5HcH8O
GRpfB3i5TUYu6i+qslldRm67TV9bPO/ylIt4uI3l+N4F0Txdq4I4cizPoiiX
uO6+Lps+Y+R0nfwcCn73a+aVcT//qZIPTa6FjTmov4dB5edUR/xPeRDEjxmP
N9oPJ45d5XnMshQHVjya73W9H4/nn2RSDHm0faeZb5y2QbFxMTK6f/eaq5kn
j+9Q+wrVBMsxcp933GsWsj6Cw/eL93YzRtYYAI3nsz7HNoeY90Xxznyfceri
zWLk1aPlwcbTJ06wYYiRfT72z62z5sUrPo55C0+iUC3uprKMrHqoaGXj/ODi
ymeZxMhwCxxTZd52vGVI06xJvXH0uPL11zLy7ci9ITr4pTojT7PtnXVxjXXt
7GYSX7618v3g6pWvotfewnm1cE/dJI7cZrsm/k7OBSJvo2meQlGukJ+PmvkO
vSqIJdfIRfaPg40lh7YndNyq39OcuPxY2lBsXOFYLekC3wpE3gjecPgc+vst
tl4xbwsxsq6nVduKxoXAqzByyItCuWJiZHv94Tv5wYWuSy6veLiM0BgU+Fpc
7C/TMvLh/u2xXD49l/C3k2OMRza1XHL5x7PmpV6fllxtoN1RXzH8DA8TL+OV
GKfiyPBryBv5RppPG/IkCsWQmZ88IW49fpjjYz8+DUcTX17de5zlMIX6xza5
cBoin+UsMHJM8KH4eHFtdfDN1duOpxHMUmUeHMt5qbNchyc4F2zdKl45V66n
3oSarmp+8qeWZ9Gm3L3bsM0RK1V9zTrq6j6s7NjXXWZR+3yXxt7JRVnb/FuD
dR3VqqiyvhpTJq3uRfJ3C5gSLzR/+0KMZH8L+TXHGLpIsBq51Tz7v7S86sbk
+R52qqOXy3v1tof4psb2iZGrHrsn6bgZcbK2VfU3qvoTx46Vzd/RfFQ3xLKz
xpMk4/IXsxrUloOZXtJ3zPOX3+9ldRjF3cVt+MT5HXMvSw2908MN81t8v+Et
ohrTvbdbr5lINalTD+4fd+65uPDPj5ey+hgITxqYVfmyN7Kc4SSOXMTI6sf0
PAhGvuHq9S1knPz6zXHmX2EZ+dbh/dx9a4iRy66P0xjLV0di5LZ92ZrwMTF6
v9bn2HE0Y4t8H3uelS/df2zWIf9s9yzkv9RZR5jCjXl5fC1/rzi8BtnxfFUY
+eUEdai70rzW0IgJRr698oOrR43H3Me6H8rakhiZ9kS+d9P5xP936vpu67vg
fMreP3I1m8euK5GYHzzp5zTpGqF7lhgvZ8fcPNMKxWKL8k7EyP7yiWvb7YD9
4d7QNoz4/SRYh66M3fWb87Z4ulPa/1TlZcX4Rznjyf+ILWeMnNUzP8n8LJRv
ofgy7KtrNcdXjGy9N/C1UI6GGDm0Hcq3yI5lunwYWZwcGrckduC4iIv7XIte
M1M6bsG9H74u3t/IGBmOU61MMbLvlQwjh/wX/Pt/zjv85OTB7Dh4yMgrh0vu
eyTupuYIHhm6Py3q25vEkGYp+rCQZ9qkqsPIznfyVnL8/THmVhrLoc+woD32
fvzgLHpaNOH4A89/xGdkVJbjPK1c5Fgs7mOQGJnxT20yctG+bHN+7rhM6LP8
j3Qe5J6EGLmNdabP4jrAq/JPxciPnkVyLgKcTB5zbFvEyIcPVhw/8goH69UX
fMnze2LC5NvR9+Dn0zQPm2XDZLCxGJn8YsWZVQ+E32zsV/+3/v1Vlsd2xWqJ
6F7csmnzNnuS+SA7/8XhtZprub7TWD+/dogYWWP4ufZrvB/H3n9uFsqZ8blX
7+FjzlmOo80rSfyd9rLpHSOn+TA9I/eaieT3aMb0wsjkBHM+6BxV+7XecL78
cbZ+TADetr6//v8PfjlyjMz85Zsc63PsWL26uVsfq+ow8tLuKEbCNUC1QX1Z
RuY67B8zf+zaWWXkuvWRfUZGsZqL/hgYSfVDJll3G3+b9X5s4u/SliZh5HrP
EdJx/A24tmi/TToP6w1HbXP2R9vzH70/Tfdbcm0IMrKNuxiJkcW+VnwnNtar
fHZ+97x22D4xsq3rPOk2kgcBG8NmCEZ27etl8fHWNUi1Oey+t+3LHgvFkcvm
6bNrtTY1mt76tMG11vvC+mqIk21cKot5pz5XXA9gWPTejDMMebIWt9X0nN1Z
yW0n60C8m8+0qywfOfUUmTkv9fo0leZZuPfD9ggfE+uVzyH1CDi3YFzyhu34
fgk/jOL+59T9F/a1eRqKQ8PHjGN13vW/JV5bYuTkHA5fV8TIoXvWutxz1lWH
kXXs8QMNPfsc7fdH7hg5L80II9tY8llkZLafMXZ12gvbbMeIxxjZtsMQI09S
/9nPyexS88Dghcfw1Z4bx9ekVnPdXJsu90sbYwBhDzz02t7Ho1jEae4VKTc3
k83jTUVNiK2f13Mx4ox7X+znPNqtbKzVfy7P+Lu2GLlIVRgZ4SehfsDPt3jz
Nt/eQow8fh2rz8c2JqwYMcdKHm8wrXwuVFtPfbiu+TbnnO/EyGXnhV8HvMjD
k2P38N5ats7sO9UB5D3P5YjZu3zkftxerxkre45BrsW9XddOdb4kOVdJPloZ
Ixdds1Vf70bqjWzzmcnRvf7w3wc7J/su50KMrLgy52go1smzNetfbtUzcljc
g9hxKnAyMRPlbbMvGaOtsSXKvRUL+rIxtbqMPC/P/2lbTT2Zde8Q8kyO1UlA
5FowzrHpOhcx8seaW1EkPFVitUbaUr320V6suWyd7Hpxv3D5avv3qpaRJf12
48FJvtZeyjP0M5e2hzz25CDjYT8mHMs3CK9D/j3/teO/ZimfZcdqMmf5GSOe
DHEyDF332Yb9LM8KfCpgTeUei4/FvhojKEa2Y/WUe07esTjb31bVLNE22Xxl
5We6eLGrmzD6L8d/beWiewag/ORlk8PHezEyuS1f6HlEz8i9ZqiMkYf3a9Tc
U403uJZ2TixZ55ZfC065E/456z97ZV6a9uTlRi7fAu6WR7Jyk/N+yQuOY8ij
vXR3xHNi5HmPczXpb/Hfqzp9nRgy+87mWiAxMvuYmNC90+Q9rHw7HUsZYmQb
W2gSQ26zVsikmmQ9Xr3eCzJy0XK4vk8yZs9/bhJa/7MwZrItUY961j6Qfpy5
zZyM0Ngwfxotr626Krl5p/2/Yia2VjFx4PPLW6N77zRvzzJy03Nd+UShXB7O
oeODmzM95jFfBt/D7k3gXFQ+SdM2EFPy3DfJ6+W6qzxfGNh6VsjrzR9XAv+K
kUPzt/Fm2z5sO/HXV8dfjKzv8bpb9sa5KHcTRv6fPSP3mrFsDPnixm7WRuX9
pjqYtGfiuaFYYqxGry/Vz/QZOe+JvJB5P+gz4/rgOvIx5Jd81sbq1RHxemLo
VfvEuoyMnx6y7YB7D/oxGBmvCnyD8ai87fmNSKrHNFqHs5dnUabQmGvk+9a9
Sq9HddSWr0VZG5mXe5CuNY+M3KWK+BtGpu5Ke9tllmtiiPQBjpGH3EPuBP0z
z8eR6jyN/hcYa1jwrIPngGXPQnhePy9xZLtNVXPzYeRnj6vHQupIORW811hL
PXMVKysnWbFnXcf9unmheRfViIz1Oc+f3Xe1pm38OMTHliuyOiJilYCnda9e
ncnmIqeMLHaF0WxuE+cMtZN9H2NUtzaQxg3YvORyJawsRhYXfkwMQN+juHqd
7arr+xZiZHwu6D9hY+LIvHKM8P71Pd8Q3+fX4eNj5Jhg5CcTegoWMXId7i30
7ZujOP00JG+HWa5Dm7HjJuJeYfvmxWjdwkmk5/P/eD/iKOW7wslwsT99dD/9
V/7Vl8/I1nfOqktG7vrcKRu311Sqred/5tkgPsUcM+VdyL9N6mI7k/yL4XVn
bXGwvbGYbTPrFLvew+9bhwd9PnKv2cpjZPKB4TMkRn6f5iTz7L8NRn73/j8H
z37fHvj19MTBIc8LCUZWrIY4MjFR9aNVvH7nWfRX5HWLkev8t2n8jNix2sL5
rVMn+NjuQ8WRfU9gsbOe3bXByMmxnS1jVDtWk+cxtOH9VjZmLzTe/GNmZnJx
qWOzt3Nj5uvS9HjyWjcnVcL3DT5uc13yGj83s2f6j++4WHLx/0cq6qeVm2Dz
E0LeGmha4/ba2X95hcftnUz0PILlvk9jwDo+lplVD8SO6yP/169ppfuRonhx
mfCtuH/nqmsX69t/c4xs9wvLLWJkl7vT51r0mrUMI1OzY+P4rxknq4YeeUkw
8o1Ie67DpZz/zMv+Hz9km9tsf0vylBdyvzMPy8iIsWdsx7zVDKki9VkwMnkW
5GPXYZkmjGz5GImRv7h5Otg6fTqat8fGvg5Sz78yRi7aHuXDkbNQNH66LU3K
iW1wZleM/DEzcBU9Pd7OzocmOTBVRZ+z92Qv3een0bqZ04wrE0OfZBxoueLb
onwLfW6ae8yr8o/1XVE7n1dGriIYeW35fDCWHIqZh+6blG9s98v7nH/baRZD
5jsxL69IjGyX997LNW5yLDkuMDK56t/+9Ff33s6LuFro+eTSwwuD3SebOW/q
rNbZrFmp1ycnO1bv+60klwI2Vp0P9fvyIYdVNbZOqnOfybRPX8afr9h4suru
WUaGpfHF2FzPx0qIH7MdvM6636srmBBGZn8jjYusM48mjKx95gtGJgeM8XpM
Rx9qjw39mn02p/55kjgy89k8vjFYO7zaKdckbXn2xxxNysgf3sf54VMXsVRY
ue16736OixgZJXU2utumKvPumpGLYpy/p4xcJf4dy/OPeYnb5fvfnQVGDvU5
5ORS/+ThzvXG+RbKd9E1RN/TJ8uDTr7DcLK8kuVz4Y6bGbP3WxqjQKNaHvW8
5+TZB/9zXXK+fkORY+FP619bbB7yjz8fJHXBiSOndRz6XOReU5etRT98FSOT
ZwGj2msM70fMWl47ISYY2c5jNA4wn3uheDL19lRXRN5xPiMjtuGsMrK2mZhA
3f83zbOwjKwYPGIsMfkWsLLtx2Lr1hYjX95dcvPqmpHnRW3Ekev4gJfxx8ek
thi5zEOPtmrb6yz2LWxKH8BzNRi5i7i1cj/oq/GwDd3Dsx5HD6rd22ufxurf
1NmPXTFyaB3gxrrHmPht0HNmyMi7d5ZdvwlThu49qvCpz8j0ofI+1jxU90Of
xcicH7Zf/808x9N0RevAb+TYqKYL0nv4P4lHP3Hj9GKMHMq34Np0fuNw8OXK
qG4DjOyY+eaUGanXpy37DGP4/ujZoeMVzjEYGX8JzhP8DWjToXu+qoysZz0s
Y/+Xe9lyEkZeSMfk/ZCxMa/Jevw186DhO9YrxMiMQfu3h2fP70peeooh1/1/
3fF6VuSlkHPBvlMdAHm/wcj4Wzx+kYwjLPI2mzQXmb5ajDyLYzALtplWLWp/
Gz8FRr5x5RuXm9wFL47HPmeTPy8uJt9TPgF15dd8iE33zqt/EdKrhozsf1f+
33wfOe04cl3v8RgjIzEy69/0fg6ufZeyaNE0of3o15PGU1nj9pJ4c/KbnY51
tTVexMiMnUR48RFDFiPzPPJfr91yseTQuomReU6NuAcTI4uHXY291G975szU
69ORN17vwp1R36OYLXFl6z8c8kYm7iyGLupn6Svwk8NrmViyasAnXsgLOTZG
fA8fax10XqMYFzKu+qzUDmE7FDtvEj+WJmHkv799mh0zeJi2oDwLMfLTl0/G
ak6Pr8OVTIsrX2Xfs13ECshZLuJfMbLv0/kxa9IaIvXb2+y3eVpi3F4ZH09y
r+DnuDhuGi5Pz7K7YfNknrC/+JhXGHke2gSMjJfZtI/1LBi5yf9i9xd4/Lex
/qFjKR8Se1+hsS9ws/Xv5POaya8UI/t1D1lX8TCiFghMzPsklzJ5Lnh3+1oy
3v/NiWNkf7/pGYKYAj4++vVgsLJ74GoyEkOGiV0Mrx+r12sWkp8K79P6eqPz
5WGQaTi3bj66lPGxrRdd1j/YfCnxMWPUxMSx3GQxMuvDeDZetzYuRZd1Vhj5
+PlWFp+dFSPbvtVnZO5p6CdvHHznxu0VzYPnc/SvYmTpwtV/zsRnfqce2tg6
DJni4s5K6/mj86wXz+r5JX6Kaspw93++Nrh6+Y+OJ7tYr1gOOOOQnK/lky2X
qxyqDdpseSPmJueX+6s29m2T/RtjPRdHHrLSLNrJPPokV93Xm+s/ZvkW5fu+
PIaQ96Q+ya67H96PPC1C/SyMvLN/dQADSza3GG3uXHZMLD725wEjX7qb1G1F
jNPj2MDJ1JihnozydvQMg3NEY/cOnm4MHhw9GOVYpGyS5YP26jVNKQ8+fW8Z
OSaegYiR4WNyJkLTVbnXpt//j19v5pjbH7dHjDrxwFhIvd9+GFxc+uexPucs
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
jOzvb8vIff2QXnMpWx99+P7Pm3edYGTa8cjP8HGnjAzrwp8+I8s7mffcF4uR
fd8423dx7lXNayOnlvmWTaexa5MwMn7QZV64d06vRnM5Jq0hUEXiQsacxfrS
f6ResOQisF/gamLNvNJnt8nIXaqMbX1GtrHxtn20Jsln+JTG7NVRm4w87ef1
eCHv3Cmu7xwTfV9T32v5ihVPM97/NWVk9uukHt2qu9Hl8WCbra9TkejHVMdD
jNzFOsln3n7HvTLr+cPi/+vyLBRPgpETf83VwcZxef6Ou1cZbsfSymJhjogd
t+cfxyr9GeP8crkWfT5yr3kTjMx4PfMZRr50b8nxj+KsMLLzC989dd5wMX+4
or4w9hssphwGy703hp/hRb3Csr+/3BusrSZ5F3ZaalprfnD8pbvlvsj0Lyw3
5iFhZf0dqkxvpfyJEM9bUas72QfhXI5pxJFd3/butPbzSMvITXOUp8nHVrFr
NN53XFu4X0DK4bOeG6HrwLTrckzKyP76fkx1RcixaFpfZabrvbNSu2aIYgNt
Hb86sYAYI5dxUhv3HlXyDiaV6iqWrb/yjsk/byu3IiafjzleYuTVzaTePff1
y+mzPhiZ/qzIR9NuD4y8dvde6XowNhRGRsSV8azguOPtVtQW7xwPmWLtaMQe
PR/3mrFgXInPufohkvKSh7p0d2uwc5I8X4I5v7qVsDLtHkbmM/eBlpnLcjND
z9L+7/ujQD2RES8nceQFNw3rAh/jc2F/t/15VUYmP0v32WVaOfwhmidcJtbN
etzZdbX1WkbTjBhZXm1s47QYWdeEaS1L/fE8MbIbh/Rb8tubt0/HxnvZXIsq
8+tSfT5yXLAKsWTfU23aqvuMAEaue9/Tdrury68xTu76fCBmOw+19uiz2xyb
V0cuDrP41eCHH//gcizEyDAxjMx1hPdljDzaluSVODKczOele/H/wQHwA4wM
K1NHDz841XUMtX/HyCt9rkWv+ZM4Gc839379aHy6YduFjzmf4E30a8oM+CIj
sbI4uWodolCfGau5p3iyflfehbzgstzZIe8m/nTt19Yj70vLblrLwnp32Pt/
xafhZDEyr2Jk66swTUb21fWz5jYY2V/HuuscapfM496vvwxOXz3NfV/EyNNW
HUaeh/XtUqFjjg8bPhGzqLvXVDyjh5OrTt8kj7dtzTMjtznOvEj799dL16Ur
MTYPPna1Bu79KbvO8BnvY+Iea268SzW/bXyX//XarWy/ffvTXwcPjsb7GeYN
D4gdYGRXZzqtUw0n+/td/si971uvuVbaLmHkTIozp7Hk77ceDS7cSb4TI6ud
4xsLjyJit0fPDivlAYdYOp+LPC79rlf4GE5mHJ9l5Lb7HTEs8286D/JALMvr
e3lOw8fHz5NxizZfmf1L3HrWfDwNzTKOXHTddPXMCxh5HtQz8kix+yLyLW6t
dOfZ2PZ612XkeZCta2w1jTYHJ9txe3W5fNK8aI4XMWR0bWkh5zs8LcHIyPpU
aqw5HAsbL3tjj+32h3I34GL82RDvv1reddzL2Dyu++wzMbKrCZKyhRgZkXNh
2wDjarY3Fgff3LjjGFzPsvs4cq+5lL13S9uqcjFcG1/Zc/zLe/IsdD7x6tdW
qDJWLtQPESe+4eUiF/lcWNm8ZNaFmC/9Q92c4ZCsL11bjEyM2M5ftTmTnOWF
LK+afSlGpk/rGbnusas+LQyMQv/hO/iY3/VdKJ9olnE8WKoqIzMe62Pn5JDm
nZFjapu1uqxJHWPkthVafxiZcyDxdms2zzYYmfWw9Z2nJeLDjNETI9vvuXZx
DYGRGS+S1LrL+x8jjUMevZ64Y6o6fqtrixkj88pYu2/W952ePE+eL2sMn/hB
ecr8znwYHyBGxtMiiyNb74BeveZFQz4O5iQj03ZhZPiY/GPe6xqL9xr3nvBo
UktvdM6V5STb9/k8i4UAD4/zsdgVRr608vnwvP2zi8GSm9AWI8ujoWysXZnw
swgxcpHYL9snG9k9SM/I9VSVAxUnjjEy32+dJoys8f66jmh6zoFJa+VNIhiZ
MfS2PoXqVSDG9CF9hmOs7H/s//zvkZ1e82Lee8ibb6kK/sM8/ZobfG8/axpN
p8/aXl/UXVhfXmhUS2RW9xXUEKFuYGvnWYeMTI5BkbdFl/uQZYuR+VxnGye9
v4WL4T7ykHnPPuiSkZ//ejc3HpBc40urnzsl15iRbwWMzDWE/on3PiP7+8GO
R7b1Ydg/r98k1/il9TUXA4Z5yb0gxszYO2LHPiPDFjAyTI22fk48pG48OBn3
fUuZw46bUryuV6+ZyfN+w+PCfuZ5Cl4WfKa9xjwknX9kSQxZ4/r0f3hb/ymO
HS/k8nLhY82L83d55V9zuclVObS43zzJMXITLzOJvoZ5kSdSdd3wuMCneu14
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
jBzbxtD28j/HvcP/Mj8xcmh/0kbEyGwjcWni+WjS7bJ1BYqnPck83nxx76C4
gZ+DMcm1p0iJZ/Lo2GjcH1JOsrjihzunjiV4b+PIfQy515mTyUf+YvVwcHPY
b8Cd1OmBlS0j+55bTFeXU/x5/fx4aez8h41vPX7o8j5QKE9ZcWcxMuP3zp//
b4OVnYWp+nLBxTA+r27dh+8nneenwMi+/xbtyPes4DrgP1+014GytgdTwMIa
Z8q8EPOtE0OeJ06eFSPXGdvYtp7/Vn3asrYYY2TG7U+yjtNgbDHy0X79XNim
bbjsf9zrlnkk1122ff4Dm5IfrFptYnJyJNrKdwgxstaZZYmR21pe1bbCuMSf
Nv8Y7P90jaMfWzaxg65yQFR3BUaGhxXrcvVh03gyPhbiioyRrbdsn2fR66zK
tGE4+dbh/cHJy42sRs+H9FwUvxBfRuQDh2ophBhVz9dC/YM7z02uBb4VsDGc
nOViHa+5zzf2L7h52Jjz8fOkPh2194gnT4uRFTuWzzPbMIlPMzprfGz70KrT
wilhRs7HP2zcmBxk7ofqxEqYhrF+YmPLyGsF9zKsi80rmqcY46cYR6bvmJRh
rRgDN40aygiubXMsMXzchJGbqoxvicXiVdzV8i0jw7LTrvmM4HFi1pN6WdRt
ByFGlo+/rnH5Z6qrkXp69fZZ2ThqGHl1b+TrRq6Fz8h8dn4Wy14MGU8LU19v
5uzTq1cV+TWqh68wMuchnAwPw4IaB8vzas5JeZVJ/+f948Hf3546xc6xUFxh
xMj5utRiZH5TXHn1aDnHyHAT86DfgI/JTZ5WP+q8KlO2X09rGk06z4+FkWED
uJbnEf60PiP7taIkciP0XFGMfH3YPm44T9DT6LJH/XmekZkX/7//ZCtj5dD/
yP2wbXueGPl4/2bPyBWPC/HnWO7ryeFtd79BbnwX69zVs4cnj7YGO3eWJ55/
1TZdljsMP+Kn19WxJ46Ll5tbl5YZ2XnXFfQD2T5I85MnXZ4YuezYsU9ZHn5v
jMvT9ZB+0m6/rQsbuh6XKbbdYR/DE+fVktTce+IYGTZ+8jx5DdXKg5PxTabu
Hp9dXuf1e31tvV5nU54H3J837w6Wdg8HF+4kbV2MrHOG2K3OyddvjrO4G9PA
ykW+TCHPGeZF3eaYtwVxZDEycebVw2Ra+J3/Kx+L+27qi7x73X0smX6DcROo
rb57Wozsj52RP3OTsfOx6y1j7UIenozVt3G8WF1ny8iFyx+uc2y9uc9j/jZn
A07mM9yd5GKMj+2bxjFooll7WkxL8K3tP0Lj6qowcixPg/YCJzMObu3aOVcD
uu1t+PC+/To08NrW7UWX+7L3YM29p752F+uf35bTaI5vLCY/iUexFfMnntz2
Nslr2K/D4a8zuTny75hE+NjRl5UxcixmTQ41/ZYdc2P7tbG259WmHY/hxOuF
Wg8q/Z/13zo8SNphev2Aj8mpsDFkBP9SZ8/5vvF8+uZJPg7Xq9dZlMm5kMTI
//DOORj59dt9d96Rm3EzHV/ctAaaPPVj3hZiZHKVbS6yGNn6LZOTvLl+sfU+
tay/bWM+s4oj03dPwsj+dYX4MYzr98suH7Sl59ysL7xbts5c3237YL0Uk7Z8
rJy7WOxsHuLJnwojw8S2vgH7nvtwtTU9jyrisDJG1jzgZP+3eFuqvg1dMLKE
nxl1tXd3Vtw9J6+2znbZetp6IdW3pz4nTyrn39bRvHW9gZHFiqH4DYwc84Kr
I65VVXLxWI4dj2jzysTIioGz/ngil8YRguueZ2Tb77EfNB7vzvFjxwBJrGzP
cbHiyPwOI3OuysNCgpGzeiGKwfWM3OssSzkXvE/bMvWoy563cf7ByDqXq1xH
bF1qzSM/Lm/cx0L+FpaRtUyNmbOM/PS4uN+YR82SkRPPzSuNxkWLBXTsxci+
XyD+ovhvTbKuuoaJkcm94HoRu/6IB9g2n5FDeR6annWft5jy8f6tT4KROcbi
2+Te5VHm2R6bvkix6esyMqruc/aos7ERMPKYh93w/vP22g9j34/lQaW+tW2s
B3x89CA8nm1SP3HGVXbJyMgfAxfaBtajDUZG3KuTP1HEtOReP9y5nltH/sPz
So3LEyP7MfCQ6uRB56/J47/Bw0mOxZDX9w8HNx6cDFSvT4wsnnDvVw5HY/V6
Pu71Eejz62lNHNOeOS/i/W3Sb7x+c+SUnL/5aaI++qb+qbyOY7kWIc+3XA0I
j7GPn2+5nAvGXc9inEdTdcHIVa5V8KD2XdVxh1yLubbwX/iz6FhL1Dhri5G5
zmhcH7wby8fzGTmpQTLK5Zg3Di4S+QGfAiO3JfuMQM8JfG62fl5vCsZSzIuy
bfJYWP7J5TGNdhj5//79OKu5Efp9UkbevbNc2nc3zcuGL5ceJtJ4t6LpGZvI
GLpJ9xmMTL/14Fl8eSyHHGzneZnmEBK/JQ4NKyt+LEa2+2Ccax9lTF11HUPH
zV8GjAwXEysmz4JrAHFmvya14+T0mXTvadHrzIvnIWJkM/a0aAxeUR9eJtXg
G/1PnJuw7uJDWztkYXD9MM0nPfwu+065WXY61Sshjryy9K9nhpG7jiGXeWjR
d8OaGgdZVWJk+myYNcac3NNMwsisn+85wbJYpq490TY55Ambu8d8NOalrBbJ
PAlGntcxe6oPxLieWa+LxFi/UF6BveaLkS1Pz3q9Y+tKO7b5+3Zdq9YYgW3q
evmFWPTucHld1GQmbowvse/PV3W9ysQ1wzIy76vG+69e/uNE/hZci+infiu4
L//23B/G/CzEyJaPE1/WUf5Ll35Oof0sRiZ+jKgbgvB9o10q5iyWyHwtZs05
vXo11GdLm+71y5UHTpfuPm7EyP65ZfvxmM/70bPdNI6cMHKSV5HPTU4YeWGs
Jp/6Pd7reazz5EgZeVLPnq7k5yHMmpFRE0bmui2vk6IxdvTn5Fo0fXZKbjPj
AP35K1+iLCfP5iTz3uZqzLotVNU8MzKqW0eta8UY2crGkefJC7uuyEmu2zYm
uR/ompG7WGfJ3i+H+o3YuBo8J25c+SZXw7quNP4t9Bs+Hj4j22nlWxnKnyhj
5DdvT9w1p02Wpk/n/IKHj389db5w5CiLkYkt94zc62ORrUn9/dYj197xmqDm
XtMxymXXHH4XKxL/vRGpp5fElG2u8mg61k817sjZUn9BbFOeyftT8kOdRPPg
+wY7xrzYYoKRYddb//lXl8dQlM85CSNLtBebm2rXt2jZ/KYYjM/ITeusT1vT
YmR/vMBZUlm9NV+T1k6bB9EmyCubBuPDeJzD5ApPMh/yNPz4BYxIH9FmGxjX
qYvJqi+I3VtHx4IO1/na4lcTrZ9/bjG/pZVEMPKPS/+SeVbCyKwLeRYarxdi
5LIcuS4YWdsiRvbr6Lr8i7WjJN/Cemf16nUGld3nDdszjNxmf1t1XtyXrh+N
x5DHuXn0nWrb8Qoj0//ZecDdPSOPK+RprHuMOiIPXeP9yhhZdc4mWW8xMnkW
NrbMNaIqI2s65gNj94w8/yI/oMp9uvKOY7/7/P8xMLKrsdGR17MVfEi+gV8H
uq7kOewzMvHjohiynlNMcm2ynsNlechqT/53rDvx5Enqp8C6yuVmPyze+9Pg
0urnLsdY6yhGbuPY0cdV7eeq5ifafEmNL7I5S7AzjOyU+iR/trg5c9bp1auR
VAMHP8P1I+fHCG/Kv8v2TcRu65yfdfq0W49uBmPJfoz5Rpp3ofNeXOwzNtOd
/8v/M1hbPT/XucmLK5PFJur30d7nITeSmxuq+xETbGo9MejTi/9/OjEjj21H
DX8t5S/LH7lOLuI8CF+LT5WRq/Yhdixw7HfLyPDlrLdtUk2bkSedj+pk4Hts
mZjPh/thv3QUu/epc30Rf8KiVRg55AfHupNnAifzPvG9qOcJTdxf8WPixmJk
4hTEi7nn5x7eXrO6eLYzyf3GuGd5Mj6QZwGInPJL23uDb9bztUT6nIteZ048
C7G11Ydt+MWwH7OMjBSDgZHr5q1WFYx8Y/9yrt40ucixPAyNGQvxsRU5Xlev
/nHw+8v59DGAkWF+tlvcxr4nTjutdYA36zIy+x7uJG+h2K/41Akf11ntYxiZ
9UVcg66nbeqscHLia3Fn5utRV/QbdcbyhTijizwC5nnW48i0Ce6dprEsGHnS
GDK673Knk34GjiJ3Az+7MkYuOo4fzPvQNORXLZv69lUZuUhwsu4bLn33P6Ie
H6HYDIzMOrx69cD1P/SlPNOKPctTXQ/l+8663Vn9nvIw++LZ4zsZI69v/21w
fnlrcHFtM2MLau3ZGtW9ep0JWW+WIR9/ffvhWCwWXhYjw6Wx+mhtaffp9Wx8
Hozsj9WTyCvVmLGiWn3kJrfFx79WGP9WVfSP5EzbXGsY7uawr/QZ2Y9pxDzg
m0qx5Eb95HBdYc4iP07fi7ZxnzxcFu2vCs+zPsSLaSPEjuF565EcY2TaVddt
3B7XKtPNMyNPJxe2+Le6fg2oDiPP45i++z9fczlMTf9Pn16npgiMXJeT4V4b
L3b+zh43Elt+/aZZLFz8WHR8iM1aRq7qcVkmMTKebbExjPwGO+Lptr55wcWP
iR2zPvRLxLZR1XrSqt3R9riBqu2bY8V2w8YSjHxt41tXk1DjLmFkvOHwu/hy
ZS/hjJ6Re51VKY6cMrLvLaFzSDlHbd7Lxs7NhIuLaosk/m9wEPffZYwMi97f
uerYSmqyvmXXlLr7hhiy3babqV+83c7Q/2C78Rqjk/WFcGTT/QJjFzHyJDFk
5q38CPFxlfXkfoPpFd+2jMxnjXGXx7NdHt/5XnZNapRVlV8X29c8M/KjZ5Mz
ZGzf+p5nsf826ZOqMDLHRXHwefPuIF7HeVU318IeK/FWlf/Bd3681M8r1u8w
oeLDMBPj/MgLCTHyJPJrJ4ck76PkXE+YtOnydP1zLDhkQlcnesjBN/7ydZL3
km4/LLl1+1LGyORSkFNh86HFyFXbLtPh12LrFnSpt78fuO3wtbud1HdhnCWv
5IzAyP7/xchf3zxyEmf0ORe9zqS8etSX7m5l5zN9DNcpuKwOJ1S5boam4T4f
Rr7hfN++i7DvwpCLk3xCMbLyLmK6tPK5y0+GmWGsJn1124ysXOnYOrMf5NVh
91nZuhODPkjrdVcVTFjX2yLb7pLc4LLcTz9OLl851sky8g03ruWK43F416/B
xmcYWDxtGZn3zMeOZ9d+1r5Se+T+Yy0dE2qPfZ32H7ufDHnxfeqMLI/lJm2r
UXsd7uut2+WsxHrhB8txZ/0OfknqKIid+f7N26dZ7T4YZtrPw4klw8q0kSrT
22NVh/lvr3zv4sJ7D24NYGD4aG3lYi5+KEb0x98RZy0ak9eV3LXExJDLfCKr
tBviwGy/vuNeRYxMnB1vPPYVDHn76Mrg8tqX2Zg8eVbo/lw5H/OQQ+GzsBiZ
Y8v9JDUAeRUja53ttTTxbU7OV/rogye7GSv3XnC9zrR0f5eysmVkCcaYBiPr
vAvnISfj9dYNv+D/BheRK13EyEiMzPumMdOyPrTO9NQEpH+RJ9ENz9+O92Jk
+h7es726Jo/1c8N+iX3RNM+2KSOXyTJyKN4MB4mF9F6MrPaA9JltP9A+S6+B
vFpG5j0cbTk5t06Pr+Xahs1tFCMzTdN6fLH4ZoiRy9oN/HMWa6xX1SSMDJey
T33eK+t/quZaxBhZx43f5MfMtPdOmzFPU04SI5ObzCv8VvX+vyojU3dajEzs
+Pmz+y4mbHOI4WPixv54vFkJPpavcBuMzD6FaWHksf043HaYWIyc9NmLmWwu
tJid/o02SruqPi61Xv1B2qTymG37evVi362zz8UcN/gXwcSMs7aenXb5sfYq
RmZdWPb28ZFj5N4LrteZlvKS5XEx1OL9jVyeg2ONFnMtyvoFy8iWHcXIfn9h
x/oVjd8j7+LKzp86YeS6gpFt/0P8l21TbUG2WfnZcDIsffx8I7r/2KZJxqFx
XSnKmWgqyyNwpxvDPXwVk5PnbhnZehWF1oe2KMa1jBw65n4uRba/U0848bFd
njw7yBOsmivoS1zVxjnx5Gjjo2bkSRRj5DptskzEjLUcGDlrQwFGZpqmeTlN
+1bass/IbdZQgpHxciBnwjKynUZtl99hsLa3scq+s+dPUptq1A+oNmvRf0KC
JcmZ+O7yP7m8Ali4eD2S6xL9MDy8cfxTFju2jJx4QdRrC2O53MO+qqi/FiPv
PzkYPDh64ET+sBiZ44nIH+ZVjNzG8SAnhNp71NyjLl/GyPCG9Qno1euMyPok
4wGXxJKTMXtI94d11OQZrP5TlGMcigNXYWQ/P7mLvrqOyEd+8jJ5hk7scuvw
So6RbwwFI5P3pvUXI3ehOs+160xr48jwr5jWMjLcSwyY7xUT5jsxLvFcjSsU
I+vaE+Njpol5gyrvmOlsXgXXVs1v0mez2bKC17vqDD3vjKz4/SyWrfv2uvcj
VRlZsT4xeMyv2WfkLvPXY3rz26EbR0b8zzKyXwe5bl9OPgUM1UZ9vab543Xb
hO0HYve5IUb21w2W3Nm/mssjKBN9CPFj8TCv9FkcA/lmljEy06rNKb9OKlq2
4sO8IsZDwsjc0yytLDpfDY6njqlt59bHru61Gya2YwrFyLAFcWTqVtsYXDaO
T9zcq9e8S7Fktdm1R46RX79tXn+z7nmmsYG6vigHIZSnm/DiVu7/MQ8MX/PA
x+RHwxViCzEy9wbEzWF+fvuQeqeVxUWnLT8XuOiYWx6xjKwx5sRc1nx/6/T6
In4VI982907XI76AEv8t8s/nWiUmFw+Tw6F1aTP3ZJK82nlnZO3LWa9DHdVh
5DKOkuZhXB9xQlgW714YiP7DZ2T7DL7KPNuKLWrfdc3J70xMQbU1m63ryWB1
c8HlV8DJZdMrTkz/ASMTQxYj87tqHlVdflkdEXGwJDaGh8XBjomHEiNXPUZN
GNmN0bt1OsYWLtfiZvKKZ3KWj9zHk3udNdlcoZSRFef84J1DXfVv6puSGN84
A1kOhpFtDMl/vhYTfLq6MdvaIsSyyf3Q9qr2G/cF9PEo6avyjBzzuphUXV7b
bRwZVlQtaO4B5LPsHyPLyORmiFvlxyyVMXLRNUl1Rey9hzzjmjCyizm6+M+j
bFu5PjfxILHiOXqVMXuzHPvzsTOyzwyzZuEqIp7MuLrnv951bfJ92i7rMDK8
3SYjT0PyBPXH3dYRffKVza9djkWVOqQsUyyMYHMYmf8q/sw5smxiA3Xkc7CU
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
19kn/FeMbFm67jG02wMjy6+iH4PXq9e4Qv6GjpGH58yX63uJZ/KQnck/js0D
RrbXUtUpyp+XJ6Zu3EKwbh8sGzqnJ+nHxcg8u7+ZPr8XM/vcTKxZcSIbC8df
9d3rdmq12TFlLL/Of69H8r39vIMuxb6YxnKK7mNsXkU2fYSR6y7XZ+Q6+hgZ
uW219cyoKiPXPSbKG/e/T+ofd8/IVfu6qowsTzH48H1aU7Rp+56GlCOR3Js8
yRjZ5oYQE7bjsMXIB8923PbBrfJ4g42ZVowMY1Jjj9dri1+5fUgcHiX5KvWP
hZ0+9p8q7V45H6E6rxLHkJgyjOyvry9XX7zgHMHD4gt/fN4cMEmvXnMje27Y
82P4/bWtf3e5uH/dvJsx8rm1e+49rzmfxLSONd7K8gJ478aRjN9jF7EP7Ipg
PnnKNumryvox+kzng5C+Wg8g4shiZMUvDh+uurF7bYxlYbuUFz1i5NOshndR
fqPiq/T/sJxY0WfkLmND02JkxuzZuLn9zWdk9ls810J5mN2v87wwshuvPgfe
b3XilHXbrOq5nZVjUmefVZlOjBf6zdaLy/wG3z9y5wm5Fl2PMwxJvhTWn298
mke5OkDk6pDvQMzYeiEx3dLDUd/gYquvHmSMfHxw0wnPNXIbbt/+znGx2JhX
1e2BkVkfljUeI27v+FW5dsiTjnsx+vg4b5+47Spj5FgedzKPJ8l1fNmrBzJr
JunVax4VqLlO/Pib1YeOkWFgGPkvt/998K+rm1mc2XrCyB9OdT/fpYwsH0p7
fh4/33IecHFeTuKl4/Gc+NiDOn0YbLz79LqbfxJ3SDiLV+VLa53VT93ZuNI6
I4tvYfJY7BMWJn6sGDKvMKJl5GnmW4QY2fpA1JkX+5z/ov/z/rjSf/RslGXx
P7WLUDvSPcg0+BjNE4+N4siTex1MoiLOaOO4yPM2Nk/2gcY61fWknldxDpI3
G/JFth5wvNLfKK8Wny8++96b05Dq4hUdczEy71U/Lzbd5bUvnRzzXjuXjXtD
YmRi7IiYK/kJynVw+Q4v9nN5OKH62bG226RNl107VP+ujleltpccEVczxzum
lpF9H0vW8/jX09E1fJKxSb16fewKeILDx6pNbafNGJnPlqtTRl68tzvYOdl3
evpyz71y7iq/z6qIjyV49s7p1ezzpIyM3H36y+3cmHUxcuw/MPL9+7dauV7Y
uibKL6EWoc0lgO+Ia/t+DX4NOdTE46ypfEaGbe26EP+NeQEQG2Ea/uPnVtd5
/hvKUXn5IrnPsLWpzyIj0wbbGDdlGXn0PGbye8yq21BlukmPC89cdJ6gpG7e
Ua4tsQ/kAee3S9VSUB2FprI1KMvGErYh+Vj4+WxjbWDYz1lGFhtPm48RvFbE
yMoDtvuObRTzWga+svl1xsj+eLcHR6NxcGJkzU9jy9lvxI/xlNAxI++gyCut
qmLHPlarxt7PNPXdw/9CjBzzl/Nrb+cYWc+TZ80hvXrNu2zNPcn6vUX+415t
7kV63sHHtw7vOx09G8/lUxxX9ZGSXN0RI5d5L8OX/rnfpTbXL7paIpPOZ8N4
/1pGDvmdxeTHlmPLqsJb8u0d+evHpx0fA3U65mVcNA/L+PyP7165OsKTs5vP
yE3ykSdRG3kobTOy4keM1xIjT4OTq27rJP8XI9N/UDfPMVjqW6xp5AHX5XYo
RsrzeuKR1Krr4r6MePj68kJlRkY+D8+KkWMiFg6rkhfBe3kK6xUmDnk/+LIx
5zIOl7eEPX4wMhw/afstjpMn7cNycJVjUSVnifF/cH+RB3NSf3v0+cefD7Jr
dR9D7tWrgkzNPSu/JqWk/+S+Sz1kbF1r4s70QUXnuBj5yYs72bg5vidP1+dj
W49kWoxMHWpiyWiS+fjb4o9TDHlX+HFaprny4MeMkav230X7nvnwWvasz2fk
D9l25dfz3w6/y9Welq+xZXz91hYja/7yb6sbn55UbcSR67JVNP8xrSHCeZTV
YQvkGnRRL6LIK0vr7McMm+wD/KxRGSN3nUNv9+GkfnlFYlsufvffXc3zeeLc
IuGpBgPnXk1MWFwMs9K3WG/gIk80X1X8V9QmWS7nquVJ+TDXaX9FyyhqJ5O0
j6J1Y3vgZOr88TmUr8z/8Xpb3tsdfLGWPg/u8yx69WosGPnz67uJjAfGGBcz
ve5HFVPWPerwfRkjxwQj/+xyLcKeDjdq1omYRIsrk9fZ49pmY+Nc330/aet9
URZLtjkFTcV9BjwrX+CiaS0j2/hG0Xryu8/+det7VJnexqjln6zxn9NoH/OU
jyxG/uDlWoxNV9GbOKQP3vvY8+SYH6T/na7/dRiirL3CzDFGrhsHrKIuGfn3
5w9dDJlnBJ20mZrrrXgsIidWNTEyDjZs/CriBaycCDFyF9vlS4wMTxK/1rbD
yMrhDd3DVfHyFyOH8pvtfk7i+eXr2uRZC88XyNEWI1/a3nNc/OXKnpMY2V7L
s7jWHDBHr15nUiumlrv9fsjEWbw5ZeSMn6+PzkNylYv7lpNCbyXVdLB1Qbqq
MRcTjPzm1WTXJ7bT971b9+phWEa24+GKVGesh+13YQjLyGXzshxo56OxNiF/
Or63jFz1uNkcduWWlP3HevqxTbyvw8hlrMdvsd97Ri6frui74HYM1+/gl2Qd
m3o1W/ZiflKMkVkempd6Gla3Vr4f7KZc13bes2Vk7isQHIzsZ/u9GFm+vxof
p1erUCw4e+bw9+PcvUzXOd1wuRgZ3zdqeqP17b9l+2GSdShi5GS7T1rZRsfa
7xPfEv83ajCyPTBy9HqeXsP7fORevRrI9xb3+Tj9zeZlZLFmV9d9d+R5cTNh
y18D1zqu4eTjMo6uqC/wGXnUn+av/c4DdDivtj2Onp7uuJxkvOAmmY/G58HG
bI/PyDYvQT4WMW9ktPjwh1zstFYfm9bvUwwWJo+N/4cByziQ/5KzYde36X6C
kXVs68xLfCxGbivnQhwYG3PfZhxs0nhmHX/kNq7VXcVOixi56nqrzbJPy7hX
90BngZGbyNZB9nVtaSE7x8XECbeeZnnM71NfT98jQoxc99jaduM/oyo71m1x
tBiZ7fjL1cul7aONtp6MC2jr3Mt7R5G74nxayaWwz3XXT8af/aI+z6JXr0bK
eNfLR87OO/+zcpOHbGxzNFw9kpUHLpYsRg7VMhIjh/og9QFwL3FP/C5sfyNv
ZcuOMUYmXj1JPt/9Ca5Rtl8TI4v9xKajWit5Rvb9LHzBugc1axayHuLIsnhr
lThpm4ycxJuTfaL5jfze4vrV5TePPlf1lauiojxaf/80vf4V5TRWVREjT6u+
muLKbEsTrvj/23v3JymOLG3zL98127WdMftmdnvN1mZ2erql/pAQGq4agQrU
xW2gbqorQxVViCqqmKos0IcQ8Aka9WJYm+Xm4xkn6oSne4THLSMT/IfX8hYZ
4XHzeOLE6+fY28CeR1lGLrv9GYMHK48rL0qRjp5s9BfIc7Y36jO1PQ94HOT9
7tYdJxNrzkWwoskpPBCeg5M8cj1nf1n3GLIZGR739cv2sppiVRHcL4ws4/lc
+12OaV5dY/z4j7TN91ylDZGTQ/KuCiOb63hy/T55tpt8r76LjBwVVU2uGnwp
L4v32Dq/Uo+Fdf+KYGRyysHL1BzJju99ajwIMCP5m6R/kppD+JLlOxhZx16F
kW1mdNUr4n9NMLJv7F7o9VSefwsPC/9Ke+3xbyF+C2HqhaQOSqj/Aq4NiblX
8RKUZXZbcm3UuTPGdd0pq7qM3AQbiyahzp7OZRVak7ro9ypcVtcDMwmMfOv6
hf61K1/0d+7dzLKuxb9w8a+JtwHupXbb9Qdfm5rNOuZrSy9rwYwJHN4jhOzb
KnIxLr7lorF5oRJPcdH4UXud6NvzGNk+LuSeWdhYXm/s9Przu+PLHyO1Yhbu
3xvWztPXYxcHRy6Oiqotn0cp4zW2GRq5vkOamef2R66fulZ1Xv8kjGx4WuU2
hS9tZiTPGhKm1vnk+D/1TIr6H2IMe0m/SU1qngnKZ1+/WaZvs7neXBP1uMSC
+HHedKHtaouRm9I0MrJPH6zXssqrxSiaBEbmeCvyOrc1bqnsfrFjmkVtlunH
wc94y9dXrvfXlv5s8oAjYWBef7XqY2hGlpzkd0vUGSKeXLRNqjIy28uXZ60N
RsYXXDaeK/cIRX2m/k18WKwXNaC7YmT7GpvJQRUVFdWocp/D6Hiy/Vve+NjE
1/zF4u6gDzk2Gtbv0L7TiyZurPuA4xdJ/534Alzjv+DLVStXr3DyoienGlzu
7wOPjP9DGBkvclEeoirP1/Q6SW4Je6xeKCe7/Bd4D/I8AqHSrDHu2BrXetal
Sd9E06pzD1GGm9tg5Db2Z1OMPI79UpaR5T/sr2HtknZysb38aTtlZOHk4vYd
GS8aMeS6jJy3Dar0J8LIrjZLzjep7VFX8KrNyCHPKsRv8sPyzUrH57i8TK5l
puPzxAcZc1VERbUjGa8nvonBd3gkLtxZTaexz0GJL5v/DD6fmts106feKKTH
/g1e8V9QX0RqjOhYsvaVCiOf1Nm4aNhXs7SMK4G5XbniqH8tucBgZqnPlXet
gZHh47rj9HKvSRb3i+dW18PQdafxXujPrtp7LrGcEL6Sa5n93bhyM7nVM/tu
nHW3y4htU3X76GtqU9fWNuLIVdqma9B1uW+anJ/w4bCG3ZE5p9pYx98G+xCP
hQgvstTVzpMezyD3yaG5ZAxft3Se58WQEZ7aV68eBt9r5vErPpG1g+PKfhDm
Pb9wvb/7sJnaquPQwuaDk+tx9FJERY1H1rmma1OnTKw8TzJGT0+/ur7Qv3xn
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
MvES+lQd/5Rx0jL/G9th19mdrZtGwsj279oXjYpyLPskHG+L64T0hYzFIGYj
jGzzpY+Zy3Kn7n9dHCuMHOKfkLiu/k641a5tQPvrMDLSuZO74mPUlm+9Dh/9
9vaof7i3POKTgf/gMNd/2mLAMnXZmmZk4eTK83hXjaWq7Ls7s2cMH78skWcM
n2xRrrOQ/SP7PuRYpv9l3xh/ykB5Yzpd+96Vu5i+Ts5n5s1xqxm57ri7vOOt
zrZbuHvBcHKdeRTvn2wdR/JgnF3tDRlZX3tzrrFRUVEdK+88ndvPv79Vta3h
a1ffIFxKHyqMfEdxInngZHr6ZXwWMv9QvwV87PMgw6y293n1sBobwcjEwe3r
P8tA8p7rBhzp8ipcf/Stl1O5xsCgZbiRbYpc7H355h+C+FgYmeUP4+zZ9cND
zPcyPr5JRg6tJdaGJs2PrAUn89we5lifv9zfWLrSX7x70byiMvUpbIXU9pXX
KvneuO/V9Tar6M2r3Up1MWhvnXsGmLps/URyvcHJZfZJKCNLPXdXTRdpH0za
dB501zb03XOsHl4z5zLvDx4tZOIU9jZsKr5eVG+keP2O+vO3Bvfom83nWuTZ
nqlVmVzXTO2al0/7p5f3TmoWJNfeojhUVFRUx0oYOX3e46gv4v2vqlOiGVkE
u60d3U249KoRsWPqS7sYGXGNE99GqMjzBie7foNZXX7aKn0f/Z7LC8ky4GZh
Z65rcLLU3NP8CiNf3b7Rn334nZdbyzKyeDpsTg5h5CLe5fpsMzKqW19a2tv0
9amM2ogjN/mMHeZ6+dOQNX/9+aH5/PTJupEe2xeyTK7RZXwVdTiT84FadqXX
V3k/ihiZ9jH+z+VhhT/5LXR8YMg+9W1jcpFUYWTG0NEXhky3cXTdyHesmZwS
AzZt6rgru/9hZBmHR1v2H554hT68z99+siyfryLPi13GR+3Ss6MNE09uw3Mh
bZcaLJx/KQvLddUe+x4VFTW5Uudteu6GxJCTODL53+xrMH2DMLLUFBHvMfX4
hLfwYtTpj96+2u9vbYzyjnhdm2LkspI4srArrxJH5tXnu9Ae4RC5/BQ3HuUz
Mv8JyS8lMV+JZel5jGMbtrp/OsodHapJZOSmfB2u+ZAjBvEb61uFkduS5jXZ
jmx3xumRD5mck2XmJ7FX1z13drlD/6wvJzpqg5FDRTwAL/JJroqjoPMqJL4s
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
iqioT1tWLPn8ervjV2SsNGwsMeRx9JVVVezxqzd/YWQk/CmM7OLnKozcZHvt
Zej4FPX86uTJLqtxxJGbvpaPi5HLqikPNzFrOBn+xJ8BGxvvhoeRx+G7GNkH
iZd79vLn/SuXfp/eHzQtya+Gx4FnK777giJG7lK0683b5u4jytYJryvJmazz
JrNsGPnGTs+w8drBcf/M4l56DYxj86KiolLd3R15ltR0P/WzerYqz/BkrJ/4
lfPG802yXFzB+D0UkqcOxpRczJqJNSOj/9gvz8qu5Uner9Lrqep0+/LKjZOR
4eM6jBwaxxzHtVxq3YYwalvtaWOc48HequFknnnj42B/6Xp2Uut3HMeLLTwk
K4szJubd1jI0I8vYPNd0pt7Kw9AcdL1+Xr6/psUzBtpWVDskv1b1Uak8ck0K
LkYcgzxbMd+9G3pXhJFtj4X9fDUqKuoTlmPsXtP+M83Ivf0VI97jsZCxfIwR
qZprqC2VZQZqq/CcWtddKbtM+R+MLHndRGVjyq75l8n7FdLONsYChuyDJmLI
bfJvm3mWy/Bslxxqb2O8FxLDLdq/bQtGxrNKfBGWb2MZ3P/Cx2j5yYyXkamx
5xpf5pIed9dkHRPffoOR8SuU2c+2hJG74mRkGHmwLrRTapggxuCkjGzyoD6I
fBwVFZXRZzfWMp+PX7R0XXr9uL836KfeJ144YeTz5/7vNB8GIvfFXoX6sF3L
9L/v9owfV3JMlJ0HeSEufv/PXu705XOz5cuD3BQjcy+AqNdH7Hgc8WN9HW46
p6ytptitTG2FUKYOqePL7+xrnimXYeQQn2pZwSSM0xM+thm5C5+J2T4tM3Ko
yuQi1owMg/O8ij6hiTpOPoUwcoi65GTG7gkjw8bEkI2/QteZtmpOR0VFRdl8
jLi3vrEd/jzPrmHnE4xM/uP3juswfeftH871vzz/3wwfj5uRJU9mnXloRmYs
G3FlyYeGQuo242lYW/5342dw/R7KyG3FdSdFk5rTwrtfx8yCTeRZe/nLXn/j
cCczTsyuVR8im5H1WD77vmGcORTwR1NHRPLV+fZb2/m2qzKy7gskXt30PQ7r
jSfZ1b4u48JlRZxeOFkYOVMnJNbRi4qKcok+wZEDLoSRJS4QGsOAj32MjISR
Jbey5IujBokrp9wkSq5bcq0inlsU281s09+K627B2zYP2z6MttavSmy8DZVh
ZM049uu4NG2MzHG4/OOP/eNf9iu1W55p439/0BvGs4+ebBjlMfI4ZfI/bxTX
EGm7jTubt4LqXSD62s2nt9K87HY/0MbzHNo2f+v8SC7paWJkdPxsr79w/57R
6bvbKSN/dn1t6LHo+locFRU1mXJwMiLHBWMbmuqjqLl3v3fTyOXNO3yxmvb1
M3OfZ3h50hj5lccLKKwqPAwra0YmZpUbt3Iwsh4nx3VR3nO95BWvo83ItpcZ
1Y3R4avQ69JlrLpsHLkLNm6SiXXtA8nvGvKfquurGTlvHmXzvug4suveZVzH
DiKnxcrct2Nbrk9VczRL7Hhcz46IwR48WjDvYXHfs65J1fxuz8SPv1rumeub
5K+AkTu/BkdFRU22FCMTR0b4kpv0JvO87vr6GZPvwfW8Fs+GHRex6/VRa+TV
BNQagZHhRNZF56/QOR/4DCPjt5DvVg6v5s5XajLo74SFRRK314zMcnV8uel6
Ifa6CSPz2kVsuarXYhLq7+VxJQxc1EZisyH5SaReiS+WzDyKllXUnrL3AdqP
rOcbWlcEkdNZi1xziPfURxEGdom4sc3IUruI+3bOG8bcSh2ccR0vdWqZSI3p
up7kvcF9dV6dTOLdC3cvmGmoY91WTc028i0iYeTMOD3xWHR9/Y2KippsWXHk
mc3jxviYvhSOnNu6aBiZ/tzVD0pfb+va2pf9C9//U/9PX/wfKTO7lkMcWry/
TfTfeX21fs4pcV6+1xw5zPc0nJ64bojfwsXIiO0n10F9LXxv1etgvWFW+/si
EReC5X21Be11c3k92rhe+lTHjxwSu/xQ8HuoiN2XmU+TfADfrh4cO58f4H+4
sVOvZhDrBYOXWT88wORby+NYBLumHKze818XI5dtO89y8FrgR7YZuY37yyLV
89f3CuvmhajIpyGMTOyavHaojW3RNCNLDgsY+ezqkJFPLRxEPo6KigqXg5Gb
6qO0h0IYeRhLzvKYj5HtuLIvpryYcGuZMXJlJPwovOp7xin87Mrd5mPJlNsK
GDmURUMZ+XESO2L+zNvnIUGMQfTx8bi5ou0xeyHx3ND5lJm+Kh+Qy0x/lnFy
ee1y+TXKtNfF/0XttxlZ/1Yc037S6HFGbe6teyf30rqWT5vHlkuTMAa1iJGf
H98zOdSEkfFFd93mEOGFFz7+9t5wrJ4wcufX3aioqMmXI2d6k4yMtM8Y3dg5
17+7/03KsSF8jPgfMeVTp/6u//t//V+NeE+O5UXHGJamxpUQQ9WeCvKe6Vjy
23fDWlQwLiIXgHgs5D95jCzif77rZei4vzKiPTYj+3zLktPOpY+NkZuSjzmL
ckOE5HfTaoKRJe4s/xOvhsxLvtcsa68D/8lbN3wW5Fpz8XXZe5K6+SZox/zc
lf7Ln05qb3N+Ua8nLz9E03FO+qhpOJ7J43zr+un+2tZVw8fTxMi8Uk8vrTGd
xJBjHDkqKqpQjnw3p5ePMrU/6qj3csNIc+7VxS/63639e8rIxDBCGFlrdutr
w8vwMeJzdpqLjTCycO8wjjyMJduMzHtX3LrsOBofI4vXGO5u8vpxx8olxb1A
3tg+nacjL5betkKZ4mlLub7bFNu/bF5jn7fYx5Dwru1pzmPkIubW85V6267f
zZi9J+vmvc31ZdlT8mZUHYsqdQCplY34Ts4HU//Ss+2knfp3/MtVxrAxD/JG
7E54PnhyEYnPAt+yeC3Et523fl23XWQYWV3rDB/Dy11ff6OioiZbnrwWqIm+
6c3bbPxx9uF3KSPf3L1s+tzDF+v9pScz/bn9b018uQwj41OWmDIiHwbfw+JN
5ifSjCyCWWFL1zNafvMxrcv3i++BMUcI1tDXF/IuDz3Wzdah5bpOuxlLKDmd
fdPCxy5GntRn07DMOBm5TI4GiYHiC7Z5ks+hcVa9zCJW1HFXYV/9Ozls4Fs4
Wf9nvffMKMRbzXHLdC4fB9z58NF8f21rPc2F54oFyzjYtvMmCCMjqUktdTLL
7G8k97CMFSjb5zCW+fDx0tiO0yoSRuZcFy9bKCPLPVbX63Dv8PikTsiAjWMM
OSoqKlh3d53x5NVn9fsmro2aj9E395f6/za/1v9i7mF/5sGNDHOFMrLtwSCP
MjX6kDDyniMHWpPimgpbFvkY4R5ig2kMysHIbKed+7fSvAX6utI0I/MsWWLj
oePh/7/3h2lNPRHf6Wkktt4234QycpttqCNhw7rs4OPmrB8iJNd5td9dYxuF
kW1O5viGS8mRrP/v2gYc63XqYYT4yd+82jWavfx5MCOLj4R7m71nx5n2CiNz
DoRsc9E0MDKx7ls3LqZjGsvUzOu6HrrW6eW9Yew4MnJUVFRZOWqJNJH/TTPy
tZ2r/S+Xd1PByLyeW8vmNyOevHp4NZiXmR5mg4+lprWM7xvWICmX56GMhJF9
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
KiZRwqHCElJ7Uf9ep3aIKzYcwsj2NiZezfl0/dG3RsLKddZ9e2vOeJC5X6yy
3ZreF9PAyAg/1vPjcuOcm1fP1E+VvlcYeeiXyV4L8CSnjBzr60VFRTUlyZWs
YsrEbn391moSV+U1L85C3Dd3uRXu79tgZMT1c+bKH1NeRsKVwsiSu00LzoCT
pdZz0XK45hITgcVD8q9Jnucm1lEzMjr79e8aYWW2C/cNZcYvafbwMbKJY/+y
Z9TdNXqoUEYuy9K++sxF265sHvM8Rpac2b710Z/L1At8+3q/v7E0E+S5kfYx
7/nHK0Y3dk/qbuJzqpJ/m/nCx9xnus5Pk18mGX9XdJyWlXiq7JpDbft8Pzj2
WxWtLX7XuXfb7m83job+NGHk+VvnTTt7+6uGkRmzl+Z9g5FvP+j++hoVFTX9
shg5z2sB2x2+WC9kPPrpwuWW5OQ8dm9KXEs1I9vvtfhOM3KIhJFDckY1ych6
/bhOw8j4sZuaZ6npW4zJNlW7jZhmU/ksfG2qmvtYvBDcP7jOQ1ceDOqjS630
3ae7KRuXYeSidbS/E0/xhUtncuO4LkaGifBe1KlToxnZNw3z9NWWr3KcSs09
zcjkTyZnHL+3zch2m6uea8SRu/RacP9iM7K5n9m8ZcR+FUZGfP63W8tGOn4c
Y8lRUVGNKDCOLKrNyBXiyHkekMauMYExYc3OPglLa0Z++T83jdeiK0YWEUMm
rry+Mh11DULVFCNXice5eIR5MD4OuZZRpW3C1hxPHyrmDkk9yBXrzZURLH/2
6ve560tNPxk/KGNobUYuk4uY4xsu37p31+tpljG5egxCE8cS9wWa7cbJyMN2
y3FRfd8KI3cVS2Yb2nW/JecmY4+lpjcxZGFkPH4m95t4+cj/Fhk5Kiqqrkp4
LULEdS5ouSU8yU2P2WtbrphznlzzgJFXFr5trY0fIyP71NT4qypxuaa4vSlJ
3Lbtuh16ed/NXMz1iJh7yISRhYX4XnucXIzMvYJr2+5u3THcxNhc3zKLGLnO
PsdfARcjGPluEqvOY+QmjxG2VfWa80O+nkS/hc3IWjAy0nX2IiNHRUXVkviR
1Xfkk5jfrRezzR2zp5cd2M5pHjPl0q8vHpk8bD4fh6jNMWvEqFl2EznaPhV9
DIxsixhulXUK3TZFjGx7d3W+i96LY/O9MJL9Xx8jry392YzXk1gqPIzEf4xk
viH7vM7+Y9yZeGkZs9f0uD3irVIPW6ssI8PvtE3qAeJlIE6Lxn1MkhtzZe6b
/rW1L1Pd3Bn6LWDk/YdzmenfvhtKGFm8yKaGSMxtERUVVUeePMnEk6uyKePr
gpYd2H9NIiPXuW4KIz89GP/1R4uxirC41Ozueps2rUk8bsa57iHrX8TIruO8
bAz63Mx544l2/U+YTjhYxrjJGEidv5z3EgPHW+2rh3LCyENvq/hbZTnky8DH
EZo3o8l7HPy0TcVnWa+7avuIt4NxEva0wr4izcP6u3TeSa3SlRw/d+5x9fND
E+/NW1e9XLYLHg8kjDwz//mJZj4z60t8WzOyzvGNp4ncFsLIJo5cIYdSVFRU
VCpPrvU6jMz9fNCyAxl571mzXuQ67OSLXZURHknqZJPDocn1qnotI6YMK5cd
x9dEHQRdK7npdWubkbkuw35dsDg8oJercyA3uf6uOHiIb1//Z2dn1XCy3WYE
q2rfsc3IjH3gGTsxRHwRdh1B+17g18HxzL2fMPJwXqNjwMr4m0OPzbwxkCJ8
IC6vQLXjb8j/C3cv9O/Ofd2/PX/WsCX1/FwMXMUPzbx87TW+5YeLQz1aSOPO
L55tpYwM+7raodvHvJgWLTy4bPTdjT+mfMz+mrn0r4a3iW/b7WH/M16F64S5
9ugcyRVzjUZFRUWlcngu8FtU9VwEMzIK4ORx5LQIlWZkuSZSj7n09W3Q3xNL
dtXsHadsRi4zjqu65zGrSfMi0J6Q+nJSw6BsPrYmRL32kG2o64M0JR8jS145
+zd499rS9/2FtR+c90SakSXPBOeZiQ1ajOzaB5l7hcF5hRdZe4jsepdlGTlE
up695Cpz3UPCkjCkaz/5fDni0XCx5vrKTIaRmz7OaCuxW+FaE/O9dzON+Qon
m5qfRxuGkVlHYr3cDwgjFy1Hcy81Qu39BSOzX/FauI4BGdPNMXNKMXKMJUdF
RTUii5Hr5COmvwpebuB9flv5kesIPpZnxdThLvNf2JTrTdeMLIIpGMdXhpOb
YmS5znW9DXRbxjWmrSnl3Wf4fA5mXdW+LrPOsr80o0pc08XIMBT5LVz7Gb8H
5xLHE3Fk8hrgH9b5LvJy6Mn3wsfDsagnuR2YD5ws52qd2iS+dthMJ+MBba73
MfLoeh2ZdZGYcFUfs2y/queXMLJul/gwJPb78OBhysjl5u/vZ+xtCWf7GHl+
t5fep3KsnVncM0qva7EmdVRUVF1Z/cjMZnV/w50fA/3IoillZAQbi0KmJ7bC
qzDy0yfrudOPM8YqOeHwJ+MFKZy+QvzcpzLX8Lb59VNi5Cb0+Keh9wMOFel2
IRcj+3xLxI6lriVMC3f72FR/L4zcRP2ZIecneRv/emT0ftAOkZ7WVWNIS08r
XoSi5S/fvmhip+M8hkLOQbaD/kz9jjb6KL39ijxdhz/3TDv08TCzsRvzW0RF
RTUjx732je39Sn0bLBs8Zk8U6EueRE6GjXk2GDo9jIz2d+aMdzJv2i5yIsAE
xGpCGHks7ekgvozPogv/RF35jhVXXZE6x4druasHx0bDXNDDuB55ejePbw3j
uAOOhpG3d4exRqnb52ozMWW7fgj68H50PfXxAVuvLM4Y1WHkE7/ICSPjL7h1
/bSRjqvuOXwcWnYNShg5JN7KdJyH48wrUfZc495A+LXpfkpvw5Ocz/7j2/4u
ZeTFWEskKiqqphzPomBkrjku5fVtP78OzI9sK4CTySk3Sc/kRaH5s7j249/r
ur15EkYmL9zh3lLn7clt6wQeC23K1A7peJ19Phx5ni+1/NCzl4fGNyHTPP1p
z8R55Vm9r86gi5Hx+xblnMOrsbB2xUiP2bMl3gUtnuWTa5GcCuL13bl/y3xG
MLJwsvbO0lbyIMPKkhNZ55hwMbKPe/W6MM3z43v92Suft1J7RPtXThizF8S6
xGy3n66ljFw0TrGsaAN+biS5+nzHvS/X98LefnbsXswBFxUVVVX0H448ybce
LWTu533MrNkZRg7Kj1xBjAXsmhHc/fSTwueBXL+57sPIzw7L+vbGL8kLx2vX
bfFpkvwZsoy2jk/mTSy2y+MfFpL6Hq59oRmZV1dbeT7x8qdtI9knd5L8vviE
4WFhLj7r+hF5/GZYKWHv+bkr/Y2lmcw4M+FgFx8XH2dHqcfAV8NCJDFP+E76
TP27MLK9bXReEnnVjGz7cPM8xiH+Yz1NNi5/5Jze+MwHv8l6aTXNyCHrU8Ty
cPyphYPhtYNr29x+5OSoqCkWXHlq8SDV2NvgzP82Or7YJZuViUHLOgUvP2Ds
HozcFR8UycXIwgB6bB9xOOJTXbc3RGe//l1a5wSub4rtJ/E+p5ljYHIZOYSZ
mmorXhUfIy/cOm+E912+k5gx5wfeDHmuDhfzGRFzdtX01tun7f3L/S1xcN/v
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
yFKjpLF19dTY803fBB//7X3Wpxo6L2FkROz46mbP2eeITxi9HpzzV77PMrKJ
rdr/y4tVJiycxnYTj4LtJW7VO6t8GOL9kFgyPCoxWWHkTNxa/qu80a51ZL0y
vyfx5CqcrHMkDz8/Mf0tfAwnsw9882U/p3VF9LUt1haJippYfbl8kJsbuXNG
1s/8rN+qMPJQF03+ZOYxzMM8HNvnXHZO24j1tMk0oRJGJp4M72oR53D9hxzJ
aG71gvlvUU6MSZTOBZcXH4wKk+QWFmlmbju3CcwBIzfFySO1lt8ceBk5pCZE
qFxjuUK3XR4jk5cNvy5i/N2VhbUTb0QSN3Yy8qDfNAydvLc5OMPEHfXxNiPj
o5ZccTNJv5w+79P1OOycGSHLSfp1YeS6Y0tgZNhYri20t/eyZ+Tex8cjsfvo
u4iKmnxNLCOjnFqecHJ5j7LNyMNcGbYPI6//hY8nhZFRmRoIiDpjf1750kji
zpOU4y1Ez3v30nF7cexefen6dvBDG3XufGqSkV2124ihbyzNZOrr6WW3OS61
7Db0MfLixg9G+HZPJTw5+8Ny/99uLZvPJveE3V/jO769lb7PHWPXlVS7TiX5
Lsx4Q+Fm7gGsMYeZ+HHgcuy8GsxPGLmq94LxH5qRJaa8cjBrfBcj92rJ+WXy
wSnej76LqKjp00TwsZaHWfEnVxnLh6eZ/xNDhpNHGBnlxJLl+WiXXFNV1Ha+
fPMPRvTz+DKmjZGR1KqOeeDaEc8h8vI1uNSUX6HO/51eiwEjU19Sfyf3AnW3
k15e1ZzTdi4LxobRv/AqdVU0I8PEb94e9Z/1Ng0Hp/Fiux+3GbnrftzRr2dy
XdieaJlOj8vT+SwC5co/J/HpkzF25fYZYz9sRhbByb7jhBok7Ee9XhO5b6Ki
oqZH4o2z+sZqjDzMtUz/KIxMTNrpT3b0xYyjGXcOrCbFdVX4WBh52jzJKPJx
Vm3d5zQ936Lxd3XHzZ34RU++o54y94YyHdMU1fEL4We7LrHEw8vw1jBfQ/5z
KRNrf7rdn7k7P8LIJpY8YOGUh6WfGkzHb7xPfbld9+Mu6TwUPp9uAzHwEZ91
4uPDp8L9oOyz0H2HX/rZq00jfX2hvrlrPvoz/upMnepJjfNHRUVNjzz9p6lb
XbK+iM5pMfQ2D/+fqTmSE6+gtgF9axtM0raEka+tfWFyTaEy+WcnRbGWSFbT
wsghKssrWvJM28fIxGe5x73gGXur/SYhy9JtlBxu9vP7PG62GXlYf27IXzr3
MrHk3wZcvL693n948NDkSuAVDhZO1n2UiTknfVwmVtt1P25L97OOfG6NMqS+
higftIjaKjr/scsz4TrOiDMQV6YvFUbmv9yHue7FYORz69uZdY/e5KioqNry
xEKIB5eJJ9vj9Igh8/+RunyO6wpxZGHkJuucjkvks2AM08rhVRM/FnXdrrKK
+d+6FcdMm/dWIbHePHFuwqY/Pn7QX1mcMeNU+V4zss3J/Idn4fiCq/qjhZF1
TFvGQvrWU+e/04x8/Mt+Og+pMU39uwt3142IJ4u8fGXnD55kjakGnR4rKOMZ
jf/h7m6aP0QY+W/v8zmZaYWHXccgevtuWCddfP7XH24ZRv5+ZymTv28q9lFU
VNTkypPnoiwjuzzIXka2liWMXKVO7iSIemPkgiDuQfyj6/ZU1eHeUiex5Juz
p/szV/5YO59G6H0JHDqN9zB1lcfIebFtPQYPPjl79fv+s1+ODKMyP145bzmP
bd+Uzch2TFrr5S97/eUff+zPLK4blnW1UTOyb1103JL31A6R/sVmZGpHM+ZL
x47t+PGIJtVj0aUSLk5rAd5+cLKtEv8FXha9j+xjQPaXZuThdE+MpDafMDJ+
DsZXU1dEOFwY+YuFvZPlx1rVUVFRdSS5Lkbiu0f927uzwZwMIxM/lv+bPBeu
enxWnyVcTKzH97x2UmXyYC1dSfmuiJEnqV6KS114kptgZK6XG0ez3vx845LE
ufR3dbwVTT9XIfbm+t7XRuEW0dWbs/2bq+sDRnmWxvBoo+SmQbCu/j88C6ci
FyMzLu/q2k7//PyQTYk/wsmihbUfRrZHHiPb243lyphg2kd/Q1wa/6tm5KC+
Eq9vUqO58357kqRzJ9t9fZJPAz+EMC85qfVxIM8JeE9OPnJkCCOzn+Qcl2OY
//N58+mt1MPMM4GFg9X+/OOFE0Z21QiMioqKKiuPN01yHldhZK3M2D2LkTU3
Em9qggXG5fnEz6gZmfzKeW2aBkYmlgz7t7mcFz9tGzY+c/of0mUi+Sz1sXnF
+7p496KpdQJL67Fik6amGblpuWrwwZsSt/XVy7YZGcGvcO1Xc9vmVd6fWdw1
75kGr74sl1dyFiPuhcUz7GJk3T9cmFsz9fJ0Pj04yrWt9X6QdhPHRjAy/Qtc
DK+RXxeuwmMRlHdI81b0uXqvI7qOiq7fzTZnn7xWdZrkuLD95nyW/Sv1+OzY
M/OBkRHP8Jh2YW/fxJJNPjjxfkTPRVRUVBn5xs55nkuFMvLc/o2R8XunFg+G
cuS34Dv7OtcEI7eZn9UWjIxHIWTasuPzuxBsLIzalh9BMzHvL174J/M9HAwj
n/rT3xlpXtY1TtpsWxm52Jfv7Ov9JDEygheJ9SIYFq6Fd+3pdPxYcqjNz13p
P3m06GRkV19zasAn/IaHmWNL7r2MP/jlyfYhVnwq4U4Y2cXJzMO0+eWQ6105
O3TON832rDNMzjP/8yv7/XNLe6Z2CF5kcsDxXmqJOPvMJE4qdUM678OnQXI9
SXI1SxwZbwT6+fW2edX7T/IjynWB/UYdVjvvtvgvXr16mI7vY3rueag9kuZM
jowcFRUVIl07JC+3p+O3srVF8GcwvWHlxQN3DZVBe66sbo9cl4kvrdas1zQu
Rn7507YRY/ZCpm+y9llTuWhdWln4NmVT+BWV8UHw3JNag7bvhHiwcC41r8vE
qieRkSdBVfibc4NYL4JvOR/hWHu+wrTbuxuGh5kW2fyap1OKOYV9Wda1lY3+
D5vr/aMnG/21rRPWvr4wb1gYsUxZlmZkeBqWyvPVMN3O0/X+/OMVI6bVjMyz
f/iJ+nN8h+a2H6fj9tIYqOqvbI9t5336pEtvp8H2m9nsjfTNxiPxfNGwMsec
MLLca4r3mPf6v5q1EYzM98LImbHhcX9FRUXlScbl2X1GXjzZMZ87e1eDOdlm
ZIkn6/lpRpZx6vIbz2MnPeaKx4I6CnYtBZ/g47r8Py5JPFn4uAwj4wuW4+DR
TwvmO/7P/M5+/Tujqu2itpvwO5yNhOnaPl5c82f8X5dx4mEujPLrIZysGZnY
MIx6+F/b5r0wsa9P+fzW5qh4xp68uvoRYeSiPovlwsX6uzNLB+a/NiP3Xhyn
nmM5x3ge9eXynhH33fQn4kdm3pqRJdZoljtgZerwrWxvp7kunP1jZK5iDbbR
Z9eH+5D7Cxh5xnpOCN+KZ2Lj6Pqgv5g3OmHkozR3oD52hZFNnzDg6FeDeyKT
X/nlMA8cSnPARe94VFSUQyZua93LZ6bx9fOeXBdlGFnnRoaNv159OMrJXKMG
1z2uX1y79LKmgZF55ny4t1ybsyZRMPLlK/+Sxm3LxG6Z7u27/ZSVeSYKazfB
yIi4vcSUf3m+ZZTnTW1Ksozf/rpn9Jj4V8E2aYOfXc8PyixH7kfJQcE5CLfC
nbmMrOuXied0wML6efbIe/2folzCgbl6abPEo2kj7ORiZF1fzvg9VvbN9zCw
qSmdMHKmzYtDRuY3XsmToPMlp/Hz+Ow+TIPtJIws2xl2zfQVipGFk1cPr5n7
n7fvThj5g3X8w8Iylk/n+JP82hlGllqCXW+PqKioyZPFuje2e8bfZT7n1SC1
OJnxeKis50L+LzFlPT/Tjpy+qwnfRZt6erBampGnTcSBtcdB4ra2YEWmRXmM
3NRYQMb7af8F84eP2ozpTgojh8zT1GooaBvn1qmEIeG/MzdX+l/e3sz4I4wk
n5eLkQP7IGf9ClV3IoijpS08t8cLvbJv7q1lHJ7On6EZWdpq+Jj78sF6umpN
sw2YVjMy+RWQGdcnfVVk5GBlttNg+zFO0nc8wsh3H18yfcbz11uZY138F/iT
4WNyXojfzD4fOPZZjrkPWoyMHBUVlSOLkc8nzx3N5zxGdvz3+s6qUZlYsuRM
hpEvbKz3v1w+GF2Opw1cp+zxT5MkGJlYctftaFNwIPUDJZaspafTjEwtlTvJ
tQ5Rn7uN+iTw9jgZGTUx/7rzCPl/SA1q+IL7ULgYbhw593WtDJtn6zCHzMOa
f/o+YN4yTpBY8tBf/CTNgfzV/J6R7f8wXuQAn4cs/8LqfoaR7W3Ted8+6bJr
rShG5r7ZHq/H+AVh5EzfkniOeS+MLHysPckn0w85mf2nn29EVo6KihpR0pfD
qPRPKGVk9bv3v0lch/+XqymSZWSRM8dSTr/Fs9VxMmEZ4bENHa83rXqV5Gly
MTKxXOEx7UG2dfH7fzYcC2vD3MSYUd22wci0AUl7uhjL11RtvFB2boKR+U3y
kRvfr8RvJUaqxyyMs7+SuK8lu5/K+KSlBrL2e9jtHnxmPUcYWbG69qQRU5Z6
exmfRVGfGZUqzSOdel6Gz5AkJ4XktpBjkvfEjxnHl57jyj9hpnk1HJcnsRNq
iCBqVsPYusbimn6esBjjyVFRUZYkl8Xi0NuwdnCccnI6jau/l35F/XZ25aAS
I6Oto73sMn3Ls76Xul2TWnuP8WP3V6991DkWXqlcpjAu+vrb/yubu23AwLNb
Z5z7/srcZ+m09jRNtpO8cbSFnHE+P8hYtldHzz1sn7uLj/U0hYw8CX2Xlo5J
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
wr6cyCI5F2e2BvNY3jN5MyR+PMKzukae49qScrXr3HWN1VnKvvfp0ka13HAy
X5P3Odlmun61jpM74+ZRUVHjkTdHXK9UTDl43J6ogViytE/ipcSOYV/ea0Z2
tZecu8SS22Tkm1e/TMfOSa6Jp0/WDSfWrW1CzY07s2eMxNP7YcDgXHuuzH1m
ZF9zynItTIzIq8f/b+9d7N9JnpWynLrbiDg+gn0jI0dFTbfs+G7m86C/h5Ov
bV/t33h02UgY2ZUTTnKS0v98vbIzZOTBOZh5nuNqQ473OO8ZkJ5fbr62RPIb
jIz/uuy2kvnyf9k+ue2O4yCiorpRzrnXKiOjmpwMAwsb88xdMzJt6r165l0H
vm8z/9vs5c9HalzAd3wPO8O2debPvJiPxGLJn0Ye6Ms3/9C/fOVf+he//+fa
jKwFJ8PFwssHP9ePwZdhZGLNVy79Ps1twbqK34K8JU3vP+5hkFyXo9ciKqpY
GS+t/i2pN/LtvXmjmzvD+2ypJWL3Vc9fb2UYWZSJrbraIJ4F12/WtS5l38F3
jDsUDoaRpR+gdqA9H/nfwt7Qd12VkYkh+7wZ/DZSo4/7jTLXTKmVMAHHRVTU
VEt5yUTUmUahnEw+gC8H9/qnqMGkFLTsCm1m3hfm1jKMLLkSQtorjNyGX1di
vK7fiCHXZWTazPpKTmEfI/Nej4mpu154LHilhmETjEysHYV4itlurCPbTTwy
kv+NsXuucZl1hE8aEUPGX0meC3PsxTF7UVFeyT1kJndycm2BkRGeCeLIxJR9
Potf3+4lfc7RKCMXxFS9fgt1f5vxD1tcDZ8ilk8eu6p5LYr+J4x8fn2UsfmN
GHMaZ15M4vJlfBcx73JUVHPynHNXN8MZ8uz6puHkCxtrRkGMjHzTSQ4Mx+/C
yDwLd9UwLtJvb4/M+LGm+RjBfLCfj/XwecDJMDpx1F9fPDLSDFyGkUVwq1xj
ZrfOGEaGldHc6oXa4wY1I+NzrjofYdyVuW+Nyuw/vMziLZGcheRLxnNRZbxp
kda21k0MWXK/4bWINUSionJkMaftFRBGzvMiM4aC80/yv2X8yEX3qR42LIw9
q3kS5xVGruo3DpVmZBdXp9+p9cp9nqVqXGe2ffRqREVVlyOWLLkqQtnj69Wd
lJF5j4KWXTIfHDqzdNB/8vxpcI0RH6+2UWcjj5FF8Kr4ieFlhDeDmDAcKL+5
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
l+e2iqS2B3kUZIwYrGwz8s3Z051zcBEjEwsvyh03rYwsgmmJV8PJ3LcgYui2
HwZWRvgsTI6MwfTcB8HFmpsRHg55//lX/9j//NbmiWKcJupjlh4PlheXdHhf
hYElbiyMTLxTfhvx+01C7nHHODdh0jsPT+rX4cF48jzgGqf8HPKZewj7OhfK
yjIdz1C9+0rFxUPXOd13tv87epmjPkXJGFjP78N85dVZRfJL6vkFt6vEeggj
n1k6SOPfMmarCQkXa8HI8h72GvJXe9zXlIipdt2GYS2R8nU+6go/TJnp8S4j
HVuGj8/NnD85/mIcOepjlcofbMueNsNSmqmScXhwMXw8s7FraubByKamsu7r
Ey9CJjdc13LkYhbvBTFkGBlmzpsH6wIPjzCxI/cc3CvzL2qbTGvXNJEccMFs
q3MqO/4z9lh+VNSkyMqrY+vqZj3fAnwszDqO9THLUl5l/MlN1BvRbEx+Makt
gqTmdN0a1uMQ8WPqCXbdDhi5i+1Vtb4gsWWTb/n7fzZ1Wa4tfZ89hyIjR32M
kjhkEpc0ddhd9Vj1Z1gqiWHqXBVwseRyw3OR1gVR8xsZ2zchcjEibMpYPq5x
wsi++G9RzjW7Lh6veJ9FeW3L1AjRyytzjyH7y/f7BO6TqKixKIeR4c353WOT
O6IOl8DYMs9S439Vu6pytmbkqjniGKMHB3ft460rvCLC81235Xnvfn9/Z860
5dWb3bG1qU4NbtpI7cIbj86butSZcyheP6I+Nll8LIxsvBG230LFQ40HYG4/
4xmg34eRUya2c75p/+sk5hrX+S4sDzGxZPFdjNS+C81JbOVo1pLaenYta/1Z
WDq9vpbsk/Q9gMSw9fxjHDnqk1TBeUQMWXIQ12UTOBlVHb9njyPMk/1fPBiw
ctX1wMsKW3bNlXU1SYxMG5piZHJb4wdERdOW9VrYbY6MHPXJSOc7Svg4ZWTt
VV08OuG7hJGdY74kVimvrthxwXPNLiVeCTvme35wTUMjvmDuMcQzEjjO0deP
aP/FSB1qpZSRB8uT9hp/R95yF48KGb7xnNSW/vsE7N+oqBHlnJPwsTAyr3iS
69bqkPF05GRvel2KuJm+Ha8ycfFgJvrrSW1iyYvQNVvWEXzsq5sxbkntwrnV
C4P7lzPGv7BxNGvU+6VcG8kvSN2QkLqLdRiZdtHO7zfOGR+PHHsxxhL1Mcqu
92HytUl9SZ/XQseEbS72xY4nYF3LbBP9eaTWtp4+6ROCPQ85dT5C8104fRm+
faW+NyxvxbtH/OctM7JW1/s5KsqoIJ+FVhPxZGFkOLWtsXt5Mh7lwJracDyS
2CRsOe2MTH09yYnWdVtE5JKgRvSVuc8Mf4rKcnKo4HL25a8l6v3B849+Wugv
HFw2bUtjyDqfatfnclRUwxrhI4kp6/ivTG+P+ZLpVczYyVwfESN7/xPIyOl2
KfIFe34zvuSNXWdbdD4Nez/p8X2ahcdZu9pm5MjMUROhgrohwseaZ+vwCXkm
xjl+b2R9EkYOyZ/8IZFmZOpRd82UdUQceWXu27HX2CsSsV1q3RFPlpjy8pMZ
k4+46WWxH+Hkolp/4gFBxLZv713szz78LjNWL+iaFhU1zfKxr33Ma3+yYuKR
mOWE+ihCVZoXy9bvUPcN2iuReiYK7ikkFxzKxJQtJnbOx/7OdS/UkooYOTJz
VGcquL5L7Fc+18lxUSlPMmo4lnx+Zd+s03rvmZGrrfDx0xdD8Zm8wjv3bnbO
k6FirLX4RIT5yN/8qkT8dJwiRn/55h+Mrs+d7l9b+6K/eXyrce90ZOSoqJLS
eSzKxn0/MkZOx9b51lU8JZovS/YPI1yc+JpDtr2OIZMPzuTWU/shreeiprHz
xjn3fcvbtSwjR2aOGpsK8ifaY+yIKcPJVXwXlWvaN9yvwsi0v0ztQKlJQa63
rnmyij4GRqbtddpPvj7i6EV8jPB6/PvmohFsfGVrrn9xdaH/1dz28DiKPouo
qE9SI/4DRw7p2vcEVh0QL6fqsZOW51vyYWSmVeMHpV7gg94wJwfTwtQyBlGv
W5O1skc0WEZdRo7MHNWqCvLuiD8CroSPh+Nqy8f3KjNywyKWXJaRPyScOc35
LfAhV8lrQa0P+FLXFGxC5AshXzP52GBk2FWE9wLPxcHPJzxLfT5RmeWQZw5x
jxO6DtQ1P7u+merr1Z3+14sb6TGUuS5NwDEdFRU1RukYsauWXZNxc1/8Ponx
6nboPBYjXCuMrOY1rBE2ZGTekyMIpbW1k5ournbBALC08AGMzf+CrvOWd6dp
Ro7MHNW49H1rznQnuWd6Jp9AGVbRPmSX17mwfQ2tq6nJt3Rglo0noSwjk7Os
a96tque9e2bcHnWVfdPAq6yjcHEbjMy8qGXCK9uVOtGmvsnSFSN4lnFyeBzw
O8h/EIzM64vBf/BOwP66hgu/EW/ms6m7vXXHKLRtv717YhhZ4sgw8oWNNRND
5pjVNai78tZHRUV1LJ2bo2BsTy25nvVqn7g1/Qiva5a2PDPC0ZJbTv6T+i9y
GFn4GsHGkp85qE+0cqC0zciRmaNqK8BzJnyMr1j4tow/+aqVl4bn11VritQV
nMy4Bl8+O/t7vL3kFpNY7DhyXNCGJnJT29q5fyu3HrXNyMtz35j8E4jxdRL3
RVW4+emTdaOQPHSM3UP2duH/sDLrAv9KfBm2nr38ufGVsJ+q5PCArVkmXIy+
XN4biSFPbK2DqKioj0vKy5F+l1cXL+HnlJW1pzjpt9J55Vzr0989TOC6ducy
sj1mULV/3IwcuTmqsuyaR45p7HMAz0JITFnX20Mwcqm2NcwkV9d2TK4NFyfz
3QfrO/2Z3BBlYpPTwsjUFLw5e9r8Th4PpkU2Q8Ke8hvsXGb5wtch+TUiI0dF
RX3SEpa08uflMbL8L61h4shZkX5v9WNpvT7N2nX6Ojv+ZrWbGHTXfByZOaq0
SnipqjKyL4bsvQ9tgUlsRg6tkwIvt83IiNg1/rBm5+sffwhzEkPG7xA6Po7/
wKL4i5tmZPK/4X14/5fD1KtM/Bl/sXCxXg/YmHnTnioxbsbqkQf5+qNvUy8y
jJzWTiibyykqKiqqCTWcXyLNi5zc73PdffzT8cl4PV1/u+pydAzcYmQZMzip
jByZOSpXJXP9yJg+5PL4wp5IczFsDf+Jh0PPa1zrKbngYHxpY4hHGUa+d3/B
8FqbtevweEhtwqbnjVcXHwW8jA73ltKYMHwZGh8uy8iixbsXgzgW5sXj8dvb
IyP+Qz0U4zd+upvJo8x61MkXx3/xIl/dvpHq6+V7o+dF1+dnVNSnpKLnNvGZ
TjmJ50FtV9f4oCYY2ZeXQ5Y1LYwcuTnKqQDvhZaMxfMxCCx6QY2FFW7W5yac
7V1GC32hjOGTXNAh+S5o98tf9vobSzNmTBtqi5Pf/WXIyjrfcVOCa8n7jPAm
6PUIZWT8GUwrta7TsXKJ4FmbeUUh8yeuLexr8y/3Ktr3QW63uttk4fGciSWL
12LEZxHzIUdFtSM9dtwlO9+yrufn+575fiz5mZuSVRtkGONKrsM6V0edeECy
zz67vmrmI3kw5Hd9ze+adSMzR9VSBUYuGssn4/5gTWLJjOeTMX28Mp7OuYwW
+zg4WVg5r+3alwznwYZt5oTripEZm1dmXmwLclXAs5JvjdwT5j5CxZhhWhSS
H4TjAz8FeS/s3Bq0tRNG7vp8jIqaduk61aIiFrafbco1Scdx9Ng0+3sfQ9sc
7boH1rz9EUiPAbTZNV3fBmIBmrMlPxzKLG+wXbtm28jNUbWl+63AviJvvBmM
7OJo4eQucinDx6Ze9UBv3obV3YbZQvjYHv9XRaF56poSzNlEjBxO1uP++Iya
YGTJsyHe5LLjB30iL7Mwclo3ZDEyclRUI3Ixsn4uX9fT5LpG6WuYtMFVN9vV
Dl+suuvtWHXbqHEVI4xcsT6gS3asWjjZPg665tjIzFGNqkT/kJdfzRbj5xD/
y2XkFu/nTw3OWbS2tR7ka5XabZrbTK6F7bul/bmTJsbUVckLEcrIIWP2ZBvT
DnI7I/FykHuD+bSx7jvP7pq6euiLhb3h8RHr6kVFVZMrXhuYV1iuBRlPnlVP
rlQdOF+c2G6n/mzztfyn7dzILcrVl9X1V2TG56n+0vZT6mlR19zatbo+FqIa
VsuMTPzZ67UYgySWfGZx14wJK2q/+GURXgNinjAdnyep9jPxVsRYOfJWEHel
veR4s/0icKjkuGhi2fiUZfswThCx3ND/sx3Fo8E9CfHily3xMV4LM1ZvcWPU
ZzGtsaOoqLblyvGl/Qwl468wFbUsNCPz+cLqfv+ruUdp3QthZHlfOG8X0+Yx
bkhMxvZ5dL0vAjSSb8LyKAfLykmXypVzTra1tayuGXUS1fXxEVVTeTXkLeHv
DeVk0QXbH9WBihgZ74N4KFwx50liZJiSvGiI+Cs8DCcTjyU22zYjI+LBEluH
cxHL98Xr+R62Jhey5M4QRl5ZqO879mn+8YqpPY3HYsRnMSXXv6iosctRq8Ll
Ax6ph2HJrv0mnCzv0zyMiyfxSRlvZsu5jCqMHBInlmuirPukx5Y120oe5Spt
1uucbK8MI2tOuJutnS3fd82j06LOj5mocpI+MKCeQpl4MpKccLnLHsM6Sm44
xs25GDlvHB08CI/WyUXWhISJdY46HyNrfibm+2uDjM88iR2T41jqQ+NNyfNc
REaOippQuXy7ipPMq2f8CufSzMZuhoe1+G5hb9/EjCWH7trBcf/7naWUkYWD
xUsrTK152htbtttUdA0rw446jj4Fz51q+cesex6dt9Vwt2blnO3RNXtOs7o+
fqKKz5HQmmONMvKYde6HXZOb125nUa4JfA1lPAXjYuQuVImRe5vDvNVJbT9E
bJ64eFsx+mevNk0NSK7FOmYVGTkqKlESJ83wj2u6wW8Pesf9+d2TnAaw6/mF
Bykjrz7ZNDnO0ZPnT813391/nDIy5+Ovb/fM/fyjrdv9hwcPzTwQ9YXW9x/3
Hxzv9D+8H+aRdzHyyLXEdR6rdRjh6qrxVXt8YNf7rUk5amQf/5K9bmtGzvg6
rHn9//5ZmdU=
           "], {{0, 369}, {713, 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
           Association[
            "Exif" -> {
              "Software" -> 
               "Created with the Wolfram Language : www.wolfram.com"}, 
             "GeoMetaInformation" -> {
              "Software" -> 
               "Created with the Wolfram Language : www.wolfram.com", 
               "TileSources" -> 
               "Wolfram Knowledgebase with data from OpenStreetMap"}]], 
          Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {713, 369}, PlotRange -> {{0, 713}, {0, 369}}], 
        TraditionalForm]], PolygonBox[CompressedData["
1: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
       "],
       VertexTextureCoordinates->CompressedData["
1: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
GmZySWcMVlDzOUDV3q3Ubwx2Lpue34XC/R4jL8eg2m16vs/ofmr+b6JbcyTk
ziagjNIHbNw8sjvmE6AUMa0ftLX+2OfzEOBD6YvHpPxYTEAnpT/ek/JEkIA0
Sp/cIeWLMAEz+mU3KW+WE1BJ6ZulNpItnRIEFFP6R7vLp8V7FQHXKX20fbnm
wu8yBJhS+il9tbG2/loCZvRVTCzfNh8FAioo/dWs+7shZD0B1yh9FvdjtMJt
AwEz+i2Tl6NHQ515pvTdObWkry0bCfjDNa3/oiXPvjbaTMCMPuzb5rf6HhBw
ldKPgV7c3Y1bmfel9KVuf8qLTm0CpmKm9eeLONmolzoE9FL6dIvxu1UXdhBg
T+lX5aNcugL/EcBF6dtD2pkv/XYRMKN/H9x4b1utR0A4pY9b2js4RncTMKOf
4xXijvfrE/CT0tfpGguPFe5h5pfS36cnU5HtXgKsKX3uHbdo3yDzPKPfUwys
h3QMCHhF6fs++Gtyjnme0f/L99xy8Geehan9wIlX/7st8yxA7Q8mGV5VK5jn
49R+UfpiKP8x0//M/pF5qDBCiHlmUPvJvVarNSbM+Gb2l3Vdz40dmfGzU/vN
073jPSbM+83sP7Ebbz8QZt5/Zj+q6Hzgk8PM1xdqfzJKcVBZsZMARO1XFYsj
b1vpEvCI2r/0GApR3tsJmNnPCjmLGSe3ERBH7W8WwQIu8lsImNnviuvc571m
vvfM/sdxNdhXRZOAC9R+6FlinuvOrJdxan8sHrT1CGXWUwi1X9YtCUjzYNZb
E7V/LmNwCqgz69GQ2k9XlN669VaOmQ9qfzUcdFymzKznmf32/A2uY05SzPeg
9t+tyq4G55k7ghq1H7PWZ1Fmf1L7M2u9XkbAzH4dS67f/ASkUvv3ocyA+z8X
MvNJ7ee77VyzZbkIWE7t75tOh/rJcRJwhtrv/7J+YzDDA5Uvl8XcahoDs8T6
xGbm32c/vZC25eEYsFF4gIrQ+g4mn+SpCV4kcc6Tv3f5mo3BH8oP0b+xRkxp
DN747zxG4vPEvYmXc//ZDx/2cz7SOQrDbPbaJM7V8DOG/ekoxq82f+dNvDoK
jz+dlybxBUHnNLUtR+E35d/HMuHxJ/VRCOf25SJxPq3JLj/eUXyPc6Uexivo
IyAhdWasiXnmH3cPKCsawfGdcgubtIgaAW/vA40kLpA+Icd5cgT7pyfTEpK3
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
xv8H3qwp9Q==
        "]]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{0.25634621390233775`, -0.10880066312560008`}, {
         0.4272436898372296, -0.10880066312560008`}, {
         0.4272436898372296, -0.19731608505690126`}, {
         0.25634621390233775`, -0.19731608505690126`}, {
         0.25634621390233775`, -0.10880066312560008`}}]},
       "\"Wolfram Knowledgebase with data from OpenStreetMap\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, "Wolfram Knowledgebase with data from OpenStreetMap", 
       "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{
      {RGBColor[0.790588, 0.201176, 0.], PointSize[Large], Opacity[1], 
       EdgeForm[{Opacity[0.4], Thickness[Tiny]}], FaceForm[{RGBColor[
       1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
        StyleBox["\<\"\[FilledCircle]\"\>",
         StripOnInput->False,
         FontSize->10.88], {-0.0009417391751109231, -0.11104838414640138}], 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0007112075757022421, -0.11051364746379676}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0018404836572704707, -0.11005604337794944}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.002899637500935043, -0.10957424298950955}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0025266484267574985, -0.10951002795674421}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0007290202641471855, -0.10868069680735357}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0010777149624838257, -0.1086679679195637}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.002786113881471094, -0.10838223192101343}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0002962817724275206, -0.10835192718629903}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0036911011819107213, -0.10825038003095575}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0004991846758694252, -0.10813784952084199}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0025090327328792846, -0.10806182762294371}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0017974758930340688, -0.10760880051463005}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.000898833245818529, -0.10750815634636222}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.002471938307858933, -0.10744193604078252}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0012337097595634193, -0.10734457053184594}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0035369575360880193, -0.10731839228588091}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.00249820399886293, -0.10715605157223546}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.001005388067095068, -0.10713356408833709}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.000491260282039892, -0.10700131581312224}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.002853569536921744, -0.10691720435930215}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0006601239965729543, -0.10661722808426817}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0032291352326777006, -0.1064981426278665}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0031009881635207966, -0.1063636391744676}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0019775584092764846, -0.10616561586289407}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.003672566028771236, -0.10614049839303358}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.002379296284154802, -0.10597393346269565}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.002383815617346791, -0.10595618984067973}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.05076840154618818, -0.10500300080181892}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.002713590324464284, -0.10573848638390004}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.050173988900467224, -0.1049264648117594}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0005545591074158335, -0.10554348864864807}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0049997099018945605, -0.10551142168063846}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0002239724421243739, -0.10551007119560656}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.050816453896206246, -0.1045881185020479}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0022391787999395175, -0.10537855219796444}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0028685621601114444, -0.10533247275640335}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0010796108582415995, -0.10530117956514654}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0012617583958033616, -0.10520375694142067}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.05031919587675051, -0.10427995486017708}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0014936914568930149, -0.10507171212197078}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0028769002097449297, -0.10506468590027114}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.049258415961207315, -0.10420685403265516}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04581065243101354, -0.10412226794204599}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.047323942614816324, -0.10407544709821832}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.046347274890423874, -0.10409049924959957}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04753644272704496, -0.10401867292737516}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04619731880055075, -0.1038678619639576}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04658548092372227, -0.10378231519399687}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.00039967196520127843, -0.10429134309987927}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.002270107450484337, -0.10421913106855538}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.048323984540776826, -0.10338156311134178}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.0027398934583242967, -0.10412198170670528}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.048668002389624467, -0.10260622347282906}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.042599781362788726, -0.10271402177307047}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.048248886426319734, -0.10246027959697025}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04851327599014039, -0.10232997307550991}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.044478104577769115, -0.1024453211005012}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04726975019875466, -0.10220621455858507}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04571321540141597, -0.10219685964823867}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04452660716035995, -0.10218628392749156}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.048310040738468785, -0.10201541336902006}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04756158085320992, -0.10201457282664396}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.048392943090477175, -0.10196752529324946}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04291693280397217, -0.10209185656091371}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04473641029148583, -0.10198718450827117}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0489973404776913, -0.10139537749877807}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.042142055590534855, -0.10155392609090673}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04287407376208165, -0.10152797303950607}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.045795777860431396, -0.10132488654837116}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.045961746437935797, -0.10122825990483647}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04338021260728871, -0.10121735188369815}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04490883539230717, -0.10104487259562406}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04712076916700486, -0.10092769687367166}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0424951651292052, -0.10057913292611924}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04927304823818702, -0.10036737029096018}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.046054388091915414, -0.10041595483584698}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04599562859601024, -0.10022869490081773}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04930787687692662, -0.09995680881381483}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04609112206838036, -0.09995595469674853}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.047387602614912525, -0.09989308658972214}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04399662051529151, -0.09995948607482782}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.045123189095857795, -0.09989235033792936}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04606633935930317, -0.09971581955602232}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.048610954942759875, -0.09871710753910766}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.04721121572016405, -0.09855592898260279}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.047624333359385235, -0.09850280412731961}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.046013765481121786, -0.09853120997260073}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.045802600302642105, -0.0981673127703573}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.043792045889564035, -0.09812375067022451}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.049150075289937034, -0.09781641512523362}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.046757056037557, -0.09761901938626408}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.05029690059798671, -0.09730860714713226}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0497411500641947, -0.0964116460818452}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25384260751958027, -0.07491522481522131}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25233657646610175, -0.07484177255711733}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2542910526663903, -0.07442786919465585}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2546033789464782, -0.07420678293466758}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.253583276380501, -0.07422518821550558}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.009254822440222986, -0.09536851845943574}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2547548001954991, -0.0738609094249164}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.24832308100229394, -0.07444447499412807}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2551208746226967, -0.07329784621888225}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.00890666582116471, -0.09475234089915945}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25094122410050435, -0.07392022081380903}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.24746746421931676, -0.07446193750345548}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2533758422752503, -0.07317831652139538}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2534031396608892, -0.07303243186159748}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.246211851244422, -0.07418260824562531}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25330659227260266, -0.0729095598262434}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.011384654861564246, -0.09404640994004249}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.24898742443892294, -0.07360684589141799}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.008583102583850392, -0.0939713118769665}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2511497303777825, -0.07311282683406284}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2543688721389514, -0.07255118369660683}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.008467073506474736, -0.09379315715956581}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.011669709045697843, -0.09370355995442782}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.24986072207189727, -0.0731247556831759}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.011240444756033755, -0.09363120526929979}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.24629606067813012, -0.07352656101896328}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.011297124253748353, -0.0934971127020466}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.24775165503066335, -0.07321791436671693}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.011691910154748821, -0.09342998770569526}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25378472535440927, -0.07216819580587372}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25259524751430845, -0.07229133792818924}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2521786628875286, -0.0723109683707553}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.01185344680867989, -0.09323096759700213}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2530045041740406, -0.07201082447158148}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.010872842006582114, -0.09312975462727907}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.012769524723392565, -0.09305635607987477}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2473746709348763, -0.07277064238392698}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25472140546238187, -0.07150860973223185}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2492643562769276, -0.07241603017540522}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2508959103999155, -0.0721076751130204}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25204195376089344, -0.07186525980229051}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.010418753428694062, -0.09273235820736041}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.010706669623026834, -0.09266715796144587}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.008590236059279043, -0.09265032567123771}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.24766179128650434, -0.07238496743849068}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.007886483501738688, -0.09240289926031428}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25124845508230015, -0.07125404875794476}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.00941485822885869, -0.0920556670947285}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.24926632058280132, -0.07140218429137525}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2533936918569144, -0.07069027941883008}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.00826787803882281, -0.091841179775943}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.24723618177973616, -0.07160076410587983}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2472314080146029, -0.07156290565256905}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.009937879037230942, -0.09162460960544486}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25601412321357936, -0.06990593214992387}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2513485469653815, -0.0706837888492979}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2531077311706952, -0.07029771674818329}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2544754529905024, -0.06997573665144144}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2518940882798392, -0.07036877813181644}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.009390693371928207, -0.0913195284613683}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25072151426624933, -0.07052275952107011}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25315908187923114, -0.07010373721310417}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25121606989770956, -0.07042399839794206}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25096362193489913, -0.07029587794613225}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.009100898207246293, -0.09073440680941064}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.01108825776329991, -0.09069793442950587}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2540920560897808, -0.06908734059457768}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2557503069719578, -0.06874225734212054}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.010528297277588434, -0.09037303534124527}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.24920345016966391, -0.06973705336731906}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2528095347321822, -0.06910526364349043}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25260917812261924, -0.06910804873622582}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25111915930266737, -0.06925305101534349}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25242998703069736, -0.06901874406374565}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.24985301753964542, -0.06929060116055481}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2503473180694987, -0.06912348955212948}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25224179858300655, -0.06860297323805079}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25359879303692656, -0.0683462454050225}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25192419919595754, -0.06862896900503697}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25190036974718977, -0.06849283879190692}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2551342642802722, -0.0678441537840868}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2520596432794874, -0.06830122794428534}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25476020084209394, -0.06780506711503864}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2517975859456081, -0.06814361100614352}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2504480618565286, -0.068357374348291}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2508800778670344, -0.06812036904870368}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.252424631917744, -0.06777112482772418}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.25083289892098554, -0.06803918735615479}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2501017589842173, -0.06761985806073022}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2721815372653997, -0.02814678813175245}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.270460975685992, -0.028456752135491304}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27047785623569287, -0.028370494042287926}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.269799152773668, -0.028380796277363785}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2719047435515327, -0.027894124982798283}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.270160613781706, -0.02792638599166536}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.01571288142684638, -0.05246505339177437}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.015641714480999363, -0.05219622579422491}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.015424001839109452, -0.05211789700722431}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.015205866654235126, -0.052117683966466787}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.015380969720951166, -0.05201559548942281}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.017089276422198037, -0.05181536283872851}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.016254820927555178, -0.05175627909210012}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.023463599792670223, -0.0515328155400102}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2732399365856305, -0.0257523849726837}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.023480552840417945, -0.051342237277437544}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27452399998894267, -0.02545620189682319}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02615986501552107, -0.05122168884883371}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27438739592384065, -0.02538992775897595}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.015616082411047215, -0.051237357357086524}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.022590283948515665, -0.05112694333992225}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.022974937951011406, -0.05111666553215976}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.013326011870987404, -0.051189788318991014}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2735586565765233, -0.025322309404596097}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.027703500446559892, -0.05089888965398001}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02652999574609132, -0.05081834023691611}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2715305805741717, -0.025555770945460674}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.026407300445252007, -0.05078991535508443}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.025188837351771576, -0.05077469341510407}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.017136794675704434, -0.050824124927129725}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.016990415412000196, -0.05071793479715237}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27282032035383014, -0.024931223773290802}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.016095101851155688, -0.050575107959435595}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.015968342431809068, -0.05057130532735908}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.015546711579063541, -0.05052817407382935}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02169155361792191, -0.050405035538003184}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.013450257422078853, -0.05046945612495883}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27120078311732454, -0.025064850005143944}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27127044390597993, -0.02505083457893079}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.017245084771176138, -0.050343117956631794}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02651418595016964, -0.05015988029877378}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.021860524585238433, -0.05012552920890376}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.024572557875597777, -0.05003888850345919}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.026347030649496648, -0.0499092377016913}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2720489040923941, -0.02446530839462567}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2712585665522348, -0.02457217525715417}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.01486159563503795, -0.04986667377847842}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27243603887691653, -0.024024098707652042}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02234005821568177, -0.04953648137842971}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27330853922386084, -0.023518168902229897}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2718156230851407, -0.023746167823954265}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.01876682998656489, -0.049219065938510345}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2718055620777941, -0.023716880161370208}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.023165853313266923, -0.04911163920963998}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.015512880476634133, -0.04918014419902816}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.019236765395696794, -0.049051192954466284}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.023965684023168923, -0.04895420267788244}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.016388098542739364, -0.04895125090701699}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.014976624315953811, -0.04893241796925434}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.028400441985619484, -0.048655446280216966}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02442430895924182, -0.04868600111942047}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02342994734728216, -0.04859669774506847}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02341306020090064, -0.04855108886307189}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27285471502165803, -0.022898197245817542}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.026079729765956378, -0.04839643811497666}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.026415938671946394, -0.048387157899468826}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.016714707964708975, -0.048465908220572146}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27034566178874303, -0.023194428268186087}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2715892437776216, -0.02286373300259499}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27189452596783753, -0.02275627606420836}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02386365866317876, -0.048112751776365495}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27198216516490376, -0.022455426083363685}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.022745919041789003, -0.04790117851560686}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.014948953809144558, -0.04792227256302729}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.271080122489101, -0.022502719133662738}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2703463494111951, -0.02263228095976009}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.26998114923844757, -0.022601284792189272}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.022237164358815308, -0.047645705146248614}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27315691403817904, -0.021869295917993952}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02259022521750785, -0.04749093825089567}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.023315263658712126, -0.04737218460026777}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.014947162326276431, -0.0474490807969404}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2716996254668258, -0.021885369967504145}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02421917397158424, -0.04724594988655911}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.0279775832139893, -0.04715957074604056}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.014947158256176771, -0.0472948062228083}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.01659792864769804, -0.047173528301922035}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02476624261681914, -0.046862787025413556}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.27070870950096737, -0.02154127749703259}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2708892971618745, -0.021440752537046165}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.021563791283037884, -0.04672134661369937}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.016167107887522885, -0.04674276003773653}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.017147978448595086, -0.04649770105961647}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.02419945219813609, -0.04626005322453658}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.015468065202480851, -0.046260398588047334}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.01686450313310576, -0.04622103214029866}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.270741364161157, -0.020820466105277435}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.015964138724159593, -0.04614989068160248}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.015668685959507937, -0.045843210650294744}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.016872618216870177, -0.04539000416014873}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.270433755299175, -0.019978033423295342}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2700383601174408, -0.01999529777640136}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2708505121827193, -0.019384563706619496}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2688507009736607, -0.01909379011225688}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19871235839895943, -0.026749944927548494}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1982443203619504, -0.026019744131678603}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1972181528047904, -0.025967565306060265}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19907178750924862, -0.025264556339274196}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.20038669418956986, -0.024751593055622887}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1966678145604342, -0.024818208532585408}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19957102616070718, -0.024064654900229774}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19662225463227986, -0.024337178476612795}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19920379028007537, -0.023912903905538418}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19664852728755758, -0.02401467623195884}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19554765848270925, -0.023706116549834504}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19767109107631745, -0.02320318720788361}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19774249388850812, -0.023136350957890364}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19711786236685055, -0.022342120601764097}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1966908947612332, -0.02198473155576233}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1955758781687932, -0.0218680336544341}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19525791192087139, -0.021869839263552845}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1967442636024063, -0.020994414461886445}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19623909419480756, -0.02104345007644646}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19587536678557993, -0.020584004906157555}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19567538131735837, -0.020397450356279576}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19561980489047173, -0.020269551513933427}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19774400367495737, -0.01996273386257352}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19521841357098463, -0.020274538502672503}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19584553332841023, -0.02010875520266337}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2851713016322806, -0.00471728759150517}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19545637453316542, -0.019713269649124635}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19614020821171582, -0.01950052023085174}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19532548383551235, -0.019568457538621607}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2848477503317882, -0.004185043894335497}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1966289609255354, -0.01916106227758897}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2849695941135741, -0.003928736035787825}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19622159355557817, -0.018854701216998285}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19647285213835808, -0.018678614903745946}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19516620614303798, -0.018856756260196325}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.1960781876876364, -0.018702372496169517}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19860325599720774, -0.01781107295366542}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19844145354199766, -0.016740588514123477}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19772867578167386, -0.016792463248140318}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2845725378287819, -0.0013812465174369412}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.19804316775905242, -0.016241853633969332}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28680118890463396, -0.0006220621561001588}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28594934687783546, -0.000537789828586688}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28403179667535267, -0.0008954682248047379}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2839497528663839, -0.00045772812868701625}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28685798279623725, 0.00034354396441835765}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28568531871616165, 0.0004030751827413721}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28489938110422636, 0.0003817774573911552}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28499966803871724, 0.0005507150622457506}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28503442842624904, 0.0011516477093519537}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28654448114804837, 0.0014717995459480908}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2852533433003722, 0.0012496022511936332}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2871361929026377, 0.001733435838092471}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2842373391401417, 0.0013267977270436289}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28332715384802726, 0.0011811114812127724}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2871934773819489, 0.002075248175579366}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2872325704996642, 0.0022273537814465295}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28786660972313605, 0.002581955130414212}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28255388554886773, 0.0015579808476066104}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28571240474112386, 0.0023339622383446255}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28479044163529277, 0.0023200884198554352}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28460378957601695, 0.0029496832826844785}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28659873732834573, 0.003470560301326671}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2837886775364211, 0.0030262984686164353}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28854118360501546, 0.0043878017184558185}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2874119441652848, 0.0047372631806113724}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28805255275462505, 0.005375450077912009}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2872750308245015, 0.005363744473464748}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2852724872652989, 0.0050043884841038284}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2838204134451233, 0.0047436518027361525}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28679057450725826, 0.005474397156214343}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2835583173238223, 0.004804898813368524}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28681469899503165, 0.005560593906876789}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28426436384189957, 0.005168479796368997}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2864040709371989, 0.005755148852514152}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2849648342423236, 0.005590675027606054}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.2861169413298249, 0.005892992764616649}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.28330377341320506, 0.005362280532576607}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.31923745253631325, 0.06611925931323333}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.320602468926499, 0.06649552115525786}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3205336698686242, 0.06665881701036613}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3206895803744617, 0.06696900702949815}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3194881350692755, 0.06683919212800601}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3200115145796084, 0.06735910018803186}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3205422905139684, 0.06775115943140472}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3210248331107313, 0.06831349263741857}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3191023250250766, 0.06810835912144224}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3201581673128588, 0.06856421444344228}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.31979782431019077, 0.06852979470043298}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.32031774791934403, 0.0687844395403693}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.32014921604527846, 0.06896498467802632}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3201127369198172, 0.06948634213948995}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.31984743856555903, 0.06954567765216128}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.32054152110007755, 0.06977634669898151}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.32099839305972444, 0.07017055283573254}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3345913411577002, 0.07854211391243326}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3342350533846769, 0.07911159494531857}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3352197760055348, 0.07991314869328077}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.325307609951441, 0.07737758490073185}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.32704933940629305, 0.0779748335508154}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.334016945675483, 0.07982434714480245}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.33551240503844687, 0.0805025601672006}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3346852211856762, 0.08052598647390363}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.32624200623003125, 0.07837678636371191}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.33355145458917507, 0.08034729188990815}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3352894034954344, 0.08097194955246106}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.33481859568609557, 0.08088831109592298}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.32600567475381026, 0.0788773280698563}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.32510758131712764, 0.07968389393146348}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {-0.3252072730324543, 0.08039737144372966}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.205363775463136, 0.09096293759782675}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2039048803023052, 0.09085792804417406}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20611317463751014, 0.09129770488871515}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3071395375202741, 0.1125023479009569}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20589564859274154, 0.09156415400300326}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20462008093030937, 0.0913567822526364}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20556396823980053, 0.0916128256102301}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2074346533852686, 0.09202722953000055}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.30753156217763744, 0.11315402788540914}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20760210693113398, 0.09226319371218204}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20431162520670523, 0.09224484308996192}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20735656395479707, 0.09277055272569391}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20708817126864057, 0.09283620691071454}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20319776120569538, 0.09224215390954904}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20441585502547147, 0.09260274055754403}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2069389207937369, 0.09310079067986511}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20814750392907774, 0.09347453656347218}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.30748885408340115, 0.11433633750751587}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20444989955790593, 0.09301564524143814}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20496636351045744, 0.09312769913427175}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20501881689769447, 0.09327309809332586}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20575066515692184, 0.09349957011183903}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3083846260172909, 0.11502121954599978}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20554050351950104, 0.09373453502805212}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3077344017537767, 0.11552671647167334}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20555555194388794, 0.09439457015922142}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.30894243424701073, 0.11614319526055099}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20373703482047756, 0.09422692836370607}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.30859636384012284, 0.11613066357996987}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3057251285285586, 0.11540002827772845}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20478451841521686, 0.09467600407745036}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.30834116531691197, 0.11646348404134113}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.2054557684440659, 0.09493329147671603}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20715890327683037, 0.09523899167330477}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20386987071135765, 0.09482075828175635}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3086324444366005, 0.11687080144970173}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.20520562163238104, 0.0957126426268113}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31728900555801276, 0.12599889983302764}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31735692603149057, 0.1260442542221306}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3183260032880132, 0.12670310549987396}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.32096825380164873, 0.1274251334378116}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3172664421489338, 0.12653558673983362}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3178942764420956, 0.12694126724537033}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3162626076338884, 0.1265977214322785}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3212329836647957, 0.1280159997033254}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3206702078123385, 0.12786464469749959}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.317196662427109, 0.12707993579287766}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31863972753842174, 0.12750815791211897}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.32154634968593704, 0.12843772977073956}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3187539254756958, 0.1277142666889177}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.32028992284333263, 0.1282440210921708}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31695873078862075, 0.12743996371956073}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31864161485532544, 0.12792676993895266}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3173617148779948, 0.12758604162663}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31671603121368913, 0.1274843055514235}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3204889224946478, 0.1288226902663734}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31825665060730146, 0.1282632475405633}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31755973013548267, 0.12807867882201798}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3191122050953954, 0.12851882603205897}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31655550907098107, 0.12793726037527725}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31967767144994275, 0.12894790560006503}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3169162689776, 0.1283317173838265}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31974290338608297, 0.1290903589887643}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.32208427994347516, 0.12978554010805932}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3201357426695712, 0.12930601200736982}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3209748719209176, 0.12956428140886395}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3184963154886787, 0.12950894332021987}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3206245375144044, 0.13063493006809088}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3182683538225924, 0.13011322938959669}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3189172553650488, 0.1303054030988207}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.320080121670085, 0.13084247850954653}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3212708149702406, 0.13116598647178537}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3206934809818955, 0.1312863007224973}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31994832125990136, 0.13113331342911408}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31934302102337325, 0.13106063500324708}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3186008088310527, 0.13089298858776266}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3191054631394791, 0.13132373623780497}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3192604050710118, 0.13208073157145214}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3194573283663698, 0.13246921823344038}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31864263453750974, 0.13235455672945165}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.319599199871181, 0.1327725971145109}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.3186001629029029, 0.13254684353078675}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31990142823025247, 0.13291315371399756}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.31985447513123416, 0.13327822177513768}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14163935832294258, 0.11339220838658387}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14179280160036226, 0.11366210877533582}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14123152006430154, 0.11380783568249903}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14123570139592703, 0.11383911485595335}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14016348795846012, 0.11374155797315973}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14201585122601307, 0.11419059715189715}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13990318401045027, 0.11398296232658114}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1405254896467608, 0.11456126392325834}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13950980210685948, 0.11478892901944988}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14140005201397768, 0.11537369779751468}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.14102790222996692, 0.11600910533386573}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13975239187703986, 0.11613636573271853}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13995066687596358, 0.11630806404651234}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1382612222598698, 0.1176853617213975}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13759078671501082, 0.11814934175723402}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13780291962568167, 0.11823161480531479}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13773779829277463, 0.11833894826897176}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.1363132982594858, 0.11831683996704345}]}, 
       {RGBColor[0.790588, 0.201176, 0.], Opacity[1], FaceForm[{RGBColor[
        1., 0.607843, 0.], Opacity[0.5]}], InsetBox[
         StyleBox["\<\"\[FilledCircle]\"\>",
          StripOnInput->False,
          FontSize->10.88], {0.13885346938446413, 0.1189328212845073}], 
        {Opacity[1]}}}, {}}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{35.624312191144, -98.44806172150257}], 
       "LongitudeDetermination" -> -98.44806172150258}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{35.624312191144, -98.44806172150257}], 
       "LongitudeDetermination" -> -98.44806172150258}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  LabelStyle->Automatic,
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{{{
          RGBColor[1., 0.607843, 0.], 
          EdgeForm[{
            Thickness[Tiny], 
            Opacity[0.4]}], 
          PointSize[Large], 
          FaceForm[{
            Opacity[0.5]}], 
          GeoStyling[None], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.258418359427854`, -98.50981430241308}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.258418359427854`, -98.50981430241308}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.289110624492274`, -98.49471237158492}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.289110624492274`, -98.49471237158492}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.315316331571037`, -98.56881818439034}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.315316331571037`, -98.56881818439034}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.342870714212772`, -98.63836463481452}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.342870714212772`, -98.63836463481452}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.346592748489687`, -98.61389171738698}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.346592748489687`, -98.61389171738698}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.3942885143985, -98.40019089180538}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.3942885143985, -98.40019089180538}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.39500729713543, -98.51882998064855}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.39500729713543, -98.51882998064855}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.411281258861898`, -98.63104298614104}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.411281258861898`, -98.63104298614104}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.4131615896075, -98.42860270997726}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.4131615896075, -98.42860270997726}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.41873885634241, -98.69049787006954}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.41873885634241, -98.69049787006954}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.425442364917878`, -98.48085101875739}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.425442364917878`, -98.48085101875739}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.429693013438488`, -98.61287663517655}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.429693013438488`, -98.61287663517655}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.455743833498126`, -98.32995627991806}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.455743833498126`, -98.32995627991806}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.46156336334212, -98.50712423917415}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.46156336334212, -98.50712423917415}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.465265185164714`, -98.28562384676813}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.465265185164714`, -98.28562384676813}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.470936513686937`, -98.36698654318177}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.470936513686937`, -98.36698654318177}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.472235872129033`, -98.68050183450701}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.472235872129033`, -98.68050183450701}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.481666344014155`, -98.6122534125679}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.481666344014155`, -98.6122534125679}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.483053136742182`, -98.38198279258013}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.483053136742182`, -98.38198279258013}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.490655482999763`, -98.41577120310988}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.490655482999763`, -98.41577120310988}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.49533579776554, -98.63563596000225}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.49533579776554, -98.63563596000225}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.512689947424636`, -98.40466190831992}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.512689947424636`, -98.40466190831992}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.519338279318184`, -98.66037584877016}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.519338279318184`, -98.66037584877016}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.52707064873925, -98.65196653840255}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.52707064873925, -98.65196653840255}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.53853793165388, -98.57811101507444}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.53853793165388, -98.57811101507444}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.539802214956044`, -98.68958244618725}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.539802214956044`, -98.68958244618725}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.549503658891762`, -98.60454812171244}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.549503658891762`, -98.60454812171244}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.550521324131918`, -98.60484701138476}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.550521324131918`, -98.60484701138476}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.55767620848896, -95.10785548540638}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.55767620848896, -95.10785548540638}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.562981240629973`, -98.62655960475298}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.562981240629973`, -98.62655960475298}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.563172903694692`, -95.14679592258837}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.563172903694692`, -95.14679592258837}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.574299767511313`, -98.41157899737709}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.574299767511313`, -98.41157899737709}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.575683389802425`, -98.77698268624935}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.575683389802425`, -98.77698268624935}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.57622187318097, -98.46279646717576}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.57622187318097, -98.46279646717576}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.581371246302574`, -95.10387044112689}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.581371246302574`, -95.10387044112689}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.58367611374739, -98.59538474301102}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.58367611374739, -98.59538474301102}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.586260522648534`, -98.6367990880176}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.586260522648534`, -98.6367990880176}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.588186522771544`, -98.37702723788581}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.588186522771544`, -98.37702723788581}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.593768288506855`, -98.36503778005019}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.593768288506855`, -98.36503778005019}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.599968067142544`, -95.13597250573123}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.599968067142544`, -95.13597250573123}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.60133255666584, -98.34976882187028}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.60133255666584, -98.34976882187028}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.601623924563164`, -98.63737785712041}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.601623924563164`, -98.63737785712041}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.606112364577335`, -95.20562318756659}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.606112364577335`, -95.20562318756659}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.61702413763316, -95.43233268014237}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.61702413763316, -95.43233268014237}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.61710184119241, -95.33266451514068}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.61710184119241, -95.33266451514068}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.617930952873998`, -95.39696235600411}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.617930952873998`, -95.39696235600411}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.619984115549613`, -95.31857514818901}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.619984115549613`, -95.31857514818901}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.630952883838592`, -95.40642703674915}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.630952883838592`, -95.40642703674915}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.635191488804466`, -95.38072390398145}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.635191488804466`, -95.38072390398145}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.646144070729875`, -98.47437451076779}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.646144070729875`, -98.47437451076779}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.65019475802112, -98.59752280179934}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.65019475802112, -98.59752280179934}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.655114874229938`, -95.26554187878637}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.655114874229938`, -95.26554187878637}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.655725013924776`, -98.62846334494338}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.655725013924776`, -98.62846334494338}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.698948262974653`, -95.24141200615553}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.698948262974653`, -95.24141200615553}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.703025243169, -95.64127814813877}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.703025243169, -95.64127814813877}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.70806767612435, -95.26873820706267}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.70806767612435, -95.26873820706267}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.715064290307946`, -95.25107495887852}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.715064290307946`, -95.25107495887852}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.71540245725094, -95.5170931007321}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.71540245725094, -95.5170931007321}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.724366250585046`, -95.3327587736858}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.724366250585046`, -95.3327587736858}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.727584297484153`, -95.4352859735783}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.727584297484153`, -95.4352859735783}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.73017478056289, -95.51344389294073}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.73017478056289, -95.51344389294073}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.733462625562957`, -95.26386394340557}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.733462625562957`, -95.26386394340557}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.734840567510773`, -95.3131744849441}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.734840567510773`, -95.3131744849441}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.736059475488705`, -95.25831069623541}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.736059475488705`, -95.25831069623541}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.73819732060536, -95.61933747081417}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.73819732060536, -95.61933747081417}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.74124330027991, -95.49927041776989}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.74124330027991, -95.49927041776989}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.767768898012516`, -95.21738451320137}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.767768898012516`, -95.21738451320137}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.770263359355695`, -95.66950065291651}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.770263359355695`, -95.66950065291651}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.770597564616576`, -95.6212082449438}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.770597564616576`, -95.6212082449438}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.777437750338734`, -95.42827228021703}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.777437750338734`, -95.42827228021703}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.782695208293063`, -95.41715710827704}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.782695208293063`, -95.41715710827704}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.787598137837612`, -95.58731595169711}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.787598137837612`, -95.58731595169711}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.794984021290666`, -95.48623967622072}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.794984021290666`, -95.48623967622072}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.797925844577144`, -95.34019733000069}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.797925844577144`, -95.34019733000069}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.82560161998802, -95.6445903547071}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.82560161998802, -95.6445903547071}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.826198691812955`, -95.19721263697815}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.826198691812955`, -95.19721263697815}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.829108062825917`, -95.40957207500702}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.829108062825917`, -95.40957207500702}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.83994428266845, -95.41310658116612}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.83994428266845, -95.41310658116612}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.849670586562652`, -95.19411478852597}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.849670586562652`, -95.19411478852597}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.855417423435554`, -95.40631041954562}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.855417423435554`, -95.40631041954562}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.85677126054919, -95.32066636771069}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.85677126054919, -95.32066636771069}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.858718584359057`, -95.54449224478101}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.858718584359057`, -95.54449224478101}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.86070335094261, -95.47005107723733}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.86070335094261, -95.47005107723733}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.869226856599205`, -95.40750718540251}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.869226856599205`, -95.40750718540251}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.922003967292337`, -95.23769737424867}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.922003967292337`, -95.23769737424867}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.933737053340415`, -95.3297987853141}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.933737053340415`, -95.3297987853141}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.936054080546008`, -95.3024233781571}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.936054080546008`, -95.3024233781571}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.937229642749113`, -95.40881342470459}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.937229642749113`, -95.40881342470459}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.95845181301063, -95.42209326511941}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.95845181301063, -95.42209326511941}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.964299715181774`, -95.5547981465425}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.964299715181774`, -95.5547981465425}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.97265449986997, -95.20034878558909}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.97265449986997, -95.20034878558909}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.9882403185094, -95.3580415367566}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.9882403185094, -95.3580415367566}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{29.99964018654861, -95.12358717181868}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{29.99964018654861, -95.12358717181868}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.052088535472972`, -95.15852477121638}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.052088535472972`, -95.15852477121638}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.11305931598591, -81.5382347749321}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.11305931598591, -81.5382347749321}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.13150523583342, -81.63661361178762}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.13150523583342, -81.63661361178762}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.1361569530416, -81.50372179173256}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.1361569530416, -81.50372179173256}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.145589300297775`, -81.48088992620265}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.145589300297775`, -81.48088992620265}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.15429772783502, -81.5482389567786}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.15429772783502, -81.5482389567786}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.15642782690076, -97.83549116011108}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.15642782690076, -97.83549116011108}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.163567153325044`, -81.46736168814188}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.163567153325044`, -81.46736168814188}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.191598733379287`, -81.89690333546024}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.191598733379287`, -81.89690333546024}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.191682255354046`, -81.4374494471996}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.191682255354046`, -81.4374494471996}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.191889245353664`, -97.85831493808573}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.191889245353664`, -97.85831493808573}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.19649267937576, -81.71913024953851}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.19649267937576, -81.71913024953851}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.19859198477752, -81.95344963717501}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.19859198477752, -81.95344963717501}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.215087077100875`, -81.5511669043389}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.215087077100875`, -81.5511669043389}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.22302224442222, -81.54787103871342}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.22302224442222, -81.54787103871342}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.225957548025747`, -82.03340091149073}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.225957548025747`, -82.03340091149073}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.230845382073692`, -81.55297106815503}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.230845382073692`, -81.55297106815503}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.231441051376073`, -97.69391777859974}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.231441051376073`, -97.69391777859974}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.232478940618236`, -81.84469586247432}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.232478940618236`, -81.84469586247432}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.236793421647825`, -97.87946974574938}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.236793421647825`, -97.87946974574938}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.239898669629156`, -81.69718259814385}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.239898669629156`, -81.69718259814385}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.24082688564498, -81.47928553390229}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.24082688564498, -81.47928553390229}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.247048929404393`, -97.8870953718037}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.247048929404393`, -97.8870953718037}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.250983007174312`, -97.67487471655822}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.250983007174312`, -97.67487471655822}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.25138158799813, -81.78226215324247}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.25138158799813, -81.78226215324247}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.2553167729073, -97.7032825976557}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.2553167729073, -97.7032825976557}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.26207514336002, -82.02130172042368}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.26207514336002, -82.02130172042368}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.262983959816108`, -97.69946618887981}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.262983959816108`, -97.69946618887981}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.26589704811669, -81.92223888971868}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.26589704811669, -81.92223888971868}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.26666437199398, -97.67327504758624}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.26666437199398, -97.67327504758624}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.267926939741606`, -81.51383635379274}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.267926939741606`, -81.51383635379274}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.2723508454958, -81.59351062620044}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.2723508454958, -81.59351062620044}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.27520748327337, -81.62117436538061}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.27520748327337, -81.62117436538061}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.278008241363928`, -97.66247577822753}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.278008241363928`, -97.66247577822753}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.284213259031876`, -81.5636508336855}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.284213259031876`, -81.5636508336855}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.28422999496659, -97.72741943049594}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.28422999496659, -97.72741943049594}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.28760145771636, -97.60167474049284}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.28760145771636, -97.60167474049284}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.29456047274547, -81.94260249462275}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.29456047274547, -81.94260249462275}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.296001776808836`, -81.44527587778289}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.296001776808836`, -81.44527587778289}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.296823118980598`, -81.81440204333363}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.296823118980598`, -81.81440204333363}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.298783974524973`, -81.7036748484652}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.298783974524973`, -81.7036748484652}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.30154798618465, -81.62562356858206}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.30154798618465, -81.62562356858206}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.307203736527715`, -97.75734848043027}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.307203736527715`, -97.75734848043027}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.310829570221728`, -97.73823326469642}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.310829570221728`, -97.73823326469642}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.312558854532565`, -97.87854012206967}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.312558854532565`, -97.87854012206967}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.313568995782035`, -81.91978571953166}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.313568995782035`, -81.91978571953166}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.326967144491576`, -97.92511870266584}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.326967144491576`, -97.92511870266584}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.343416037537384`, -81.67170426965315}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.343416037537384`, -81.67170426965315}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.346388030950262`, -97.82364357465048}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.346388030950262`, -97.82364357465048}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.353792674852986`, -81.80399285285634}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.353792674852986`, -81.80399285285634}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.354678119401395`, -81.52438274301761}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.354678119401395`, -81.52438274301761}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.35906955167059, -97.89964161834564}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.35906955167059, -97.89964161834564}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.36163079163788, -81.93997080706768}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.36163079163788, -81.93997080706768}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.363803935438757`, -81.93990458963269}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.363803935438757`, -81.93990458963269}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.370921709867705`, -97.78878293144935}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.370921709867705`, -97.78878293144935}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.373547107963915`, -81.34335371656816}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.373547107963915`, -81.34335371656816}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.37450956089277, -81.65926185683803}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.37450956089277, -81.65926185683803}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.37945982501687, -81.53919921167045}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.37945982501687, -81.53919921167045}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.38444639998307, -81.44560921006808}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.38444639998307, -81.44560921006808}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.387029653371705`, -81.62002600762064}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.387029653371705`, -81.62002600762064}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.388617411448912`, -97.82496670603919}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.388617411448912`, -97.82496670603919}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.38949582323743, -81.69899696406145}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.38949582323743, -81.69899696406145}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.389865105641015`, -81.53380758956669}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.389865105641015`, -81.53380758956669}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.39036230012744, -81.66534310301596}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.39036230012744, -81.66534310301596}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.399952935949145`, -81.68069405795849}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.399952935949145`, -81.68069405795849}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.42227668294983, -97.84397934741695}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.42227668294983, -97.84397934741695}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.423616663752643`, -97.71205249207443}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.423616663752643`, -97.71205249207443}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.438016188972107`, -81.46169203605693}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.438016188972107`, -81.46169203605693}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.441426156889904`, -81.34860752527571}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.441426156889904`, -81.34860752527571}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.44247728525723, -97.74908170580967}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.44247728525723, -97.74908170580967}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.447973205055924`, -81.79120917666891}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.447973205055924`, -81.79120917666891}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.44928651399855, -81.5465665358645}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.44928651399855, -81.5465665358645}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.45104250237914, -81.55982677234917}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.45104250237914, -81.55982677234917}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.457071709433695`, -81.65972815741313}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.457071709433695`, -81.65972815741313}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.457768046317113`, -81.57073864072993}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.457768046317113`, -81.57073864072993}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.46694169335294, -81.74374646653534}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.46694169335294, -81.74374646653534}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.47166198983751, -81.70938271581454}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.47166198983751, -81.70938271581454}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.482916792865034`, -81.57887507887834}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.482916792865034`, -81.57887507887834}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.48436510365532, -81.48657109169454}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.48436510365532, -81.48657109169454}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.484482112084358`, -81.60012523671783}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.484482112084358`, -81.60012523671783}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.49235604637393, -81.6002949452136}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.49235604637393, -81.6002949452136}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.49779412023285, -81.3799021746119}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.49779412023285, -81.3799021746119}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.50160247246181, -81.587792931232}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.50160247246181, -81.587792931232}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.50359425122323, -81.40420685179446}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.50359425122323, -81.40420685179446}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.512952235188628`, -81.60348192485779}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.512952235188628`, -81.60348192485779}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.513755674844816`, -81.69486794227977}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.513755674844816`, -81.69486794227977}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.522977301111478`, -81.66387934755532}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.522977301111478`, -81.66387934755532}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.527897205728816`, -81.55818994875942}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.527897205728816`, -81.55818994875942}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.527985819929174`, -81.66616226738738}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.527985819929174`, -81.66616226738738}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{30.55847254971741, -81.710185227457}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{30.55847254971741, -81.710185227457}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.54743825152316, -117.10232294498859`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.54743825152316, -117.10232294498859`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.548426616473705`, -116.98254785261129`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.548426616473705`, -116.98254785261129`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.55306542436627, -116.9847292596987}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.55306542436627, -116.9847292596987}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.559676905035, -116.93883343496546`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.559676905035, -116.93883343496546`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.56449776616602, -117.08673243643982`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.56449776616602, -117.08673243643982`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.58123267414864, -116.96870346589428`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.58123267414864, -116.96870346589428`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.613139651538255`, -97.37959971231226}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.613139651538255`, -97.37959971231226}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.62858973400392, -97.38425190987165}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.62858973400392, -97.38425190987165}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.63321037313662, -97.39900431307511}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.63321037313662, -97.39900431307511}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.633352563433185`, -97.41383980378191}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.633352563433185`, -97.41383980378191}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.639099124691626`, -97.40186101653467}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.639099124691626`, -97.40186101653467}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.649495145727855`, -97.28551817742738}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.649495145727855`, -97.28551817742738}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.65342267610942, -97.34223819039826}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.65342267610942, -97.34223819039826}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.66065619656206, -96.85163733840918}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.66065619656206, -96.85163733840918}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.66977714474069, -117.20300026602067`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.66977714474069, -117.20300026602067`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.67156161002307, -96.8502847999091}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.67156161002307, -96.8502847999091}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.67248931250944, -117.29332985625733`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.67248931250944, -117.29332985625733`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.675879993154815`, -96.66785124827729}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.675879993154815`, -96.66785124827729}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.67766055480369, -117.28492577931236`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.67766055480369, -117.28492577931236`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.68355827494217, -97.38532876871123}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.68355827494217, -97.38532876871123}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.68469743800666, -96.9106413269321}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.68469743800666, -96.9106413269321}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.684945117796254`, -96.88445548067159}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.684945117796254`, -96.88445548067159}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.68757504718793, -97.54114191902993}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.68757504718793, -97.54114191902993}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.6903564994663, -117.22980572129383`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.6903564994663, -117.22980572129383`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.692757464192745`, -96.56242348737712}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.692757464192745`, -96.56242348737712}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.6986124798019, -96.64219038196144}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.6986124798019, -96.64219038196144}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.69904773305296, -117.08998813112157`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.69904773305296, -117.08998813112157`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.70036775342408, -96.6505074060277}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.70036775342408, -96.6505074060277}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.70246453585833, -96.73341986985896}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.70246453585833, -96.73341986985896}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.70627030106829, -97.28152924211753}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.70627030106829, -97.28152924211753}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.71245321958961, -97.29141245086893}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.71245321958961, -97.29141245086893}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.72011291835364, -117.18475148165285`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.72011291835364, -117.18475148165285`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.72121556396242, -97.35225626080545}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.72121556396242, -97.35225626080545}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.72151267852482, -97.36088325532278}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.72151267852482, -97.36088325532278}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.724243401340836`, -97.3895578565199}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.724243401340836`, -97.3895578565199}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.72684137591979, -96.97110129784484}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.72684137591979, -96.97110129784484}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.72879306341216, -97.53225447108088}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.72879306341216, -97.53225447108088}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.72997513252115, -117.07370863319275`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.72997513252115, -117.07370863319275`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.73001468897797, -117.07858619954904`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.73001468897797, -117.07858619954904`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.73376348322195, -97.27378809699249}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.73376348322195, -97.27378809699249}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.73635881301513, -96.64248743426583}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.73635881301513, -96.64248743426583}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.74271496988846, -96.95932458165578}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.74271496988846, -96.95932458165578}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.745225147089336`, -96.77455847553625}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.745225147089336`, -96.77455847553625}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.75089289875526, -96.65357376842836}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.75089289875526, -96.65357376842836}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.75438531505298, -117.13835472893567`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.75438531505298, -117.13835472893567`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.7568656595788, -117.08363661798741`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.7568656595788, -117.08363661798741`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.76255960790871, -97.43576287608089}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.76255960790871, -97.43576287608089}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.77486615808985, -117.16993751545203`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.77486615808985, -117.16993751545203`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.776056541180225`, -96.92608291435097}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.776056541180225`, -96.92608291435097}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.79373074646702, -117.2351469842144}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.79373074646702, -117.2351469842144}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.79702564393035, -117.13141474546134`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.79702564393035, -117.13141474546134`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.79711120286574, -97.16923209964264}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.79711120286574, -97.16923209964264}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.79876819856109, -117.13109423525276`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.79876819856109, -117.13109423525276`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.79966827198354, -96.86938936167094}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.79966827198354, -96.86938936167094}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.80151798641789, -97.39092638771274}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.80151798641789, -97.39092638771274}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.806382878241834`, -97.13706721089606}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.806382878241834`, -97.13706721089606}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.807954155499, -96.8147214264398}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.807954155499, -96.8147214264398}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.814090601129536`, -97.33111948451042}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.814090601129536`, -97.33111948451042}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.81603385113087, -97.42730193457353}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.81603385113087, -97.42730193457353}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.82054038143742, -96.51214690668098}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.82054038143742, -96.51214690668098}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.82288935807321, -96.78317517620344}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.82288935807321, -96.78317517620344}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.82893543459992, -96.85085391578953}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.82893543459992, -96.85085391578953}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.83156435573967, -96.85195709652147}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.83156435573967, -96.85195709652147}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.83321011069096, -117.21211771861368`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.83321011069096, -117.21211771861368`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.83784924323594, -96.67001084142998}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.83784924323594, -96.67001084142998}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.83803639295284, -96.64708143062593}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.83803639295284, -96.64708143062593}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.84169329646731, -97.308496917274}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.84169329646731, -97.308496917274}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.84352199352404, -117.03877042546112`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.84352199352404, -117.03877042546112`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.84870697547634, -117.12695003191611`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.84870697547634, -117.12695003191611`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.85143607077175, -117.1489232148422}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.85143607077175, -117.1489232148422}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.85626580523762, -96.82077368824874}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.85626580523762, -96.82077368824874}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.86728909533062, -117.15855828705538`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.86728909533062, -117.15855828705538`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.8694069057581, -96.89676867291249}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.8694069057581, -96.89676867291249}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.873939642535184`, -97.42851044285638}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.873939642535184`, -97.42851044285638}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.87430444766887, -117.09694294068736`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.87430444766887, -117.09694294068736`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.8749017047326, -117.04570067621445`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.8749017047326, -117.04570067621445`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.88052182590005, -117.02136649461436`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.88052182590005, -117.02136649461436`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.88449321998341, -96.93120725270781}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.88449321998341, -96.93120725270781}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.88737518456551, -117.24528699471723`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.88737518456551, -117.24528699471723`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.89305241820141, -96.90696960921504}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.89305241820141, -96.90696960921504}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.89920670179415, -96.85738923412349}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.89920670179415, -96.85738923412349}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.90105821975204, -97.4283147977724}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.90105821975204, -97.4283147977724}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.90213570270285, -117.14646626749236`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.90213570270285, -117.14646626749236`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.90560020421537, -96.79559069465718}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.90560020421537, -96.79559069465718}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.906714760133916`, -96.53908725923033}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.906714760133916`, -96.53908725923033}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.90989930938372, -97.42821137727536}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.90989930938372, -97.42821137727536}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.915831375287674`, -97.31549459037986}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.915831375287674`, -97.31549459037986}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.9270314537221, -96.75784228325327}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.9270314537221, -96.75784228325327}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.931945398636024`, -117.08362246739007`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.931945398636024`, -117.08362246739007`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.93562732487469, -117.09708705257306`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.93562732487469, -117.09708705257306`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.93803770457787, -96.97623840675169}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.93803770457787, -96.97623840675169}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.94079314425618, -97.34457664687676}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.94079314425618, -97.34457664687676}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.95419725988326, -97.27744226844936}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.95419725988326, -97.27744226844936}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.962110702946866`, -96.79586191073882}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.962110702946866`, -96.79586191073882}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.968868155268915`, -97.39195097471966}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.968868155268915`, -97.39195097471966}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.9702405603641, -97.2965823731094}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.9702405603641, -97.2965823731094}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.9718349466264, -117.09470791804415`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.9718349466264, -117.09470791804415`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.974895808351164`, -97.3580029501207}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.974895808351164`, -97.3580029501207}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{32.9926533534697, -97.37795906360645}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{32.9926533534697, -97.37795906360645}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.01785744011407, -97.29539540928103}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.01785744011407, -97.29539540928103}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.022149924781814`, -117.08425087692818`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.022149924781814`, -117.08425087692818`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.025409210773205`, -117.05723887686068`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.025409210773205`, -117.05723887686068`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.05081799402348, -117.11983128009366`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.05081799402348, -117.11983128009366`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.08839626870577, -116.9878028903576}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.08839626870577, -116.9878028903576}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.30703635659546, -112.13226690388527`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.30703635659546, -112.13226690388527`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.35197266657163, -112.10698434518413`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.35197266657163, -112.10698434518413`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.36295456927847, -112.03738414690982`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.36295456927847, -112.03738414690982`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.3881325573879, -112.17041080189864`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.3881325573879, -112.17041080189864`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.406704990357994`, -112.26496383161246`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.406704990357994`, -112.26496383161246`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.43220461634969, -112.01022768749819`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.43220461634969, -112.01022768749819`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.45197637852298, -112.2155711394636}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.45197637852298, -112.2155711394636}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.459745618242124`, -112.01148638656363`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.459745618242124`, -112.01148638656363`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.46345357549429, -112.19186637607143`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.46345357549429, -112.19186637607143`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.477766884382184`, -112.01621749908622`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.477766884382184`, -112.01621749908622`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.50377268478177, -111.94372472374852`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.50377268478177, -111.94372472374852`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.51562231931173, -112.09357144574471`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.51562231931173, -112.09357144574471`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.51883836655374, -112.099069041048}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.51883836655374, -112.099069041048}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.568615398117885`, -112.06360326790306`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.568615398117885`, -112.06360326790306`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.592152527556806`, -112.03764368968193`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.592152527556806`, -112.03764368968193`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.60744263511263, -111.96235145937257`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.60744263511263, -111.96235145937257`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.609811366907934`, -111.94055754270735`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.609811366907934`, -111.94055754270735`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.647696362022295`, -112.05037258124388`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.647696362022295`, -112.05037258124388`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.64887544463997, -112.01531033616325`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.64887544463997, -112.01531033616325`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.677678271894784`, -111.99458685852655`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.677678271894784`, -111.99458685852655`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.68978017150673, -111.98258396749458`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.68978017150673, -111.98258396749458`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.69744135518204, -111.97994294417144`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.69744135518204, -111.97994294417144`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.69813774245715, -112.12838847706935`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.69813774245715, -112.12838847706935`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.70028362417572, -111.95237789076621`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.70028362417572, -111.95237789076621`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.70476872719157, -111.99688998859972`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.70476872719157, -111.99688998859972`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.709492822342575`, -118.28272679414947`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.709492822342575`, -118.28272679414947`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.73015261532056, -111.97382239122422`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.73015261532056, -111.97382239122422`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.73683933001199, -112.02267338405207`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.73683933001199, -112.02267338405207`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.73935595297579, -111.96616900271228`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.73935595297579, -111.96616900271228`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.74278217883572, -118.2677860544367}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.74278217883572, -118.2677860544367}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.75219480429368, -112.05931973628415`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.75219480429368, -112.05931973628415`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.75564250619526, -118.27954047959362`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.75564250619526, -118.27954047959362`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.77269668112824, -112.03419126938073`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.77269668112824, -112.03419126938073`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.78067886236572, -112.05305323952074`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.78067886236572, -112.05305323952074`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.78081799542105, -111.96175129482887`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.78081799542105, -111.96175129482887`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.782426330395836`, -112.02575176505752`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.782426330395836`, -112.02575176505752`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.812898482211736`, -112.20730583210866`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.812898482211736`, -112.20730583210866`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.87464797946366, -112.20618935085665`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.87464797946366, -112.20618935085665`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.87735969496694, -112.15674425050204`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.87735969496694, -112.15674425050204`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.901820651110626`, -118.2866928871758}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.901820651110626`, -118.2866928871758}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.90597544252665, -112.18348506359096`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.90597544252665, -112.18348506359096`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.918424062967745`, -118.44934321179372`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.918424062967745`, -118.44934321179372`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.93291684021335, -118.3922431427686}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.93291684021335, -118.3922431427686}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.935009719530555`, -118.25626693385887`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.935009719530555`, -118.25626693385887`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.960285656505455`, -118.25655784607615`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.960285656505455`, -118.25655784607615`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.971423793303906`, -118.46638000683559`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.971423793303906`, -118.46638000683559`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.98824419308164, -118.38696053838937`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.98824419308164, -118.38696053838937`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{33.996086910447566`, -118.33288904215631`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{33.996086910447566`, -118.33288904215631`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.00432685216087, -118.34204368031436`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.00432685216087, -118.34204368031436`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.037329619995226`, -118.35258219365093`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.037329619995226`, -118.35258219365093`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.0377331863142, -118.46032643359307`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.0377331863142, -118.46032643359307`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.040258953485655`, -118.36890217841896`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.040258953485655`, -118.36890217841896`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.04542990883706, -118.5044140820938}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.04542990883706, -118.5044140820938}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.05620763973143, -118.30037869960876`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.05620763973143, -118.30037869960876`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.05851735929542, -118.23607005826862`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.05851735929542, -118.23607005826862`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.0637559478857, -118.51301963541142`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.0637559478857, -118.51301963541142`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.071753128232444`, -118.51778228417538`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.071753128232444`, -118.51778228417538`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.08409824092155, -118.56607428802967`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.08409824092155, -118.56607428802967`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.08829250139345, -118.18818852645248`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.08829250139345, -118.18818852645248`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.095238251624615`, -118.41511876486251`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.095238251624615`, -118.41511876486251`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.10507515385841, -118.35176339073315`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.10507515385841, -118.35176339073315`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.142212294027416`, -118.34754748470642`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.142212294027416`, -118.34754748470642`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.148154957163534`, -118.49141614589364`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.148154957163534`, -118.49141614589364`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.155822320706875`, -118.29271036334292`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.155822320706875`, -118.29271036334292`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.17653945023418, -118.63721160435531`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.17653945023418, -118.63721160435531`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.209088180016444`, -118.56461063291923`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.209088180016444`, -118.56461063291923`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.23707711237236, -118.61737747698875`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.23707711237236, -118.61737747698875`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.245473509475616`, -118.56387136703955`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.245473509475616`, -118.56387136703955`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.248697764174786`, -118.4215095616375}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.248697764174786`, -118.4215095616375}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.25091838544334, -118.31828490197363`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.25091838544334, -118.31828490197363`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.25724441907382, -118.53215677938809`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.25724441907382, -118.53215677938809`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.25732988700712, -118.30113118504502`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.25732988700712, -118.30113118504502`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.2617522232608, -118.53500223092462`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.2617522232608, -118.53500223092462`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.269429008290516`, -118.35456479029301`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.269429008290516`, -118.35456479029301`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.27732117571486, -118.50950388119783`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.27732117571486, -118.50950388119783`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.28482348926478, -118.40843946125877`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.28482348926478, -118.40843946125877`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.2883049409614, -118.4916944678073}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.2883049409614, -118.4916944678073}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{34.29123097534723, -118.29126237457793`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{34.29123097534723, -118.29126237457793`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.195803914735684`, -121.73915898095845`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.195803914735684`, -121.73915898095845`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.1977128089308, -121.84235214802932`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.1977128089308, -121.84235214802932`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.20761183311991, -121.84035461671695`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.20761183311991, -121.84035461671695`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.22247410543123, -121.8568462207113}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.22247410543123, -121.8568462207113}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.23185573526331, -121.76951741186697`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.23185573526331, -121.76951741186697`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.25318409314692, -121.81570699453776`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.25318409314692, -121.81570699453776`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.267381224469844`, -121.86019730012383`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.267381224469844`, -121.86019730012383`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.29155840556852, -121.90430083649292`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.29155840556852, -121.90430083649292`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.306749017006524`, -121.76447880217226`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.306749017006524`, -121.76447880217226`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.3172420012422, -121.8473271243861}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.3172420012422, -121.8473271243861}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.32031070257554, -121.82118425977643`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.32031070257554, -121.82118425977643`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.32711854614082, -121.86252416071602`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.32711854614082, -121.86252416071602`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.339336671738266`, -121.85376854889822`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.339336671738266`, -121.85376854889822`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.36842036782109, -121.86039701666452`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.36842036782109, -121.86039701666452`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.375325750662626`, -121.8426338337598}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.375325750662626`, -121.8426338337598}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.378407254997654`, -121.89593463708998`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.378407254997654`, -121.89593463708998`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.393705139132756`, -121.93532545454427`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.393705139132756`, -121.93532545454427`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.65901119634321, -123.05290786385946`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.65901119634321, -123.05290786385946`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.69524205920427, -123.03827329603257`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.69524205920427, -123.03827329603257`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.724665674259434`, -123.12332987608202`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.724665674259434`, -123.12332987608202`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.728152412663796`, -122.37127398518533`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.728152412663796`, -122.37127398518533`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.73618191932538, -122.50616562120001`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.73618191932538, -122.50616562120001`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.7372861888154, -123.03614682480341`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.7372861888154, -123.03614682480341`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.75254704030188, -123.1552497725497}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.75254704030188, -123.1552497725497}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.765859056317936`, -123.09686846361323`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.765859056317936`, -123.09686846361323`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.76959831893092, -122.45608375976963`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.76959831893092, -122.45608375976963`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.77256000578087, -123.01286272007087`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.77256000578087, -123.01286272007087`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.78138904281974, -123.14825525447574`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.78138904281974, -123.14825525447574`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.783680089758924`, -123.1131865448937}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.783680089758924`, -123.1131865448937}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.80031420894389, -122.44844580484208`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.80031420894389, -122.44844580484208`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.85712361197008, -122.39926822049604`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.85712361197008, -122.39926822049604`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{37.894734069997384`, -122.41948972084225`}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{37.894734069997384`, -122.41948972084225`}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.88489966456379, -83.02526378724065}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.88489966456379, -83.02526378724065}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.89239362526413, -83.13458312918299}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.89239362526413, -83.13458312918299}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.89680080928826, -82.96556293956611}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.89680080928826, -82.96556293956611}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.90563108173457, -75.18219332807429}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.90563108173457, -75.18219332807429}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.913792837369115`, -82.97829740260909}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.913792837369115`, -82.97829740260909}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.91389036714656, -83.07536918073187}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.91389036714656, -83.07536918073187}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.919593922599944`, -83.00224346991463}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.919593922599944`, -83.00224346991463}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.92553749366941, -82.85845546936251}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.92553749366941, -82.85845546936251}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.935892234330026`, -75.14107003443486}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.935892234330026`, -75.14107003443486}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.9372381190303, -82.84304383821926}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.9372381190303, -82.84304383821926}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.96666548236048, -83.08705297820762}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.96666548236048, -83.08705297820762}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.96804314681221, -82.85475411618475}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.96804314681221, -82.85475411618475}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.97423413180953, -82.87380321495407}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.97423413180953, -82.87380321495407}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.976717573867916`, -83.16964458218479}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.976717573867916`, -83.16964458218479}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.985834678397985`, -83.07482185461642}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.985834678397985`, -83.07482185461642}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{39.990495280116065`, -82.88148859648979}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{39.990495280116065`, -82.88148859648979}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.00021533981887, -82.78712533272999}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.00021533981887, -82.78712533272999}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.001271108610965`, -75.12165084642398}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.001271108610965`, -75.12165084642398}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.00874142952468, -83.06709283935102}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.00874142952468, -83.06709283935102}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.01028534983799, -83.02738122421766}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.01028534983799, -83.02738122421766}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.0179770791889, -83.02165224985825}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.0179770791889, -83.02165224985825}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.023945171241984`, -82.96450795410642}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.023945171241984`, -82.96450795410642}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.026283990047745`, -75.042826020258}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.026283990047745`, -75.042826020258}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.03910077667021, -82.97711087433389}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.03910077667021, -82.97711087433389}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.0630624017302, -75.08085337931638}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.0630624017302, -75.08085337931638}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.076069559405376`, -82.96760520785065}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.076069559405376`, -82.96760520785065}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.079917603417634`, -74.98032144719103}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.079917603417634`, -74.98032144719103}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.08341236660711, -83.10470428224177}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.08341236660711, -83.10470428224177}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.08408362078481, -75.0059708300216}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.08408362078481, -75.0059708300216}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.08409612216691, -75.23081679627914}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.08409612216691, -75.23081679627914}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.09902275398147, -83.02126194210933}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.09902275398147, -83.02126194210933}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.1058866067868, -75.01830581041683}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.1058866067868, -75.01830581041683}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.10728127209744, -82.96815564862902}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.10728127209744, -82.96815564862902}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.10862146687902, -82.83780320035483}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.10862146687902, -82.83780320035483}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.115588712929934`, -83.08734422967876}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.115588712929934`, -83.08734422967876}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.12411009402161, -74.9890638960924}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.12411009402161, -74.9890638960924}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.15341478115253, -82.97680609532767}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.15341478115253, -82.97680609532767}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.49944963138546, -74.1718801602139}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.49944963138546, -74.1718801602139}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.50093654318885, -74.16595688436094}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.50093654318885, -74.16595688436094}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.52275815377076, -74.081172527849}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.52275815377076, -74.081172527849}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.52337860021902, -73.8716655745622}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.52337860021902, -73.8716655745622}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.52906520289135, -74.16270541367875}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.52906520289135, -74.16270541367875}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.54205192097892, -74.10818668532067}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.54205192097892, -74.10818668532067}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.547045614829464`, -74.23550601170466}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.547045614829464`, -74.23550601170466}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.5516779053815, -73.84005428490107}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.5516779053815, -73.84005428490107}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.55172208994246, -73.8846525621279}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.55172208994246, -73.8846525621279}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.55978525469376, -74.15684623309379}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.55978525469376, -74.15684623309379}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.562084845845604`, -74.04168962566094}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.562084845845604`, -74.04168962566094}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.57003298814975, -73.80829580060625}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.57003298814975, -73.80829580060625}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.57165472566696, -74.02907241349135}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.57165472566696, -74.02907241349135}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.577997476580734`, -73.90494257755454}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.577997476580734`, -73.90494257755454}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.58289538650761, -74.167120297562}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.58289538650761, -74.167120297562}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.58488818746934, -74.03303572311765}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.58488818746934, -74.03303572311765}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.58499622098927, -74.13441695299083}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.58499622098927, -74.13441695299083}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.58884687508324, -74.18413839284517}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.58884687508324, -74.18413839284517}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.60660851278195, -73.87841225471075}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.60660851278195, -73.87841225471075}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.60887251101852, -74.05460294080878}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.60887251101852, -74.05460294080878}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.60898601854701, -74.10980630481255}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.60898601854701, -74.10980630481255}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.61027971842299, -73.98623791410542}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.61027971842299, -73.98623791410542}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.615901366834805`, -74.18682469731117}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.615901366834805`, -74.18682469731117}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.62537115721855, -73.9357281676751}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.62537115721855, -73.9357281676751}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.632174524927144`, -74.15218844149526}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.632174524927144`, -74.15218844149526}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.632177942699094`, -73.9279972878493}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.632177942699094`, -73.9279972878493}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.635501597357866`, -73.74087367045546}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.635501597357866`, -73.74087367045546}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.638152903755724`, -73.89457607269198}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.638152903755724`, -73.89457607269198}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.63985566024651, -73.82732268703529}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.63985566024651, -73.82732268703529}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.6733008823676, -74.0115077133294}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.6733008823676, -74.0115077133294}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.70336819887065, -73.831168800404}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.70336819887065, -73.831168800404}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.70959554930968, -74.01600633880308}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.70959554930968, -74.01600633880308}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.710552604104116`, -73.96410846722979}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.710552604104116`, -73.96410846722979}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.722712720897285`, -73.86712950593909}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.722712720897285`, -73.86712950593909}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.72274574505398, -73.77245953683463}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.72274574505398, -73.77245953683463}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.737841107585126`, -73.81264729390682}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.737841107585126`, -73.81264729390682}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.74050647842852, -73.870887139052}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.74050647842852, -73.870887139052}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.74546349224093, -73.91713623999938}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.74546349224093, -73.91713623999938}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.74723657143676, -73.9754621769075}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.74723657143676, -73.9754621769075}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.76330151186843, -73.92929774424381}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.76330151186843, -73.92929774424381}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.80228287637608, -73.90226086066049}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.80228287637608, -73.90226086066049}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.820553397639095`, -73.87967959060823}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.820553397639095`, -73.87967959060823}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.82630444884884, -73.94234646170136}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.82630444884884, -73.94234646170136}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.83499355002257, -73.86291666528565}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.83499355002257, -73.86291666528565}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.837411662109375`, -73.94153292680525}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.837411662109375`, -73.94153292680525}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.83818952184432, -73.83763958915296}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.83818952184432, -73.83763958915296}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{40.858775569949984`, -73.83356527389134}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{40.858775569949984`, -73.83356527389134}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.657157309023845`, -87.56560019523009}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.657157309023845`, -87.56560019523009}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.67148074652839, -87.55135895702699}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.67148074652839, -87.55135895702699}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.683450398911134`, -87.59280037198174}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.683450398911134`, -87.59280037198174}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.68520010251754, -87.59218779479916}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.68520010251754, -87.59218779479916}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.68666728350933, -87.67489720793004}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.68666728350933, -87.67489720793004}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.70003339972809, -87.52935943728374}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.70003339972809, -87.52935943728374}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.702079256840875`, -87.69251087840858}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.702079256840875`, -87.69251087840858}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.73088324845702, -87.63961646506466}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.73088324845702, -87.63961646506466}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.75043660592282, -87.71504307504401}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.75043660592282, -87.71504307504401}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.771307206104474`, -87.56519942446877}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.771307206104474`, -87.56519942446877}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.80985618307553, -87.58763976779939}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.80985618307553, -87.58763976779939}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.82543218905112, -87.68394271137893}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.82543218905112, -87.68394271137893}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.833896798947585`, -87.66717699750787}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.833896798947585`, -87.66717699750787}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.92313845158221, -87.78359334805519}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.92313845158221, -87.78359334805519}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.95383234697256, -87.83063644845582}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.95383234697256, -87.83063644845582}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.95714400883796, -87.81362299959059}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.95714400883796, -87.81362299959059}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.963664613749785`, -87.81761666728335}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.963664613749785`, -87.81761666728335}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.971532147972454`, -87.92697236649329}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.971532147972454`, -87.92697236649329}]], 
          Directive[
           Directive[
            Opacity[1], 
            RGBColor[0.790588, 0.201176, 0.]], 
           FaceForm[{
             Opacity[0.5], 
             RGBColor[1., 0.607843, 0.]}]], 
          GeoPosition[{41.99020602286014, -87.72659033892431}], 
          Inset[
           Style["\[FilledCircle]", FontSize -> 10.88], 
           GeoPosition[{41.99020602286014, -87.72659033892431}]], 
          Opacity[1]}}, {}}, GeoBackground -> GeoStyling["GeoPlotMap"], 
       LabelStyle -> Automatic, PlotRangeClipping -> False]], 
    "BasicGeoRange" -> {{29.258418359427854`, 
     41.99020602286014}, {-123.1552497725497, -73.74087367045546}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> 
      GeoStyling[
       "StreetMapNoLabels", 
        GeoServer -> {
         "Wolfram", "AllowProviderChange" :> GIS`$AllowProviderChange}], 
      GeoCenter -> GeoPosition[{35.46990639478801, -98.44806172150258}], 
      GeoGridLines -> None, GeoGridLinesStyle -> GrayLevel[0.4, 0.3], 
      GeoModel -> "ITRF00", 
      GeoProjection -> {
       "LambertAzimuthal", "Centering" -> 
        GeoPosition[{35.624312191144, -98.44806172150257}]}, 
      GeoRange -> {{24.30018433441407, 
       46.94844004787393}, {-125.6259685776544, -71.27015486535075}}, 
      GeoRangePadding -> Full, 
      GeoServer -> {
       "Wolfram", "AllowProviderChange" :> GIS`$AllowProviderChange}, 
      GeoZoomLevel -> 4, 
      MetaInformation -> {
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "TileSources" -> 
        "Wolfram Knowledgebase with data from OpenStreetMap"}}},
  PlotRange->{{-0.42724368983722943`, 
   0.4272436898372296}, {-0.19731608505690126`, 0.24526102459960458`}},
  PlotRangeClipping->False,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.739483702062114*^9, 3.739483749084817*^9, 3.73948378592521*^9, 
   3.7394838223055553`*^9, 3.739483872537073*^9, 3.739483932440518*^9, 
   3.739484152232882*^9, 3.739485214994322*^9, 3.7394931134761057`*^9, 
   3.739493152962872*^9, 3.739493435953285*^9, 3.739493694304549*^9, 
   3.739493854013755*^9, 3.739574363259782*^9, {3.739724526924625*^9, 
   3.739724540906638*^9}, 3.739725014717834*^9, 3.7397250706901417`*^9, 
   3.739725113415202*^9, 3.7397251990907803`*^9, 3.7397257429116592`*^9, 
   3.7397339050176373`*^9, 3.739783946217455*^9, 3.739784604933227*^9, 
   3.739809260822057*^9, 3.739811811306488*^9, {3.739814262094508*^9, 
   3.73981428839732*^9}, 3.739816879867934*^9, 3.73982865617334*^9, 
   3.739829011917755*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"23523178-6db4-44e0-996f-fab508631b64"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"getZoomLevel", "[", "point_", "]"}], " ", ":=", " ", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"SeedRandom", "[", 
      RowBox[{"Hash", "[", "point", "]"}], "]"}], ";", " ", 
     RowBox[{"normalize", "[", 
      RowBox[{"RandomReal", "[", "]"}], "]"}]}], ")"}]}], ";"}]], "Code",
 CellLabel->"In[58]:=",ExpressionUUID->"f179bd6c-bbff-4ff9-94f6-1da12fffed4d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"getGeoRange", ",", " ", "normalize"}], "}"}], ",", " ", 
    "Listable"}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getGeoRange", "[", "zoom_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"zoom", " ", "*", " ", "1200"}], " ", "+", " ", "0.2"}]}], ";"}],
   " ", 
  RowBox[{"(*", "8800", "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "0.2", " ", "because", " ", "the", " ", "server", " ", "was", " ", 
    "giving", " ", "some", " ", "issue", " ", "when", " ", "tried", " ", 
    "with", " ", "0.1"}], "*)"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"normalize", "[", "number_", "]"}], " ", ":=", " ", 
    RowBox[{"Round", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"number", "<", "0.2"}], ",", "number", ",", 
        RowBox[{"number", "^", "25"}]}], "]"}], ",", "0.1"}], "]"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"number", "<", "0.3"}], ",", "number", ",", 
      RowBox[{"number", "^", "17"}]}], "]"}], ";"}], "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.7392916805825777`*^9, {3.739291846322115*^9, 3.739291849888166*^9}, {
   3.739291946658621*^9, 3.7392919733443108`*^9}, 3.73945113933464*^9, {
   3.739493164601488*^9, 3.739493164847549*^9}, {3.739493225238171*^9, 
   3.739493225932385*^9}, {3.7394939518362217`*^9, 3.739493964987117*^9}, {
   3.739494002479945*^9, 3.739494004428215*^9}, {3.739494130977785*^9, 
   3.7394941311806383`*^9}, {3.739494202283257*^9, 3.739494202429636*^9}, {
   3.7396543684062557`*^9, 3.73965437782983*^9}, {3.7397252504099283`*^9, 
   3.7397252625539827`*^9}, {3.73972532381785*^9, 3.739725337682412*^9}, {
   3.7397254464405403`*^9, 3.739725502896632*^9}, {3.739725539225658*^9, 
   3.73972554958965*^9}, {3.7397255902075577`*^9, 3.739725604152975*^9}, {
   3.739726454986574*^9, 3.739726456812359*^9}, {3.7397268196015263`*^9, 
   3.739726821583632*^9}, {3.7397833903194447`*^9, 3.739783400936098*^9}, {
   3.739783719981243*^9, 3.739783723224659*^9}, {3.739809316095455*^9, 
   3.739809331020344*^9}, {3.739809525166072*^9, 3.7398095255001707`*^9}, {
   3.739809560677484*^9, 3.739809560843652*^9}, {3.739809662853681*^9, 
   3.7398096706827908`*^9}, {3.739811512905892*^9, 3.739811524670405*^9}, {
   3.7398116564839153`*^9, 3.739811670872407*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"4397839f-173c-446c-baa3-710888ff32b1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"zoomLevel", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"getZoomLevel", "[", "#", "]"}], "&"}], "/@", 
    "trainingDataOfCities"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"geoRange", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"getGeoRange", "@", 
      RowBox[{"getZoomLevel", "[", "#", "]"}]}], "&"}], "/@", 
    "trainingDataOfCities"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.739291825494463*^9, 3.739291831753286*^9}, 
   3.739450784619001*^9, {3.739451220384659*^9, 3.7394512205798264`*^9}, {
   3.7394648637612886`*^9, 3.739464864940675*^9}, {3.7394667089870033`*^9, 
   3.739466748308125*^9}, {3.739478666392905*^9, 3.739478666515635*^9}, {
   3.7394816418154697`*^9, 3.7394816526357718`*^9}, {3.739483659986652*^9, 
   3.739483660201024*^9}, {3.7394839477754087`*^9, 3.7394839507574787`*^9}, {
   3.739484169137102*^9, 3.739484171545306*^9}, {3.7394842316168547`*^9, 
   3.739484231892894*^9}, {3.739485171666231*^9, 3.739485173149395*^9}, {
   3.739493063806676*^9, 3.739493065105945*^9}, {3.739725383353652*^9, 
   3.739725383986417*^9}, {3.73972649804601*^9, 3.739726498766591*^9}, {
   3.739726809906088*^9, 3.739726811134357*^9}, {3.739733921874542*^9, 
   3.739733922459831*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"bc1a30f6-fb29-427d-8765-418a35a6504f"],

Cell["Check the distribution of points and zoom level:", "CodeText",
 CellChangeTimes->{{3.7392918800593987`*^9, 
  3.7392918889218407`*^9}},ExpressionUUID->"82cff098-1e9b-4ea7-96d4-\
f49811c01086"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Histogram", "@", "zoomLevel"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "@", "geoRange"}], "\[IndentingNewLine]", 
 RowBox[{"Max", "[", "geoRange", "]"}], "\[IndentingNewLine]", 
 RowBox[{"GeoGraphics", "[", "\n", "    ", 
  RowBox[{
   TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
       RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
     "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
    "Entity"], ",", "\n", "    ", 
   RowBox[{
   "GeoServer", " ", "->", " ", 
    "\"\<https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_\
token=pk.eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa\
3dzOHQifQ.msWbRUe-nqmNC-DZyl40Ew\>\""}], ",", "\n", "    ", 
   RowBox[{"GeoRange", " ", "->", " ", 
    RowBox[{"Quantity", "[", 
     RowBox[{
      RowBox[{"Max", "[", "geoRange", "]"}], ",", "\"\<Miles\>\""}], 
     "]"}]}]}], "\n", "]"}], "\n", 
 RowBox[{"minGeoRange", " ", "=", 
  RowBox[{"Min", "[", "geoRange", "]"}]}], "\n", 
 RowBox[{"GeoGraphics", "[", "\n", "    ", 
  RowBox[{
   TemplateBox[{"\"New York City\"",RowBox[{"Entity", "[", 
       RowBox[{"\"City\"", ",", 
         RowBox[{"{", 
           
           RowBox[{"\"NewYork\"", ",", "\"NewYork\"", ",", 
             "\"UnitedStates\""}], "}"}]}], "]"}],
     "\"Entity[\\\"City\\\", {\\\"NewYork\\\", \\\"NewYork\\\", \
\\\"UnitedStates\\\"}]\"","\"city\""},
    "Entity"], ",", "\n", "    ", 
   RowBox[{
   "GeoServer", " ", "->", " ", 
    "\"\<https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_\
token=pk.eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa\
3dzOHQifQ.msWbRUe-nqmNC-DZyl40Ew\>\""}], ",", "\n", "    ", 
   RowBox[{"GeoRange", " ", "->", " ", 
    RowBox[{"Quantity", "[", 
     RowBox[{"minGeoRange", ",", "\"\<Miles\>\""}], "]"}]}]}], "\n", 
  "]"}]}], "Code",
 CellChangeTimes->{{3.7392919018179693`*^9, 3.739291958336545*^9}, {
   3.739292121657709*^9, 3.73929215498311*^9}, 3.739292194662038*^9, {
   3.739292877493685*^9, 3.739292910103529*^9}, {3.73929299388838*^9, 
   3.73929300926264*^9}, {3.7394458357832193`*^9, 3.739445848980576*^9}, {
   3.739445883110355*^9, 3.7394458953936663`*^9}, {3.739445975208274*^9, 
   3.739445975361104*^9}, {3.739478783208529*^9, 3.739478849947756*^9}, {
   3.7394788851110764`*^9, 3.739478894969944*^9}, {3.739479124634819*^9, 
   3.739479126157543*^9}, {3.7394809087699413`*^9, 3.739480948434189*^9}, {
   3.739481065011764*^9, 3.739481078730378*^9}, {3.739493185853815*^9, 
   3.739493206224824*^9}, {3.739493260301606*^9, 3.739493274865795*^9}, {
   3.739493535105111*^9, 3.739493535315115*^9}, {3.739493999316908*^9, 
   3.7394940826088657`*^9}, {3.739494112861425*^9, 3.739494113388529*^9}, {
   3.73949417868449*^9, 3.739494189071076*^9}, {3.739494234067933*^9, 
   3.739494237021731*^9}, {3.739783966426999*^9, 3.739783982053081*^9}, {
   3.739809374162752*^9, 3.739809448577532*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"5fce33a1-1021-4d3d-8485-479547660791"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.609], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.609], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.1, 372.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{26.254403522818258`, 
          56.31987408108306}, {-103.28139986029629`, 91.93456273819314}}],
        StatusArea[#, 372]& ,
        TagBoxNote->"372"],
       StyleBox["372", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[372, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.1, 0}, {0.20000000000000004`, 69.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{55.81987408108306, 85.88534463934786}, {
          55.31789225621526, 91.93456273819314}}],
        StatusArea[#, 69]& ,
        TagBoxNote->"69"],
       StyleBox["69", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[69, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.20000000000000004`, 0}, {0.30000000000000004`, 35.},
            "RoundingRadius" -> 0]},
         ImageSizeCache->{{85.38534463934786, 115.45081519761266`}, {
          73.1145124937116, 91.93456273819314}}],
        StatusArea[#, 35]& ,
        TagBoxNote->"35"],
       StyleBox["35", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[35, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.30000000000000004`, 0}, {0.4, 9.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{114.95081519761266`, 145.01628575587745`}, {
          86.72369267532646, 91.93456273819314}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.4, 0}, {0.5000000000000001, 1.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{144.51628575587745`, 174.58175631414227`}, {
          90.91113273120796, 91.93456273819314}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5000000000000001, 0}, {0.6000000000000001, 3.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{174.08175631414227`, 204.14722687240706`}, {
          89.86427271723758, 91.93456273819314}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.6000000000000001, 0}, {0.7000000000000001, 2.}, 
           "RoundingRadius" -> 0]},
         ImageSizeCache->{{203.64722687240706`, 233.71269743067185`}, {
          90.38770272422276, 91.93456273819314}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          
          RectangleBox[{0.7000000000000001, 0}, {0.8, 2.}, "RoundingRadius" -> 
           0]},
         ImageSizeCache->{{233.21269743067185`, 263.2781679889367}, {
          90.38770272422276, 91.93456273819314}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.8, 0}, {0.9, 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{262.7781679889367, 292.84363854720146`}, {
          89.34084271025239, 91.93456273819314}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.9, 0}, {1., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{292.34363854720146`, 322.40910910546626`}, {
          90.38770272422276, 91.93456273819314}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1., 0}, {1.1, 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{321.90910910546626`, 351.9745796637311}, {
          90.91113273120796, 91.93456273819314}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.022000000000000002`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  ImageSizeRaw->{645, 647},
  PlotRange->{{0., 1.1}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7394788506299334`*^9, 3.739478897272835*^9, {3.739479103388966*^9, 
   3.73947912654987*^9}, 3.7394810803609743`*^9, 3.739481664352916*^9, 
   3.739482632899775*^9, 3.739483703030793*^9, 3.739484007549971*^9, 
   3.739484307653904*^9, 3.739485258875821*^9, 3.739493114157445*^9, {
   3.739493170438328*^9, 3.7394932298081303`*^9}, {3.7394932616160297`*^9, 
   3.7394932754510612`*^9}, {3.739493527232621*^9, 3.739493535842402*^9}, 
   3.7394939231584997`*^9, {3.7394939562163353`*^9, 3.739493968324246*^9}, {
   3.739494007776533*^9, 3.739494083384087*^9}, {3.739494114271069*^9, 
   3.739494134468665*^9}, {3.739494179706252*^9, 3.7394942054512167`*^9}, 
   3.739494246859983*^9, {3.739574387123723*^9, 3.7395743929988213`*^9}, 
   3.739725390629747*^9, 3.7397255062794657`*^9, 3.739725553114792*^9, {
   3.739725593378826*^9, 3.7397256080086937`*^9}, 3.7397257528619223`*^9, 
   3.739726462201045*^9, 3.73972650044153*^9, {3.739726801031835*^9, 
   3.739726825329446*^9}, {3.739733913787291*^9, 3.739733925012705*^9}, {
   3.739783959239139*^9, 3.7397839833857718`*^9}, 3.739784611255776*^9, 
   3.739809343135192*^9, 3.739809429705398*^9, 3.739809461104163*^9, 
   3.739809584382751*^9, 3.739809675802122*^9, {3.739811506562398*^9, 
   3.739811527271861*^9}, 3.739811582445055*^9, 3.739811826299049*^9, {
   3.739814272777957*^9, 3.739814298937096*^9}, 3.739816903732085*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"25ced112-57c1-4e5d-b9e3-8d247553f38e"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.595], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.595], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {100., 372.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{26.254403522818254`, 
          51.77134014904231}, {-103.2813998602963, 91.93456273819312}}],
        StatusArea[#, 372]& ,
        TagBoxNote->"372"],
       StyleBox["372", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[372, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{100., 0}, {200., 69.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{51.27134014904231, 76.78827677526637}, {
          55.317892256215245`, 91.93456273819312}}],
        StatusArea[#, 69]& ,
        TagBoxNote->"69"],
       StyleBox["69", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[69, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{200., 0}, {300., 35.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{76.28827677526637, 101.80521340149042`}, {
          73.11451249371159, 91.93456273819312}}],
        StatusArea[#, 35]& ,
        TagBoxNote->"35"],
       StyleBox["35", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[35, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{300., 0}, {400., 9.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{101.30521340149042`, 126.82215002771447`}, {
          86.72369267532645, 91.93456273819312}}],
        StatusArea[#, 9]& ,
        TagBoxNote->"9"],
       StyleBox["9", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[9, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{400., 0}, {500., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{126.32215002771447`, 151.83908665393855`}, {
          90.91113273120794, 91.93456273819312}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{600., 0}, {700., 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{176.3560232801626, 201.87295990638665`}, {
          89.86427271723757, 91.93456273819312}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{700., 0}, {800., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{201.37295990638665`, 226.8898965326107}, {
          90.38770272422275, 91.93456273819312}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{800., 0}, {900., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{226.3898965326107, 251.90683315883476`}, {
          90.38770272422275, 91.93456273819312}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{900., 0}, {1000., 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{251.40683315883476`, 276.9237697850588}, {
          89.34084271025237, 91.93456273819312}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1000., 0}, {1100., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{276.4237697850588, 301.9407064112829}, {
          90.38770272422275, 91.93456273819312}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{1200., 0}, {1300., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{326.45764303750695`, 351.974579663731}, {
          90.91113273120794, 91.93456273819312}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-26., 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  ImageSizeRaw->{645, 647},
  PlotRange->{{0., 1300.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7394788506299334`*^9, 3.739478897272835*^9, {3.739479103388966*^9, 
   3.73947912654987*^9}, 3.7394810803609743`*^9, 3.739481664352916*^9, 
   3.739482632899775*^9, 3.739483703030793*^9, 3.739484007549971*^9, 
   3.739484307653904*^9, 3.739485258875821*^9, 3.739493114157445*^9, {
   3.739493170438328*^9, 3.7394932298081303`*^9}, {3.7394932616160297`*^9, 
   3.7394932754510612`*^9}, {3.739493527232621*^9, 3.739493535842402*^9}, 
   3.7394939231584997`*^9, {3.7394939562163353`*^9, 3.739493968324246*^9}, {
   3.739494007776533*^9, 3.739494083384087*^9}, {3.739494114271069*^9, 
   3.739494134468665*^9}, {3.739494179706252*^9, 3.7394942054512167`*^9}, 
   3.739494246859983*^9, {3.739574387123723*^9, 3.7395743929988213`*^9}, 
   3.739725390629747*^9, 3.7397255062794657`*^9, 3.739725553114792*^9, {
   3.739725593378826*^9, 3.7397256080086937`*^9}, 3.7397257528619223`*^9, 
   3.739726462201045*^9, 3.73972650044153*^9, {3.739726801031835*^9, 
   3.739726825329446*^9}, {3.739733913787291*^9, 3.739733925012705*^9}, {
   3.739783959239139*^9, 3.7397839833857718`*^9}, 3.739784611255776*^9, 
   3.739809343135192*^9, 3.739809429705398*^9, 3.739809461104163*^9, 
   3.739809584382751*^9, 3.739809675802122*^9, {3.739811506562398*^9, 
   3.739811527271861*^9}, 3.739811582445055*^9, 3.739811826299049*^9, {
   3.739814272777957*^9, 3.739814298937096*^9}, 3.7398169038282433`*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"ecb3dc16-7b00-4859-a541-0ba98e710189"],

Cell[BoxData["1200.2`"], "Output",
 CellChangeTimes->{
  3.7394788506299334`*^9, 3.739478897272835*^9, {3.739479103388966*^9, 
   3.73947912654987*^9}, 3.7394810803609743`*^9, 3.739481664352916*^9, 
   3.739482632899775*^9, 3.739483703030793*^9, 3.739484007549971*^9, 
   3.739484307653904*^9, 3.739485258875821*^9, 3.739493114157445*^9, {
   3.739493170438328*^9, 3.7394932298081303`*^9}, {3.7394932616160297`*^9, 
   3.7394932754510612`*^9}, {3.739493527232621*^9, 3.739493535842402*^9}, 
   3.7394939231584997`*^9, {3.7394939562163353`*^9, 3.739493968324246*^9}, {
   3.739494007776533*^9, 3.739494083384087*^9}, {3.739494114271069*^9, 
   3.739494134468665*^9}, {3.739494179706252*^9, 3.7394942054512167`*^9}, 
   3.739494246859983*^9, {3.739574387123723*^9, 3.7395743929988213`*^9}, 
   3.739725390629747*^9, 3.7397255062794657`*^9, 3.739725553114792*^9, {
   3.739725593378826*^9, 3.7397256080086937`*^9}, 3.7397257528619223`*^9, 
   3.739726462201045*^9, 3.73972650044153*^9, {3.739726801031835*^9, 
   3.739726825329446*^9}, {3.739733913787291*^9, 3.739733925012705*^9}, {
   3.739783959239139*^9, 3.7397839833857718`*^9}, 3.739784611255776*^9, 
   3.739809343135192*^9, 3.739809429705398*^9, 3.739809461104163*^9, 
   3.739809584382751*^9, 3.739809675802122*^9, {3.739811506562398*^9, 
   3.739811527271861*^9}, 3.739811582445055*^9, 3.739811826299049*^9, {
   3.739814272777957*^9, 3.739814298937096*^9}, 3.739816903841209*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"95513da8-4fe4-4fd1-9477-a7538e9e6f16"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       FormBox[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJzcvV3PbNl1nddIqFikmoJIkWKzm6RgkWwy3TptyqK6W2oLsU1SpByRoPVh
gQkMx5IoWR/UZxDHCZALJxAMwREQXiVAbnTjP2DkF+TKufBfOj6z+h11nhrv
mHOtXW+d081crK5de6+99tqr6vT77FFjzvm3f+tPfvV3/7MXXnjhL374yX9+
9Z//y3/w53/+z//Vr/3Ykze/8cd/8fu/98ff/Z1f/uP//ru/990/f/u3/vMn
O/+HJ33/45P2gSfbH/r4Zx/fon3k06+c2qOf/9y51ftXXvuxU/vClz9+fq1j
/93vf/vU/t//7/85t1/8la/ee199/se//Ben82r7f/k3/+up1XuN6U3HulZ9
ag6ai5/HsXQv6qttvfexf+4bPxm30xz4mo7rWI2jsWpdaj3q9Vf+8U+fmtZT
8+HYu2tybdOadPe6uravM9e0O1frwba6hs/Z+/zUoyevb750bvW+2s/91y+f
2qde/7HT/jfe+anY6lj10fZDmo+huXTvdW3tZ/vCT//E41c+/5Fze/3LL5/3
1Ssb+6gfG8/l8TTWW7/w2Ytz0ljepv0+B23/wlc+f2q1zbmnMbkOX/jZD5+a
zlfj2G++/alzq/upVttpjtXUh/00rsbR9r153s3lD3/37cff/t03n87nyX72
8zlVn3r1Pql/13b73aJxjeq6P/Nzn3z8zle+cGq1/eWf/8L5fW1/5RdfPTXu
U6v+3tSv2te//trjr/69Tz7+k+/+wuO//Fffvhjjk5//+OOfePX186vaBz/2
2Zu0F1/6wg98+7FPfuxwf2//9I9+6dTe/sbnH3/9V197/HPvvHJ61Xa1Osam
/dV+9p3PXryv47WvmsZUU9/PPvn/nprOq+Psr2t143BbjefyPG3X9XjvPPez
r794en31rU9c7E+txtE1qr+f42NzTXSvdQ7vUeNUq/E555pbvfJ4tS+++cnH
X3ryt7JetV3t7a89+bf1rS+dt3/kEx8492G/2v7co5+4OFbvq+lcNe6vxu1q
db2//fqPnvvVOT/zzqfP7zm23tfx6scxOQ/t4zm8ph9nuzU3F6O89PnPPf6R
lz9wwaRk5mpiYr2Sl8WFdUwsre2PffqHTq3GqtcVN/M9uZKMNp3jnJWYK+2b
2K/jdK6P1k59ak2KD8XLde/OmuLHOr7i5mfJ0ukeV+t0pHXc7Gu2+xmexnjC
xmLSn/2FT97j4jpex2pbDO2cW/vZyNRHGrnY+ZjHOY/E1fcY2o51PCumIRdz
3w5/k1fTdZyfE3f7sXQt51ZnZ441cfOK7cW7E/c7i3J87icrFyNX+5VvPHr8
F3/1G4+//NYHI1Pz9dq2w89k2lvzshifzxbkXefm4uVi32pk546T03v2+6lP
/fCJo6v9N7/204//yXffvsfNR9j5veba9wszJ16uVlz2D3/xJ88sLFZ2Tibf
iTHJzV1L59e5xX7kbI6TmFLHxcDkSp4nTta53BaDimu17Y0MTCYWq3KctDY+
L/bj/V2MG5j9Ys3urp0YnfzrPCn2/eR/+dELNharcl/i6sTL4ugas94Xk4ub
qzk3k5298ZpibudrXtt5WnMh/+vYLblZGrP42bmZTFMMXCxYfC1uFk/XfvUX
Q9cxMnPSVFftFlzXcfPqXOdkn0d6vqhX3rOYWBq8NGZxsnPlpKM/S2a+loN3
+0vfPqI5j+PcacrUbp1Vxc2TPkxGdi36aNMcxODpmLP0xOCJm9mkVye2JjdT
uyXLnnkUmrBrw4k5O54WW3WMndiYXJ24OWnqzsx+DedKZ/dO59U130/czHmu
9HMde2jzdeHY9doxb+Lmeu36On87N1Onlo79j/7xo8d/9G9/67yP7PzxL75x
bu81w77fmzhZ2+RMasXF0OJoMTU1UvJt0mVdO046q7hZrOj9nKldTyY3u87s
2rSzp3i8Y9NOW+a1Ex9TI5706rpnrTl1Y55PTtY+36Y2LY4Ue4oxi1fFkMW4
iVfVn6xKDbvef+yVv3Vu4mZdo8YtbhbDFjdTo645dNchE5Ob03Hq5zxH19Fc
OP4tuVmvnZ7rv8kXM1eT74LsWZp18SL1aDGk68wTg658EMmPMWmWyU+w4muf
yw7fT/cmj4vWRftWnNyN3fH9LRo9Ls7KaW2v4eYVky+5/Y6bP/f2iyPHrhh4
8nDs+jP8HOrXEyc78yZG7rj5I5/60PkaHVdLZ099qOOSn6kTJ95N3Oz7U/+0
z7nZWZ3cT45zFpXnI83vGm6u9tv/7Gv3+tRrsfLXvvrpUyt/Rr12HJuYueYy
+Uau4Wbqwyd9/cl1V2ysZ4PE2h03S392/nVuZltxc+fdcG52HwD5qDwFxQvk
5veKnd+vzN7pyzomXwZ9F+Ji5+aOA+m38LFcQ47nDpo199Nz0c0h8bWukXRz
Z+A0dno+cAbX/pN+ffcc4Odc+FOgtWseF96LuzHIyd08dY1ON5bOWzxazTVn
sW/xMJmVfcjMarVfY9Wr9otn//5/9Wr0aLj/gu81x6Q3/5N/9kunY8XN7iPp
tPHavjUzVxMP00fs3Fw8LAaqbXGTWLlei6fJzXWuzlux8cqzkbTmFTMWgzkH
dtcWrx3Rwyfmpy9DXpZq8jZrftKZpzXq5uzcegu25polnr7GQzJxs5/rWnxq
5cuYmPmIF5n8e5SVJ9b24+LgYt7k0+gYWSye9Gbf3+nWq9aO0/gbqAWvmG/l
gXau5Dk7jDlxc8fyK+321VdfjKxZOvNR5nWO/thLH9rWoSdNeIebeTyNR3+H
H3euPsLN5asgN6dWbEwePtL+7hsfPzXpdPLkvvJ3PnJq5NfnwbLvNa9fy830
Z9AL4dxcTZot+zkfOzMnXk4eXn2OHTe7XkzWpaad5uCsmrwU9H/4Oa75Jm51
bdn7aT/vw3V4fQbUncX5HMefW5LWTh+DtFvXb92/LP1Yuq334z5p1nWOdF9y
K/uJmeu15pCY2fnY5yp/R41R3ExWdu7uPCa30ps/9OOfPjFz6cT053a8Jr+y
9kl3FivXq/zP2q995Mjiok477vTLxJKpL/0RaTzGw02MOunJu+xc19E96x71
bFFrorlyPbp73W1Jq14xcse5/v4h3MxnhMTN3F/r0cVqql8xc7VbxPRd09xP
3fG1e6aTDj3xcuJaZ1z3aE8atF+vY/ZJI584fZshF/GGE28nZiY7r8buWJnx
il0TOyZW37336VkgHUus3LG15sjXiZt3PM5pPz3NbM63Yq5qvt89Addys3jn
y2++eNGnOPp5sKzr3M7s7xVLT5zMmLo3f/mVM7MVp/GYPrvPvf3hi/3UkcmQ
rltTS+28v+JwZ2YyN2MTPcaP59GPrfuh7pv8Gq7b0q+ctGYy8Cpm8BzDdzcH
+kfqmHMz10x6NK/rurazvNbE/b/iUGdf9z+InZNXwzmbjEt/NLlZ+4qti3vF
79WkSSfWTdxMDpdvWvcjrub5Pt9bMrPaDjtzv/qWflocqPhA8TV9CTxX3Ex2
JaeluMSJWTkXcWnHzB1ra16Jpzs29DWhZkzGIzdXk1+FmqpybGhd2DeNm+7J
5z49d3ANdj3GRzwZR7nZj/nxe75oeDRW3DzpsSsNOh0vXlZbadR1rPrRiy2t
uWu7evAR7Vieje76HU933Mx1Xd3Hisu5ttdwM5lZcYMrHk/n7rZnzc2Jgydu
7jwWrhsfYWZ+x7u2y7fOzYmhxb9HGnVKao5+bXo4HsrG07FXvv6le23i6feC
mx996+sX74uXL5j5jvHIx+I6cbPW3rm59nl+C7Kwa9T0VTg3J4+H8yX7aRzn
UnGzxwryvjhXj7njfmd9Me9Wrg34tjUHjUlfCzVxrl+rfz8Z1/N08N4Umydv
c/I8OOPS95xyWrj3QbzMbV1DcYKK05PuXEyrV8+BQdYVV7sXW+ORyeVDeR7c
XK14WU1MRbZKmqt8GrVd3CxOJq9JUy1NWjGCdbz2iRHFjLqWuHHXLzGxnW+7
rt1x3eRzEPP69cjNzvPu7eb6THOY4jO7NnH+zv4VNx9h7S7f37TGv/b7X4zs
3HGzWLRe62/5xKArxmWM4aQxe5vGFNen/klzTvMWn+76NCadWfp34lbNZ4fV
d7jZPd4ca+eZpfOt8Bzur8/vV77zufN6+3i34mblmZt8FkcY+lpulkdJ3yv/
jnbf11u1a7mZbHSt1rzL22Szs4fjjmev4Waxpbwg8oOQlf/iL3/9XW757S+d
mvPze6Uvu9Zc6yGtWRyYtGjXl/nM4hqp9+XzjD/j0LvAmDbXm6kvkwtd69Z1
nNvpdT7H0d09G/h3kXzq3Jw0aTJx0rA7zzT7ct7pWcK1dc1NzzjkZvU5e7jv
WFZar2u67pGgzivm9Zx2nndDHM2YvDpXTf0UHyivRb2W38I17aRtk5ulVacc
dd04zyIusHjZNediFc9Jt2JRcbT7NJJvQXqr2JmMlDTvXW5O3OZsm7ix8/OS
M8XNvl9aL5nfxydv61q1NjxHc6vX4kdet+PQFTPvcPM1uUZW6zW17jOo5uvB
NUncTD5dcdfEzcV0HI+aLM9LzDx5NBi7J56jz7njSPJgjaFxHsLNWoNOf+84
dfJlJD72deNzQqdrcw39Wn6/9IrrvB1uTmvs7D19lg/Js7J6BuuO8V7o55dH
6QeBm8XOvq/+rl/r1eh0y46bq5VeWkxbrd4njhUHd03cfGKcN148jfX97//m
RRM3a7taMarm8Ty5ua7nGrPnRHbPQOKwxHkpP5r7JtJvA2m/cjbr1cdNGq7v
5/V1H7oXcaZyzXGeydfs30n3F/P6SQu++J40Xg/OIXmc+T3nmpy5+c77kfwk
YnnlzxA3k509Bwb1Y9einT89vwZZVVqwN8+nUcwsbuY4Hqs4eUqSV5vn+ftb
cnPyaShvRtI92Ue+5jpX3mfGC5IZE7eSJcl6ZDKPn0scPWmdmgtZz/0W3TFn
0K7p/E6HVcylNHk9P5AF6S/prrvDpav8ItNakdGvyRHnjJuO81mp42Lyc2Tp
N186s/PESBP3ef6LVLeEzFTXYh9dt4sHdOZ9SG67FcceYWmyYtKfk+6cml+D
zwM7rDmxcvdZdtzMVuzM70Wn6//pn3798a//3hcu1qN7lvFchbfi5VXjbxVp
jMTNr77+wS1ufihXH9WbJwZO793boVf3gpJ7driZnKU+4ipyM3Xy8k1Xu2DN
J9ysY7Wt92riZs2btUSeFzdLj6RuSw+D/67vfOzb0/oefe5hfRNnQ2dm8qVz
s/O7WPxiHcDN1NM7Lnf9Oc2r4/lOJ/dz+FlwPvIv6/ocR7zNuifTfE7jgpmT
75j7yNZiWDG1M7Dnv3CGpQ6t9645Ky+G+ypW3JxyQKe4RfduPCtuXmmXZGbW
BxRDy5uhJo2WsYCTzul8rrzHZLLErSmGzbnZ93XXdKZOnO1auHiQtQB1jHzM
WEDyYp0j30Zi5R29ncy7ykeR9H3WIbmGl8nFzsR8pY9bn2fSl93zrfGltZ3+
dsOvkRht5VlwNu3OTcw08brG81xxiQU7Pls9A+g6KRZwpU2LFdO8yM3+mpgy
cfOKO5PmvuJmnjutl+vbxdHdOP5s5Pfk/f3Z6VbczP36nKZ+3ucaBn6e3Lxi
5XTMPRgcp5igjh/lNucKaZ4nLv7aJfeq1XV4bT8ubk7HdF71URzjs+ZmeUpO
/pEnzwHiZmqZyUeR+I77d9Z0Z/3Fep53wrVm579Ob3bGV0vPEGLNxMzuO1Ef
accnXkWuZV1zx988Ndf03W/NY9S6qWnTi+L3UKz6f/5f//qCQd1bkXi0jpW/
2PVfvZen2P0ZnXfC65Ewp3MaM/mwxes1R9ZTSXGEnIcY/2Z56EI+jWKT2uee
BDKWdGXV0JY/Q9ys/HOsJUhuFqc5+yW2dd4mR/r2ivtcd3at0/m6u+7Es4m3
dazWwTmazwXqkzwfK807raO/Ojcnn8i1TXO9iHf87qfueZZrX6c1+/s6l7GS
9arfqzuecHadNNpJDy3ecoZcxQAyX3Lix8TCYuuOpROjkm+139m5xk0ehKQZ
p7Hde9H5k/1ZZHXPO88DHUfz8yq9eMWwesZy3n0IN/v5Oi/lJKRv/JbcrM+O
z27XcPNqXu8FN+ucxM2swTFp2N11xeP0DCT/ABnQuXkaO7Gz31PN/Vn5nFkv
UB4FcpTmojzJvj9xK+uROBu7HzmN49eVj0AM2LHyxMx+jnwZrr2Sn7u8zTt6
MmujuAas13s1uh/1tVHS9ag787OhJt3xtvzaiberFTcz7o+1/VgHRfosOdVZ
mBwt3Xjlj2AODPZRzKL21yuvl+ITxffiZrJxqrHNuTyLfBqqHThxqDRZ+TNU
T7uauFlatMaRjlqv5NN0Hc91ltg4sWDnSeg0bT/eceOKVZNOXX4Mjq0+4j9p
y/JmVKM2r3NVl9u5euLz7tnjFk11Dqc+/pmKfcnMYunE3f4sQw+82vnvtsUG
kvOKlTpunuLxJrar1+QL0Xv38q4Ykv3FuKt5dGyXvBjyiLDtcGr3XLGK67uG
mRM7p/VJ95/eJ27+s//tH97j5uk+kkY/eU7SfU++nNU6rfhW89/h8WfZniU3
dwzqOrBa8UKn9SZu3p37USanPs18x7xueTeeBTezjkk1/d7vMX38DNIxsRdz
Sni+C+dm9124B1isK82XHt4Vs7ueS+2Y3NzxsPtPklZNDTfxNOMg9VuH67pH
uD9xM73mWlOe73507fN4TD9W+4ozVXuE/otUIzv5MVI9kRRn6Ocnb4W4XHPh
mPRau3da7z0PNTXzlF+a/Z5VHrpivpT7QQxGbmbuOTEVvRw8LsZmDonkr9hh
vR0W7HI5dPFu7puemNmPqeaLs6t4V9ek76D2k5lVg1t1uNVPOr7O0fU8r0fH
1N3zxIp9u/U8wuHSlYuR1cTNHhM65c+4N3bgiNKG1YpLipeO+AAYb+UM3jEa
9T/nvInL0ljT3Dpmcz8Gx6EPw9l50qBdK19p6M6Aq/qIEzd39919Bsmz0bFq
8o+stPOOd5MWT43ffz9IvpKdZ4LEzB4XONX9ea+4ecWtO5zM9/X3P+WxoyZN
TvVxpnmQUZL2usPNmgN5mXP3OVV7HnpzXaPuTzGJzqn0Bfia8Ji0adeTfR/X
jnVMLmp4PPr4vXzEHTezdrTHvnk97pXfmNyZdF5eM43jeeScyxPjT1o2eVxr
yO8Kc+d5fr+zR8PyBfJ5R5+dzpU+KzYlr06N3Mw63dSYXRNOOe/IzDzOWiYa
U/N0JmfdFObUYJ6PKTf1Tbi5ctAFj3PiQudOxbhJVy4W5ntv0qBrfHFzjaW6
eddon1O+h47xeE7iNOfGpHt3PM16MGLmaoz3EyuKp+V11jOHmFnnaY107qTV
p7ld8/zRnZt8Lfc42XzN4mbpyxfcDN15YuS0z3lCGrDzZXEM+WJijKQXOkd1
TDbVMOFx/b6efBFk2I4dEzdTH6WXWnzM99pHdk4c3uXb8GMTNyee79a+837v
cnPyR+xwud/D6tmKzw/eb/K3TN+56fNN3EyvSNfnB5WbO29Dyv88net+jo6F
O746yszUr5Ofg9xPvn9WHmdyM+tnc170+FYf52nq0GkN6ZWm5qx1ZW0O+pgV
m+ecSS72/vQ/uxfiSOMzgubvHnlq5ol3qU07HycmT1zL91o7j8u89wwBRq7j
yiG4im/U8ZPujJzHHq9X+5hLWfVPxMOqa9JpytSi6QXRtcjGzEPn2xUn6Dnz
WMtbcxA3k8U9xjHlpbtVXKC4eZWDQWwo34VY2DmTvl3pzMrdLDavc4sHk/67
qyWv8qQlttZ7saEzWcehO+wsnV7rIt+FeFpcKb/GCx964SJ+svZJt1df1ZMh
P9Lz7PNZ3ctDmz9DpXm5j1ms7NzsvJxyaaQ5+G/XrH8iLhZ/ODN3+ZkTbyVu
TuclbnH+0ljkeX9d+R8mFnRulkcjac1TDZiu1qCzauJm9fM4xS43R8rrPK1h
4srkJd5h6PcTN/O+drh5+v51Xuhdr/MtfRrXas0rHianuieia5NWqrY7X++n
+Tjrr3hedQyfFzsnFvN7Iye7f8N1XdeXnZudhcnAzG+RtGQ1ek/Odf/CmEnr
1f25juzaNLlZ+5yN/Z67OECxsOe64zHmpvN6J/Rfc03P8Yx3TTXlncejTv7o
4xfc7H5iarTMVydWFXMq70Wqka3X6q8+8ke4/kxfM3Ny1HtdW9viaY0rxvb8
ePJsTDnrbsbN0pvvvBpkYObVcGakZ1lNmqi2i/1qDGrOzMGh2Ldr+Y7cPOmi
qSXupH+WbJ24Mfma+awg3zfvW88brPNS3Exfi7jZfRvMT+J6LueZfOJp3XbX
eBUj2DGvczQ52bVmxgcmbk65NJybqSFzO+V3dj904uQd7hGvKDYxxZQl7c/1
YdeIE+dNHJcYk5ya/Bmd5zuxreuhZMwaj/fi65fGSdzszxaJK1ec3PVZcTOZ
PTFz91uDPyv4umitd+bg8+2092u4+XnrzR077jZnYDJpx80TmyaNmp6E4oyj
2vjEx6v7of78vLnZ/Qd8lkg87Px2zpF259lIOZqdVcWzngsuNfEmG7mZ/JyY
3OP2yPDJ+6zjiYE9Z4WvVXevamfOx72JXTve9sa1P+fMgF9G3Oz3TJ+Gb5/4
HGzKfBbiYHG1GJo5K8StzHlBNqYurHPIwOJnacnUmcnSOo9atLiZvg95N+jZ
6PRmtZtw813zPBqqHejMSAas19JYxb/SVOXRreZeDfmd1a/zQUy8nLh54ujE
jO4J8LizlItuap5zrxprJPK5QWOyJrnYW2ysZw8x82ufeeHCG5381t290m9+
5NmEa+Q6c2LcVjs2NnaG7s7xY7q+ey0670WqJ6im/L7kZ/emTuws7zR15BUj
Je3Q9eAdfXSHqejD5X11nEiWTbzr96j7dq90p1d3WvNKZ550346bd9al+0zV
vvEbr5y9P9UmHw7XLX0PjmrhOlbj+Xf7ofrws2ZnxUod5eWJm6dYv11uXnk/
OnYWV0uP5r2xv3wYPJaYX8ws1nleNbfFzmQ3Ml9iSm/k5t3P+EIXvtOKnZXJ
mlMjHzOfHD3Q9DSQjcX4fr/uI3E/h9ar07HlHXb922utOIv780vyXfC5hOyr
+3HGpj6u68ZYQfAyc8GRX1ONQHqYydLk5pR3mf1ZI9B9zdwmy9MX7XGFmm9p
2x4nyBjCm3KzeTTIzZ2GK25WPRSxMc9XzjnXm9Xo6aim3M5HfBfiTL5OOiv1
05T/IumrGnvFzXWcfgvGPzJm0vVp5nmWn1m6s7hZr+JmZ9npeSP5U3Y5eYzJ
Q3/Pw7zSnsnR9G5cHP/mS+dt8fWFJ8R4Wa8dI7uPQ7GDiaGrBkZiv4lfE1N1
nEVWct8xNcrOr+EsOzF0Yk9eR32UZ8K5WXMkx604O3k0Jl075RyZfCS8t11W
3u1fDFh57f7kj9445d+Y4htTzkB+JtyXPOmpnz4fnxPZ2bVlsrNvPy+u9twU
13Bzx6QTF/v5nca8w8yJQzQncXO6R56brkN2Vh9eZ5ebPbec79sdI2mdzm9J
cyY76/nGdd3Ey+qTODlptKxLkubr3g4fN82FLCl+9Vwcac7uX045lOm/cK+H
z5lzTdxMfzP15pPO/OhpjmZel/GCaX2S75nc7AzKuDv6OYpzmZ+C3ora/pFP
fOCsJU/1StSH3Cw/szTs0qvF9ImtyffyjHR578TN1KFv7W+mzlzNmZK1AMVr
zDXHY7U/cTM1ZvLhjl7sDJj4bIeb6dPw/Z22uuJm3Y/WgVqyxvQ8IsoxJ62b
2rQaNeZiZzWNo/NTnm1vHV93rMs1STVUJlb2MTo9OXFzzL0hP3TgYHqXtZ/9
SjuUfpi42b3RZD75MJybnOs8FrHTqd2XMOW6cO/GUe/uiqXV6v4Tq3q/FFeY
dNdJb+YzQPdsMmnVHYuu7jl5rOu9M+n7mZsT+5Nf03fueejS1Io9Rm7Fyh0L
F9PQM5w4N3Hviq2pCye/Mc8hE6axuvvhenTadLXKRVc1SY4wc8fQu0182rGr
a5qdt4F83OnM7mVecXvSn/0Y63GnuZOdOx9F7XMNOfkn0rmuP7u+y/hFjn3B
+XdauDNtisOk5qw+nQ7uzxCs1XJvre7YuONS8TJ90PJOMN5POrLY2msNMm8z
80HTy6z8d/RzaH70dXhtli539ORxflbcLHZ2TVZMIy5lzjT1l95KRnZu1rnk
Qtb9mDwWia0Tpx3JlyZ+rfPlr/Djq0Y/tOez1nOC6sNQV5a2nNaEzWMHycDS
fH2tmA9jpRurz6r/xMN83+nP7EM2Fjef7+ebL907LoYuPTjxru8TL9frP/qd
T52aM3Xi58Rd1GOdgcnBzk2Jc1b5PDwPBpmP/FW8MnkOjrBzl8euY2a9T3y8
8miLCztuTrp3Ou7PEQ/hZn5faru+Y8XP/KySr4Q+nu7Zhr8PpOcg1/V1veTZ
uZabvXH/LZj6qLY8sTOP7XLzxMudLt1dW68e99bp2H4/5JyOm6sVM4ubj2jO
np/5KDfLr1HsVNfuuHnyangcWtKYnSUTM4v7VM/wXp65R/fza2i742IxMX3A
ZN7zc5nxJD/vdI/e0r1wztR86e0my7q+TI7md+cc0/eN+/nvdp9DXCMXa9If
QX3XOZTabqqtTeYVz7pXg/7pYuxq9GTo2qxlovMY99fljZ405wtuRh65W+vN
9FKIB8V6iQsZ8ycvc/JoqI+znjNo8omkRgb1fomlEw/Kb+JcmPJo+L50jJq7
4vqky4ub/X7lZVZsoNZIa8l8znrG0Bge07jrFZ806Uk/Jq/vaMtJa05M3GnS
9HUU04idnZepL+tVzEy9OZ0jL2unWYthxNtkrsRonTe6+iuWy/lK5yf92Zkv
aeBHuDkxbcfV1JentnMN8aDu+cuPfvyiX4qtdJ33iKfcx0ncXIxc+nJ9rvXd
0toy5k5+9uSP6WL5Vvk06jzmP2EeFJ3PevL0XyQ2no45N3d9pvOeBTcnJk0t
+Ye7lng18a73JzOTB10DTBy8cw9+zzXWQ7n5KDPrta4rbna+6nzNKWYteRIY
B8hYwMjG8EqQr1XXRGxNH3LSvJ2bnc11TOzc1TZxnwr3TbW0fRz5J3w96J/w
dXUd2tc75eWgtu737M8FPn/moHNWJaMyfwbzKzubUj/2Gil6L08GmZl5M+QP
Yc6NqQ6Le5lXWvMtudm15mqp7gn5VCwt9lPuNWqn0psZD0iPR+2Txus6avLm
0puh/fQ4c1/SYSduVt3ryeeRcopM/TwmUteRduy8X6+KJdSaac7KU6LGfHa+
Jtdwc8rJwWOJm5PmvOJn92cwR510aI7HYyd+vvMgu+7sMX/yZpCbGe/VadTk
iZSPw7VJNfGc16Tzc5PeTI2VbOjcOHHqtdy88mYcidubttOck286xR523Lzb
+HnoNwY9I3XPPtVYT3t6vpiuq/tw/wXH4H1OzwET9+4y83vFzbs82bWp3vbU
khadGFrjJz9C8mpM11zdw5fffPHx97//myeOKYY9ys3X9uN1nGudEXcbOYxs
mPJnsNY1G5k51UZJPNjpvp3Xos6r9ff4QPbjfn1eta2a7B03J+/2WXe+Y3/O
V0zd5V/WHMXHfHZ0bVvecY2pZwJ/dkjc7P4M52h6MZK+zLwXfC/O9XopZGnm
v2NNkxTXJ58HdWyNkfpOOeiq/Rc/eqOagSE2sGMpcZu4We/FefQbsFXONY+P
KxaiV6NjZWd29iE3Txqp59Lw/YkNfS4Tj8qfofurfeLfuveutqJiIuXXUD0Z
adPVl88AtS1uTmuzihVcNV/jXb/G1GfSkRNHn/t986ULHVqMcy03OydXPzGT
fKQpVwebeKvG4zk61uWIZr+JtZIfITFtYsfOH7Fi6I7/yLI+HvNAp7E4v5Vf
2a9F3iRXp/G6++pydYj19JvBdN/vJ272/Bzpt4qJsdP76XsxeTueBzcnr3Dn
ubimddxMLdg5OnEzmabTxP3exM3FLq98/Us3zamxyuHmfo2kAU/aM9lOfgnX
lFOrY2c/huVgJjdzrNWcEv9OLOx581Jf+iT4nUjcTH71HNQXOZON88n7HTtT
X/Z7pZad8le757nLs8dcGmJcasCsCaj35OauNqBqpMhbwbqDrO/n9QYn9pXm
7fk+jnCz2q25udNN2ZR3zn289BMkbhYrMiex9ktPJXN2HJe4mfpy8tYmbnYm
5z12mvS0LvJHO/+Lm7VmvG+Op3nTw8zcdn4/zG/MZwz5s6/l5hUjd1rzzj5t
J2Z2P4Zr0/W++JfcTBamfixW1m/v8jAnjZnc7Hxb79UvcYO8HfwdXddIfDFx
s2vN7n3d0YGdt1YcvdKvyXrOofQ374zXadoTzyc+lo9hZ4zJ76vvRHe+8yuf
H9I6e1/Nn371xPXJD87xurx2K25Wv0ln9u/0xNHPg5s7f7J4pxvDObjTmL2f
M1M3146bu+0Vl5Obqx3RnHfZOXE02ZncLI3Y6/7ttMTNzs9dzcDEzSv9eJeb
Ex+vOFvjijV9jNMxaOBcs3t1xB89rW3irEweJjv7vaW15tisgcI8HZqj5/nw
9avzxKLkZI8PZC461QzUMeaW0zisgU2+dj9yV0c76cisZeiMvOJmv8aJmxde
jfJcrPwZ6uf5mpN+KVYWB4qHnQlTk0c61eAmB664T/rs977z2uNvvPORU3Nu
TszXxQu6niz/cbp2l09D1/LcdrpnMbSvkfwb1UfavfzLXA89I4il5SthXOFO
To1bsXTUke/WX/NIzzJJa3Y+7mpyM75P22r0T7i+zNi/lHvDednZOXkr3AvN
9+k6nZ6d8r51+mSn2ZJfJz3auXlqSTNO8YOJVRPvTl6Q7j4Tk+7EXu7eH3mx
iwmd1qPLbcI1SLGTHYvXe/e2s+ajn8P1Sdy7w81aB32nb8XNzh1sXb6NyfOQ
vMvpHDL2zjHyVMfm9Gm4hyNda+eeay7FzvRr3IqbJ14mV7serDVIXpWOpT3/
Getnk8fdv9Ax7i7bTl5j/x66nuxatGvCytfhXhDPoZFyWbhXPDF7WkPmayY3
k6d9zil3R+eD7uqZi1XLb0yWpQZNrZixgdrvOrXGYF3sxMjMh+HHXX/uckO7
Ju25mju9udOcxcv1Sv/yxMzVkh/BuVmxgWRA5ouY9GaN6bnp5NUQa3ncnDOu
55zodE73MnTaqd9n1xIzu17N/eJhPnM4N2uOxZvi5hTvx9wa7scmrzq7J838
llq0P590+TToZdbrn/3Bl2IdwdpXY/EYPRf0YJCnO99Gd6zjZefmzq9x5Fqd
Xjnx44q/eGwnp3NqSfN0/4Dr3N01phx0fsx1WGqwZEbnxBV3H3lW8N8Ous+I
c03MrP4pv0iny+te3JvizJxydnR9Jtbd4eaV//kIN0/svKM5J+02eTW681YM
7uy84mbxL73QSet2bTr5BshlpTfu5KO7hW+j06OTxuoteQmcD5k/2NnyfPxO
I03XcFZlbCAZV+envBl8bpu4mX21X8zMvs7q2vZnAteXycV+X75+Kd7Szz3P
0Xzf1L7d36HngKT3a7/i8VKMnefPUKu8ccpz4X5lr4NN/tb5ytHs+Zg7Ltb1
/FjXX9egx8O5edKdycOM/eN2nat+8jl3+dbkzxAPUj/2XBtsNbY8DM6NxUes
85FqK5NDO24mG6d4uc7zkXwZSZNO/Mz3jJMkM8t74c8W2i/e1avOcf1Y98Pn
C8YJav1STGTn3X5W7Ox+5pRXjtx85uO7z1PjkJvlzRA7Oze7h3mXaRXP57xc
TEBm0XbHzfz937lcerM4yfnkKDd7nxRH6D7hzjfb5Y5LrOo6p/dNOUDIjp2G
PXFzpz2z6TPrNODUKo/G+52bVx6N6VkoxVWShTs+nvg7HTvKxrvN89DRfzHV
3z7qdU6aZ2J5sWM3TqqZ4poteY189sa3P/3M2HlHiyZXJW3Z751+AB3zZwK/
T8YCOnee+0D35nlkYa4bObfzI9R7fTfI3Mm7QZ+K+ylck6Y3gszsOTB8LuR/
9U9jOWfznDRvMvG9ZxU8y5x9NU/WtbaLSeVZTjruTm43Z156j10vZn/mkE4x
fN34zsKJp1Xz28e5x81qDTer8X2xifO0xwZSPxU3u55a/Nt5npULQtwsnVqv
YmnmhKY27czsOTPqtbwa5NukQyduZmwhNVm/nns83NvM5wmOTd+3mFdrQD7W
fWvu1JWZ99l1XT5r1D7mee5052s06ImLu3hM52b3M59ev/nSiZ1ZI9Cv41pz
vTI2kHnnujxyndas+DB6NshinjNDfXUtrzWoWEO/jhic3Mz3/B2+03fdg7Hi
6U6PdQ4Tn3Wa5eSxdT2Tc+KaJe7uYvemZwn3VUz5sFeN3KyWeJQe4sS63dr4
Z5EYOj1z8PeDa7l5pcMfzUmy4mbnn1u1jlk77fjI8V3PNdl3h8NdM9y5z8rl
/Cz8GivfM9+7Lp78BGRm5kHr8lQ445Hh6I84c3XgZvdek5M5Vp2fPL3iZjJ4
8nS4Xu2/EZCfyfgXeZG/cZn/2fnZPRyMC+S6q4/mS82b3M8xkyeDvmv6sLVe
9bkz9k/bE7N23JzqcsurMeXBkN698ljwvevj7v2YxiI3XzC0cbOzn7OJ8qM5
Y3carPhZ/ZR7WDoq6wrKh5BqoKQ8z9RUWQvF4/q88d7Iw/TYUquWhznFB6Zx
qbk7b2o91MefKzQuc4/ofOXh4/jyaEhPJjuLldVHa0TW7lj/IdzsmvWKm8n5
p88g1M7+d3/16+dnhdbzcRcj6Nqy2Hk3N7O4lnk46jxxs7eVd6PjdJ6fGFE8
JA7p/BArdiajJr/xiptXWuzEzdRWkw9Ac/IajD6/jt/c38zx9f5v/vpbbV6/
3Vaf16uvf/BezcBVTF5aH34eye+cYhmp4/sYHTf759x9jtf6vq9tt+Rmz53B
2Lrk07hF6+ZCnrl2vJ11ITc/K3ae8j8zts+52T221JrJd9Riky7queU8xzD1
XmdZsqB7HKZcF9RpJzYnr6bPx8fl+nQ6d8qPISbXfMjWfr1UfyXdH30XHqvo
8Yrui1Zb5aagT6LTnJW/WZ5lz7HBHBjSoMXpPEbmnbRn6eTcX+OVV7vj8F1u
prfZeYqt2Mz7JlakX4PcLN24uJuac+WSqH1dzKC8C8y3UZwkj0LKt5ZY2Y+R
l/m7f+Izzxmta7pP2uMHU65p+jXEx+RprU29+jzS9cXNGo/6OFma+eycoZP3
+pbejKQzn+ZldUs630aqeUKtuV7FyHzVNjla3mf3bHC/NGL1SToamSwxCM+f
cjNPHJrynDkPT9xMndo5yjXoI5y8atLK+ZzgnOhrknTllGeCY7mmnbh5NxdE
+nyZQ8WPT9yamHrSzXWcTMvPhrp70qmpb6fzuzX0ZxJ//5DvhD+TJf1OTZqZ
2HeXmzv9OGnCkx96R4P2HGXqx1itHV5mLjqPC1uxtHLSPQtunnzOyq0h3nWG
4xpw2zVl5+bEneRm7k9+A51LBoye6rsxnZ01ftKOuY/z53fWdV3nao+14/q5
Hzn5jnXN0px9vejhoHbseZnPXPzkGuXzIQv7e19HjkduTrxJ3u2YVu/pceZ4
zs2JeRV/OHFzx/ese9jdx8jNwasx+XvVyM1q1GQTJ9LDq3xrjAOsfcrz3HFz
zY8eaDGgGLJjvuRBTixKvZl5O6j1uvaavNHiVdeItZ/zlFbszx5iSj13MO+d
cpTo/rW20mSlx/tnmfRork+3ftcy9IqbPe8yeTl5nafxXG+u3HKJmenV8LhB
5nMWN6s2nNfaJleRn50TxMurGLWJTZybPQ9D8mHQizzpoSuOey+b+6mTh4Ov
7qNwb/k13OzjpuPvFTcnL4fPI/m/eS36pPmbxrNq/js6t8nNHfM6Ezs7d+eI
63a4eYd3E/9243p+Ds6F7JNYn7/3q735y6/cPJ9z8jO7T6Ne65rUZ5MW6/6T
Tvd1XzRZ02Pakt6cWFrjiv/S9Tk/sSz9DeRs/45SE3dWpyZMH8fpfh49rT2S
uJkxl5N2XuzM9aafotPSL3wYdzr6iptda9b40oaZM6Pe/8gnPhB5t4sZJB97
jeykOXMMMe+K2f3azs70N/OY7mvXp5F8y8lrkOIGtd+9shpLejF9y+TmLvec
PBr0BbtPhPnMuus7N7tfmYwpRqV3moye2JB55tLa+XMFm+Im5YNRDoy6d8b8
kTnpu6A/W5q8cvbp+tTT5ZfRuMzv5/zcac9+nx03T/yc8mmQly9iAeHf8PUQ
Z5ODi5tdY3bvBZv4OtVCYf8pzwbz/Mp/IOadmJlt1cd9Dqt4wMRT8n3szsnH
8fkeYU+/jykezq+3O18xM/X6Lle2zqGH/Sg3p3Wm9kuWX3326Tsw+dePcnPn
d1nd1y2erX7q0ZyLofOnkoPr7/6OVsz+ST++lpl3zlO9ucTWaS5iIm6L7dJa
nHTH33623NxxNPczNo7c7NvOiXVeykMsXhbb6dzEkR0jurfBuZtrmvwTKYaR
fN1xOv0SvE8+s/lxjiFulo/ZdW/6OXxN3AfuayUt2nl5apq/+52riW/1Wsws
bi5PRNKKUz1B52bvzxx2OzGH1J099tDZmDGGrjnLa72rN4ufnX8811viZvd3
+DnyC2ibMX/0cpCdpSvX8RqfOe3kbWAcofskknbu3m3XnsXAZ+/GE15LTDg9
W6S105iJm1mzhPXEq3ndk2ryuoiHpSEzB4fPkfk05J2mN5rPCM7L13LzSnPu
dGNpx8XN1eh79vwfp3tA/jnPn+Gas/uNnZs9Xx3z2blW7R6MjsnFbNdyM/eR
vzz/xBRT5rpn55F+KBsdZejV/bL5c0GnjabnmV1uVg0c5lapuEBt72rLZGeP
JZz42X0sHMvXx58v/LNN13sIN3dxjOlz6vzWExffgpu9Tdy8y9Kpr2vPPJ58
19SZyd/kZb2S+aSpJ24uzfl5MTP31yvZSnNmbJvHr5EfuQ6upVNrdkam18G5
OflGXCN274Sfw+vwXI+T4z72Tfq6czN19Y7/qXuf1+TR03rc0o01Zso7wjlf
6M1N8zyDyQOtvtRrxbjKF0dupq/Y88OpT+Jm1tnm+46b6VFO8X+MA+S21+5m
3098/ouHfBrMzbxiJOZzrpZ0Snp26b312h7yGrgWLabu6oB4bmPpqStuTnVP
XM/tmDmxc/KokJGlVzOmz5u4WWPIs0K2Zw1B8rh7LrQmZGOtv8alX4P1C5+X
x5nfq+Je9Rc3n3NrlJ+jyaOR6p2sfM2ME+xyPLu3Q1q154UmP7uXQ9o1mY0c
kWoCug/BPc3kL9cdnZ81jucp6/jH5+K+jltxNdk/XTexnXsdpCNrLPpn6n3H
zd1nUbxcTZ+b3uszrdbVDKFnQvcj3wM1Z+dZasF+364r83P22EH/nDouT15m
/1ym46vzu+8O2y43T/3EkSt/BPm283Ps6M/pWr5/Op96s3OzjoubnfXS/ZOb
b+F1FjM9+tbXT63zbTg/e90PtfKRuFfD78Hj4Dq27TzN7m1OzxupnXXsOy8x
fTBnjsSzlo+V9O/E6NR9fSz9HpG8FTW+59TgvZ694eDmzpfh4ydGdnbu4gbd
18GYO+dava9jYmfXgSe9Ob1PuaHTmKkPaxsqFwibtOePvvLqk/byubXMHLiZ
tbTpG6AWKU1W7Qg/ixtVx6TqccuDIW3Za31MtQWlodK3IR6kT4F8y9p65Dtn
79c+88IWN/Ma3T1356XG/Mwed1j3TP6lNk69Xs8Z9GtLn5e+7D5nzo9a80P4
eSc20Pt7nKDY2Y95/ZOUgy4xcOrXMXTSr52bkw6d8kAnDY9N5zjvqa/rlvRN
OzcnPdL1wBXrXMvJO/XkJo9upz/zvjtu1hoWW7KGDK/t86P+XKwsfZme6OQz
cf5/XtycnnNSPusuZ0f3XFJz1PNmNffzTLnxOO/pGWvi4sTNk/bc8e2k+SYP
8a4H4whrOzdP4/tcOuajHitmJjdfy8/iKPHayp+RagdSPy5udp3VNWfnZq2P
59FwPwLZNX033Ivh3y2uoWvD9AAnhvecx931qRWrT71Xbuhq8k/4vL0WIHle
28wFyJzOyQ/dMXPtc3Z2bu60aXGzYvukJetV+rO4mQyr94lxO8/yxM0p9xyZ
3fXlxM2lLVd7l5dfPbeRm8HOqgtIz0UxU7Et/bv0Q+i4c7Prr+RKbRcji5tT
DUFxc9Kbyc3iy7/7zq9csCDn7dq5a9HUdKlHO9clfwb7rJh59Uwhbnb9mGtG
fV5rzc8krY2eFfQqvZnrrLjC5MPmGt2KoZ2bExcnD8dFu4stdK6d8tG51ixO
IA+Lm9iX/dz3rNhB5mtmSznoyEde09t523PcuW868fLEzak+90o/THGFu1pj
2rfKUzxxM/Vj90fUOeLfxOzJZ61GX4ZzcxqH3Oy+YvdsJD3f1yX1T37nh3Bz
yk9CL3iXo9qv23lsJs27Y+OpJaZ21lStCmnRzs1d3e1bcDPHWGnOmqt8vCtu
7vTTqrtd2nDHzkf4mSxc8/T9k/5MbwF9vSk20PV1Z2f1p+5LD4LHCup7oH5p
3dL3iewbfbzwODs3d59H58HW947smnwcaSwd77j5xLl39548H87MztzkZG13
WjSfGcjN5Y9QnT/6MvSemrPH7rnuvOtdlk9E71M9FOa5c61Zr7ruu8z86r22
5GZjZ7GYOC8xpuumHTenOD2yK3NoKF7N/Rud1qy+1YqZq8kPUlox87R1vJd8
zt/7zmsnX22NQR6deLDTnOm7YG6NVX9fY9b407rwPO2TDq01JDuz7gnZmtzM
fHbyXbv35Fpu3tGhEzdPGnPi5lTvhL4N7euYWrxMvVljuC7t3Cx2Jkcnz4D8
tGTG5JFOtQldv+542bmZ29Q5nXt2+Fn65MTNZDCvPc6cbukeOd6Pf/aLZx7j
+iQ9udp/+Pd/dq6lwuPJo5G4WVqrvBmsobKqfeJjOc/r+cafn5I3mp/Hipv5
/ETuTh6YiZuvzTlCD9DUr2OZTm/utOhJj006LrU+MvSuvzntm+oU7rL3tF+c
pGcC3k9d61R3G7pzx88rhnZulmdDeecmzzO5mfOTV8NjHrVGHuPG8zufgTMg
tWP/bpz741j3HaPOTL2V/eWNWPlAxP4pbk/fGc+37OP5eiTvhHMzedifLehv
SUxcx5VTw39PICv7uNScGXcn74a0aOdm5spwLXniZbKxez885k/sXDmai5NZ
q4VzSLw8cXOnOdPj3OnE3pjjgnyVfLzOseJmcRt9BtWK4xM/S3clN1ff4sLi
XXp7lZdtxXHyeFRNQfk0Oq8GGZLPATpO/p20ZWfnaa2Vs1rcy3Pd1+LPHvSu
aLv61Hg6z/0t4uakt5Olb8HLHTezfuB0rPMkp7g/8XTHyq5JJ7ZOeTZ8W33I
zK5LJ370a1BfpkeX3DhxMznPvQBHuZmc1DFWl59ac079ydTiO85V53leOc/R
t+Jm79vFCvI3Aj6rODevWNH7OB/zGSONw8/RteSOua/h3tVn6tdy3ZnH/fcB
zem0bg03X6NBT9zsDOvcnHTelb85MS6Prbi54/WRm+90VJ9vx83Oz6f3T5jn
CDt33Jz6Jf8yPc6Jm8+eDHCZeyLIq2fuu+NDxiTqeomDz1r0o8t41AtWvuNl
17N9PPc+dN89+jF8HD6/UWNP9891pY7P5wz6SyZmJjcnduZadHpzWpPknSAL
i6GdnT32L9UedN+FezzScfdkFDOLm+XF6LTlH/7YZy+2q+0y85RTI/Gc66I6
L3GhPLtkauXHKN4VM4v7dNzro5AFmduOeqo4WdvSVcWFEwNXK24WM3cMy3O6
Pkk3XunNPh7ny3ufmJXPE6wT47VOtE7Ms6Ft+k8mr8kRbj6ST2PFzd7XtWb3
IiePBTVojxd0bhZXK17MWVksnHwdZD3PI+3M6P1cp6bvg7VZlAPP6wJK26TO
vcPI1H9TrZbkG15xWcfN5Frq0e7x5n6xa8fNnYeX7Md7dXbW94Pr5vy845++
FTe7B2Pq131O3bZ7TI5yM5uu755ocT9j9pXL7Fnw8y77pvPIpjss3V13xePJ
78EmrVm8JcbS8aodKE6uOEG1N7796dO+L37tE2duru06d5efFSPoNQOT5pzi
/pybxc70O0svXWm4zAPXxa7pWKcl7+5PMX87GjO5mfMm03Mf14Hj87mCsY70
Y/BZw7mZXJ98I2n9pvhA52bnZ+bNoK+49OeUV8OZt8vFnLwZNY7Xxu6YWf6L
v/MLXzm1jpc7hu64eaoZuMtC5KfiGHo1vJZgOl+eCjKmvAbKO8dGblT+OjKi
2FisKCb0ODjWSEn8WR4N5XDg3I96e7t7754ppnOkB+/Mo8uPLa+H2LmOlSdF
PhltS2emr2TnOeoIM4uJV9zsDC2Odp5O3Ey/hvuXk/eZvo4UJ1jHVU9lGsvP
Ya4Nz8NBzwGZWH3c10wmd272OET3fIitOyYid4l3Uu3wjol3uNnHSO+rMb9F
x82KDyR3U4t1FnT9WdcoP3Otp8cXPoSbfT1SXKZ7MryPxwQ+lJvZj43xmdX4
PUyf45QLmtzM2Ec1/b7M3/gVa3SEb+79xm6/3Xds6rnjku+5Y/Buu9OOd3Ts
7hruJ/F5fvnNd/MpkJer6Zi01s+9/eETM1er/ju+5924QM9dtmJnz2G84k/y
n3Rh+p/Fycnr7NqyttO+9CzmHL3iZc1rZ2yuBcfm2rAvGbnLJe3Nudn/vdS/
t8TMU5NXg2vjeTQ6RvbW5XlO3FwMrlxz7mNOeTiKfakvTzrzxM4jN5u3ucuH
MXFTxd85e8onvcrHoOPiWuWKSNzMnBlkZddXxYrVTx5l+S+UW47zYk66avRD
0FfSxQgm7/e0Zq4tJ/05rQ81eV6z1qZeFdfHmuSpSYdXH75n67Tmo5zs78nB
zDtHnqamTF6ePBrOy+Rh52DytOvOne/ZGTxxeopPdO9zqp8iTiE3e1yg1zAU
26X7kjfXnwMSE9E7XOeSmzknj1fsYs/IkPrtnyypfa63d9ys65Lt5MNw7p7i
DGs8Hltxszzoun/Xo30f78/ZNfkanF27PBSM+XO9N+UgpC48xfY5N2u8Wg+u
SYoDdF053V/i5sRc4o30d77TFlc8XWPteJQ7LnWO7jRqHzPV4WYOPPHRSqP2
+fh7+TT0qm1yc9Kvqx/zMHfcvMPTbFp3z9uc2qT3Ozff8zZDn3Z/hjOm7jlx
bOJarlMaK60n4/wm3Tr9PkJuZk48elM41g4vT16NpM8nrXmKC+S/1domN3tt
kVXbiQWsVuMqzi/5NOq149/My8o1N7PzLjczLrAatzsttN47N3Obv+cnHlRM
XY2h/BeqeaK62u7PmPLSpaZYupPW+oSb6Vmu6zk3870YdeJm6dfk2S7XXJen
ovNpaD9rCnocojiZc2D9kymuUn3E3Hpu6Lj5Wn2505WVp9m5mUzd6c5i58Sr
zrRdPRTXmScNumNtH4es6v3FzORi6saJqb2fGj3WvMZbb33wzM2dJu5MSG52
TZsMKa599fUPttzcvXdPhWvZeq5QTgtxqBjZmVb8nWLvJm7Wca2X2Nu1a82X
3Mx70nmem8Q9vZ3m3Xk2Euey5h+9zmp+7dQ8ZjBpxBM3d22Vv4X9OnbuGDlp
zt7/XGNOPtVG/zzql1j5KNLYiZu9pT5+Xdeb0xj/9k/fuld3eaeVLj1x8xEt
Wk2/F/i9JW7u1shr6TlTnljVPmuez/f3vj8hdjCxrK5BzZb8qvM6pl5xM+/J
PczkZjG1vs+Jnf0cX7sVN9dnpqb3K2Z2TzpzOavO3hF2nrzN3pybj+jH17SJ
mzuvhlrSRVdaqrNl+s3fx5I/wPXl4rriaeqjHve201RX2v3N6V5Yu1oMyDhD
smG677SdfCGdXu1zEhczdpF1tl2Hpmas5wzp1b4min/kfXH8lL+b769hZjLy
1H/ybKR6J86yaZ+YNfGvuLE7nrg5tZTjzn/3d88zebDjZten5ePgs4K4mfzt
enjyhZDFU2ykNGxyM2MdE0+Rl8mhzlTSkj1XiNfzS+MnbmZfv/5u3gefvzMo
dWfXm7tYw11u7nJnsLnXI/mOV3GGq/tn/uZdbuZ9JV39NK79Pb/HweDhxB0X
54CjEhsdYWfXhTuuTbmhVzzd8Xh6P/kzTiz3xosnZlY7wsziHeabeygzq3XX
TH4NZ73ueUJzvvic8azkzKxXnXP+XoXv0vQ9ITfzGtSx3RNBbk7Peerntbjl
L3IWpqaeNF/Xu3c0Z74XJ/uzj14nvwa3PX9y2k4+jV1udg9zacWM47tV07yk
RS+5OcQGOkPveC4m9hN/dbGFxXTyGzBmsMvrfISblWuNXEieJwOzj+u/ijUk
V/Ne3T8xPWtQG+60enKz1kPnuq9FujHHlf9CuTPE2NThecznrX3dbw7d/SX+
TdtJV3Yt2fM4d9zc6aqM+SM3e3ydPAHOvn/yR29EhiZTur4szbTTrt1D62N4
PJzY0pnaudm909KbnYndH6Em3ZEMz/viebyvzvfsOvOK0SaPdLqG6ttxfHo+
pLHqnqSfrubyrLi5Y3bpxVN+uYdwc+fN6Pw117TEzZ1W3elf92KV7lgn+jdM
W554iOzTxQiSm8nPzL/h75NO7DmZO25OMYeJyVMrH4aYufI4e//Op0Fulsb5
PLg5NfKy+HfyPDNH8c5zAX0dU365NJ6zcPIO+28a/kyXvpdprNrf6cT0fjA2
L/2bcQ90lwvP31c/5+UdbmafIx6NVKNklYNOrMym2D22fa/Gy/d42TXtaitu
ds3Z/c6JgyfNtosH1HvPY0x+ZGN+NPEvc9BN2jI1V+Yo9pxx8j6TjblP/Olc
7L4Nn7v2uTZ7RL8nw0sz9nMZC6k6KOpTOr3iIlWXnH5w+V6YY4O1BzWO7pVj
8x7J+p1u3Pmbxc30NJOZ6d04P7s0tbUnH4YzL2PoxM1Jb/WxyOFicI8jJH+T
j8WYydfsGrLnp+t8G/I3JC6nr1p9Uv47Z0XXvjk+c4vUe3FrpznvtlXMobfS
uyddVz4ONuZTPsLNXdt5DnA9fHU+PcrOpdMcE8NO7RpuTnUdPT7Qx97l5sQD
Ezc7/zhTJVZJLNt5nVPsYM2H/olON96JA0xM3eXIS9xMdpZfo87TsepXTJ18
HFqLOnZNnOC1/OyMSm72uiXe76L+ifGwxpXPuvPjOvv6c9iZ0R9d1kXx71+6
F10jee+TBsznAd1j8lyQl+89E4T7TNfzNXH92b0aK4+Gc3NtTzkzJj2a8YHO
zu5HTqw8cXOKDVRdQOXeqFhDz8fx2bc+fHrd0psbzZm5MSZu3okfW/kZxGDF
e9KU5TNQrrqJm5P3ubhV2rD7mMWRYsPkY05567p7cn50bk65nLu1IrOSbV2b
1prwVecqP3Pt13tp1uqr9fHnHmrqnsfa7yHF/qXmOrL7msnJF69P5kFuJj93
jNvl0nB/Av3BHreXNOvkveiY1X3TnJdztufGELN6Pjb3OSfG5Rx4Pj3NEzen
WiWlu7tf3LlZbeKuLm5vyvnM+YjVpKX7utETPXHz5FdI+5wxXRtP9VSYc4N5
lyetWNdaMWzyFE98y/u49tmm4/P0uU5MvsPNqz7kl/Sb+tR2PM6dBtxx7U4+
Db1fHfNxPEey2Li4l+xMDVqtctVVK69EtS9/7Skfips9b8YRbq41fwg3i1kn
br7X/46bNab42efjz11iYv9+nfdjHmTTxM3J1+znTBqwmHnSo8XN2s9rOA97
XZLEzdSt3a/Buic7/OwsPnGzv/e+Xu8v1b1eMfNTdn6XsTVGMXC1um69p57c
tde/+tLpnC29eeHV6JiY2myKZ1vxZseR8mqosf6Ja9LSW3UOuVlxhp5/TtvS
Y8l9xZKdn1kcu3pGoPeZPKpjK41ZvhbWyU41R2pbtWOkrTPGr55BWLe7GnOR
iO3F5cpZrfXx+tyJ//1eJ78yfRjaf4rXDB4NPutQ8yZnd7nfJp3Ya2CTp+mX
YN4K3+fs2+XpUP/E9F0uO49/6zRqepiLR5ybPY8GGX3yC6tNmr3mTS+Hxu8Y
b7eudmJmMqnWNT1vdDkt9FnvcnPSUhM3d/4S7etyzO3o2MyfcYSbO77tngke
ys3a5mc7+aK737F3ODk1cnPSnP38lS7ccTQ1YR9rYr1q1LAnLTqN1/kXKsec
687eyM3KVaf8G9VSvrmOm8nYEzfr83Wu9M+B97XyX0x95GXWtfWanqPS7xfu
udDcya3ul0hzSKzt3MznPWrm5GHXnjsuTzqy8stxPunfEteAGvIuNycNeuVL
Zg1B9ivNl/WuUw6MI8xcrcYTL1NLZl6Orqk297U+DbLzSjfe5ebOp+DcXCzI
+ij1yjx0ntO58zvLv1uN/hByKDmXTezo3DzxLv0Lfv/Oyzu1U5hvOa2duJd+
Dens0u6Z90MMzecK+TNU51xjJc93elZI97kb5yduph6d/M2d14M5JRK7eo4N
8qrnO2aMXMXWUYt2RkseDOdl51ddO+Xq6Lg5ac/iVfdBi2ucmd337O85vvN8
53Px55VOb3YGXXGz1yCRXttxM2thr+qqUAeduLM79oPIzdM9sr97qrlWHDN5
PhI3p6a+R7nZudj5q+Pj1fsj7KyW8lxMDMzcaytOXjF415ydS2eu13M+YMvx
XLmctc3YsJSDjjycuNkb+9S1i+2dLVfPA+RE9auxuuenxIhkd+fj9D1y77O4
lRq1a8nsS99zNc2382jwucIZ2L0hnLf/u2E+a3Hz5OFIv+n4ve0wc9K7V9zs
Nf/+6nvfOte/7mpey39xDTer9oq05tre4eZdf/NUO1AeZ/k1krdAPOjHJq9G
avI0kNPFfYqLY+5mZ2b6gBVnqOP0NpMVNUcy4dkHgLg47udYHTenWLlOo560
Z/G3mFb7tR71qnUTf1Zf+kPoWxY3K2ZQYzNvndbP4yBT3e3UjubHOM0n5JlL
Hg56PsTN9Fd4TraUJy7lMnaPhZiMeTiSH1n9O14nq3ca+MTMYknnb9ZB8Zg0
Z2bXtZ1/dcx524/7Ma6VeLbjZs8zPPFn4mZnVubekG8j1RrxHBUrZl5x8xGP
M++v4/eV19nvwePvVj6TXW6enjM0Fx/v2rjC7u95+vtO1jj/rTava3euc5br
hEd0Z48LPKI5+7WUN8JrsEweDuqOzo7FwfVKf4YYWtxeNQTVxM2sx+1M/FCP
s7TojomT9pxqR+tY8jPc05zxXfBryiPtzEw9mAwtDTt9t9wDwfm4zyKxM3Xt
1TOka8zsq/vq/M6rJs4mJ5Obj3o1mJc5+Tacn4ub5algTuVU83rfp/HqY48h
pNfZc3pIh65Xejp24wInzZncLKYVHzLfWdKNO106MXPSrTU+2Vg6rccCiiW1
TW52LtaYfu3kbeb9SKemXyPFyPE+kq+6Y+huP+9b1+B9UntXX92z+5WTj4X6
vOvO0p6nnM5au6TPe3zglFOu42z3etCj4XFr1EzTPnJvysVGP4bzouvTrsP6
tjOy6g26byPNm/kyXNv1vBuM9XP93b0rXSwl9fXpvtif3NxxJzmr48opH4X7
R/QsQc8zr02N9Cg3d3rqip2T3j3l02C84JRHZOLSjvvre6nvwQ7HrriZa+qf
5+oZ5Ag377QTbwRudv72v+3ksBXXTn4Nas6rHMvJL73i5lUs4dRqLs7OdY3i
Y18j1ecuXiY/3ZKdxXNiZbK/My21Z3Jnuk/yp3Lc8bmK3xVqx11eQ3LvzveS
c+g0Zd5Dx80X7Iy5+blpTnym8D5HuLlj7qM+DWdn6srkZnFpacz0InstkqO8
nGMDn8YT3s+t8fJpjvQ812sxvzTqbW5udGfWz05+BMarddzc8bJqnYhdWa9Q
uqr4jTk2yM30dHCfWFXcJ3bUeIn9PC8dz+ti6OhbTrlE3J+b/NHcn543xMl+
TOvm/hT2I2+zxrZiA/leOrT4m9xM37PPnevVac8rbt7SqKv++d2ra6bexHqK
aXP2TbF5nnfNfQt+fopLnGIUy//h+5xVuZ/cnLzb1M2TF9rH9HjHxPeJ6bs8
I3V96ZGsy5EYKv2GL7br2DHlo/C+nU/B53QrbqYG7oyedHExfurr3O0c+5A4
PnlYrtGFeV7HzYnj0zNGx807nHxmgVA7OXEQ2cHrOiSt9hpu7rh40oxT81x0
Rxg5NcX8lW+D3Ox6bWq1Rs9Cc06ab+Lm9HnIZ9Ldb51X3Nxp2Wy8NnVbP89j
5joNeGq8hh/jPjIu57SK61Ofi3u7gnF53cTTnjODtbk7Pqfm7LGBFW9Xrfj0
KTc/5dlrWTmxc9Ksc566l88srXkf5eYUH0hmJjeLmcSJnU83adDkuOJmekGc
q4t/xdfJ10xuVuyg52wmN2se4mP5FMjB9CSIFcXL7vt1bk5r4PGFXY7npNnT
q8E8c3qm0FjyWMgvTE8F56h7Y7yf53n+3ndeu8jlR5/GpI/788ZRn/PUT+8V
Q1jc7JxMv4ZrtymWjz6LzufR+SqmczqOpkbLvszr5nP13MvpXtRHeucUE5lY
eNLIO16mxzp5mDt91PlzxW4as+Pm5AFJ+zjGio0nPTdxc+e5eC+5ufL06feQ
HW7unltWXpbp800+bnLzDjuzH3MkkPdSXx1L17mGmxPbTjrxkfFuxc7MlcF6
gimXmjd5NaQ5r/JqPPrW11tWZo2S1T2t6ptTT91dB3++4u8U8mp037/IrPb7
Br3N3FftIjYRMX/uwXZm9WtRl056d/dsea1O7MycfM7K2UF+7tg55WOWzlzc
fN9L8fKDdObrNen7ueve9Vq/fJybm9wa5CPpxGQzZ0LXZf29mFmtY2eyubjZ
teUUF6i8EmS/GueFD71wodV6DmJ5MZyZNRbzVXi+Ddeb03q4Z8P93X6etHbl
yvA10RpoXainO4fruUAcTm4WJ4ub1XTPngPP74XelSP+5smn4e/P3Pzdp7VL
Sk8mN5M1Ez8mXZrejKn5GJ132bXmXT2a41Wr2DDX1Z3hU/yhX9s9yWLebr6J
/6lZM06R7LyKDRNHOit2LXHzxHzOyKkW+EO5mcyfuLnLSee+E/od2H8nru+W
3Kya5lMObT/f55Ry0E3cTP1KrOH6G/92k5tZM46M7F7NxOcTg02cvGLbiaun
sTvP9C1aabHSnCdudm3+2px0ajWG348/rzyreyZrO3eeGRx1UOL3w2pPnn3O
Vj/FmZlsLP+LvrM8Xp/HxfWfHE9eaN4TPz/Xx2/NzdSb03dE2x07U2v2mtrS
mX/4o5952p4DKx/j6Jdvys1kXHGza8udDun6qbiPY/7Qi5d9yYbSnunHIDM6
NyufMb3X5EVxKr0IZGF6k8XG8viynooYWvNSrmO9d/+C8l9Q76YW7/4LncM6
f2JY+ZD1Kg+L7lW+Eudy+lXIzVqv4matrfRrcjPvzbX3SWcmO3u+DL3n6zQO
tVbV9HOdmbpwYsBOp1ZLtQKdb8WR3TXIrs6buu7ki0j8u+L5pHNrvl3+jxUr
OzcnZhbjkqe8hos0cWrkOxzoenLaL06jx+Ah3NzpqOJm5vpwLnaudz9zl2Nv
t3XeFOfhavrciqXLX1+vdX69Vltx88ozzj5TvCPfJ8YVGyT98oLzrK42/45T
g9b+a7l5h6cnpj7i2bilX0O5mquV3iyvw4VOD88zmehan4bWVty8qw9POTXI
jmJs50mv392NSa/G0h9vNVXI0p5PTvfc5eITF5OpvaUaJ34f7qtIHg/msT7C
ynxu9d9t4vrg35Xzdu2XzyHpzWfP8fuAlxM7c99D/c2JnV2jJee5x8I9veQt
cnNdl6ytMYvRqXl6U35nzcvroIgl65qKd6Mvl7zKuD/3ODAGkp4I3pO4md4G
+jc8DpK8rPn4nBjX53mclTeE91Vjs+YL9XFys54H6GtmnRg1cbPur3sm4Dpw
DPdapJbyzsVzvvnSqa9rxn/z19+KOrK3Kf/yyqeRtOGk6XYc7Lk4yM2d/rzy
G5OHUywg75Pcu2Lmzk8t/if78540F/ER844wdi5x88SQXQ67FTdP7Jn8FpPm
zH7kZj+H9znFOLJ/Fzfp3Nn5qlP/+q2ixuZa12txsufvm9jd55b08PRck543
9D79/V7FKFET7WoDJ49HihdbtSNeihVPr3I3u9/5GsYkMzs/iye5DowJTHrz
DjfXfCIn3rHgDjMzTx8ZmZprvVKbZkwcc3DQj+Ja8z3t+NF9nzC14wv/w939
6L37xZ2dnUc5rsbiNaiDJ/+Ff5c7Lp7Om/rquYfPlbx35oTmv0lxMs/XOSkm
8H697Ofjy9jlZt93K73Z66Ck+DZqjuJmciv7k5nFzcnrS81VnKhczsV6zOtM
Vib3qokvxYes70FWFrtSp5Um7TGDfP3GOx95/Gd/8KVTq+3E5bynzrORfB70
GHOftGauv2ID6fXge4+vFDfXMenQ4uTqK15PeT3cgzL5M7rczFvtCTPXeHV+
Yt/iAfo03HfhtU6SF3rl15h02MTc7oX2PHOcz8SxriX7/Sdu7uL/eP1OyyZb
+7mMPex0beb2IDczv5706InZxMkrbha7kYmnvMrkZp/TDrf+IHCzNGX6rBk/
Ws3jJrvrrnwk/HxYG3HSm6e/687NqS9ZOfGxM8JRdt5h4x3N2rnZmVK8XK9e
47vTr1daM5lRYyevBtdy4mbPk3HPa/DoOt9F4mvXlelNSOecmRT1/rxeiPp5
bNt5DeD9cc8Fn+ncL7HDzM6zZPD03dX8qXXzPjvN1/8tTP+mOj735wh/PpjY
nO+9frXqnjC/xXvNyqt2a72Z8YHJq0FmWvk4FM8n74fi/1JeCmnQdYzczFwb
9DRrfHp/lXui3lN3lTdX2i59FLUtNqZW7TwsriU3O+P6fZDPEzf7+IwN9Not
4mZ5VriGzs30Xki3dm4Wk7PGt3M7x+RnPvmaL+oBbrL0qW/gZtaN42/Snk+u
056dm8nbK+15x+vg3Dvl9Oj4nDkwumvR96y5+xyU79m5m3NhbrnExJpLysvR
cbM3MtjkqXVuLh4TkznPuQ+6y3nh8XcP5ebUr+Nm92h4/0nvdh9Ep+Me5eaV
X6XzXujz4POKxpi4WX34N36ljzk3++/Frsc5MyRuPsLQk4/COVG85rkydv0Y
4maN6znaVszMe9KranJXcx221kcxgVzvVX45sTPXWtzM69yiJW+G1vhcm8S8
O+I8162X37kQN0iN2tmxxp24uXuOSzmpkz7ufuta28TGvF/n/CkO0u8/PVu5
br7zvKv8zWTmp/Wz3//MfFRv3qm5zXzOztBiUHkHOr1TbOWas7wWk1da/CYW
Fm8rzwavR08wvRk6V/3ExfQXOLfKs5DYVtps9RM3V6M+7Zye7su1Zm3zmUL9
GftIP4fWXh6RlHeP3mzmbHZtW3P1zy95spPuvKsze51AfxU3a7v4rLyazL3s
ngRyM3lR+zyO0Fn7Gm5e5aDoWNb9FcmTnLTmSft2hvY5Mi6Q3MyW9tGr3d0v
fc1iNeaY3m1iNfFYNfE2+ZhcKV53rkzc3Om4O3qvuLjTgJ2NdVzbYkj3lbiH
O/mx9YzA+6C/nF4J1+TTeLu55br5cD/vwZnfuXmndTFtGkN/16mZ7ujN6rOT
h9mbznH+JeNOPuiV7+OaeLniY+rN3F+t6m0Xd+mazj+eU6Nr8hVQc+Z86xrF
eXXNh/Ay8zInLhY3i19P/Bw0UvIjvzf+6t+ZKc8hx+fzhD9fVJ+Uv23FtfQ8
Mw+I55wjr9P7nHJ48Lvv/M98266z89/XSsdmYx5nac3Sm38Q2lU+jYGdyczu
aaYHV94B5oRztqI3WWOmmEMdZ/4Lepi5TbZmrKA0ZfoYyNLizs4PLG04eY3J
rWLm2qZXQx4Nejfcx+w5NVyD1nHXkqWpy1eu+6X+2z27ODfT00IfiuclSd71
iZudn8nRXmPb+7OJAYubmUvDedK9GuTjOk/tiEadGsfpvBGJLcWRYlP11z05
G1NbnmL32IfcrGvoPfVn92mQl6lPOjdPzwzO2x4juOKxlZ4qJk/cTL3adU/3
HHRtR3NO56z8IbrXxNpk4JVvY7WGKf9ex73uc/HxVtzsnxs1aN6P+lzDyUkf
E5c4N6e4Q9cJxVmr3A7XxvA9rzhA5+buWHEz5+UMRs2ZTLaMe3t06UORr+Ch
3MxYQHow2OSvoM+58xO4x6H7Xl3E2QV21rNa0uGpM/s8nNPpyU4+DfrSz88P
A6f62H7Ma8v4/eh5ycfVWEe8VRM335qdL2tyv3yRp4M5oo/WVLlKbx68GuLn
6uO541wTlhfAuVns6Foz/RTiRDJzncs8dGJB+Z/pzahj0mnpy5Ueyzx04kLP
t0at2XMekzF1zkkTfdKcmztfg7TkpNkmDwznzHp+9JooLlDz8np/nDefA8TO
5GadW1o6uTmxsn++OzkzUlxg4ulaT3JzNfFlvdKj4YxMfbn68r2f49zN46r1
58zM185r0Xk3XEvmfU369cTN6TyytvRtcTD7+/nOvOk9udq5mNxMbXSHm3e0
aXGzs2ynbfv1PddF8nf8oHBzistLmvCufrzL587EvAfncY0tr2nShCdu7jTk
FTencaW5kpvdE7HLve4luAU7X6s7J3b23B7Ond68Bso9Zr47L91L8fLn3v7w
g58D6HPWZ8jnHWrSzs2uLXseCmmnzI8R2bnh0ImbnYOp/zrL+ny1z2u+TJq3
5uvX8zxy/DdQtdZ9bvS3+/dBY2kuide9f72yrvZNYwLPXHyZO04tX/Puupu5
PG6pN6ecdNRB3XfgHJx8Ccmr4X4QxiNKW/UYNdYqYc1t8Z/6aFv54MSMzHlM
RhYzn9nYcjqTgdXEzZ2XIfFzx8tsfP5gfpG6X2rW8mGoJTaX9s6YQLE3dX3W
fKHuPLGzuDmxs2vKnSadWq2rc6m4mXrp7/23Xzw1jwMkOzsXU2vumNlZ1bnZ
2TNxLPXdlHOZ+3a4Waw98S/3uc6e7s818aQd0x/TcbOa9k+5zvy3/aOeDsbq
OTeT5R7KzXqlX3vKS+F8nDjZfQzkTteLO3Z9Ftyc1iH1T9zMz9XHc+7V39kj
XszUuhzOHTe7drnSjlNuDOfmLg+H7//ZN2Y91q+14kyO3c0/nXfOz2bc3GnQ
4mbNT4yna5RPo/JG34KdxXSpJp4+U7Il35NHnVm1v6sJ4zzL7elZgt8z511n
Y38W8L5icH8uUN90n9NvMnpW0BhkZ/47TPkxaj/nuPNvsK7DfBqXHHucm896
8Z2e7DW6PQ7RmV36t859L7g5xQmSzZLHIPljWYuQvOzbigN0jZfcqDGZ67ia
4uQ0P3o7yNXkYWde5l5zzvXcccV3pc9SV0/crGMc070afo57SJxtda/SjpU/
LnmqNS+xcm2zTjf1aHGzni2Yj6/jZmnvk5950phdZz49i3z3U2fuIwv+h3//
ZxdcWDwnbqaHOenNZGvxZPJqJN50P3KnN+/4KcjvmrPYNLEy+yeW77wTiaeL
m5MXW9spvq/j5qlN+qVzc70XnyeGcx+w2FlMqz5HuJk8vKM7Ozene1Nf90F4
bCG9Kf6e3mfPLdIxb/IYH/Ur8x4Sn3cM7c8AK252XWulNx9tzj6Jm8Un9Bqs
dOOJsVd9i5uZe66LOUz5OSY+5r1M3Kz3NQf5on2dnZvPDdwsdi5WZnuoTyOy
PfwafM46zRk+YOdJn7t7JPicVtuuXSfPhXOzM7Dm4IzL5zTei3Ozc/iRWEI+
a5B90/Nj4vWOvdO/w67WSubm6zwTna782bc+fMHI9V6N7zkPxSiu+P1Z+DSc
m+WHSNwsRvPcatSbXVdO9b2pg7o3md5d1vBgfjbNjd5m5j323GrkXeXUSHwo
RnTPRMovkViT3ml/tqBvXN6MpNvLc6zr65lA+7SdNGd6OZhHg88lvj5ej5Br
k+r8Tdyc4gW1j9zMPBpe68Q9y64re76MlLO5OHuqdcJjfr6zr/Ntvb711gdP
zft4fB2ZmmxabKvWeTXcp5w8IZ0OnXwe9F13DO255K7h5qRPK26Rui4Zto4r
TpAsStamxzfx26olhk7H3Y/SNbKzM3vH3HxNHJs0YmdutjqmnBc7XmVn6xR7
2DF494zU8XD6HfoWzJzGnHTbI17n3X41pmL01Cfl3UgM7NzsTC3+dV5O3O1N
vo7EzVOTJ4Oa8/e//5vnGoWq+/0QfqbOSr/xFPem+YtTxcrU1MWVvIaPo370
ilC39rovq6Y5kaGd/c9MDb7vaoNP3NzxbcfYvp/1azTHI/5mjlW8+q6/+Tgv
P+Xm+z4McbHzsrPzT/6DH7tg66fzuS03H2Vn5k927vO4Ob6qdR4NbjtLuu4s
7hMnqpGfeY7y0JHHeTwxJj3O1Ud55k55NJ5wc73XvpSLj7nuqGl7Ljy/T/WR
3p30XWrOrP/H+/OcGv6Z6PkjcTb7pfqKrHdybk2tk90YQPVXnCW5mTxIn3M1
8S+ZurZrP9+rr/bX6+9+55KjdYx6c4op7PwZZM0aV9zMOocdb6d8GeLmdK0u
d7OOpzi+abvjZh5bMfK17Ozea/mxnZsTZ3b8OmnL1KonZvZ97zdudm9xpyfv
MHPyhfh5EzenWESdn/6+8m/9he72KHsou9+IEyt0GlvyJUsDTOy8qyXv9EnM
fMrt9saL43U4r9TH64gc8Xooz9mZ3YamsYuPxc3Ko0EdXc8K5OddliYfek5m
vk/PRK4xe25mb15bm5q1rs/vZIqT7OYivZi/Y/h3m339O0qfyg738jjjZlf9
qSu7z3ni5qRP6xxpvUdzari+XBz8+ldfOrXiX213zFytmNm5uXRv9z7fVG8+
qDkn3iQj0yeRdNfO6+zaq/M4a6yodra40WMC67j80eTRzqPNRi80Ndfi5v/7
f/ra43/3V79+4mb3PnOevFcypj9v+Fx0z6w/6Jo1ebzuu/pJT6/z5Ht2/le+
arG1+Nn7aWz3N3v+PnJzVxOw05hT+4Pf+kzkZnEludlzZpCTxc6pVV8ys8YV
NyePRtJnu+Pi5lVuu8Tc7oVO8YndXFaxiZO/pF6LTbvz6p6k5yZO7vTnxIGJ
r3e5+UhMoDMqPRZHuZleFerdfr2OhcWSyeORfNCdb+QabhbD77Jzd2zKmZd8
IdrXsSzzyHW/oTsX+N/2VE9w5ZumhktuPhLXNx0jJ3Z9xJ7yPXfeio6JfR7U
oI+y8w43a77lk5XPg/nnkqYvfZpzctZ1LZUsqc9HNa/TuWQ48rDrt2TkiTtT
/KD8DImbOV7ShDWe5sn33pe53/Rd3tW3yc0+3vQsyVqA1/6mw3Pvc/OsN1OX
Th4M8fKKmTt2rvOKm1cc/yz1Zs+77DxM/VZxeP67vpp7NVx/7mILyeviZrGy
56FTzCDrnrh/JPE84wjlM65rFCd//0/fvKh1Ugz9ve+8dmppLHKze7/TPfK8
4uDkUxbHysshPpZuTN8yedjZWwwtnua44nb2TXr8mYnv8opQL1ad7FW8YOLm
eqU/I/l6xbr0aZA5eUy8XO1f/M5nLhia49Ux15snblVfMig9yitG5j73gyRP
SPJc7/itV16Njre537l5at3v9ombqZ/XdtKqxZoeq5g8w0e4mQzcacvOzWqJ
093/nLi5413XlX3+ZGCPH5w8FzvcvMvVZHbNsfu8yc1HW8e9O3/Lu9wdaYwd
bVm+i46tV2OkftJkkwbt7ydmFv8zJ8MuM1erfHXVqHEy54jamfOHeEtxtFha
WrjPe/JKdDqssx/78LMk/9L7TAZP3wcyrnNzyseX5tTNmZoztfPEzeRY5r5Y
XcPP5/5uDI9dJEfv+jL8WK2T1wucmnLXeXNu1v63v/aFU33CFTeLnbVdY0xz
etY+DbKt+zLoRyYXumdBPoF6TfysvBxkSGfHaqWzKtaPOeeknzpnixPdI+Hj
0nshLq1zi5mLj8WGYujT2E8YMc2R3gbfv+Jm6uM8hx6K2vb4Qc2Xvm7q9u6v
Zh461nrp5sD1ETsrlo/c3Hk0xNPuaRZTi5vJk+RGMSW9F1Mrxil9uZhYrd6L
m8nUZPUdZk4se0RbpsbqHuyUZ2PSn+ltTh7qySe90rE5xy7vxo6HgfF/nhea
2nbn89jhZvJcx7TiV497VHzmFBuZ7s/HnmIHu5zSnLfP3/nYNd+Oe5Pefwsv
B5mevvOkOdfrLitPf5Onv+f8e7/SmzufRWJjHVdfr4HS+ZIn38TE1s7Nk2a9
y+lTk3asGimJlRVLmDiR/Ef92RlZnpLky9Ar+bb7jijXg2vI3Ef25TX13XB2
JHNTC9aYHTOn7xOvT3Y/r9HwbOA8Tm7mMyGvwXvw581ujIn5p3zoaQ38t59a
q53czToubnY+PsLNOl/c7PysMZ7GCL56b27P2qdBdva4OvoqyHlkatePT7mh
G01bee9cp2UtPXIzc23olec5X3a86l4LMWJxpbTlaqytTY+z585Ieq1zsK9f
nSe9OzG4e5j1LKC6gp4zZMpPkmqXS2enP6PzgSsPnXJg6Fkj1T+h5nyhTZuf
I3GhfBTUk8mtzsvJBy1NubjZvdLOzdKedQ0x9w5Le3MGlq6auLnesy44uVVx
grt6ccfI9EZ0XN8dYz5ocXSqNUj+FS+zLkunhfPcjpvdJ9HxITlR/ZPuPHGz
683vFTcnfi1mTce5r7a9dnnyNK/YutPzu8b+13DzSvdK3LwaL3EzmXji0hNH
mR/Z2XCHVzm+68SuQbvnYYePff9U50VxgsXNYnbysnJnSGvutODV2nKdfNu5
OTLlXZyfb+vcLsec9nf+6M4D7PNwPuzuP+nVPhZrhnNtOp7tci2m31omPdx5
Wvvc29F5NqZ/j8XLqkEpdp48GXW8OLY8HSsfRpdDg8eSn8PZua7F2ig305sP
6s6KE2Qs34oLk++izk/cTC3a+VljFR+r5qDqb6uGHtm53jNPRsqn0eW/OPsS
oCmrzolzK+MDdT3PuZHy1fl9pbXU8wIZVnowvSpkZsUL+rqneuCsxy0/iPrR
N04O59pIRy7vd7UpLnDyazg3Uxeu9+Ib6snkZZ6TuLjYlxys98x5V3yajtd2
xftNNVAmdnZu9hwY5LfEzR6fmGIWp7wZ2u603o613eusRm4WU1IzJwOnWMaJ
m5NWPXFyF2/n3P0Qbu409Y6bU3yis6mzZvJsPISbJw52zTnFAiade+Jl9efn
dQ03829yypfV5Q7b5boUJ0jmpAfCuXlHy/Vxi1FdU3Zu7nTrSV9e8Tk15OLv
tCbFzcrF3HHzkbXl9bsmnbgb4+z3tbrbSfd1puf7xOPUprvvDvvr+8eaIK4z
s79zs4/rOevIsMmTnGJg0/Oia+opB4n/e+E1V3yceFmtmPnFl75waqxXknLL
yXPsLFxa8te/9aXIzF1ODbGys7dzc53X1WN5Htzc1SwR504abmqT19nrB5Iv
5UFWXjpys5iajEdudkbtmDX5Eqjjej5m58o0rrRk90wkP4bvZy4Nzl1rIL4l
N7MWjOf+4JxZW0VjTPGJiZtLPxYzK8fGLi+nHHTOtCnGz7mZ2rJ0Y2/kYN9H
jdk5O9U82fVmpDp+4mPu9/x509g+Z2rWKWZQfcl+nZcjxRm6ruw6ufPvrl+E
+8RaKx918v6uWqcHe83JlQeF3Jw8IDt5np0tfT+bs+yKp9lvl5tX4636uF7N
e5t+302/n6e/zx1fX9s61uw8FUcYeWLexMDdtbmdcnJMjN3Nr+696pTU6xe/
8qNnT7K4uWL/6r3nZ04MOK3pas06plQ7+SMsn1zSmp2PWTPkxOePPh65OvGp
j52+r4md/b1rvtq/es4jC7MP80Z32rfuk/UM3Z+hf0s+hzSfXYYWK7NNWnMx
c2m/ZODiZbU6nnwY5GMycqdH0+esfM5k5ufNzR0/k29X3OysKBbsxlR+jsSZ
Ysak4zLXc6dZi6ndv5u0ZOaQ42u6R+nCKfcIvd9+L5MOrXWSrsw1JqtTQ+a9
udec++WLFm938YLpeUJN3otYY/sJVytXXZePTufTG5GYmd6LjpnTMefwTosu
vbnLQ7fKk5HYNnkfOi71mtzOpZ2vYmJTzsXZT2PQM9zNlz4LZ2c/b2JkX0ON
VbzlcYOrvG3OzZPunJg26c0pb0dqZOaJn103r/m6Z0LX9Bon8g/rHpMXefW8
cC03U4uerul6uX8unTe0+827+52Yf89X8VJHuHmVwzlt7+rB3jrPRWJl3971
M+s98zVzW9zMc2pedUzcrFot51waTxg7ce7qWaTVmwP/OouSm/U+Md2Fvmp5
n/185qgj13Jc52z/LjLmMN0Dr51+16DO7b4J5g9Z+TDYNKb04ynfNH3P9GOn
vqmevcZOzJzYmTqvxwJSa564Wa/lcSY7J5+GYgLJ1VPt72u4+dp8dF0euS5X
Rec/YEtjKucDeVacJt02MTF5WXprx82+nyzsOi313i7/s/LY+diMVUw8n/Iu
O3szrzL7czzl1FBdE9ervXY2OVv3qL5+nY6bxcbMxZwYOeXWoNfZc1x4czbu
jsnDTH527Vjt3/zLty50Z3IzdeapuXfDudm15461J/2342bx69RfvOucy7k4
S0+M73py4mbn88TkrivvcrN8Fyu9d9J9xdIay1vVdHdf8/PmZj9Xr65V65yU
E+5aL/PEze478TwhbB27dgzgvOw13VKc0y4nO/Mldva8yZOOusqxvOLd4lPP
R3dNk99DDKx4vk5vZm1szzd8Yr87bp70Ya4f++4050Byvrj69DkPcYJT09i8
njRsj6vjfDwfB/nRn9nIvswR4ucnDu80Xj0rJO7v+FfnSmOmf4L1tMnyzO/R
5atzZmajL2PNza+e8zKTZd2jsfI3J24mM7uvQ16Qd7n51Yv5vBfc3DH0NaxM
1uz0ZvGbOMvrjCRmlk+DHDz5rZ1TnZsTL3YsSW3cWTnlHOk8GnyVbuz8T+1Y
ngzVM2E9QJ+3e5SVT0M57V740AtnH0z3GbreTHZOOZyTzsw4QXFziuHrGDlp
zD5G7fvf/+evnpofqyZunrRosmTn+eh43z0VXudv0qx3+Jla8MqfvMPw7jVO
fujkw6An28+nbq7tlDfD8z/LH508zzq2w8uMueN+52Zur7iZY7t3OvF00osV
s9f5midudnbe5eYjHueu3w43n9d4I59Wx81TjtmdsZLHM3Ff0o9dZ+Z+cmaq
6zfpws7NZN+HcPNF/oi7+RWLdnFxxc7nvHDGzV6vxDXq1fqtmJmcJnavJnZe
PVv5Z+w6dtJ9z94P1j25Y2tyduLm6ftDBtVa757fffd3PPvkXurAZ18L/v10
sQHUzeu3hm4+/u93l5uV0/lorB/9zK4pdz6N1Cad+aHcfGbnBzDzpDdP/g1y
bRrvwiN7l/eM2m+nNXc8mvwPiXs9B4UzdDpf7Mmahn7fk86d2N55mzUCnZup
RSs/hlhY/m7m4XNupk9aDK732qa3I9UITLVOUlyg75fmLL7U7+ZJN05+jY6d
xcWdvrziZWfsjo15TNwo3drPcT51plW+uc4DnLh55U9eeUrYh1q0+zemeSXd
WyytcRI3k9WYJ1pc3GmlXc2QI9zs73VN5TthDKF7oDv/h4/pGi73UWNOTMv9
U765lU9j17fheveq+TXSMdevOjaeuPnit+yGm6/1buxws+el6Py7O4zb6cu7
3EyNV/s895rX7uvuvfqfamUv6vqRm52ffd8ON6dx+HnsfnbOuOk3insabqgX
yO+U55ATc99jSowjhuVzwDXczO/xip31eTMPHPPmUR/2fx/+zDJd61QL8O7z
r7byaei4eNVj9lSPpOPlxM3k54m16evwnM3PjJuvYOfE0J4jeOJVbXsODXFz
6cb0JVzUqAteCL+Ga81pHvReuF+YzesNckz6HzyWbmL56ZmCPEwO77hfzM46
f3ouITc7P7svRflHdF/JF5K4Wd6Mc7uLF9zxaajmCdmX9QDJzbt+DTFzx83u
xfB+iZs71namVp1s52bXZpM/o3tdcfNKP3ZvR+cNoRZNfbVYsj6Pbkzn5cTN
STcmF1JHdX1XjE3m7XI6JI+E+JcsTi7WMY3D2ohHuFnj6frOke7PoFacWHvF
zul5wsdyD/JRbnYtmuvteT1cC0/c7Ax84UM1br7nAX0052le8fOkmVI31muq
h90xoXgp+TvcU7HiZObySNd0ZvbjKX8Gm/Rmr429Ylz6paltpzlMenPal1r6
nD2nnXugL+L9zOvReSSmeZCLfVznTmq40vv9XF1z+q76sTSGe4+5XombvS4Q
YwU5bmnP0p89jnDiZnpEfuadT5/1Yea38Lp+k27s53ReDtejWWv7MgfefXZ+
z7j5yXnMr5G4eeJobZ9y0mEsHSMHOjczt9uk37qOPGnRZEP3M/N6rC1Ibnat
eUf75vvE8X6+6rhwXortk7eZ3CyvB++BOrquqdrl0vJZl5s1wTtf84UnAzUD
XVsmPxcz/+GvffJcJzB5I1LsX4oFVCtPRuJbsrG8G2JrHksM7dw86dXk5snz
sducb72mYOfF6HzOXW64iYedYxP7k5s1vnsvklbpzJV8EcwFTU+FcyK5WOfS
a6HjydvsHCz+8zwnz5Kbk/5Mbu22Ox/IrnY89e+4eWdMZ+HEzUmL7v7OT9zM
3+ZX3Cx2FS+T+5KXYuJKcnMXq6ex3Avc6c3st9KgOffiYbEwGZmeZr3fZV1v
5GavF3KEncnlfO+fn8f/kZUZR8fYwVSbj3yfviPOv+RTcqv77/06NY7WNzFv
91uLz2U1R2rN6d+M/7vqcp0nRp/qje9wc52XeNm5eWLn6fxUj5vMzNwZngvv
ofk0bqU3n/M6Pxmj82pM3Mx8zmzSPKtfjc9ccN7EZRo3+ZC9ngjZ1+cnb4j7
SeiP8Nx0yfuR2g638z31X/cts1aK+um49GL3ZbhWr/caX88qOu4aeufRSHky
XJOWl1mvxcvVypNRTTwmbdPzNVODnjwakyZNVk7cnLh4pTc7FydO9n2pnvYO
P3exf6v91JBTbrzkseC1qRtP3Mw5qC61+5lru+Mz+iXoY3bNmv3cb5xyYfDa
t+Jmjjflb3YPsvtTPDbwFtzs56fjPKZ4xRVv73Jz9em4wLVm/n0XE6S//el8
5+ZOn3M+I5s6N+uVNQJX3Jz80B1Dp/diZ/lwj3CzWJmeCrEyOTnFC17LzN4S
hzsPJ22X/uDpu8L1dh3Wf5dI+rHmmOINz+di3Tt2ZT46vXaac8fE/n3uWldv
pdtHdvbtbk39OulzWOXQEDfznE5rnrg55WBecbOPW57qH3rxJ54fNz9Ac6Zf
Y5cHXb9NeaHl3xDTpXzKPEYf9OQVoe+CPE3vBeP6qFl3Ho/O3+G53zpPc+Jr
5tNLa8iajKylmPwk1Nw9ZlH8TM081RhMHo3Ju+zHkkejmtcvcX6m9uwxfiuG
ThoyeZm6c8fNE1N3jV6Nzk9cx6ueyhF2lueDnogaY6Ufk5u746z1TT4mN8uf
7B6R9AxQn59rzuTmlK+4Y2LWWOn05l1u9jhAacTclr4tb4v4mZ5pMnynP7un
WvfoeTW87XLsrl68Gsd9MF2/Ix7oXW52FvC//UlLc4Zwbt6JIey4mezscXPU
bZPvWJ7hztexE+cnpq9r73ie3dPM2EDXl9UnMXD9Pr/Lzzx/4un0nJPYeSce
Lp2bxun6dNzM76XnWmasnr6HngOZnuHVXN13tMvOkz+J+WbSv5kUWzvlzODY
qgW48jSr1XfoJ//+R+8xLethT/GBO9zsMYN9PGBq7xNuDl5nz9Pmnl/u13sx
cuJmNfKx8my47stxXSt230TSm51/E7fyel7T2jnVx97hZ8blrXworG9S26wJ
6M8CzOPsdRPZx+/R83I4P6ea2e7P8G1yszNnyhGhGtspP0byVqiva8r0eChv
R9KcXUvu9k1+DXGz67srbp7iBd0vTc9ydz73dzWy+bzCPl7TkOc4o7tO7dzs
vouuvkfKY9HV9KOvOXk8EjdzLl0+DPGweFnnHcnh4Rzcxeel+Mjkkbi27bKu
6+I7czzCzZ2v2Vm5+9vuevSKPXa4xLnPuZQxge6J6LRf9Une4VVMoPdd1dqW
zuzXqXGZN4P9nXPlZ93l5iM6tD+jdM8uEw+TQannpmus+Dt9JziOs7F8wImT
FWvIWMIV0/v8dr6jqb/PSa9eU2ji5vRvjHGAus6Km095vr/2iYtW7Nx5k7sa
gOTmya9BJleOuooFVDygt8tjt+HmW7Kz+yySnuq53lTvj4zs3FyvFx5n+DOc
mcmniTOdZZPW7Kzv47unIY2bGLo75r4J8bJ7KpLvWtys3Bj0kSS9OeXU4H1x
vdLzT5dPg8xMTuZ77pdPo/ZRH6bOLI1R25UfzDXjOnflT5au7Foz2bfzbKze
63x6McjTri+7Bv3q6x88My1f2Yqb037WH3Q+7vRq5srwnM4dcyZPxqRds28a
f8rxsOJmvjKPxsTMK09y51F2bhYb35qb/f47bu6eNXY15V3Neoebdxk8sfKq
rVgn1UM7ws1kHP0u3bFsx83OwdWP2nQXc0cWdn07NY2RuLk809SPFYumPM4p
/tC5mXFgExt7rgn39qZ9iXnTMZ3reaOdO7ndjdOxc+2P3627vM7yd5Ax3bPr
+cT9OhM77+rpq3PT7zPeN+nTzsv+202KKZB/eqUzJ26uc51xnZunNnk0NKbY
Wtz8bixg1pk/8fkv3qReYGTmG+TVcL242sSTrJOdzlVj7T56M5w7V/rs1Mf9
CMkXQT22qwvScbNfjzxNblYtksTUzvyaq2IDqQ07J7tnhNxMTic3+3PDpDev
amoXI3/jnY+cvc5iZudm6bViFmdSsau42bcTN+tVXuqVz8L5nP4MMTjjBDXH
yWeRuDnF+bkvI/k9eL5zc9dXWi99yqm5Hku+9jhBaszJ90z/h/alOh/kLde5
dV36ixMbd3GFZOdJY76Gm123pv+XnNzx9K25OXmkU1xi4mJ9LjyH819xs58j
j/NRbk45AnY0OO838Tj5hv6OKZ8Fczk4V3p8YWJr1eNL3Cy9OunJxblJp1Ze
O15X+ZzrHHIz2dq15o6Tp/ddLg+Oz7zJJ261HMrk7cnjLL6d+HSlRzs3k409
rxyPkU9Xvvln1ZzRPSag8/53/3ZSvua0Ll0soPbVnOrzfuPbn75gZuXIU62S
KSfGipmVG6O4uN7XdrUam3VOtP/Sy/zy+dzi5qdc/S4/31RvvoKdxbWJnTuO
VH604uZ6ZT66jp2pt3ruDnIefczF4+lY4uZOg6aPwVunHe9ozvJY8168ph95
3rlZvKw8dMyl4dfsxkjPIEmLdmZ2fu5Y2blZGnPHzfQ5kP/KzzBpviv2lWeD
3KxxmI/O825wDK87yHhB+jISx/qc6n7k0aAuvRMr6NycNOV0nrg5eZ3VXNdN
3Jz8IPRqMJ9Gyv0hPpPPWZwlLwRzvmmbvC5e5byc9Y9ys/uVNV563kjncX/K
D+f+5pX27H6N1Ice6F1uTuytbdVhcebfbX5fNe4ON/vfbOdm/9s+5X1OvNHp
j2Iq56zEvMxz0cXATZq0znVPchcrqCbW9T4az3VtXd/roTjTugacdNJJf+7u
388jNyfGPefECP3EqqyTnfqkZyheJ8Xy3XvmumNn15tX3Lxi6aO/hUx9uu89
czbqnBTXSD/O6tqdP4MsXdf4+V/91D2t+YKhn/CtNOIdTk61AMXET9n4snb3
ZX3C+9xcc+C5z8SncZSb7/JoMNbM2TdxpFhR+YGLH8nNya+RWLXzCEvDZuzc
SpN2XZga82ufeeGCl+nR2GnO7nz1miR+XPnu5N/weypu1lqm+ibUyRNXp3PE
1Jxzx8ypxgm9GcylIU+zGFpc5Eyq+th8n5g47U9cTW5OeZvdq0GN2r0XKddG
8VW9Uv/l9f39L73z0QtuLg9KeTZqX8e9Oxwtzkv9yJmap2vNyQ+hMT33hvOz
+idu9pweXle7y5VMvtc8jnKz5pR4mf3oYZau7J5m+aqZz46N7NzlmOYx51Vn
Z+rEHKdj28TLOvcINyd+32mez/kIN6ffkHe5I/VL3Jx01U4nll4rr4b60bvh
jMi4PudcvR6JG6T/omNWXY/9VG+7i2tMa8F1m7TmHX7Wdvll5YGYzunaP/2j
XzqvqfjWtePV96POOX+3TO+mF1jfwe5Zaze3hdZwxce77Nz9W9FrqinU+ULE
s5NvZKUzn7Tk3/7SqZXWLHYuT3MdS9ws7XnFzWRmacVTjJ98F35M5z7N5Xx5
/D3hZvSR1kw2O+Wlg3+jmIv9xGFiT3JzHUtaM/M6T5qu+E46rF/TW+ndyYft
fC+tu3wG1Y54NJKGzca6fN08POed1/BOdQ7pvSY3a1vX7VibnE3/yoVfZqht
QmZ2rVn8LPYSe6op55ziAVn3JMX4Jb2Y24z/q/Z//Ou/d4+H2bfGdT9HnSdd
2euhJP13yr1R3OxaNHl7l5mL67x/x82edy55NFLeNT+HOrR7nqkPK++G5pOu
mfzTyd9Mbk46+MTN7vlw3bg7pnGTh8NzzaW6KxM3J2bt+JlMSm5OPOvHWKOk
Y+GdXHW73Eyfx0/hb/0RLzOPTfFU0zhdS8wmlnIOpV+D3Kyx3Kvg43Rasvue
WTMlxf5NcXfMpUG/h7g5eay5Frwnxpcd0ZonvdmPuxfF62vzs50+wxWPXvDk
HTenunnOr56bwll1Jwaw+y6vuPnI99i52esKded1mvOJc7/yo+d8zVMcoLi5
nonco3EvPhCxezseZtUTFDdXe9eb3HOzNOaPvfK3zjGAdR71aufs91pvFg+T
tzwPBv0brkuLv/Re3Jz0ZuZXSzneVIe69rOGXsXOrbRl8qSzq/qID0t7FjdP
3u2On7v3nSebx8iziXH9PrhP+rHyiGh95N/w89K2+pzZOeVyRq1Aas+sd3LS
mr/7qTMnFl9Kd5ZHg9ycvBPkZsb+OTen2EFxc9KYNe6OD9rZ2L0ZyadBVuz6
JC3ZteuOm1dej4mbE5P6OR03u9eZ+TmoZVMHTtzM5w963J2N+ZzgjTnkOn5+
1tzMPvQJ34qbNY7OVfO8zu4ld//05AlZcbMf9/vc1ZrZ6DHt6pmkcVJNZB/3
iNbZeXid4bTN/MnUmMWxHTfTd5y4WX0SV3sOOjXl2PD9PvcL7n/0NHfELi/7
mvq6eH/P7+GxgFs8eufZWHGzf0+mWiPO2h4nx+e4XbY9wsGc66of82ake4q1
wTfGFetO3Fz6f/UpXq7vmLZbbkZOuomXqTEXY9Nb4fky3s03d5+Zxc1eD6Vy
OnsujZvHBR5gZ2nA9BuIr8TKKdeG55hL2+7zYNxa50dWY23o4mdxMzVdMnfi
zcS2Yvzi5u9957UTHx5hZo7lfhBqvhM3lz7uLMt78LUhUzMGkPW3O3278284
N6c8zV7vxL0b9V48JT4u/kzMt+thTvummoDFzqkGiri581GnXHTk58TE0qTL
j5E4OOnMiaF9feo4vd+e27nTnbv8zWJLeiV4TmJrjwHktd0X0vkn3GvtTO5j
rbzMD+FmzVP5o92v4jx8pNF//BD/sGpca3uXm6WDJ3ZOLN1x8Yqb1VbcvNKc
2cd/f/bzO24+kh/YGYMatBjP2VD+22JbvSc3F7tOPgsxM+MSXeuucZN/g7oz
57rKDZe8K5q7GLrTjHfZmePT3+334b4WeTvSZ3PixQMe590+/vuGPlP/Dq6e
t3a8Eg/l5rQmzs0XPhU8N3S1VMTNWgNxsvI36/ziZudkf3/KQYcmf8aUk1l9
xMzkXn+fcjWLzZ2Z32/c7HVOuli2ah03q+m4XlNsoTiNfoPEiXxfvFzcLJ+z
WHHSaelD8PHEzSdmHrzN0zF6lhPfds8FXlOcLJ3uheN6fW1q13we8fmk+EJ9
FtU85o+6Ml89b7O4WazX+WbFSp2POXFz508mA5OXnZ1db17ldU4xgvRoaFts
S7Z0/XjSqxPvck7uN5642TXplF+Ofguvb8K+vBa51lk3acMpfx79GGRx+Vh2
uTkxcPJ/rLhZGje15jrexQAebTu+CMYW8hyxM+MDqVmzfjdZeuJmju0c7vzO
Oeu6rpvvcHPHyGkfWUF+yxVrdPyy8/v5Djc7I5IPdZ5zc2JQ6rDJ+0zNWVyc
cmQ4h3b8e+++71hx0py7NV6NnZiZvhKeQ17tuLn7DHY98Rffr7vrkZv5m8fk
HXpoPuYdbl7xdNLW1X+qa8JczcW7el+s7E3/zuqzcj5O3FxjXfDzoDF3zft5
3RPm15jGYe3tZ87NC3ZWfRPXbhN/dayscVb57MSiKV9yuiZZkjmiyZDswzHp
adB1qc0WM//hr32y1ZpTPgzXjHeOeRyj55VLzwx+bebYIDfz/snNXk/bYyPF
ytxObEy/c8fN1cjN5DJyJ5l5xzfhzEzu/Zu//tY9VtZ2vVbza6Ua3JNfwzla
2/IckJs7Pu44OsXjJe/HTm6OxM2pPp7nwkjzcW7WvPjsQ980NWHXiMmq5Gbq
38yVl1i48zinmEPPN5diEpWHjv4Q+TAmD/MuK3eeDM8BR8Z1TwfZVyzt54lr
d7wYiZu1rf0cvxvrWm52DlhpbP47+rXaXWIfcnO9d85LjCi9WPX6Est2PhAx
ZmJXzcN9Hbu+CnpJpBNf8CM82n595+PUvAZLep5gjKRiGZmH7qz1htp+njfO
ddSU27v7Hvk+5XF2Lqb2zO+Yb6fvqMcHJq035bc46/+Ye6cVJ1b277Jzs76X
HEf3W2tMXvY8zfJnuLacmPm8PXCzM/SqXqDHDk7MLI/HLbl5ZOZNbvZcGhMT
uj+DnOw+aK+fcmaxRQ4L12Cdm6nfqo/zOOsS+vgVE3jy7z5pSXfuvB6r+XJO
9HEnPdkZX76LxOudB6V7xiFb857Ey/V6YnR4mHeb10QR85Wf2eMClZuCOvNu
7oxOexYbe3zg5OdwDmfOuZRXo9tPry5ZcMePrFbXFW/7PZObqTl3cXgpB0eX
K4PsSxb2HHba75p34vAVN+t60nVT3F/KmbdiZ/ei/P+Fm9N5k99j8lzvaMus
4+I5NB7CzSsmmHLLJZa59jd7cWXi5vqt2n26zojUUcXI8nGojx+X3yLV/3Cm
7nzQ3Xlcm+TB2GnTcwL7pPqFSbfXmsirwZxu8mrE74Rx8+rzTV7lxOSstbfr
7VnpwBxH8+Ba1TGxaPLWcF6pvrw/PzgjOzdzfdO/GzEyuVnnipvFyImbxeNs
iZuTtjyx80qb7rTqS25++X3BzayrPempab9zcsfP5FIxW8ed/p5+Z+ZR47bn
nvB8Ee5NKG4uXk55NaRB7+Sn280NolfPPcd+5OzEwpo/tXW/vtfgpk7tnozT
+hzgZs+5Ua/iScXnKT8c+bl4pcvv3LHuyutMfTl5m1Peua55Tg3XnKk16368
FogzLH0Xk7c56dH0tXSxf+4/IAt6Pmbn4ZS3Lunn3hI3pzx04jBu6732FauS
/923MdUO7NbBz9F98nPza2gu2sf8GTv+ZvZN8XjMP9fxbNKJJ27eYXafLz0d
yf/s8zzKzUdqZvP3aDK0+oi7Uq00Z6N0nK+TZ1fc7CxIpqOWXO+lq2oMZyT2
nzwdXnfbOYt1/RI3OydJb+b5zsJqiTV5Pd3fxN41f+Zqnnh/0nUnjnfN+V5t
7Ob7lupRp3v1790Ub8i5M4+0vjfi5cplwe8E73GX311znrTqpHG71ixu5m8B
nYeZ7R4zm1djxcY7OnPnfXYOZ26OEzd/9DPvuU+DOTKSt6BjWTLrlH+DjNjl
fUt5MsSSqnmiHBvKuUZtt6v3Ic2Zx8/e3CfHvv+nb565mYyteteam+ePW+Xf
6Dzb3O9+ch+X27wH8fDky/Bray0uOPiOmcXA5/wYT/a731leZvc8J0ZN7Jly
waUYvy6Gjz7l1DyvBuMBOy6fGNn3kX/1PunLq31+XorHo+fDuTnF25Frdzwe
zM2cPOkpr4b05jQP51rn5dRYt2WHm9MzAo95fUDXnp2bxZIeU3hEb3btmbX6
jsYKdrqzeNbnszNmYmf3VdPHPOWG7jRlbYtjpnglcnNiGucr5+YuJ2/n9Ui8
yW16HSYudU5Otam5rbwbnddBeeW81nbiZs65i6OjF0BsRA5O9+a869zs97aj
YfMamoe+G+mzSZyc3qfvmo5LRz37KJjjubmWj5PYeKfpOUtN7KxX7dd9qC4f
14f10Tm37v2Kmfn5k51POedwzYmXEzvrfV1j5b844s/oPNCzv/l23PyQXHTi
W/cSJFZOfmRxs2qU1DHXm6WlimNTronUyM2el0452OhzcFZMdaqLC8WC4mYd
qxwbPJd531iTr+N0v5avo3Nt58nwZxOPg0x5nJ29LzT0u7mTmak/e12TSXOm
Rj3lNiZ/dtwsfdpr/nXcrPeeq455nLtc0M7Pzsq+n5qwa+jOrJNXo+PmLqaP
3JyOuybM+L50bT+HcYIpd4afo9eOy52dd7mZNQVXMYJk4Kmve6uTTp0Ymfum
eXf5m6lDJ8/FLj93OrEzLa/vOvhqLOdwXj95pld6s//uPHGs+IHnJxZOcYJd
347BmKdXTFXcoHxv1IadSV2TpQabWFmv9Juqj/apfklpkrWf3DzxO/et/AzJ
79o9E5Dr6U0+ys1THcfkI+ieqzwvc4qD4/eGv0t0ecG7deKznn83V7oz79G5
mbXR3UsvH7iYt5o8E87PO+vF89RHn58zc8ord01TLudbMPOuh0N570qTZg7o
Z5a/+UAOZ/qcE+9RH/V8yeQ/+hCqOTeL51aeBrbqX+zM+ifFfORmncdcHWRO
3lf5M84a6p0no3hZTWyr2oJ+z52+TZ/EdF+TXu3nuq7ufenBSNxMzk+as9c0
8VwZHifouZ2Lm1LdEPLmyiOh7WIa8q/rw1VjRPW1V74O5oMmD7OeIM/T/uRt
5j0m/4I8FXzfeR06X4Zzc7qG51FecbnnThYbqr6hczP5n8epN7sXmrk7drm5
OMy5+YjHeeoz6dI/iNzc6csdN7uH2ftO3LzK8bzLzSutz3ml5Z67/L7p+NHc
YGJjcTPzJpORGUPm8+n06MlrQJY9/Y7/tafnMA/Fahyyf8eo3Xndcd5T8mjX
fvehpLqHusfdz6L7jiROdmbmd4E+n9Vn0DXq7Br/CDdXjT01ac3yFrNvvVdc
aac5k3/dT93NgbytOD9xs+Zwa24mO+/GAE5+6F3v8z1uvtOcn4nefCAf3RQT
KCYTp6pvsZhyEU/cTN5kXubEgc6h0rGLm+ltVn4MsiPzZ5SO3Hk0SmeupnqE
Yub/RN77tEzbXVd+GnRw261uum13lJbUgliJ2ukXxSJIToixB916owyMIUHQ
o4DBGDLIQMKTEIInboQTQgY9ziSTfAHjT2AI2B8g5Nskzy7VKv1q3Wvvc05V
3c/zvvbgUFXXn3NddVXd3L9r1dprk4m9pnDlzyA3TxnSOz6P6Ri8Z5n4ndeE
Xu8pG8P7Avr6/+t//fEdV4udpBt3+WrUismkYljtm9b5c3kw5M9gv23mNifd
m57o5BehF0P7+L2Bb1scx1o/rxdMQz1hEjvrueoWa3B790qkfAzXkZ01fS56
GZxRfbvEzb4fc9/c88zR1fCdcrNnzU19B1MfwF1upt/BdV7xaOdHVi3e5LN4
hJu74b1VqDenfbvsPK1L/JO8pCutj8xDRniT6Xz9zZ3MRFZazeuvvW8JtV7q
zolNOY84uGPZb1/uC//hG56s7cU45FFyz4qbT9YnzZjvgc+7vjC+jH0BV/6W
1eefPit+n/z70HmRT/MJEzfvnje3resmZqbOy97WfK1rXp+37j34vIbeF3th
d/lzei0OZz0g9698uVU28xEzowfKbn6GMufouehqCdNcyql7jz7bz/qclXvR
8XL5i9V7pMt3oM5bzxM3J59D8gLreTHzV37lKzd/MzPXxN93nHj1YRQ3Sz8u
jVk6c+XP1aN6nhQ3pxpA90cn1u24tdORnZl9f953dPN6bkd3Hkl3d83ZvRnU
mL2ftuvS4ibmUlDrrEH9Vrqs8jDor9C+STumBt2xrvc7KW2685CIm1N+M5+n
TLq07cTH9EV0+nNaTr8Gudnz4rp858TNE6PS/5t0c8+Rc9+IjuE+Ys+9INee
cDPX+/tx30axHusOU40hl/l6Mv7Kzzy97ljU/cPantkWYnEy+Qk3e18W3zbN
v+LmlV/0hJ3dv5v05KQ1JiZKv7V36+hJIPumTDrvKeLMeXcOqJETNye/hPRa
70utbXe1zombJ/b143Gd5+lNPVce1Xd1zB3/8Ypb/XtBX/cuN5+MzhOt61Z1
ps7N3tta1768OuJQ+jouDP5H37vNS0YWc5OhqVPXuTFzTtvUfKtegMyf2x2r
DAxnZrJzParWL/Ezn6vHNgd7dL87Nw/s3DEzOS1lERfTOtfRG0HvtNfXdZ6G
xJzal1kRXivHzAhlZWgO5WcUM4uf5fGV/k12ppe5dG33aCQmdS5e+Zi1f50v
70UmjzSvh7Mxt/P+JumYU2aGa8//x//0+Z23pbYh44khXaulXituTloxmbnz
cUxeD3Kz79PVGqbjdLqya9cTN5MxqdHuMrN7L9Jyvz9J3pC0fPI5rLi5/B3J
I5LOgcudfcnN7l8WwztTa51r3aov1HG+89kv37i5XheL8v3qGiRO1n48v4mb
O1/xSht2zXryJCcWT+dxws1eHzj15+YxOg7hb+pinuRP9jwEPp/mTSxFf4jn
e+3Wod3497OvvuFmMdiKD71mLc2vc+T5OR+f+k46bma9n3TIVLfH/To/dcfN
Os4rmVTXILEpvRRdNgf9ztNndcLSXvO62lceDNUrkpeV//Z7f/itCxvLU6Hl
t746Hxi3ht6PXwv3QIt1xc3yNYudL76ND/N1vCyeTvnNK+15yqDr2FleZfbq
nnTn2qb6brMvSs3DLOdPrTevfAE1lJ+sOjlxc3k1kmZMbmZmxa4/uJaVxk2W
pQaccpCL6VQ/6Nxc3gz3NpOVyZY1XzEzuTn5m51Zu2uXaiE9J2/nPsIZOHEx
c+vcy3LRnJte2p5JR252xk7aKL0F1JHFxZ6BQQZ1PiQTJ4Z133LHu+TpdH58
rGPv1jr6ds7DXd5b53FO739an/wYrgsnLZy9pumpKC52phQr1/M6H7Fn4vaO
mxP/upeC9xj0kSTOTR4R7fdl5OaJiSf/BjmXvuvEzCtuduZWD0P6TiZ/Mx9X
vJqYyHm1q9nScdwDe3pc6sF3/HXVjXe5mYzVLffzfTbHYTyPoQdfx83kzeRl
du36PZiZvNx5eHSuXKbMjm5ev/favc5+DuTm6TcBacf6LjPzo/i1mJk9R/jd
uPg1rlozs2OYB+fHIzfXeJM7d+XwyaPxiObs3Lzj2SAvS3fe8TWLr7Wv52u8
gpsfrQ9MHJa4rxhPeib72rnGSk5UPl0xNtnXGbDYuwY112JfcbO0YdUHahl7
nUhjvtOOr/1N5M0QC9L/rHk8JyS9H2fV7h4geZlTlshOTvSOJu8auOZ2Zp7Y
eepvwgy6GmJEeTXEnORM9ULxmryUO5f01KTLnujIK+3afRg7enM3P8+PHMnM
iS4vY4el3RPtXoniw6QJOzvzNb0V7nlIOrrnhjg3y0Ph50V21THIzdSMvUZx
l5vFyt5TO+nr7tNwdnaeXnmcp4wKZ1/PxHiEm33/lLUxnUvnyyA3O1NPfgzX
+579jTxxs5aLKVJfiF02IockDvIMuNW5nr4315zJUFymofM4OdbkpxAPd5l6
KcN597he4zYNz5qbvjueu6z7mxMePtnOv1PTvikLQz4KenNYx+deC2nVPlfH
zDy2MuJu3gxlowxa84qb9Rkmnhb7T9zs/Ox+DfbZ7jzOynVO9YPya7yKm0/z
6Oht7nwHXa6GcyL1WdYG1nBG7biZxyhmFivXqHV69F4nYmTxMV9rSHOuwfNZ
1fuRe1Nu8nTv0NUB6np13Dydk+vyzsbO1H7+l36JQW9OfbbJyombk27babvs
he1asrNgYkdn14mdnS93PB8dH5P1pz7hyeOQfBZ+HG7T5XboeiYfh2fNJW6m
d6TzN3Pfjps7T4fvJ472Y6Xz6LjZ+zImb4lzeWnOu17pzjey0psnPXen5m/F
yUnP3uFm9dDe6Te48miccvMJOz7q42VWr5hmqic7PRdmm61yDE5ZjDzWcTN5
a8omWw1mzOk6kb1cR2bOh2vQt2vd1Ezyszi97uRm/2zTtaP2TN/G5Pnp5p5Y
NPmop/eSPitn4NtnevU2Szt/5nOuIWbmNe20Zg3VCnY9A7WcvmivDxQ3T5rx
iplZH8jtlTvX5XbU+ldz8yNZdMnfvOK+jgPJa9SZnZu1rPMmKGdOXg3xMjOg
k34tLVneDHKzagKlNU9c2unFkzbfXZfkc9b1Sv0Td66/MzL7CPp1pCdd773T
m9n3JHmf65GcmHhZjOc1fRrs99f5HMh0zs4/+cmPbrqu9qevwNlS3EwfdfIq
p3Xe43tXh+7ymLU9+dnn2tGbO04Wc3omXcqc8zFxs5Zx/ZTnodcTN/t9Eudy
rp9YmAwuluS6uq7kcHK7e6nJ0Unr7erydjl6YmTXgKlvs0eJ1/exh8nEzVP/
FGZF0yO9y80TW7BeqvMirwbzBpwTHmF38gx/99/d5xFW9HM/Wb46t9rPmVec
S27ucjO4zud+pg5w9Z3Q+bmfOO3jtaSuA6+88jrGSsN138/qc+706MTDzsns
KZLGjtbsfg3Pt0t1geLmlJkx1RDyNXv5TR6LHW4mI0+Zz14v+Km4edfbPPFy
yh0WN7uvedJDO821uJmeENYKOjfX8/LjkpnrtXRmcfPEzImFdTznfr9W3TVM
7039rlfXP12T7neBxNZiZvm/lalRDCyG7npqp2XOzcV00pDJnB1nikcnDqX2
VzyswYw5eROUSex8TQ03adVdP273luz4NJyNnSlZJymWE1/ucLOPTtPe0Yo7
bp4y9JLfortHYc5Hys1LOSDuD0l6+JS7oXVfJm727brcjBpk48TJnjO30rDd
Iy0+53O+Ju8666S6PdYIOjeLm07YM/lLnZuTTvzqXIX3mtt93r5+4uZiK3Ez
r8vlHK868atz7l7xfj3/QteTmWrpXO78GvgM/LOXt1jfQz/OM2PnN5Mdbp7G
iu+deW/flavOvMPCU9ZGpzXfrVswbsfNO97mVZ5zzfMu3HzQ88T1VOe05NXo
8iLIzfXa2XliZfdMO5979oRYuR6Lh8XIxc2VN1xDzKz+gMXOp9xMf4bey0qH
Tzyr/ciy076eq91p16n20Ln5je4vbtb9R8PLPhID65HM6RnEJ9zMeUtfrsFs
5sqac4+Ac7NzvPc7oW8keT5Sn5TJA+3HT/uI2TpuZibIip0nT8uKm93LkeoY
yeArbvbh5+jz+jbSr1MGyCk3u3e609WTX8X919R8yZGPeDikDz/Cze7RoB7s
63Z7rXgeHt+fb5e0t46dJ25OOmPHBWld4hXn5mc8JKfM9Ig3RGzoc7Lvm7PV
xM1+T/GID+ZVtYnp2Ol+y7MGu3PprlP6nPn517b6rvF+aud78arvTcfIO+y8
8xm23Hz1adzxLrLvHuHmbvupv4mz826PwJPxqTwa1Jx36t2c1Xx7PUprFjcz
a3mnx0paz1o9+XTJ5fJnkJHFycxTkx7tuuzEsXx/u9yc7jfEsH7cbl++7+5a
T1qz5+b548TNfK28jcv4wB4T56ZBbiYvVs/stJ/XD4qbybPOrDqvxNBd5vN0
3infzmsc037eKyVxM3k2+UKS7uz+6E4bnvRpz9ngtfP6QHozdnLhViPpzDvc
XJ89dWLqwmR4nlunx/u9ge+/8jYzw4LL3d+w44P2ZR1Tn3BzlzM3ZX6Qm5NO
7fnN4pYpo2vFza4/+6BWOLGFM1nHR6c9Lk6YJjHgs9yVuGp1/jvHVM3YK67D
znXq2Lhb190r8f6k+5yVX9GNlJXYncMznx+5OHnVV8y8U1cpb0fyeXi+nHur
V0O5H87OzsylhSdvRZejodfP8LPv96m05s6nsfL/Jk2YjKc8DOfMad4VN3M5
OVlszOfFxuJk+TPqdXmcxc3SpOv1xK/uM6FmvPteqC8n7p3m4DVN9zbJU6N1
3p+R/hK+L3FzyqLTY12vxMv1SM9y4kl6i//P//0PbvuKm7WfD+fXVY2elk19
uDu9fNLRXTcm53aZHD7q3Mh+Yl/eB5CbJ8+GeDex85RB536FxMXOk65J00vu
eRo7w88r6cJkXOf1qZd2eu8pQ4TXjfOLmz1no2No6rVd38CVd2PyP3tv7MTL
3HbKZ550Z/ZdSfslbu6WUf8UszBX1lkmsQrZfFUvNvEjuflZBkzPU97wLsN2
87/ifFcj+bnl9dj1ZbAvYvITnPTf3hn0P3csfstgsxw4/35N3Hxy/VMGBofz
p5ZN77G7d9DnpbnqtWr8vvGj7/18/NY/eeNd3mHlFTez7yDXJ3amv9mzmidu
3mHod+XmA5254+aJ4bwezdfrUb34yMyPcHPHhcXANeTPUH6G9GZ5NsTKeq71
yteox53zSnlu6b2vrt3udXCmnvzTyU+j13X9qf3XMrL0zfds3Jz6bydupu+i
RnGxa81kXnIzWbGWOz9zm2JsDWfkqd9Jx/I7TO3c7Fp18lhMXg7xs3qT6zF5
SLjPyoNBnd09EVyeGJP6Mud03dlzNJhp0XFzx9V+XuLwdJzkJ0m83d0zfJG5
OfmdvR+268zdvKofJDvvcLNr3ckjnXwY/n/dfzsXn6w0wDRn5/1wJu34Jv1+
3/HjCSPt8u1p3R89Fprz0dyRidknJvaMj905mTHsrDyxc/f+Ju98p0+Lk8mX
/p0RR0+f5+573hmJSXc+u+m43Xxi5luOxr/+R21W88r7LD5OPbrrtfoa1pi4
2XmYGcw73Nz5pqlbf2ytmd7m1KOu4zrfvh7V90TLUq+Trg9ex4TdevG3ezHE
zuRmsTPrAvncubnLhOsyL1K+xsTDk4/8EW7euX7k5nrOexmdi7RmacvVV9u5
Wdcs8R2ZWdxcI+nEiYe5X6c7Ozfzde2z8nusPBnpPqDj5qSBd/yeBrlZTKl7
AHpAyN+uNXdMTT+M86d7eulVcAZ2b4j7PZybNaZeh2Tm5PuQ94Pbn3Cz69XO
zFxW1yd5p3e52flWvCxufTU3a9Q5etYF2Zg1gylTesptnrj5N4xV6dFIXlNy
M+u8fCRPsrNTYospd6Fjsld4VlP/4xO+nbZlPvXJOfn76t5n6ifO7f3cyMLp
nsW3PVnux+s++8TN+vz5HdDyaU59D/0cuvf0ap/zjs48HbPzHPM+q2PmLoe5
4+Zar8+e2xYzk5t1vF1u7vwcndcjzUUN+6V1gQda83/2O79/12/Pf+efeNH1
TjF0ZZ8pFy31CEz8XPvUNn/1N38Z9VSyqff/U/2fcubIxs7Pvk6eDX+/ZGDm
Xmi5OLTbZxon3LxzT7Gzv+ePeC4gvRnFzX7/QW5OrMwx8XJav7svmdnZVcun
+SZerv07Lk6vu7l3uJn5edxPHN35PtyjUcO5md5zZ0z2+2Bmsc7H9erEzZMf
xL0eU+aHM2/HzT4Pz6c7x4mbeW1cm+c1SfrzjgYt1mQPP+dRcrLrx6n3Hzl2
4mbOJd/F5MvouLljfebHkZu7QTae6gM77k4aNH2xU23ZipsTn/h76thzxacn
w70oj2T6ut/iFXqzOM0ZeOJm7y0+Hb8yPlb3G/y8nY/pv+G9G78f/G5091nT
Z/0qbt4ZfA++buWrkC6snoQXjbhh5x29mR6MN75o5U9fmVnHXmnEK25esXO3
z8f2aajfCbk5+WcT4001g3d1ZqZrdgzI+rfiZvqH2aNQc4uba0hjlhcjMTN1
Zs+kk3djep+saSRr7tb1rdia9wbME2EexoqJOz5P9YzpM3ZvRncNlYEhPVl8
mvwFj3DxDjN3LLti8ZXOnPTmHW7m+i4T2jVw6c1aJqaj9uxMnfjP1yVupudC
HMhRy52bXSvuMjY8Y5t+jB1uZo2keJX1g37sxOMT21ctaX1XmSvu58F7CdYb
7tQJel1g0oiTtyNpvt7bejVP8kHvcLNryqs+4Su9ueOWydd8ws0+Tj0Qzidd
r+vUU/lRr8Q0yMWP6Ms+nJuVSye/srPt1Lf51I/r8/p8fm51PtRIvU6R3yH/
DPy+x/k2ZW2kz/7RGtGTe5lpuFfez3v6zohllTUnbq3x3/0P/9Uvthm4uesP
SC1bevMdL18Hedm52XM0dvk39Tfplr0bNy/4WVpzcTP9Ex07rriQ7FbsJX9G
qoGb2DnltdHjQW4uL7PYWZw3cbP4WMOX1zzi8aSrd97mSadOg/3JJ27Wc82n
/iUn7JzO2XVyXVP2VNT9iN9zuBcjacjJIzF5J+TNWDF154voNG2OlMW8Gu5l
7o7j26z0Zno+Eje75uzbJp+G59aJLcXhqdbOuTll0E06s3Nnx81al86PuRee
30HuTv1bPMfuEW72usJnuNk5c4ebU58T6s06rp9D0od3PMyJm3f3V6aG+pyt
9OZVtsGKm9Mybpt4mBrkLjevvB56v69k5rvf1Ydsi4nZyXApt25i2//tJ//5
rf5PjK05U19oze1crHMnX/HcnMH1vvk8fT5+DdJnnrjZ/Rvua+/umb4oY+XR
qMfiWdYDlr78o//2X15YVtzccbL277YhN9d1u+NmeJt/7w+/dTlePZKnV6zr
TH3CyZ1W/VKfxkG/kymnrGM09wInT8NUPzdpznpOX7SOIU+G2E68Sy15xc3d
OvLzhW8/cLl804mbO+192kb3Auon3unb6fWU3UefDK+XtGo+rx4yb7zN13pK
Zl/rOfOvyaLkRfqS6fPVdqlGjpy8YubaftKinbuTb4TH7Fg28SjPQb7k6R5B
77nOt65L0o45P73Oq2zoxM3FheRkciGfOzenniJTTd6Km8nInhnn+7o/w/tc
K2fOvRun3FzvX7wszz37LjKzTufPvieJm+XXcM9G0mkTMyd2XnFzDZ2re4+n
Y8tz7fWLHRevWHvFqmTdiZtdg+64e/K7Jo7islW9IJdNLNVx86P85cw46Z8n
3Cx/B9nW5y2u+v7nX71x85/87Md3x3Fmlpe1thNj+/GdkbneuauG98g+YUo+
dt8L3pOkftmPfG4dz77HbxE73x/W7b3xGptmvOLjpD/XvOmz4/Hqu3ThZurU
Qx3flJVxoi+/Ozcv2Fl680m2g//en/oAKntOjycZGs7PSQtnP0Bmyj3CzLW9
vLzyesgjrdfKiBZDF2OuvCzpPoTbsB85Bz0aq8w+Xpsuo46D+X238eG96P6g
835zmdfvsQZw8hOnPoId85K5nZtd22V9IHPw9NzrDBOf7+rPk37u79G511k5
bT8xs/O9+6PFiKkGzr0XXd4El616qXhtoEZlYlBD9u1q/Q43i0u9ftHzQMTp
q/P1HuV8Hzx/HdPPh9l34mXyKLObnZndq0xunrwT5HRyM3uxOAcnDTrVBabn
fA/d+fH3cjJyx3w7enOXI7fiI+ftZ3j22fyKV4yJmxO37WS8iZs1T+mSxcw1
ioXFzTXEytSZi5HI0c5v/uia8xuf7PX5lG9yMqbfO6Z9HjnGrof+ZKTfCHa8
QfpsyLHOuCcejd28Oh1POXR+3E5X7ur7TvwaXwRulk/DteadWsDk7e38AMw6
2x2uqaacj2I57wM45WaoZrBjavfzipvlBREv6/H2/I+/eeFuXpNJt9d7Ud3k
xM3TNaAfXUN1la5Bc3/latCjLX7W9ZKm79e0Hl1fFjOTm12Tpk5bPf6cbV0X
PvFskJuTfyPp0OR2P09q5c6sdf7e85B5GJ6L4dvVcrF/PXKuxNVcLl1Zc6v/
i17vcPO0ztc7h1Lv9f3Iy87QabuUF00mdF5NfVPUJ4W680ojT+/Xc6qlL6v+
juflTE/+pZfYmdNz6pxNfVsf5G9q0Unr7ri505JXPg2fP3EzvZnyCzA3V3w7
+TQ6FiJLJC5KGcQrFk3jNBfjFb/1Ox9NntuT+jSymLRd6smlExY312MNbavX
NYqva5Cbaxvxb70Wt1Pj1n78TFyHFjd3n9u37Xu2YtrOM/Qx/RjSaPW8+35N
nxXf+w431/Fu1xu5Frvs7NusmLnmFjOT2ZnlXM8nHXlXQ15xM9d9TH9zrZPe
LI/zyn8weRDo2/D1q0zj3aFzJNOm+jUyX6oL3BnF2GTmehQvc1kx82U56h/9
2vF6dDrzdJ/i9yrkZufkNzyMc5I/2nM16NNgTSB9G8xtZj0g8+Ymfu68x86u
XR3fLk+7lyP5nNOcyavhfmVxs2rw3K+r550vI/G02Dlp0MXG5OHqmVfnw3mc
m3e5eBrMf5t0XK0rFt7hZs+CTvzt/VT8WGTolBn9ZeDmjpmdnZV3sapD9FyM
jps7Lqbe7Ll12l/ryAH0j3puLrnQszRch544sdOdmZGgY+56hh9hUXLYIzzW
ZaORDcnN8l08omeKxVR/R24VN4txS2+uRzLz93/7qz8fn/980DvtdYXiaNe+
ydW+nz4bZizzuurz3emNOHHzybXb/R5wTn7HyM07fDzpzJ4DkkYdT8xcn5nu
b25e40Pt2TmaXpAVN9PPI27+Lz7/FyMPT1x8wsyv4OY3zLzBze6Fde25058n
Ty8HmXm3vx610cTf5Nekjar/3062xqQ/axtmdyj7Tl4O5RzrnPy9uIflK7/y
lWWGNXOx/Z5h5TvXMZWNMc1/q6+8PrLHol+DeqS2TE72kTKc+dyZueNc92Sk
ZYmV3YPR9TH04xenarhPO3kmxF/Oq+ql7XoxvczJ2yHvRa2veeRbFos7N2su
9yOf5BiLZ0+ZM3Gz907hudAjkjzVfu/R9Rg84ebpPaUMD52b/M3ybLhfwv0X
qeaPvffcv/woN0+asZ+L9nXNmusmbu68z2Rm95v6/3qyNLkzaWqcI3Fzx9Ge
i/cIN/uxV9y8OxL3dlznWXTKmDj1PCdudt6SHiruqiGeJjf7fImZu+PTk6FR
xxFTp2uSrreuA8fO98Pn635P2PV2pO+tf8eSzrzL0afcXAzL+50Lv6I+7xlu
nvRmsbO2L38zfSLi5s6jcZqpsaotfLZf4CPMfOLRmFhwek5NNPW16zwJGmJj
53X5mfXorDxlNXse3YkO7Xq09Gax83Stdntyr3rQdPc08sYwh9nnr54nvFci
N7tHXNdUj97LxH0aiZ87xl7l0nU8vaszsx+K75+42f0Qu75ncphYzHVm1aV5
DWCaix4Mzik+1nLxPZm7Y2eeo583vQ8+x6Rfk1Ndj+32dV/yCTf7HPRvODuv
tGeu86xpsrFn9bEmkFwttvbcN/Jvx6pTLz/P6NjlZu67ypfzY6xqBt2nkdiX
Q6zj3Ozbp/qtEy5Kx93hF+fYbt5HPdMT+7h26X6GNMc0n9hU3gxyc+K0yk8W
N+/wsB9rxc3abvXe/bvQsbJ/d3a+H53vIW23812ZPgOx5On3xK9Lx83S6sWv
vO+56c2f51xmnd/DzIx7IB5DurOyNVQnuFP/t9KjU4ZG6in43nWAEzdPWjKX
if/IZTvMLa+z9k8jHVPcLF9G8WqtK84Tv6rniXubU8aGL1vVEk56tIauxZ3/
+8rQ3XU56fvHe4+p7k+MTm7mXMXMvH/hXOJm+jRcv089AHe52Vm782t0XDz1
HlRuRac7Jw+zezE6LqanuBtk4ORvZv7Z1Hv7r//ip5Gb6ZumJq7ttM/k73WO
TR6TxM1T7z7qx+Jgn3OXmz0X2o9HD3PykZzq5anO0D0YKYfOczSk0RYXd97l
ycfsGrWz9NTfhPu619m5ufN6dD5p95xM3Dz9Ji5fc/Id+D6+zr3Tnb+546EV
O7tXYuJmcmznLZmG2MV1cW5DfTl5n32fWuaasjRd8qfz0ykHcxt/P1zn9YBa
l/qsOBv6dWcvk/S9eHSkz/5Vg1l+3Xd8Zw6+Z2Uo8xqTl/l7QdKWOfez3Oxz
S4NWrxVpz87NJ37mrpf2lMfxrhqzcXPyUZzUBO6wNkf1MtFgZlqnOYuZWcvH
vIviUq/5I8tSM53qAR/pkyJvSF2HYlEf4maytHPxdL+QrsX0mYiX9XjJzr76
RpTjJ1+15zbzufbhNeRI/Mrcis6r4R7j1TLN12nMXMa+295/e6VXr7i569s9
cbP7MNyLMeVsiJtTbWDa37m5ai65nl4RsnDSyidd1pm7237FzR23pnwPMnbH
7sm7wW2mc/hU3Mztkh7c6b3aVtq11xh2GrSyPna52T0n7nV2fXaHmzuPQ+e5
8PWTxujz0rexYpaVVu6jGFQ1jt02HZt67py//+4+YGL52/X/7Ku3ofMUr+5y
8w7jTdrxxM1pP/ri0/vz3n5+/9TdS/lvBxM3rz7z0/yM5FF6xJ/u19x95NKX
Nep1l9XM8WgPlMTN6qnCekDWCb6Km//Zf/Krl/Gbv/3PWg37XesALUdDXoDf
/f0fLr0Dzs27fg5nwTpWcbOO7dzoumppoMW85YVwjVc+Y2mk8kx4r7viPXHz
lLcxDfp9mTdRTErfcy0vbpbW7PcX3iNmxc0rLd51Zl+m5czw8DlqG+VwaHh9
YA0xG7nZvcPua06eDOfh6XlxYI3k2XAtWvs6Pydupl9j4uKOm/n+nWXFzKUv
eyYz90lM3HEyc553enh7X25yb+LmnZE03t06w46xu/4q3kebvU9OuTnp0WJ1
8jJ7wbjvROyorI/O25y8zK7lPsrN3XbUm+kHSdpxd16T9ux6dmKZ7rfwXT7p
xuTJ4G/muz6GU04kw4lHVdeYtpvYtPalh9m5sPOBrDitRvGxfK6eseyae/Rr
bH4+3bnUMbx3io7jPgs/H+fmxNKJgZ/Vnf3eb/rtI30Xus/ike/5NG7MfPUs
i5O9Pm/FzTv+5h39uVuv85BX4+KB3sjSWPk5fv0bv3TRnN+Vmzd7azNHo1jW
85G7XI2u9m/F0d7PpONG1r6pf50yK7r+z/WaeXC3fIvrcK2Z2XWn/oyaW3xM
XtZQznOnEbu3e2Ji317Xp/No8DP0vIzV50Mful9/52Z6gT0Dg1w8ZWt43d/K
p5GWkzWd27s8j85T3enO0q3Jur7dlL3c9Sfs2Lfzb3Ras/zNu9zc9QNMHofE
qCtPhI6j8/A8jcm3scPNJ+fSnZ+8J+JmZmowt5m9TZglzfrAlLU85ciRYb2f
Nn0a7ofe4ebkAZl8zaz/S7w8cbOzrJiwY5xJj57GxM1imF0f88nYYdWdbbvx
TJ/ndI3EzVXL5xlwfu6PcvOO55kcz/wOnZ8zNI8v78sO454wtH+X0jHSZ8rX
O1p9rT/5fWM13FcsP3M9JzNr/anWnGoFEyNv+TeutYLsuV3sPOVjTLnONYqV
tU3pzXr9qbmZPbZXPTa81o/5ZifczGNxMD+CmWjSlMWs8mKQe8nN8vSKnamb
SrMWN+v1CUOLm8XjOr5z8+412ckX6dYnXZn1hzWUEZ1425f7PQv7btd7Jy+W
7jnxKBlavgVnaufmzvOc2Nlz6lxz7rh55deYdGW+7jTqpAmvfB47/U48m45j
4maeC3Veeoo77lzV1lFr7vTrVJvYcbN8JdSJExsnbXmVpeG6tHsz+Jr86HWB
3EbLPLtt5WuefBgTB+u583aqGUzc3C3j+/V8aGdq7Tf5KybmOWWKjoHIn4+y
pj9OfhHpxDuM+Yi2PvHdynMtDi2mEjdPTPto3Zr30U41a+xnQkau5fKQdOe/
ox93XvcVNycv9cTNO8O3n67rSc4G55OXmd4M+ZnFpl1WRjoHLU/ZzStuXnL1
lZ3rOfl56rc9DXmb/8HX/t77cvOOrzl4NZIWuuJnrp+4j7optdBOa9Zz+S1S
hgU9F+rlJ4+GeJncLN1Z63cZOW1Ddpf/l2yu4TV8rrena55er4b81bp3cCZ2
Nu6yOnxO1RaSmzuWVV+/jmu1rhhu1SNl4ubkDdEQm6v/dcrrSOw7jcTPaRtq
3ykrg+tcV97xZkw+jsTN/rp8LqnXtfsYJr3XeTVpzB1bT9y8ez7dusTO7MGd
agdfwc3sw536kHTcnJg5bd8xdNKQybi+bfJbJw3buVnryNEa9Dgnhui0wFOv
8Q5/PuP/SOzTMVE6L2fD1b6JFxPXnfpaLr7m2ufDY6dhTzrsybWddFfP4tC2
pTXXuaUegcxa2fErTzWiHUOnz3bl0fDP5OQ7Ii4lq3YsmzT8umbyvYiRK2Ob
vRxrGfn01KPRse+bvOYNf4Z7NYqfdV71fMfnXFnPKfNZurMY+lPqzR037/iX
TzRUzpNYeWJEcnPKxHDfsvNyMV/x5L/81lfumNk15sTmEzfT39yN0p39WvG+
gWzb8XT3ObgerB5/N80dvwPot4RdBvdjXHL1rv7tmr/zT9CnkXzEXc5G8lZM
Xg1qtx3Hyo+s49Dr/Cpuli4uPqWPg/xOT0unP+/U/nX7ddq0b6faQdYGdh4I
z9JL/mHnaudm1tqVT8O5s9O2Vxp3pynvcDP5XzzP8+x6Frp/gRl0Wp/q9iZG
fpSbu5znjtfdSz15MRI3u5+EbL7iylNu5v/jxM3uBfbjPVK/5fvt+iaSBsz9
driZvLjLtJ022um4j3Kz+4t9205n1vtKLKh9PI/adfWVbrzSnycfB9+bH5PD
s1JSfenkbyenyrvRsayuVT1nL/PaR34M+dZrnbj01p/P8pp3uVm/O5CbeZ6c
S9vueDbSeTk3l1/Z85k1ipvF0Fwvdv4i+DS6Phon3NztO/GytvsHX/97cR0z
MxK7dnly9DRrKFNZzDx5nZ2VE6+Tm1mDSC+IMix4XVKP7HTPMWn46fMSN8sj
Qn81PTjTfQ9rA/laXF7XKPHyyhPhWXRdPeBKX05+4o5pvdc2td+OuVVLmHwY
7mnWMXhsvk4s3HFt0omnmj/p6im7Ix1Tyydu3vVkTD1InJudLTmoQU/H2GFr
1v4xR8/PL83HDA/P0RBTf+ezX36jPzOvWdzsWRkrbl7V4XWejYmbV96QySfd
+Z+dpbkssebOb+wdM1/yX9Hnw/u/kZvZs2+lK67Y0N/HKTd3x97Vi9Mc/ty9
BSe6dK1f8Xlpl52314+RtGaxX6fPdufofJ74d7ruSX/2175v0qvT8l3/T/ed
6bi580eIobVO9x/KRa7B/iZaJk2382pMw9lZ59mdH7efRtKsybjFzcyYc0+z
uJke6MTN5OuPrTXv+HCZ15CY2X3PyYvhw/PvxIDqAegZcVM/k5TZrLnor3Bu
9rxnZXNMvVCoT3d6cx2X+XApUyPdL3T3Fx1H3+aH17rOi9zs+yaPhjzlxc3K
1aDHfMXN1GFTbaAe3c+RagknBpaWyOw1Z1oyemJf6cNiXR3TuVlzpzxocnLy
Sa/yLlYejdX2rmF33OwsnnTXzgPc+SQ857nmdi+Gsyg5c+LmidmdgVPfk1W/
bdUCUmt2dvY8OvI0awOZVy3WZB3f5CVOHNr5Jty7PGVtrLh55bn24/i9AM/Z
+adYQ/lsna654ubEWd/9gx/9f//0N//Tu+Fc7es1JqZ8ph7Pecy1UL1X6Zan
vtmkp7puv/I8p7nSEAdTI6Y2m7iZuRn+PTh5n2TjpPvKBzO974mb07XY8WXo
+5F09uk9Und33uz8Earnu6v/g25LBr3Ue15zkpWVrH1UN/hIXgavSeflcKbu
agMv2wSO77IyVn1RyNPu6/jU3Hzy+/3qNTMcOmYuNvvTP/+zG/c5N3tWcuqh
zbo+9Txhv0DxrZZ1NYC7PJ48HYmXa7m4mZ6KlV/CuXiV31zzqe+L3i818cv5
hIztNJTt7NkbHTfTl+Hc3OnMZMxdHzP51nmrY9LkadZ85EnXvtlXMGnbSftO
nOvHmZh4l5tX8ydNXXNqHbVhjY6bEzt7DaAelRft2yZudv7c1bxXOjgz5MjE
ng9NTv7Y3LzSmT17g8+daztPRsrwmNYn/wbz7MTMKRfkFdx880B+/pZvvvof
/IvlSKzs6zs+fkWOxYqbyVq72vCk1U9ehNWcnf+B5yr+SvcF9NDscHN8/1c/
ib+nxM06B/bU9uvo783nSOfXadnd9yNt66+77JLEqvzO63qTjcXL8mTUOvYz
YW/A4uZa/wg3U2OWjlx/v5M2nbhZ74c9BN3n4Xqz+zNSj8Dudedx/tgejRW/
7Qzpx+r5IU5cac7iZuU0a4hzxbpJfxY3a1vuK7a+801cvRqsKdzVs7vh3JyY
+ZSbU0YdM5c5b3m3eZ8gf4uep2OkDA3PqyM3y0PuvEd+ptZL3ZmcqTwN16vF
1J2XuQa9sq5TJq5NtYCuTXueh/wO7DlYjxM3+5xJ254051U9X3fu3Vxem6je
gvTzOjdPunKnfZOfEzc7O3uuG3PndjwVKy36GW5OvMxaQWrp3FfMXI/SY+s9
1rJ6j+JM75HySm5mlpwP+pHJ9eyXsuJm+rX92IkTxM2J0Xxb/RbtzOHs+8zQ
XI+w8Mn2iWE7bt7l3On+I23bnXfHzX7+6d6Fz096cHc87PN3GnM6R7+HSPcU
iZsnL0enJ/v5pnssrvfvcFcT6D4G1fORm4uRS1MWN4ujyd3qDcj1qXZvV292
T8mkj3eejNXclxFq/bre2ilXw5fXMnH0e2vNymyeuPmUnbVPacg1drm5RrGf
+juTe8mtzEd2HVh6MrVXLRM306MhbnafM+fe5efkbVYtnWfCkVN3rqVvz/sM
v8egJs/+2n48fd7M2SAv87H6DfK9kS87Xu7qAbWfb0stmuuoXReTkZvl09BI
OjXnndjTud79IdK72f+P633OlVeDWnHSjP2eJGnZOs/Es75P4uaU39xxvdjZ
dXG/b5FvRp/JinW9j/aUJXfi40is6zkizsud1pzmcY+K5uFz1T56b8Hkk06c
69pwyoLruNn386y6jsknD8jEzSsdbhqJm1/JzOTmekwMtuLm1L974kS9f+fn
Z7jZj73yXZwweL0/8bIei8fSe633wF7PaRs/X2fVxM3pGuq3C+fbjqk7bk7f
Tx43bcdj0LPh34fuuz5xKrPZ3rDn1dsgHmZfk9v6a04FNWf2QyHbnvg0Ok9J
x+CdTyPtc5f3EfzKU69A92xon8qlIzdXP5SP5dHY8TTvZjKT84qbEzNXDWCN
0qOle0pnlqdZ7Kq+2NSS65E1fPRkJL4VT041gVOOxoqbU03gLfMu9O7b4eaV
V4OfjXOzhnMzWZnPmdVdjHynM1/PX9fCszDEdh0vO7+615laM7mZPg96K8Qr
7mtO3mPnWWnKiW+Tr7nTvcXQdT473Nwx85TPzG07TTrNT5+Gc7N4Vvpyx87O
z87NHKyr0+dCPl/x7YqbH9Gcxc1+f5DY19eLc521u31c1/Y6yI7FdRxnZu0r
tk5+Cudi5+Mdbt6tCUxZH+43OeVkH5e6JnBzzfVKZqaPw9n5UW7u7hGcmev5
Tq3kxMwTcyem3uHm6b2rF7e4OdX/OUPv3A9MenfiVXnC2ZPRNWU/Jjk4fSYd
63ba9HR/NH2nJ39DDfEu+ZZ5zMrTuOVmfP61W+2fWFv1gNxn0oUn1uX5keV3
WHuHnd8w+JV9K4s58fDK66ztytcsnVnzvWdu8+TRWL1OLD3lyXW1b8XNZMiL
vnllTWWeqa82c+Wcm93vrMF17B8obn40t3niZj2XH2TqZ7KTwbfDzfVYbOy6
N7NE/HMsPq7BPjNazvpF+Zp1LZyD3Q/R5ce55jxlz3FePp94NPXTdsb0ukP3
U3c+jMTX4ubOT+IsvvJlrNjYM6k7dqZW7fOXjyJ5Mlbc7D4M94G494E8OfGt
avjS8ombPbvZt6Puu8O6n4qbnZ8904787Ppv8kx7DaHrxmmOkyyN5CH5+Xn2
WWMa5E76RcXLnt37ntycONM10hNW4n5Ja95h2G5e5+YTPj3RoznEzBq6nykP
rfpusEZMfo0dr7Cf56QPy+vDa5/28feTdGO99ryP9Bl3GvUpO9PnoOskblQe
s3hZw5mZ3EwPMfVo7ku9uePYiXU5/64vepeb33xuV41YnCwGXvXj1n7K2yhW
/o++++9fHne5+U5nfqBHYOLmVQZa0k47Ru68zDX+6m/+8k2WcXk1lLOcavC8
b4m4Vpqz1wRqvfdCmXTl1TI/L9YZ8hgr/T75l08Y2v3HylZ+o3ub5t3l4NHv
7PWAug7ugVCvE3ppO+8G90n6dBodj0++i45XtZ+4V/O6xu3adb0mv0+ata9L
5+G8O/k52B/F9epOc54GtePEzc7Vrk0nzbnjSvb7c4b27Itdbu7y717BzV1t
YMfO3FbMm/pwv5Kb5UtWjd7k1djhZM/L67i580D/xoI1EzeLYaXFfuNH34u1
fO/FzZ7J64w6MdAj61e+ike48llunj4rMVlxskbxmHpscFv6nCd91s9r4mVy
s65t0pVX7OsczP7vO9y7Gq5t6z6iOx/mY7C+z+v/yMpJQ+Z9zeX11bchH4c8
G7cawc/7HiaTHk2dmHqx3k/ndU61gL6vezU6RvY6QGfmH/3B9y6jePlXv/H1
D+M7787NO9qm56B1vZy7eToe7Po9346B7DjmZiTPBDnZudl5W/w88XH3mDzN
ZGX3UHttnbPzKS+nz+bmdW64WedAbT+dizJP0m8M0v7rutJzKy50/VHcLB9H
yqTzvIqOn7tlylmmxix/beJV+RPIs555l85BzDz1a+H1cBZO5zLxN2smmYHh
27+Cm51ZU91b7UPm7bjZ96ffN3k2yL7qf0IdWc93epv89N/+q8vQeu5LzuXr
ST/2jAydT+d99lpHMrD7msXBeq1tmNvReaHJzLvc/GiOc6czp5y6ib9qFGsV
H3vexY07PnDze/Hyq7j5hKN2uDF5C9J83Tklhux8ELvczPMQNzPnTJom+2V7
fWC6R3D2dbZdacgn3OzM7OzsuvPE3L5sZ7meJ28C/x6Kc3XdxMjsY+I1fqtB
v3Tad6Uzd/6LN/4KrOe61TxRv276BTovs34wac0/5+Wfj7//699+t77arAec
eLfjLGYulD/As5sn3TlxmT8XN8uDnLRk8S+9EeRf5jEzw1nM7Os9127Ho9H1
OlFv7em+wmsEk7a/4ug0Rw3VI8rjzM+LeRx+7ZMOrc+i5hInJQ50lkqMOfU1
2eHmyQciJqxzEzv/5Cc/uoyqISyPQQ2fP3lH0jnUNn/9Fz+9jOTvTno3HzvP
ctrX9Wb6QdzPoeWr/A16Llxn7pjZubkeeRx5mcXOzpNdzZzmWnEzeXfK2Ug9
AhMz+7KUQ+dMneoFvc82l/kge3qunWvL3D5p0dSPi49XDN1xs+dodP7pzuex
w838f1n9GYpVEzcXA72nzpxG4uZHxmlfwEf05mnbydf7iM7MIZ7TUI+Nyo9z
bqb/OTH8xJcrPd3fD+fo/MwrBuZrMVxi4dW+6RiJM50jpdvTX0FWln+D24uN
J/5d9cXu+LmrAdS2Hf/fjme1iBM3v1l2yM5V96chX0ZpzBo73PxILWDK0Vhl
+97l+EJrFjN3DDgNzufMXM/VJzr5llUjSO8FvRzMqrtpzX/8zZvHeZU9595p
ZW9Q8+56bOtc6vxXevykJe9ozd3cZGX2SnFulubvNYK8x2GWRufdJeu5duvc
TJ02eR12PBuTP0I+DOZsODezPpDnkObm+Xb3AtS8kydEXDvpzNSDJ604+TfS
NUijNNmUEyc2nti5GJIea+VzaG7XYyePBDnd14lt6YFIvoz0mI5B/p2O+zG4
+Rd+4LesnJ6Tl30u5im7Dj31QpFuPdUc7vZK4flM3Fz/9+t/b9eThNz8sRia
PVOcRclpE1vu/ubfcSGP5+fQ8W83V/JvTPr2DkPXZ1dcXJ+fuJmeZ+rMiZ27
kd5rd31W77fj44nPycnOzbuf9zRWnmB6MW68jH7ZF06GHk2fc1ez59ycGDr5
JpypeY06zble172n6jVXXD6eR8PLxcXeD5DMTI1Z/oxi5vfi5vJnUGtO3mZy
rfj4Vidm3Kyshkm39iFWU78O9YMmZ4qbmYfs7Jw03y4bjtzMviBTjxNytLjZ
e6l0ORrKBtE1mu5Ndtk6eWZWWXb01aTj8d6J3Fy+jmJm5QLWdUvcnHIxkrY8
sWLy/U5snHRmnpN43jPqPCfa55OWPGV8dF4NHaNjVs8F6TwY9Lq4vtzl2e1y
c9Kcd7iZPmdxtF/fHW72Ocmo1I4Tw7rW3C17hps7/4YYOa13DTmxMT0bz3Bz
acwdjzOXedXfxDVl5+rEzWndxM1iqeIr5TJMPUk+NjdLd6b2TFbW426ORjec
C5OOOs2/4wdOfL3DzZMerefuxRDDURP1zOJdbp7uB9I16I6xuoaaT2zP+VPd
2sfgZnmQvR5Qj1pHTb+WT1kXykGRZu05dysdXPcPYuFpH163XV7eZWex8X/4
2T+69QKsUXz8tf/4N9/wMrXmFTc/qjXL2/y7v//DyM3OZ/Ji0JOhISbs2Lvr
30HWY/6wBpm9Xiv7ovM2dxkYKZMt+T8SN0+eaR2TWXZJd1ZuHnOcn9Gb0zZk
4uQNcV73furkZi5Xzxr5W5Tb7PqsM2byL3e+CnJi0k87dvY52J9EGi+X6/x4
zulY3idQ9wWay4eO853PfvmOm5lpobyJrubPe5M4R3d6c3etuI5+ho6bE0d3
7FzvgxqzmFl6MznS9VqyMRnXc+g6jl1xc+JnZ+kph47n6eevfVf1fWJn9hak
14LXxjOcnanp1zjl5sTLnsEx8XRXP3jCzV7PJCZZcfPHZucazp58H+LmHa16
YueOT1eslphw0l+pr+4ydKdVJ26uZcVnrA/0PI1uvtV5d+uT9rx7/biP+wUS
N+98njvHSlxaHKze2HpUhpy8GvQ3U9/XeteRmetcx1KGM7lZPL1iYL9/YN7y
0m/xIDdfrpUxs/LkahQn1/jeB05xLzM9zRzvyc07OuXNL6GaOujMzPntuNn7
dKQhVmZfOy2Tbks+TX4Kz3JmrxPXn9nzREPzpf7bybfRsbJ69NF3Ld3cPROP
crNfY3qX63onRk9ac+fPoT6tvir6HJzVmDvR1cslf4XYUCzivMiMCx/uE/Zz
cc2avOmsn7zW/v7Exr59LS/vtLi5xqTxkmnpD+/yNlbzdDl2fB/Owjv5x2k4
N5OX6W/uMjWcm1MfksTNYtDE8eRmZ+Ip+yLly+1mzlF3Tnzt3g1yc2LsOk7n
5WCdn2r9Ju+H2HnFxd36ybshHndGn7hZ2lWxpfintN1O8/2U3Mx6QS7rGN/z
n1fMnNjZNcyOwbv9yZJJJyZ3cn/n2Y5TNdhvW9wsn4bYmTV2rtlPjJx044mL
V8sT97qngB6EWw8OMFynLU96uI/O36trRm4W45KdqTu/yc1o+JPZcStWTToz
722dm6f9u3sEP65f9zsPiHFz8fGvf+OXLkPcrOE6szNzjX/vq//0Ml7ZU3uH
mZ2blQvn/eTUR9o5rfMzcxv26iCDyp9c/EltuPMhK8uZGjCzmT03jrys1/Re
sKf3NJJPg1ka3tObuvyurjxtx+vKbJLkbU5cTE3ft/P9L9x85QOyMLl5VfeX
dFFqeOVB9syLTkuVntv1Oql5qGGLMbu6Q8981nP2DaSPmdxc16SYuc7f8z3I
xN172umn7c95DDIsuZkas+vK1GN3mJl8y3Or49Zy9gV0Tk16MzVsrXNuruV1
XYs9Jw7vfNNe7zcxtftC3pubqSN79gZ1Zy2nzpy4metewc11PC0Xt6dMul1u
nphZDNJx6ntxcvJX6xwnH7Zz847W3HFw0rV96L5jpRmn4608GpP+m/YVH//g
d74x+jN2vCXM8J603mn5xLDctj5XXl/nZvm4ua/06KSjT3ytZYlh5VkqZpZ/
2fVlaszyNP/Jz358GeJmr80Th4pN67Wyoidu7hi6rpez+KRN89jpfSf/NHn7
8p255jZLay5mrkzme2b+TvRlcNTyjpvfW2u+8dWVleVvUK8McrP4apVFTD7z
vIzks6h1rO9zDwWZmXoxuZi8TS80M4ldi/Y6Q9esd7I13HMtn/Pk00h9ZNzr
4hydPkfqyfVZef6ceznS4H2Tlun/uziBvEk/btKX03DmSX2yO28HtVoOMiTP
i7qoMyzfh9ZpvqojlM/Cc++0vnij+Fnb1vAsjeQzYd8UcvFOT0Cu43umVl81
gO7NSJ6M1UjcqWPq2pCJd1jV/R9JgxanOtu6dzrldDzKzdN69zI7M9ObQU8G
172Km+mDnrTn5ONImjLXd9zsfmjP2HCGEDdT80s6s/LpPqa+PLHziptr/S4z
PzMSbye9OnF2N5+z8yk367jFzWLfzl+x48Fw/8WJzruzrXhO63Rt5Bf22jjn
ai3r2LnjffKiNGX3VcjD7Bqz68zSpW/Zctf+2mRacXLSiDlcX5/Ymd7lFXun
Y6Tjk605t3OzRnFz6c8dOydupt7s7PwsN+/km4mVxXu33+7Ns8E8jY6ZmdtA
j4D7jJ1zU19rcnO9lo9D/oga0quZTUc/srRln9tz7VJOhmd1SB9Pfg31C+96
9p0M9ibZuedRZrN+E+iYWZ+r+gTWPu6NvmxrrCDdVbpxjcTNEwN2nguv3es8
v2RRsjPXeT/udDx5n9VPj74RsWE91vrSlWvQ40zGrsHlJ9yczm2lRft2nY/D
a/tcp02D/bL9Hse5Wd+DiYOdUzs2p35Ldu64mTnLO4ycxs4+aW6eU1f7l1gz
9djm8BrDU27uODdlY/g6sbJrzVNPwS4PN+nMZOcvCjefMLXYiqzVjU4v3eVm
9z2suNn3Ses6tu28HJ1uTS38EXYm03YMulo3MTQ/HzGaPrtLf8rSfT/PnyX3
X2nOPi5siF4knp2Rlk3czGxmZ2bnf7Kpa9ITN3dsvMvf7CEpvTrp050mzXxm
5mZ03Nwx8xY3H2ZopMxm1viJlch6tZy1be7NSFplx806ZmLPlCHn9YDMtaBH
QozsPQHFuRod77pf2bmZHm/fx+fhfuJ37X+SSadsC31G5OY0T+LhYmH5LFKf
msTPSZ++7As/RQ3xWvGiswZZruPWxIBdT0DPOU65x+JUMit7lnj2HBmTngzn
Znkt6HWWrstj1XMydechcV3e+X/qh+j3HImX0z2J87PXBdY5lyei8zV3XmGx
s/I05NuoQUZPLOq+6cTN8jb7Pq4z16j34L9huAdjx5NRXpFu+46dqSmvdN/E
wYmB02stY43eI9zsPotpG68JTNuTm8lSHSdrTEz9ReDmab9dbn5Gb+70XrKd
e6WdedP2Kw24W568Ickr7f7m6VzJvJ2m3DGqr/PfOPzzIcMVN4sl6RnQdmRD
52bOSa8K55C2TL8FHxNL0++sR+Y7J79x0s13/Ma+z64HuuPmE026O275M5TV
XPxcXg3nZrFz59HofBqP6szi5o6zlDdBb4Hyx+TPlQY99cFz721aL56c+Jle
ZedoZjdrG7EpuZkZHToWvczi7cTL7C/I4XWMqe6Q15E+566OcvIw89F5dtKa
Pf/kzpeOesDyrrvunBhcbKAcZLGaXouftY7+V/IFtcGknRY3em9p9s/rdGr1
PEk+a2Z8aH/OkbKV3ZPBXA7NR82ZXN71ZvF7g8S3zs3SwvVaTM/3sfJIK7Mj
1QeKb8tvkrhZ6xNvSnfmvdM0EjdPDOt5bPXcuTllgKQcjRVLfwxu7jKeyc5e
A9j1RXlGb97h5s7X0fUTFDuQm1OdXVr3RePmnf0+JiuvODhxq2+f1k1svOLm
xMSJtzvG7fTmiZFXy8ms9Ggkrq4xabBaT79G8pIkbhYPurZMXmavEx/iZnmg
uY7svKMfr5h2xdXd3Ds+j9X5vNnOfBpeF6h8Dc9rvmfnr8/+5gNuZq+Tjr+k
M1NfFTeLTeu1+3Rdv/ZawD/98z97c8wdZu6y5UprpheZenSdN/3JYmPVH9KX
QV+H+5qVTaHzTVrxipvpZ5FOL+1+xc+7fQOnTOjUCz39NlDcXI+6L5Jfg9t8
/7u/dhliJWrJzjxk5uKX1BuC7Fa8ob5+Ykn3S7NOj9zo2qr4N7Fz15vEubPj
cO+37cfx3OqOm1f+Cx6fbEz/ha/rWJl9sKk1kzcnbu4yNdwTkTzL7l/utOCO
R3V/le672Isk7f9Kbk5eZt9H5+M5GN6X+hlungb9FF2/bOfg1GM7eTbS9l2e
RvFEx8POzZ+SmXlOp+smbn5Wf36Gm1fzJA6mP3nX/7w6t5Ufo+PgR7nZr3vy
Loul0zLnYubtFZdq/h2/DdmTenJx8Pc//+qber80qr9M8bJ6n2i+8mvQs9Fx
cWLgxMTdukmPXrHzir+XbH7l5s6jwdfk5vvnmZtfwcyTDpy4mb7hqYdH8V31
o+vym8WgXT2g68pcxl7bzJMjV0sHdt5Px/AeJt7nr9NyqV/T1yxudl1a/Hq7
dqY9T3q9Z113fcrpp5AnxrmZ2XLO0+zPIm8HjyVuLrYVN0tnLO6S3sxssnos
pvDeDd4PQoPc7H4G+SXEzUkTlc+i68u9YtbEtp1+veqJmDzHO37lzoOReHjy
YnTrEr9qWX0eek7m9kwN/YbQ5cklZnYtOXk/nH8TD0/cvMPEzvVVO1lD8yjT
o+PmxNBe/zflWHht4A4T74zkQ1713l7pzDtDc9WxPrV+/Ck168RvJ37YFTdP
eu0Oa3fnkur6Om7e4Xi9B2a+JV154uvufU5eDm7rGmzHjJzL9WTxN30b9Ec7
c6fjKXOOo+Nm157VU+ZWCxi8ylo/6cbp/HSN/HpMfHwbVw1cY4fZO9bujjdx
873m/J2Yr1HrXqE1J2+zZyaQacl+Xu9Wr6fcB+e9VCMoj8aJzpz6kaRe2GJX
z2J2BhfnSq+mj3nyTYibdZ28TyHvOdjvsHjUuVl1grteDb/enfYsZtZ5+e8B
ZGexss6Vvg3xc43iAXEze/FJF3avRg1lTHgfNTFD/d91bnaO5XNpxeIu+lrr
eO6DUL2f9/amljsxs3uQO35OPV+Sl/mE2SePc/KU7HAza/zEhhziZuWOJG72
7ObJT0xuTl6Hle6cljk367MnQ0/eEPI97xk8N7rLzegGf0vp2NbnFDdz38nv
nLLfnJulVdd4T272+f6uc3PSn3dZeVdn3vVkTP5l58+OjblODJzOIenfk/di
l5knTvbX9FXwcfLVci7e6/h6zj1xoLN1DXqT5VXudGZu64x9x6vGpYmrd7wZ
Xd5G2v7NepzHCa939xe8z6nX1d+kY+acq3HfM/C3/st//TJu3vHGSnMU09Ff
LJZeaaOTzqxjprq6XX6mRtyxtbh51auEPg2x84qb5btIOrPXD4qdxczi5l3N
mddtur7qfaLaQfU+Ea+nOcXWtf7WF/Da40S+DfqgxbbKKKb+Ky4Tw4glpEd7
D2I9OjfXNsyiS1wpHhQDioPkR3a9l57kzjPRsavep2vLiZnF6Kkn4Y5Hw/Vx
v2/QUMbdjmZNjZlac5c1p7rAxM0r/0bSiKktn3Bzx6WJYVd8PC33udhv8FXc
rNeeQ5dYufNu7GrNzs1a57zMOr+OhxMfy3fyj//5Z3F8aoZ9JQufcrOek90e
5eZO23W2dZ8GuXnFzn7cTlNO+664udOBJ1/Grkej42/ymDOva60dF/sj1yce
lCbt+rN8Hp4v53zsGRpeG3jj5msmR9fzZGLlbRb+/BfXMmnzq8Ht3CeTmH06
b/U98ezmPsf5vud2cfMrmFkstcovY8ac/A5ed7fjK5j4Twx+ysxk45RTt1rm
OjP7n9z09Ss3TrquckbEzf7oWrSuZeTmP/7mkpk7rZn7sZZPy1i/2X0W4mpy
8x3/s/fJh/+b0vfIzdQfi5FVN1gsoUexE7Nt0/9+z4+bfAvkZnEh9V2eI1k6
9Tchu1LnJTfvas1dL+9OQ9/l6pUnYzXEjytulg8j5Wkkbbk+U322u9zsvo9H
GHpnu5VXY8XNu8cgB3fa8Su42ZcVw7LPCT0aHV/z9aQjJ27+tW//5mV8Ubj5
vbLrduftMp3JXRMnJw6dNGRn6mmeHW/yLq+v1nVc7Lpu57044eYT3k7eBD13
Xbnj7Mln4LxMnVk+C+nG5Vmu4X0B/bX8zTW8R2Cd/12O85VRXa/d1X13GPiU
mfV6OiedM/XmN/M2GRqdN4NZGrXtK7hZnokTbmafO2YQr7h5Wu5Zyqv6vxU7
J0ZeDdec77IzAmO6Xq5rxGw7+pz1yFrA27IrK1/GJjd3vw3456ZaPvov+J48
u07cTE5mRgj97WQocbMYkWwmbqYHVvV+9ZrczP/hxWvSpztu9pEYhvt7drIz
bqdndz4N6sr0fyR2Ttpxd6wdbt65HqnHidf9ddxMlq3PRp8H73dUN1iD68nN
HbOmusFpPMPNrn+fcDn7Feq5XitDOunQHQ/7a/IzOThlZqyWTdzc6dG+fPJd
pDlW3PxqdpY/gLl1Gt/40fc+SebzxM6JmzumW+nKSc/tGHji405jTt6QZ7g5
DefSR3h50q5X+zojSkslN7tWPbEyudCP07Gzs7A/r230nNuKmZ0p5W0WOzMz
+cQj4e9nh7tP/BiJp6XD632keXVNp/6AmZm//i7cvNPXWZzs/uYaxVE7/TZ8
qEawnkt3XXHziqXdf3HC0LWdzuF2P2A6s3s1mH/h9xbUku/4GJozPR0XngU7
T0y8m1fn9X7SjWt+/tbgOrU0ZS1zP7beR/3PJDeLzZjBxgw6MWzxcvGeuJk6
X80phhaH1dzyOHcM6bomuSzlRDv/Ot/K8zAxrGdlJO+Gc3TNRe06cXLSoFNO
Rqe/d/ysa+jcrLrNLicj5V9Iq3Zu9v7XSYtOnxO1546nH9WcfY6Jn7ks8XI6
XhrTOtefE4+uGHmVveFzew5e59/oMje6fS/+5YGX34Obi0XT78g1vgjM7Oea
tGb3FSRfhvPnyjucGHni5sTsnLvuT8jGaTvO5Sy/y7srrXiXoXe4O3Ec9WZ+
nx7RY9NwP0aqCaTHWa+dm+lrTn0Blashdu68yqfcPOnHq2uh13oPaZ/ON+LM
XH9LOz0BPXuu4+ZnmLnLAb77vR+8R6+zuPmE5cjNNXbzmk8Z+kRz1vb0WnTc
rPcpHdbf913tn3EymZq9V5ybd3zNK66W1sz8DOnd3I41muxd45+/zpHvRf87
i7noc3Zdt9YXP8rTLG7WKG+u6gvpaxaPy+NB3dg11MQt5CRyZs3jnmbqwezX
1zHtlKOR6vg6Jk7sq/yPjounrLmJm12TFwN7PV/KPHZudk2a89F34Vp252lI
3JyYd5eb6ZM44WZuv6NlP8PNyp1OGRpk3928ulQ36Bp3DfX9Sx6Ojps5p/Tl
lcb8ntzM38GnvtdfhCEGI7dNfNlxc8fHad2OLrzi5noudu68Ebs+5mfGo5qz
epLUcvmNk1eGGme935P+eW902WuWRA3lbqi3HzlYzPzv/t2/ueTQkZuTZ8OP
yfOT10TM3PXT3tGaky68c8+QMvCcm7t9XRvXZ5T+tuvv6YSb//6vfgv8/PWX
c3PHZuTllEHc8dyOju29+rosDc9W7tYnvXqHmdlrO/UyIRMzZ4KMfKfNWl8V
eaW9t7aW0dvceUHS6HqeiJmdm1nPJ39GzVH1fjWUI+hMXus8W+/C19f/w+Ld
YtviH6+FkydY3CxPBzOTi9s0j3rriZmlQSfduI7HbVlrKHYSK3bcnHzJXTZF
58dIGXR6Ls72eTqfcuezTmy98i93Hg3XjjnvxM1c5pztnoiOs1fMS0bd9XAk
H0bSnN+Lm52TPxU3a446/07H9mOthmvXn4qbi2lqVI7XTWu++jK+yNxc/pHE
ayesOGnKO57lHR+F67N1nYvlTjjWtelu+P3Dq9lbv/07D3Ju5zRuk5hRw7Xe
C/epNq/JYBM3+yhudn9zqhHU3JNW6/1PvM6uZf1m2Q4v72jNp4Pfg/R3vM3M
b3Tn13Jzx2fSF2NfQPMScI6V/8NzjotZxZeegbHjaz7Rl307ejtU45iY2PPl
mJ3hrKlt/X3RtyHPsDiW9yE79xz8TcD1YWXFqSaQ/f7IzZ2Xw303/Kz0vmuZ
5164J6OGeKwYuXTm+h2fNYPMrks+5uJhcTN5WnPXduRmej60XOeTdODEv6zh
8/5/ndbsHmnOw306Hl75Lzi8hjHxt/KHffnEzMoPVH9sr7GkdkyfhjOxc/OO
Ttwxaqc9n3Jzqjns9j851+54HTOLl/Ue9VtJqs1jvrPYNfU+OeHmjqN3fMxi
5l1WfhU31//O+h9aHEdm/jJyc2KxUx3V2Zha8SPcLC2WvoEf/M437rhZHMqc
iF1+Tby84uZ039C9TpzN8yUXuw6bGI/X2BnStdUbNze+BdeX6WP+k5/9ONYF
dtkaxd46fuJy13+TxrujKXfbdDrzM9ys7fw7ru/0K7iZmXQfw9dcjHzrTf3H
3xy52XXQ1fziRnqTO735EQ/HpCu7xpy0ZvKzuNHzqrX81qfaMkd07p0vnMyt
9fJNrHTmlU9D3Ew2Zu6yvM2p90n6rKSTS39XvxMxcz2Xd5n+1uKrWlYMKaZm
LxRl1hUDMm+jhnRpsSR7+3G5MjvEyDqOfB71nKyZavtSn5LuMe1HDieX09eR
mFnPvfdfpzt7hl3iZs+7Ln7WdXLd2e9ZeE/jnmdyZ9KUnXVX3owdRl1x8ylf
n4yJkXktyPnOyOTTTncWN3tuRXmHvZ+19wnquFfnRZ/GipunOkDV/z3CzO/B
zfV/NW33qRk5Dfb6cHbuvAMTN0/5FytuTtqwfisvVhYvi9/Evae83HGzlp1y
c7p3WGnUidEnb4LOi+zc8SbzK5wvWaPnWcxJb67jFkMze461g7Vc8yUPRh2X
TO01giud2X3dvF9Y5TmfcLOfe30e6q+TPst67LLfT/Vm8fN7a8033rrWBLJe
LfVknrg5ZkJfdctUz7fLw87V4llmY4j1uK+4NenLiZvp5XZPhtcSksldX045
deLm3XsZcjN71fAai5nJzd7L0bVqatHUz/We9Kj9nZvFzKwLE6/Wo/KFyc3k
3nr87e/+0m2dPNBkVT1PmRjM8mA9Yp2H9iOPppo9X9Zxs2vSzs1p3o5zycU6
x7pW7iMhf09eDO8/kriZ2/pz52ayM/nRawc7L8bEpCtudt/GinH1O8Sur8M9
1bsc/QpuJs+mnLpiZGm81KLFubVs0oqpTfO19zv5onNzsXBihsTNXzR2pu4t
du64+YSd07odfbmrJ9T1FDsXs+mxGNqPVdvLO6AcE66Xn6bGpTf05/f7Or+d
cLjXCnJdna+fp+4J0nGdIcnNkf2a3LdbhvKHcfuOXnOWyb81Pz3OzNHwzGbP
bZb3udNs9XdBbt71OIuTnZtPvBaTt9l1fH0eSWP2PpVfdG52ZnvDzNd6Nc8s
WzGz9yF0DdPz305rAOkXvvMPX2v6WLfo/ouJmdnvwz0a3ftwXZyaM4+lPDf2
U5m4Oa2jl0KfCb0XSWumnjz1C6de7Zx/+36AJ4qfxbrSnmvUOvkKpC0nvZnM
LJ9AMQj7eDiPKn855WGQq5OHIuVedL6LR9an+VfeDD9n18SlReu9J/6mVzx5
wZMXw5lZfO3cPLGnhjKOJ9Z05vRtpjo7MuqkV9MnNPkyXsHNnd85Zcq9iptV
j+tsnDzQux7mlXfjU3CzmK7+BxdH6H9p/W/9IvHxxMzsfVKeEnk20m/hJ5pz
4uUVP690Yec26c/OoeLmYurkHyE3a+6J3x7RsZP2TA8Pj6nfKnb8CPQEu+bK
2jtycy0jS4ubtd77lMg/Qn7WNedzHof3jrvs7F6I7v3rGuneLq3f5ebVPuk7
zGW6D+N36FXcXOPGzAfcXP20U0+5xGXyDsjX7Prk5BNIjJdyJ5g959ycPBXU
dMXHXS0f2VjH4zpxYLHhjZstd4K5bTp2976Tp0Tvp+ZR7R2ZmX7m9Lno2u1o
0czhZpaG3wclH4b/fkDG1vnqeun9i43FzMVX9B7XUO9tcbO4VdzB/Irar1iO
uc7kvV1tmMzpXmP3UKxq/Mi8YtN0TPcw6zm3paacvCKJ6bvhnE1uJvfS36zr
3OnT5GZn5xU3d69X3Dxpzh1bdx6OFTcnn3M61qR/qwf5SiN3Nj7JvSCn+msy
suZ/lpu5Xc2leXnM0qFP6wBfyc3+P1eapvuYP7Wvmcf/2g9++MZvLW6eGKbT
VzsvAvXXjpvJ2BOLSmOmR4PszM+i3scON1NnTx6KXe9FVycp7w6fi6Fv9Xof
hrza6bp7vV3y/FJLdr3ZuZlDnE3eVs9A52TPqrvj8MEXoXOt99j5tx8Zztwd
B1ODJ79z+HdF30cur2X6W+l4+Vl2vjHzATeLoxKfJW6mr7njRc3JPObEzJ1H
Qz1PXKcVc/o6+oWVYec+Cs+A8xwLcWznOWFvEu9nIs1VPadv7wncTp25tqMe
vtKa9ej1exq8zsxgfsPI6Ol3ly8d5uU2vK/hedbnIB1ejODs7L5acTP7oJBV
xHLkQXGS9yrx2rqk95KD3aesIQ+Eb9/xsjNrx+p//Rc/vS0jN6e+J74++T7U
pzx5nHVNyM2T55nbs/9559VIbJ305cTNzshkVS4jgyY23tGVV8uTVt2d+0pn
Vn5zx/+n3Jw4mnWAk2fiER058XXH69SXn+XlR7m5/m+Kebr/vdKnnKU+FT+T
j11z1nJqohOzJG9G59FwFtnVmPVbObl5Vf+ndYmXfVvpzeQrHVPzT9pjx8pp
P+rK9brYTb5gaqHyT3T+i8ScqR+fa84rbtY+9G+o1k9ZG0t2vrJ70np3NPWO
iyd9mRp2pzPzd6HOH6LPhb2A0md98rf7FDcf9NTu9OA02I9D/ttp+259yjVj
FsXEzdymqxdkf26yM3Xf1L9v4mZpw2Ri5kn4/cWN1dGP+k39H9hebJ2uoa51
zZWuqbjZ9X/eE+m57lmmrIz0GdHjoutQPbfLh16Dul4xcz0XE5PbmJehR2rR
EzfLnyy/r9fXpTo851T3aNDD4Z5j90zXMZlF19UQ+rqur7Z7tDuuFtcnfk11
hWn9xM2dLzr5M8TLdU4dN7vfWX4N8quWiTvJnytuToyc1k3atjN86t+y4mY/
706jnri504Tly5C3g/WAEyO7V7kbqjuczmPFzeTntHzF2Dv/BxPLJB2Q2vNF
vzW+FrN9TFauwZ6FiZvl3dxlmFNudnY+8T2Ql3e4eaWLO9PyfkHz7Ojn0/uk
X5beZOmu8gTfMS+4mXzHvtSJDYtrf+8Pv/V2zut8tU4+DB+XdR/m0TbUl4uZ
5dmgH5o9TsjNHcPq+tbjxMSJj3e4Of0tnvifdY3994h6rdyMR+53PzY3r3Li
ipeLlepxxdgrhn7DzdBeJ09zrSMXOwfzOTMuPONOfK06wFu/aPDi5D/xDA2x
dW1LHtf9ALVdHS/1rNZxqQtPzKztxc3dOXtWRtLTu3sc6tX6LtRjeTfEzfQo
i2+LycTN4rTUf4/cIU+HGFpcLb+HdOeJB8mviZnph04j9RiR/1fe484f4tzs
HJy4ONUYJs28e89dXxNdD9eTJx05rVcfFOrMynR+ZDg3d7rtpB2vvBHOsJ1v
5L25eaU1fypu7uap46RzS30AO25WreGKnXf+B7oXYBoXPRoaYuLsmu9Zv8Xq
fJ0p67jyX6dRXKNauR1uXrGk3qf4Q4+pBtD15aT5kUNPuHvShZO23WnWk/bc
bcfz1bVkjhu5WcsSE7KXiHsoyM31XaMHxLm5njs3c7DOT74NcTKZmZ7oiV+d
nVON3o4XY5eDT73PHOJm/T3ou/q3gZs1xM1dPtnEzV2eBrXgxM3MO6MHo+Nm
z4gjQyd2ps95xfyuIdNbIZYUK7tP5OZpACfrvfD4zrWeB+e5zM7Z1JonbnY+
5tC90S0TDx4PcnOde3EzNWGxleuZ0m7JlmRUZceJm+m1rWXsEVjbkxdd4026
rvuEk96qcxf3kJuTxjz5Pzq/dcfQ7gfRc9e4yc/MqetqA5m9PLGyttNn4dxM
vVkMqmVi8xNuTnV4Ys2JjVdZdqfcvGJkzw2Z9ku8zIxmZ9aUsdH1OvHles55
nx2Ju1dasgYZ+1FupubkucxJ8zv9H/0oN+vckveV7EAOdB6hX8S5+fJ+Q95u
p0VredJ29dozLU4Zl5ybuDnlhe2wdWL+xMzdPh1Hc5lzs66Zeyd0nd1zUcOZ
1TPjUqYFvRTSlPV98Zo+LeM69zTwHG7nhvrC7nuoOdLf0CNejdO/s12ur8+E
96Wq/3vGV/UQNx/kZzjT7rDzKnMu7d8xM/MpyM3sOaLBHAvW8dHvLC3a8+TI
uKmmkLWCqyHd+K7fyYfXpTWTjev+okbiZq9VTOeQri+5WcvJwpPmvKrbJC97
Pp333da51vsTU9PTLO+DWIp+CPfhKotOdYLSkz1bueZlHxXn5c7/kPjV2ZMM
5NxMT0iq21t5QCa928/N/cjd+bq3mvcBnW7MexNfr/3Izb5N8mpM+XST71l8
XTWK8hivfMju8VhlQNeoe6+Vdp281s7Yifnr3Hf6oiR2Vo+TYt903Fqunpg7
uvSOv1nrV4zt3Mz6Px/yXcvHwRwQLS+NeuJm74/tPNx5IztuXv2P1//lR7n5
otE2fhEdOzEzGe/O3/xbv8jJLW6ubclQ/n7IgNRSE5uuuHm1vvOATNuc6NIr
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
7m9O9X2PsHM3785Qlp7YOPXR1qhz07qphtCz61QrmDIvqDNLC9aY/Mzi3lUP
cNY1+rmJuzlcB3dG1/PElvSATnyZ1ombO3aq9cWjqQ6MupxzcsfM4jHVtSWe
mPwa9NfKP0BmVt+5y3u6at8ap7VT0ofFLcXIxfjiZrFMN2fysYidEzdPfm7q
4ycejc6fMXFzp/Xz9Rvfxudfu2NncrO0adUK0tdMX7Dup1LuBr9rrPerkb7X
1OZ1/7fDzbv673Sfx+918nXoPFbczN8oeI/2bA3ge3Fz1QGmHn3JT3HCzGnb
iZU5Ejd7vZ5YV3nN1Ig1pC3fdFrjYc/VcO+0c3PyaFCz5bn54Nw6tmfpuTZO
T/Ob3LkP2zgzU2tO67hM5yzvMt9XnY8y8+60ang0XAvXXORmsV8xVHkOipeL
O8Ro7tEg08lb4NkK5GbuS+bu8jHoBSGHUutNdXe+TIP+B8+tS/skL4WOoXOj
Ljz1SWGtYOrtl/zXnS/7lJtXPo3k2+h8GiteXnHzxMMpI863SzycvBd/G7jZ
9/de3DsjMXCnbydudv+IlnG9nqf/1ytu7v7HU+dceXQn/XGlL6+4WbkY6bzT
/sUR0hepeZKbxU7qoVLD2aOGsm/FxuRkPVddW+2r3tjkshXDJD265pGOf5rz
zOtyws2T/nzKzemz8j4mzs7iYWrN2sa9Q8tx/by77/qFSz98RvWZ6bPyfdPf
xUovXvXg7lja1+34RdxL9DH6ED3Lzfotv8tU6Fh4Vf+3y83sWZe4lPqlGJSv
U68TeZdTPz7qzcx05r7q2VHPL/3D4W+mR0JcXazP83NuJpuLmfXoujj9y8kr
Qw8zfRtvckWCh0M+FPGuM7O4uc6ZuRxkcW3Hffn+9EieY0ZZsVdpz1rmzMma
MDKT/p+qH7dnPnvdHteJFcmik2+CnKr1ngktbia/OmN6f8PEsrxnIDfz+F0v
FN4zJD3Zj9edQ1cj6Mvq/CZG5na6Nqd6c7c9teNunm6fXW5e6dBi2LR8lX/H
WkBx7Hc+++XL8FrBHa9G57vwHLpu/1NudlZPvhAfiZk7nZn+jk5vXvkZdveZ
WM39vNxvh5sTCzs3kys7PiRH1PMLw37YXxqulpGbOQf3Va0g/RMaqsFjHoSf
SzHe5I9ecXPyO+/cvyQt+llW3mHn1X3ZxM18nfoFag5yc/JkdBpu4maxJ38b
qM8x+ZAT2+5o0qd/c35+PqRBp76AXwZuFreecPNO3lzyejhPK/+342byWNJw
xc3kzq7HNrPr2AeFx0q9B7ssOnoTnMd1LPk16H1e+bI1X/Icu8br2q88HHfs
jHpCsnXKc5a/5cLNH56TjZlJ5/O6P6UG9WCyVXk1mI/h+cwpE5fc4WxHdiSH
y8NBfuS+ZE9yKn3PrvmufBfOpynDjdvJ28F1OofizlRz6OfpPb9XfmfWaK76
aSdulldjN5d519+82i5t/yw3d17mlba8Yud0P+C6MTVgsXOnQ6+8xPQOsz4v
1fyJaZ2bO44mf0+9Vjqmln+aNYPO0Ymbd/j3kbHiKPGd2Kvjl25OssHFY3Hl
A/Gp9zuTp4HH5zmQmycfM+v0xKuaz/sBap224zm7Jkw9UPs8ys6cp+udfcrN
3bqVht2xXlrnnJp6kXh+nZZ5T5OdbOWOaSduFm/y/mcnx3zFzjv3E93vQHzu
dYX1d+G1rB+r3/0z3Ow9AScG9t/7T5i5053FzP6bvzhWj+I452XVCbIPtzwZ
zs30Snj/QM/hIMeyzs/fI/0j8nyIh3lMZXVQ0yY3u79E74lejcS49JDw3L3P
SvJykJ3vMueuerR8MPJDi8kvzHzdRv1b6KXRudegN0J9tZmFXK/FcvI91//X
ynuuRzFIMbY0NXEz9c1apvxm9rMgN8tH7fVxXdZG7efM2mUlu78icbIyNejt
SNxK/dn90lrn3pTkdZm42c9fx3e9eOJm1QCudOUTzk3b+v3TNJ/fbxWHJfbd
4eTuPMm/yQvdzb/i5lovZuY9IufbYedTDZkZdWRteT86ffiUm1fnkPb9VNxM
rpu4mdv5IDeJGVfcW2zL/LVUE+Xjaz/44W0kVhXndrV85FyeJ/VycdFJXVY6
Fz+vE93Z/cnPaM7U9qk5a51/voklnQFvPbUDe9Y67kPe7nzIJ9q37smUF7ib
e+F9TybNuWPiick9q1nno8+mvu/uJfrY45ibf+2f3+XzrnTmxG27/oyOo3V8
+ZldX3XfAL0T7hn2Hicrbhbjeq1gNzyLjr4Qsi85msfUevbx5j2B1yrWo3uH
XeemN4PaMt+T51CvuFncKwZW/aCzea0XN/OzqXHxtVy5WUys5+Jaz9JQNl0N
cbMG+w0yh4N5dmJmztPpu/RkMJOCfDppvT6cmxNzkjOdX6X/SiunVk0fc/Kk
UGdO3Nzp416TyXuRTn8mJ6cMjcSz2ve9uLnzfHQ1fh3PduNvCzdXZlwN5WB0
PLzi61eMztPh4xEeXnFGLdvVOMlXu9zsmjHHjl5c/8vFzuVTTpw8vV7N3TE2
OZratHRMcu+j7OzcvPs5eF1fqvXruNq5OzGztFL//qTPnmxILlV+RmJWLd/h
5dVvGlOvEX63S8ul/9151pm6+1tJ3JyYOnGzzod6PHuZfExt+RXcXNkZ5OYV
B/M3etWHuU9gxc2dHq1eIM7N1FL1uhiQfMa8CufoblD7lT4tndUz6Dq/MTVp
5q5RD6cXhDl0WuZauvO9rrF8xDWYXZHq+8jFOj/PpGatIz937SMvOPXmOza/
XieysnMzPRrSlaUTi3tdJyXv1m/WYuUa0pPFx/RKa1lt59zMPijSZ917zEw7
8qnnLa/YWfo0/dDJJ0xudz2azEp/R/JiJ26ecjz8eHzvWpfyMGqw3lCc3OU1
i5V3NecTffqEmzsf86PcfFoXyONzGbnYGVq8mNankXzHKU+uePoRbnY9OW2T
6hAnXbrj5rR84lLXChP3dP//Pct5GqqLS8fy8xMv73JsN4onvvsHP7qMxM6P
DHGCuLnjWy2Tl4S1hKfcPGnPzs3dbwEdG3ea8iqjY2Jn9+VwXafxen/BrjeN
58tNjJq4md+1jpvppxYzs1fQpDlP7M7n7sfo9nVGv1yva17ex/Qwv4qblTm3
4uTEzKkObeXRSENZdykTmXPeetpdWc25WZwqDdrr+lKWBX3O4sI3Hon/5r4v
iW/DzAt6RnhM5tB5rSD5PXk4nJvpj/H7Cx+ed6d+KmRgradPh4wtLZyaMnNJ
EifXqHuF0pprDnKiuEFc67wmbq5tqC/XkO4mH0ZtTx9GbS9ulj6tWiv5cJlP
Ry4mG3svlcTLzs18zdxn9yvLS6J7B2dgHd+zo3e42c+r81Uk74izPYfONXHz
DutOXuZH9Gbn14mXV9zc+Y99W/o83M+xw9vdshUP72xDzmYNXh0jsa3Y2bm5
Y9sdbj7RqqfRbbfDtR1Dd7rYqafW+9bVazGy5ieHP8PNxcjFyvX8xmzGzZOO
u2Jm7rujC5/MezKkZ6dsuNSfZoeFV4NzdvdM+t54nkbiZmmn3uM8acryaKRc
5lQH2GnfE//qnHg8z1xeMe6kd/O4fj12565zqQzF+vw/NS/vsjO52XPnVnrz
m9qxhcd54uakRXu/Ox3TuZk1a85sSVcmp1JvJTcnf3Fa5l4I6skdy3d5dK5L
O9/Lt6F7DL8u1OHf+DSMoTXurvE1I5r78LqQj+VjFjezrpHvn1p5vXb/rOr0
1D/Qvc3U4pybxcbiZPUc1ut6Lt6WribuE4t23gwuT0y8qzcnL0jHpH7fQF4W
s1Kjns5Fx6NPmT4R3h+k+wIdX9s6N7teru13vMwdNz+jQU/c7MtWGnLa1nXi
5LnY4eOJm1/Bzs7NXlPo+jN7+zmj1mv2UEk1eo96N3aZmduq/2DHSru5YokF
Jm7e0aBr/+Ikzi+9uZY/w6HKkLvMe80zI7d3fUee5dtX6NiTdj0d0/nXdWRx
Gq//M/zcfV/4OuVc+D0Svyvi5qQ109OcPBKJUTuPBt+vziP5L+pYyo1+lpv9
vvORucj1X3ZuTlw8cTN9ru4/PtWbfW7ymxjP+2lwrLg5cWvKoaMuS//BndZs
ujOzPTyzrtOaExf7HL5t8XTiZur/b67boD0zt473B5csEnAzeyayHpJ9w5nr
x/ehXBNxM5mOPQPFDlpW3CxOdm7W/3P1BXTfc+nK9Zx1geLmqid0DVeeYXIz
vRPUbZ2TU/aG1xS6nstjk5vpI3Ge9Uy3jp/d80Fu1tC1Tuys7cnNZOfkNdnN
0EhM+4qRdF/Xp4v53COx8mkkLnZ+/jJzc9qmm9df7/ovXsXNHOl3+ImTUvZu
0s5ewc2+bpdrJ+8FuVlspXxeZc29hx78CC+vNPCd4yk3LV1r1bn59d/9Luwy
c/IjdCwpXmVuNr0ad+uv9z6dd2Ni5u6+QPPze85zZE/CpDnvcm/i5hr1mTzE
zddMa2WqfGpWPuFmZ2b/3d/52dmYvNyx8U5fE3oDyM3MZHPPrbRi74GS2Jm+
Z+nCSUP2/Df5Lqht+77MXO6YN3F9yp3uPNliZs8wueNm0+idm2+vQwYdObmO
xf6L4mZlldATzcwMvi9p5uJmZjc7M0tvVo2f8jWck+W3kN9Z3EwPs5i59iM3
S4fm8WqZa7PyPRcrJv51jdl7brMvuOvOnT9a7CkuS/4JsWnnuU5cnnKiV4Me
9MTNq14mPtLyZ5hZmnc3h+vMfNzh2h1uXm3PefV7yaRlc1s/LzJz6lOyO5y5
X8XNK+6V15p1iit2XjP2P3yjR5Ip3Eexy83FOB1PUR9Tnpd6CU7nQlacWLPj
ZjGz8xUZzdn+lT6KZ7g57a9lq/mlnyYd2fXmjqGf4eUTlnRuZm/AWqb1qofT
3F3GxcTL/j3jddK5eO+UWs76RPaU3HmfyWNNPVvP+bvANoNf+x1+UbzNO+yc
sudcb97JolN2c8fF3s9kpTc7t5KXpX/KZyHO65iTfgEyHX0Z0p55DPcre/9r
DnqTJ72Zvms9pt4sKe+jjl/1ktP9jPMwvee3Wkes8xo/1jLq/JRXzWtPViZH
U8fX+Wu9+M0z0+r/Obm5hrhZXgv/ny8Oov+5hvuhnW+Kk6tHoXp7i9HlkZbv
2f0ZrPPz/n/kZrG2+1ESN7uPoo5d50sPCXVdrWddo/udfW5nZtYNJmZOOXLd
ds/mND+jK9fn1/mcO4/GKTf7/L7v5H9O7LvyPfv3m75ncWvi5pVW7XM5N09z
v4qb6al230W3Pc8xeZw7VvVM4hU3izfExuKd6Xdl9QBRDoCOKZ2U/c1WHKl1
8jCnQd2wRp0ve5uQ1ZybPLfuPbnZuXjS2rtj3e4jBv+y3hc/F7HjK7j5Uf+B
GFbDuZg5En4v1HHz6rydm7tzLm5WnoZnapxozdzeP4PEzd3crAusbT41Iz/C
zepzcuqloM68k7+x8m3csR24VctUA+h5b/QLuFc4+Yw7bvYsZfp3fXv2K+mY
ufNldF6NVQYIc+Z0vdnzWr7wm3/ZMj9SzSC5mZoxeV3eavo7/BrUdvR3k6nr
tXOza831v13PVRNYjEatWf+z6dOgLi1upu7smjO5OWmm5GYycW1f7Kr9yM3k
bNeDU4+TGuQ41giK3ROrivV9/hU3Kz+P3Oz+jV09uvM36z11+nDHzVq3Mxd5
lj1yJm4+8UtMIzE3z8vZ2HXeHX17pRmf5Gp0+ycPR6cPp33dD5J6Eu74M7o6
Qx5nxc2phixli6X+C4mbqS27zqxBLdvzs8R78iQnRlz5GNK45NUhC0HcofOj
zniXVaAatT/K5/Iqbta2yqar8/L7hlNu5v1PYmixGe8Tki+5Y0+t0zynGvPO
cmm7yoxI7Jiy56bz5neT94U7fcDrPJjhcfK+0zYdN0s/Zm5Hy83XjOlPzcin
3OzMvOOnSOt3Mpy7OaR3iwupL3ttXjGdZ7yJzbq6O/Kq67vUk5XzTIZm75Kd
TDvnZufnjpupmXc1jcz6SzWBd2ws3RxcfOvpB8+GlqU8bN4jJL+KXnvPRX1O
8nskb3PxX/U0YeaytESxLuv7fGhb5WZIXxYrk3HEzMWO0p01tK+42fsC0r8s
bvZ+Js6qnRdD/gKeG+vqapBvua90eXGz+zhcT07crMF9H+HmE58G3yP90Ol9
dLy8y8273mlybMfcf5e4eeXT8H3JzRMTqx9gmmM3nyMN6mydZ8O9GtPv8OLO
iU3I0PJzqEeDc3PnSeiYdLVezJP0SWaapXXs9SyOTiz/Cm7W9ie51NOxpl4l
WkZu1u8ESTPm4H1U4j9nu4l3nXv1ObA/36035FVb7bg5nbfObVczd36+HEv1
pOBm9ffe8aWkvOcdXXr0a1x7i39RmXliZ/mbVz1JHtWPp/6AGtJLU60fPRvy
16ZaO+rNHTOnPA0up27qTK7je88/n5f+BPczJybuWDrVNYqZU4bJzaeBa8hc
kNt9SPA606Ptx9ZzXRvev+jaUKun1iwPespuVg2cuFmjWEjcXEN8TM+GuJjc
7IxCFmE/lDr+//t//y8XzVnbkJvdp1zbkTXVC9y9w5q705Y5nJvIzWJm9qsm
NyddlhpzYnj3jGj89N/+q21e9uMmD/PKs1HHq+Hc7a93PBzdNsmbMfmVuc0J
NycPROdL5vey82vscLPu/7TdDuvusPApN/P9p9w7/Y3u+pcfGUmDdI/CLjdr
rH7fJ5dx24n7drXcbpkedY/gNV0Tz8k/e5ffizrCGknnfYSbfT/2ONzRnKd5
5X3xrOU0vJf1dJ+UlqVr2T33XAzW3tVgfnO9B3GzjpVy6TqPxm6t4/T95nnK
67OrOdPXsTPuvqNXZu8Y2/+GvmjjlJtPx+Rr7jRs9Qekhvom2wI9O8iyrh1P
nogp/63Tod2fm/jbuThp0r6+8zMn9ndujrqy5f/RW+I1f+7N4H2JX0u9bz6n
T4PXhX5w8XrHzeypLU5iDh39E9KPybjkZq3znifavubynI1aRm6mr5qarA/V
5qn3tzza4uad2jt5tcnL3v9EurPnV+geQD4O16QnrTvp3ifcvKMF+5g8HdKa
d7i5O369Jrvu+Cw6bnYfs+btuLceyeSJcbuhuVesnc6hmDMxeDrPbp6O51/B
zfJSkcdXvPwIV0t/mzy9zsETU4iFEzsnLqvtVsy7O9SnL80hxlV2xi63OAeS
m7ms6yv4LDeLnes45asV96m3ymoePdf7d28GP+cb29n1SbVxuibK23Z/g65L
yjueuFnXV/vquX4Lka+5rgXZWtp0Ynn/7u6w8+q+MHHyTn2gdPIdPwczQ8jM
ibvl5fnUbHzKzep18iwz73gxyM7yZeg5mc79zqxZI2OKz6iNkmWT1zl5JMjA
fHSfQuLhjnHTNp5PwdesD+zmlD7cac03nmbGnPL0/H7keq3Lo8EcP9fwyb01
nJups9PPzPuDWu9eXPX3c8+EuJm9s5k/R25Whkbikdqm2Fbb6ljiZtUDuq9Z
jEydWa+5jNxcI9XsuYeCmjF5lf1DxM3uvaZu3nGz9u88IqlG0LmYNYGJqd2T
PI0uN4/cvMPmXOYeF9eUH2Xnla6s75Tue/w3A27n88qrssPUE0trPteGec7P
6s8TM3uWM2sD9Zrc3GnOO+z8CDeveOLUq9FpzVrWaaaP/G8mN7LnNbm5Y49u
1HuhBupcWe+nahFX7HzKzVwmbr54fOERWc1T51TnpvdP/mL/PbHzrc+IdM0P
j8y4ENvytwjnam1L9mUN3aQzi5srW6V8Ge4hIiff+SQC1/t3ldycmLpj5zS3
5374/dXExN3fjW9z4+ZGg/6ycXNi59KbnXVPfcrd4BzOz8XKyiB2rvNsNNbi
Ja50xl3V47lGTIbl/OpzV6Or2evOZeJmz8gjN+tY3bzUllNPGO/9p3XuydC1
vfmdrx4Y95J4DxfP4tNvAF4HSH6u4VnFrjmSnZ1jyMxaJg8HOab+X2ubYhV5
psnNqh1kVrJ4PjGyntf4f/7qf37j49Coeer45eFYeTTqkXl1rCPUc9dhO26m
/yLlzU3L5Jtw3XmHm90r4T6NmtO5eeJorp/8GK/iZvqTT/zGYuS/a9xM7XjF
zXrNbVf+5cTL3C/5NNyfsdLedrLoVtwsX7NznrwIysR4lJv5Wszp/TYiPw+/
g1OL1Xu4eG4/LNvh5l12TtvVtbrVxl3ZVn7fnTnFxM7Nen/0nug91vz8XUDX
q7Zl7aTPo1xB6vOTzkwvBt+b+qHXe5e/WfOx78jEpa4xs9d38ih1v4+ke6kV
N0+a8pZveeDvjp0/NRc/ws1VF+jMvOp3ssprdm4uThYvu2eDvUOYm0btWXpo
x5Qaf/U3f9lmWXTcTGZ2bibLpuFcu+Lm1Jel8zQnf7OY13uQ35j5yrXVi0bX
8cLGYGi/P6Hfws9F3m69Zm510v+pNZObqXGSjcVLrPUj59KjMdUIpnVkbLGn
tGz5qqmDJ1Z2buZz5tPV3PJaU0f2TDnnZmfnjiXFzfWYdGZ/1POkKbsWrfw8
5+aJ/8mriZsnvzMZ3N/niptZa+i1gp1u7B5iZ9tHuLnbTs+Trn3KyY/6KVae
j0f52rl5tZ3nNu+MR7h593frE24Wa3Z6s/9fVV3gowzQabZ1Dp3W+YabrzVe
7j/gtuQ8vY9XejXS0HvQNSY3S0/ujiFf8K220bi55qn34dwsrVisKH4V6+o8
qP3ytbbntU56sa6lzkXfA90/kct9dPWdZOPUM/ERbuZ3/+77c/3OJK/I5Ev2
usqT4Vkvj/5G8ym5uZhZnomJmcW4KTvYt0/zkJt9bnKcZ515drPyGjqvRXFz
52Oe+FXbeM0ec9Tc4+zn0enR7nGmziwul+YtfVv1h+5/1nXxz+FOgxY3g4vl
x9A1r3OX1py4Wd4LZmzwPDy3WsP7oWi4f9V5Qr1MyIfFoR0j8zdhcoKy58TN
zOnga+Z4yNcsHq66QdUOJnbWOurOdXxp2V02srjZ+6WIraceJdSfub7zhei1
+FfHcuYWN086c9KMJ27mPl0dY3d/sKotpG+jHus7ktjZteQVN690af+eTXyd
WDjN+ShDT+yb9tW10P3q7ly+7Q43T+s9x4Nc7drzyqfh/gpqdPr/vOPPIC+n
fhGJRZybxcsneVr0Yrhmfae3/uh7d1wl7VL6JblZfMp6NDGb3ldpneTmXb/y
zjbdts7+Yiatk0Y7HauY9KYjg+U8m9o51ZlV16U+87oWnX9C2/Jz91o/Z7+k
vev7In9zx81+L9Sxc1cnyN9JEsuKm/Ud4L1W0pPf3JMN2vjExitu/jIwc2Jn
ZdCdas3eU7Cei+u6eRIzy6frORpvvBtXvZR5Z3U86cudXzlxcdKbmZfmy+n/
ZW5Ex+7JV01dm2wtLZtsTlZ3/lZvk5SpQZ1emq/YmD5mvqYH2fVivldqzfQz
S4umRs7MDc1JPhITq3eFM4j3YVixM38rL26WV4PeBudmr0ekT6Pj5mLd4mbp
zmRR+kJY45gYkf1U9LzjZi5PjMxlXZaH52Y7NxcnK1+DmRcdQ9Nv0dXvuaa8
4mcy98rXoe+QmF369w43OxenIcasR+fRSdPuuNm37c7jhJsf0Zs13Kd8ws6+
PGnGO0zd6dE+5yk3T78tv4Kb1Q+YnCduPvFpOjeLIb1nILmZDCMvrTwXYmH3
Hzj3eaZGLX+Um3eYuZbpvL7/+VdvQxqwtN26dmTQN9fmys01pCnrfTo3yw8h
bnZdWcO5WVo2X3Nf9gDkbxFTj3NyLu8f2Lsvac/+/dz9faXj5jt2Ji8bO+/U
/nU+Z35P9b4mjv4yc7OyNBLLUkt2tub6GjdfgOmhk/+ZvTg6bmZNILlZfZt3
uJms2mUq6zV9Ht532zXryS/i56FHcqj05c4b7Mdxf0bUmi2PuR5rjrrOtdw5
mr1cnJupO3Md35c8G7y+7CuoHA15EeQt7jiE2mHHzdpPNYL1XDnMxc36v67t
yM2qJSTbyvvA3AxmN5Ntxc21XM9rubLz6AXR3GQ+zpe4OdX7iYXJyCmvmRys
fOnky+jyNXzZxM3Oxitd+BHdedrGuTl5oCefxsTNHOTKlRfky8bNfs678yd/
9ek+zs2dNt3x8+5v1DvMPHGzc4cYidlo4r0Tbq45vD+geqiQGdVj+45z7Lyo
f7bjWidHL7D8Be/JzXxvdQ7FzGJ+6q/KC6nhXEu+Fi/X/uxdTW7mHNyfTFwc
Tm6mB4RaPvX9GnX+5GbdL01Ze/490dz+/jtmPmHnqW7v5km+sjK9M+/JzZ6t
rVHX9lOz8DN6c+JZeiZWXE1uvuWVIeth5X8eufnKrGJA9nR2bu68xJ0GnfTl
mq8GtVPPjkjcPA36lv24ri/zNb0adR7VY7uG35ukWkBqzv/jz/77u2vnPbj5
Hp2N6b9wnk/3HqoT5DXt6tY6/U51+M7N9ZzZdBzyZ2gespVei5ldExbbkmH1
qFGv5dOgz5m+Zx2TXpEaYmqyKb3RXDZxs+dfcxn3c27uemt7/5OJqVdjlUO3
y8uTzpz4Wz6N5HteeSBWuvOKmxNrrvRsLfd7u47Fu2M47/I9Tfzanf+jjM6/
05N9drTpiZs79mVmb/ofP/3vX9U6iTulMZM/K3Pt5H+w8tjEmvJ5iJvVbzD5
mztGnpifvO3ZfZNe+gpudq018aJ7GMjOxaoXb8GV98TNns9NHbPzXZCL+Zrc
TN9yzcu+MeR5afaT18WvQ33PdL/i92srdj5l5sS+zL2bahOnv4N0nFtWM+7l
dG+jv0v/3vLafWomPmVncnMxmXRJ5vU6NxdvcVkxM3/X39Wa7+rZQnaz5zhT
C61lYlx5mjtu9lrBHV8Hudbr/iZPRlqX6v/EovIz13CW9rpA+obFzczKIEe7
fpy4WVqxru/kWU59TeRj0dB7k3dD79/ZLmmLrAMkNzN7ztma9fy/8eH/1j/5
5q9cBjk5+arpa3aOFB/XcGYu74a4Wc/JzczCEEswv8PZ3Lmc7Jw8yOJY1RvS
n0FuFkO5Du087NzsDO2Pyt2uccLTyc8hL8iKm90PknjatWb+brHi5m7sbN/x
rR97Z27n826bZ7Ro51TmfDwzp3PziqN3fB273Ozc49mx/J3d/aMdX5CT+FxM
Jm4WD+r//8n/X/diaK56LB06cfPtPfC8jJt3MxXce7KrOafnq/fnPepWHl8y
tBhVmXoXDfPD+yc307PhOu7EzK5Fe3+YN9fyys06x9p3l5l5HVb8uftbySPs
HGtKN+61Vufk24mb/W+Kn9MjfzefenhdYHGw9Mw7Pht0Y/bZKEYqfhY3+36e
oXHHzdJIkXHmvbV1LvQ5iJknTXmlPyf9mNrwDhevPBrp/LiPuNn7jPjxxafM
HRF708Nx82h8WF/3QLde26ZHazvNmTwaXsMonZ/nyUFu1vmLb8R28tk6/yTf
ZfIxi6VVS1ijevmKm+v/KjVlDXo19Khe38yXo45MRk7c7Poz8y9qiJvruTg+
abvkZnK1913RSNzs+nDycCSPR+eJJtOSm1eaM5cxXyTlaXQsPGnM2l6Zf6wl
3OHmThNOfo5JP068p97fO0zOeTtPx8TOek72nNjXz5nvw7PyfOjvklkXq20f
HTt6tNg56YV8nDJyj7j581/4VPW7PH97P83RIEvJw0Cvb7Gz8ovJkolPpI3+
4He+ceOnW3/n0CuFPKhz38nUOLkX4D3BLjfzddpW3miyb30GzHnrhq4vr2Hi
Zvex3N3bXN+L8vvci64h77p72He8GGTn9+Dm5KXm/dSbfLqGndPf0421rxkd
mtOzteVR9/vQL1OOM+sCybPFQM7L3u/PdeXi5hpJb2Z2s7M3vRjUkzmok8rD
kbTkV3CzXrM2b9eTkTRoz7+bPBDkUe5Xz8XNyvLQtXJuFjvrdwP3Zdw4+sPg
XJyTXg2e080zg57nfu58n3W+4h31kWZ9mhhI/7+VoZG4mVwtH7NqAIubxc6l
PdfzmlvcynpA77lBNhU307+sOsGOm1kj6P7tOn79j6/zFqd37EyG1rnweWJf
cjGvaXcM92RwDt/eOfWEbRM3u44s7zQ91Dv6cuLmlNXS5Wzs+iOcYzlfx5hf
Jm7mPhrutUm8uuJm/9s9YeUTvqZ+pv/3b7LKmponH/T7usZcg7yskfhq9//v
Zf8/+t4dN4t1xbvuue2YubZ3fuI8XW8YceLEzY94me+Yua6PcfOtZu/qsXXf
RtKKxbjFzcyU03P5pt3HnLg51f1dGLzh4O69ddnXz3Az748e4ebEz0lvTudC
br7j4IabV34O9Znh31Xi5mczHD8FOzOHznXgrm/2lLGh2rPVfsy+U85cqlET
JztLi5sTK3fcvPIgJx059TtJ20zzr7iZurP7nen1cJZXHofucTSYh33rf+3c
DG3fc0rYz1xatI6vbVjbSC3at3O9lLozGY/8zP/9XX4GuVk+jhrFzGJU9kpx
3Zk8pnNj3xNqyWRm52fWCYqb2euvnos16lzIze6DoOeZvNxxs3s0/Jpy/cqP
0XGznruvYpebu+XJi7HDzfW6zqXON/WYETtrDrIgebpj6ke4mTV2Ey93DM/5
Jp9GYmixcOf54Lwdf55ws+93ojtT3/ae3I9wc2LmNxltC272esCOVZ2bpTWL
28SRkxbL197jjnOJg/33cmY+cEz1kexb1/mfT3jxhJtrSAsWK6vvh1iWn9c0
yMscYueLJwDzreat7wz9MBqJe8W+ablz82p9fTby2kzszJq9R7g58W7yxfDv
gh7liYmVi73iZt77afh3u1iZ41Mz8S43O7+qR0bHyB03c71zsxicHo1UGyiN
k35a8t+dH/fDcjGdc7PXCq605o6X6ZNgj4/Es6vjOHPTu0yvBreh5pv4XX4J
Zl6Tm7vhfmZys96TrrU42jPpfHC5zr3OTf4F8Zv3iKYuKR+ANLQpd045YTXo
4SA3k131KI9GvSZveh9A92BwedKfqTnzXkAc7dws7bljZuY7d3WEiZ1T5kaN
uqbUY5MfI3GzeLr2X2nOO4M5dytuTvWB1Jp1TsknT8aVj+OUm319x82r/U44
umPfSXvuGLbTlxP/8rpMWc8n3PzM2NGpk3/1Tmv2EVhF2bcdN4vPlIng3Lz7
+zKZs/jgrt4MjBu5+fNf9Jbmo+ehcR/nKGdmsnRx0Ak7nwznZmfnXW72bZLm
zM+L8/p20uHrOjrbdmw8jR1u5m8UO9zs+i6/ryt+5j4rdu405Mm7nLwkEztT
X67zk6dIrMy/q0/NxLvczHw58fIzo+ajZu1czQw7eaPpG3CmY31i53smHxfn
Tdy8YmfvaZJ8DI9ws3s3nIW1H5fxHNI8N9838v/YU5C512kbvifvn81sZ2d2
1gB2Q58bGVDcTB4SG4qbyT1i4p3cZj3ncg1mz4kHyMriQtYAste2NGhp0uRm
6tOJnXVcZWzQZ91pzdTo6deYuHnKvhAzk5vFXu7T0PD8uffk5pUe7YM+a2fm
jpu1fOVZ5rVxtubrTq+d5n2En1fc/EqOZR9P9ryX7pze96PH+uZn//huzl3G
X3HzKTt33CzGICfT/yCt7ISbxc7kZupymr/7zZuc49ztnE3/svMy33ONyz3B
O3JzDdeba7Bm07m4e+33M50Ozf3Vn7A0afYLeYaVT5n6xs1/9L1RS/bP3fl0
4mYuU3aHsze9Mcnj7OcycfOKmfn94/2gL/uycXONqU/26Sjt2hmZ/EZPB32y
b3wD13o3X+ZMKL5j3VqnQe/6m8nN3XPyK2v8km9E2cad79n3ZU0iOXrK8uB1
ISN778W77VgjaNvr/XqNIM9fvRsndq5tipPFgspHK4YRR5ObxTesH3NWllfY
/9/qfzy5gqxMZhajM4tO7OjeYjI0vRzkZtYFJm4Wg8g3otfuheh0565mcDcz
zrVm3V9MvOrcvOq7TW/FKoNuVQuo70Bi7h1u1vudenBPQ/4OZ1mf71Nzs3Pr
Mxxb93U8b/2eQ5bW94Z9Oh89rnPz7qCXg17Y6NHYGK5XOjffuPLDcI4je+1y
swZ/R+fv2WQ/5q75ubkXQ7pz91u5eOXbn331jTb5am5WTaN4uR7V54TcTN2Z
fgz3QXNd0pFdgy4+vvWC+cCpf/KzH9+4eaUNv5qZ67pe6klRV+g8Sqa9sbLx
beLaiaXZZ/1OI7ZMEB873PzmvDf+zrzuUt91/mbzZeLmlN+c/Be7Q1pyypGj
fyB5MjwXTWxMbiP7sf+J19a5Fuzei65uMHmbO26e9GrN6dy80pudw5PHg/v7
/YWuUafZk5lZA6h18mVoe+dmXlvXyTturiGOpaeArEFmFluJl7wmkNzM/9v1
P17MRG7W/3w9l7Zar+UHZjYbfRqe0+w+jeJY9hakF7lyOsTNta6OTW4WM3sN
YNKaPXcj+TScRV3fJ/fIk8tMO7Ina/b0fOWVfia/OWVtdNxc1441gXoPeq96
PjHpK7jZdWt9Hz0/emeOU4Z+lcZ8ws2njK593PvtvulTX7MGtWXPStj5P+4e
UPKX2JjcXEM9iqWTPcLNxQc6np8X9ezEv0lDTn2Ylf2h9ypuruf1G/nd/h94
blUXuDtqHnKz68ITNzsnU6P2eyPXk4uNxczi5p339DG0ZvKw+4r5Owj7kXjd
JPfvdGHn5sTF1LG79a/iZn6/nZv1m4HyNL5so/Na1ChuTr2xu37Z5Gbvq6FB
LzP9Fz7Iz+JGzXXp/YGsZ+/J4TkUiaXJpcnb7PkSzovdflyu7Iuk18rv4LxJ
j/HKI534vtuO11rXkdlzzGUmZ3smHbX8pOlzmfsd6G0mo3W8xdok52bP3CBj
1JzFVcqYE7vKV0z2c04Vq5KbnZeV5Uxudp+G3m/iZvUYZ7Zc59NwrTlpzomb
0/M6puqvyM36DcA5tZaTQXfY9/9n721+bVuz8y46BuzY4HKl7NStspFSLnPs
60qRxEWq7CIdKMepRFZuQCojCwnjSpQiyqciEQVEg8oHWDTAsoTcoAE9PgQC
KY10nURCsgRC/AdRpCgN2jQvZ6zsZ9VvPfsZ433nWmufffa5pzG05przne/8
WPuc9ZvPesYYHfMe5WadL1mftQfJ/B7Jt7HLzdcwL7k5eTyOeJ+TV9o17c7j
PPFrp+vy3xHPj8ysa7lF2+78yvX70ZFe3Ywz/34DXouQD3Xmko6bH3iFfoBJ
b5aGSm5esbPz2pmD0ef4XHs68IcYntfMa6F+fPYtPzCKmNm5WX29k0/3Huys
+0R/ccfNXHavRa2vZWnRYjC9FzeLl2u5YqdOyFPy8vn5JnAzc/DU75yR6vFx
XV2neyXS2MTK57+1wPJHo/Nk6/zS37P+Fuszqr+Tl1jHuePmLgdwqqVBdr6o
GQzvMrVo1VBzPi2e1HYy3YVe2vRIcW5mbeLOS5H4k3UjEpOvguPkB6a3Q9fm
uYJTJB6uV3lVmCuoV/eeaN8dbtZnwXl3/C9677l2YhpxRRelK5KharzYSVot
e/KRl+nHkG4mXuar67L0YJBdyf6Jm30M5yE3q9YGtfXaPvkzEldPNTU8z5J6
bB2b3CytO3k05KPQq3Oz73dLr0CNpQaffBusk1GhZXH/Ljd3OYG7jKt9p36E
ZOkVnx/RmRM/c+wOa3bejs7LrTHiXo65lpvTud6Dm52TL/gSfEoWpc7nmmZ9
95evwTXQivredya7ipuNlfz4rn3XMhlYNYzp0XBupr6ne6b199Sak+bsGnKX
75c8z54/KJ8G/RhiZHFzhY69e65Pwc2suy1vevJD1P0vbqzlVPPj9Ldm/VLS
OK3XsvbhtrTPxMMdyy+9Gc1zoP9d1mflXqeXUlOj8ylPmnLHzq79et04Ma96
cpOZK1RTjaxLjvWe2/RrsP4DudK52bVS6tIdP7ufIvmi+T7pzn5e4lVn/sn3
4PU0yMC6dudn9vPjOZCLtd59LuRosT79LqugB6HYRhqhfnNP/Fzb6jtRerG4
WXWd6/taNej4nc6aGfJPu2+a9ZOp0bL+MT3Xzs70Z1Bv7ri5lut8SvOueZmf
WEFudl9Gygc8ws1kTnGz7pm81eIX95A7N4uTvHacfBMrf8WuvtwFc9Q6bpZm
7sG/rSPeiI6XdzwUL4mbfRvnulVjLv5NfL3DzRM76x6RvdJ398TN1G+dpZ2b
ve6Z9D7n4aPc7D4NMZbO05d1bOfm2k5u5m/gHKtXcZM8t+Q9LbMu2z28GvIn
a9m1Zur4iZn5WTs3/+ZvfuvMzOLmdM+fipVrTnpl1DOdz0HOzcoP1G8Z4mb2
f9F9kCc6adC8f9SNycdaFrfucrPzcfSXkLPNa+LjyM30oVewFl36t1T3+blZ
mZE05aPeDAV1zmIx9h5Ujw36aenFVa9BcnBtJzNz2bma3oOOV1N0mq7mJXer
Tofn7U0c3WnR1Hr1jLGjOfsxXWP2ZfZKSXo4nyl8Du8jyLrOO5oz89WKa775
7c+fGUfcrO/+Ygj5F8TM5KVaV2xY48jNtUztWexMbhanii81r7iZfbCdnelt
1it1Z3k6NI4czVodxc51HeRm94mk2s0dN2u79N+Jm8VW1HSVF6keMV6nxD2+
rAs35fTtMPRRH4fOm34bnsfEzeTnxKudl2OHm503vdbdjh8jjZ38zM6d3Zhr
4t7cLB7eHXdUc/aacc6ZiZvFXWlfBn2yiZvZ62SHnTlGXMXjyZPKa6j3Og/x
jn7nTnXs9Pu4eznoLU3168jHYsE6R+nqUx/uHW527zL9GvRlsPbGlDdIbhYz
16ueEbpnFb/GiaP9ucH3SfPTg5C82N7fxXm44+LkqZi42b0a6q/DuoMTO69q
ZaxqgPAZ1f9G+azqPucVO1e8LTmEO14MMfNFzTrUknNupn9A8df/9p+78CeI
ScXOxc3Umyduds/xycOBvtOuqXpuW+fRIFNKZ1Yv74oVGzs7Tt4NP89UF7nu
A+s6d3qzM7SH69DuF6FnhL285Zehxp+8Guna6dNQDqC4WVoneUOasmtK4oga
I26mD4O8V/wsDhZ/U2sWO5PJ3bfherN7tPk+cbN7nOVLcW5Ox9rJD3S2dm5m
7h6fW8iIGkNuVp0S/p4uvZC82THv5LPofBddbeYu9LnSl0N/xsTOR7g5MW/y
okys7RzazbdiZ2dWbbs3Nzun38PTfJSt9fd3hJvda0E9sny8iY+9dkbyD8hT
6xy34uadUB061oJTUAcnN/M8de6sZefcnPhF84ubz/mO1vtD7MLrLtb6wuv/
K67lZp13ygUkL3e9TTy0Tf6M3XNLQc+Khz5r197V51Fx9kcEZqZeLpatc3Zu
7v4WE1uTj9mPscv3o3/DfR+dF2OHnZV72kXKvyU3s5422XnFzaoB+RK42fs4
M9wfm2rGcZszX7GhcgDpGxDHeS019+HKA+Ls7ow6+SsSfzo31zgy9GrexLbU
0/2YiZ3Jva4LJx15NxL7kpvlz1BdEHJzd+5aR54p5ilmru9demTFdOIHfR/S
s6waGfI9izmp25KbyRYV6iUobnYPhziFLEsunZi5eFn6MmtqcB/Wo2MfQR4r
5SZ2+Yr0OssLImbuvBsVzs31uYhRUl3spD9POvG13Dz53FnLQ/sVN+s+0qOx
4maxseZmvboVN5Mld30fzraT3ryK5M3o+PxeLLs71zV9/o5ozqo9yfzBjpvJ
J+65cE367PcN/Zd3YtJgV3qntF7WCvN60vJdkJ14Xan3Hz3MiXO0r45PbpZv
oNN9xYnXcDP9FikvcMXNqd6clunPOMrO59pwD8zWfdbsk3Jmvof7QVbt/t74
fKZxvIZJa16xcKcxJ2Z2TbrjZvF88mSwjtyKm2su5eqm30b0b1F/s3wOqc/S
ubg+M3Hz6vedp46jdeY6bvY6yl43mNzsdYGTl9m52b3A9IQkbt6pF5dy2agL
OzdrTC37/klTXnGz9yDsfMPi5nq2oFd5pSuvIt2P5IVWHmZiZr9f9DZXiJvl
aZb+nGoOF3dRdxI3s+aYmKm2kZ3Za1t+Z60jtzo/1vmIm8WzrvmSm9lH0Nna
mZl1Q+o6mLMmrr2Gm73eszMytWetc03dnzkmbqZHo9OGj3Cze5zvwc2sCbLS
hvkbRvJLOJseYdyXzs2cw/XmVXzq8z9wPq9bWToxtEK/jYiXqR87N3v9Y6/V
7N7PTt+8FzfXeuYyPvrNu6sHYr9td9yc+ITMXSyjHm30aYibXc9lHNHYxc6s
peEejcTOzsqsLcfPsLax9tyRczux2a9/75q763Zu7v7OEjN3ujOvIeUN7mjG
rg3v7udjOmYmNz/6+8N9W3EzmXv1DJvuXf1tFj93nidp08+hOx9hZmrTzsyu
AXsvO9anYN1gvidXkqfdq0Gv8VkLBTMnPXbloUjcnJg5eXmPRM1N/ncG7vwP
6jGic9M+qYfhiqdrHu/fojmdg8nNq1rU3J/cLF2RdYCT3izGcY7Tb/P8bT0x
hPRlsnSN1Tpqv+RmrZdvOPUKJDOzxrPrz866fh+c2ellXjGzc7Pe+7NIt0yG
lj+l68VY7KKab+TLXW7WZ36EmX1b4mZ5TvQcRv26lus+T9zs75M34RpuntiW
Hotp384XsvI7J/a9lqFv4ebEvmm5G9Nxszg5bavv1/JjlO+VeWcTN5MjVcuM
umXx2FQHouaYuGziZnkuxLYTNyff9vR7eMfM2i5uOmvND3qreMmv0dm2xhzl
Zs8N9Ly/lTeDXmZ9pvWZqYaG1wOcaoPUtdb5iJs770f37CS/Oz3MZ6+EvU+/
d3D+5L3wdfLakHcvPlfk4HV+i2695vRtWz0AX987/q7RjffcQHJx91zBceJi
8qpyA+jpeAl6M/3NrJHhvgmuE3fR1+weDs/HI5OlXtDky9Q7UJowuXnFtBzj
fuYdVu60ZnKoe7P1LJG8y15bozsO+17zPnrNDM9zTOfH+8Bz0T3e8W/XK2ut
6btfDFS8I4ZTfmB9H4oT+P3pzOz9y7hN3Kxgrz7xo3smxPEpF7CLyffsrCt2
dm4m+x7VmrXM+nnsJ+PczGvXZ7LiZvIzeXinR7brzs7GnT+D46kjT36P+sz5
m0ZF7XMLN7tXY7cWx+Rnnph64vIdPdm3u0/9KC+Lma/RjK/1bRQb+/uJm7W9
vj/JzYmdnWGcm8k0p9+vB++Gxl3rpRU31zH4e/eSm7+R8wA7L21iGDEqdeba
VufU9SHxWhe7NTa6/ic7wecY52YfW/mA4uaJmU+8+8B702fr6/i34Ny88l77
Nemz8b7u5MuoLze9A1ca7+SfcI2a26b96jXxf6o359yc/Bj6N8C/befiWlef
cWnP9Z6/f6h2ytvIzV5Lo7j5zLKWjyd+FeOqXjNrXlSdjZoz9QMkg5GjyZjO
b+wvSE31Fm5OeW47Hox0/s7NYufkmUjc7Fq4c67XuNOr12HWnF2uJI9L7VvP
Ph0389zkRae/mdws1nE20Cu/H4u/5NcgM4sR1G/Z56LerNoaXqNZOXX0W3d1
LWqbM7G/71hXenbdB2rbOp8dbu50Zs7RcbPrzDoX8a1roaxN0nHzKn+PtbI7
3u28GdouZl5p1ml94mZn6KThrpi4Y2/qsolx/e93pVV3cYSB9RyQdN10zrfo
ytx/p4bcpEkzR9C5WT5ncrW4WTmAzinSJ52ZWZPL96OumTTHTkveifqel37s
3Hz2XsCvnRg5rXMPgTMPeU51g8XNFV0fEufm3doaR7l58jaTm+nd4Pl0vVuK
tcS40pg73u18Pjwux7iG7n9L4sR6pQeIHht5gLt6yeTmFQ/vcLN6lJCb9ffi
x3Dt2XMLJ24+zxP6DVF35t9m0pudofnM8py1NTo/hjwZXf25s3cZPg2xFbVk
1qKrZXG3akSz5zbZ0r0FYueOmTtOPcLNzoIrb0Zi3mk7vSqTz9jnSuyc2NzH
qBZHql3dnT/fM0ew7vFUR0Tj63jiCtY5kLbM7/XEHQxxM2s38zta3KzvY/WU
05zk5hT0V2uZnLnDyRM/i2/pK3a23fFn0O9BbqbHo+6xWN+vw6O2S293XVH3
0blZ5yNmrs9S2nPHxpPfWdx5xO88cbN65ciLveLmxM+drrzSrF86N/u+12jG
fn6+v977sTku1XPRezEzdejaVvWVxc7uf00+U9eSVbNCrEqWTtys3+Sv5eaT
fvZwDh03s7aG2KTzYSTeT97ns35qmmbyGYuVea+k49/Cza7F+jF3vM7kaPY8
SedF703yiuh5oONm5+vE236eNQePSf00PdO4PyNys23Xcvqcj3BzyhHk/j6X
xl38NvONS39HqtnstdP1DOM+atZ7ETer16V0Z3mMxMv19/U2cnOqt3Hyaah3
32vu9VzBWv+f/uffPYVY2ffne/qZxZZd7pu0U9bWmDh0R1t2zbTTVCfNN3Gz
z01uXp1fx9PdcZzvVZ/Ea/NRo/Y6HX5f2Ad8Oi517D/5Zz7/iHOYH7jygPp3
rX+/c5w8GMWumlO5fxWuOTszJ19G2p78yrvcLKZNzOxsPHFzqu1MhmadjcTN
nFN9UIovE1PxftczS32W3ntkpTm77zjxrvPsinc7fiY762/JPfPO5u4h7vIH
d7k5adcdS698Gr58hKl3lp+Cm9O/Xc3Bmi3T3Ctu5vOc5iluVg6RdGcyyoqb
63391s9acGKozuN8tJ4xo85TfHWqmQH/tZjD+6ppO3/b1/W5vu569SPfwYNe
KE/zxM0e2r7z3ODczLrLEzfvMLOCfQI7jToF+defOZyld0PHZO1APWe4J6Fj
47Rt8kDv6M8TN6+On4LsrGuvOfX3G3NbjZnd60Kvhtdx5nOHuJm/L7xN3Nzl
AnpNDa9NJ226XouZEyOnYJ069z+nPLfiNNbqYD+SpMWuGNP51H3CSfeeOLer
s3EtM3Nd8o94HmHdR2rNrMOh2nLiYl2rGHnqE5N81ez/6NzMWsLiJ+djMo5/
f+o7s/v+19jyFhQPOjfXsYtr5ef1XD8ys3L81Dt710PRcTMZVtyceNgZuJsn
9T/peggmn4bmUw06cvOkZfJ+VuhzXHGzdO1Vj5RruNk9HR2bV6iO9w43dx6N
I/5mPgPu+EC4jy8fjRXLipX9ehPbr/4urmXpjpWpJ5OVNc65WWP0+3fxMnmT
Hg1q0Y848qEeh3NzF9f0AUncfMG5TXivPzGLe5mpdZKbnavlM5m4uePluo9H
uZk1NRI3J4b2/igTNyc9eeJm9Xb28UcZmeE5f/oNI3k1Kljb4vT39PBZaF3q
0beVP7jJzJ1+7Tp4jKbWo7Z1Hn3+llPv61mH3Ky+Pvo7r78f6ck1hxiaPbk9
3jQ7f/mP/MjHf/AbP3GKWxiafg726SY3az3XeT8Tepi9xzXZjXqzczPz6ZJ+
POX5ub4qlmTPPfdGONeutO0dTTxdCz3WnYdE98y5me+nZ4VUe6PTm2uuYmZx
c0XtP+Vw1TJ5hL+Pd9+3zHei/1HzFA/Wq2qUqbe1WFncTL2Xff2KlcnNfL/i
ZurQzrau+3a151Jd5k5r7riZ+4nR0/HEzV7TOGmQYk7n5q5vCT/r1Ltwxc1H
eNnnWHFzt9/Ezbtc3WnDSW+e2DnNk/g78fDq3093PpPWzX+Xfi6ai16QXQ06
8TO5ueP9pEuTm8mTfK9lfc+TW8VkK26mZngtM8tv69w88Q+1uTPbQKN2/uPv
4uQ6cnPK/RMTc19uJzdXTPmB7LlHL2zHy9R5ux6C4quJvTtu1nziZtbiuIab
eT/1OwA5WM9GOqbYmfpu4mA9x624uatNl/6O6J1IuYerv78LDrZ+m8k3lPrZ
a716FdY9ERfrHrnvmX9PO8+qb4Kbv//3/uQ5yM21rHBvM3sFkpXJyCmf0LmZ
c7CehvcBZP0513zFsexNrW2srTzxadJtO8addOYdbl7pttN715I7ZlZ4/xn2
yyY3p2eLc17fn/n8OTw3kBzuzKz5qTMr5Jvgd7O4mRodvxP9+5JsQW4uvVm8
LE5SX8BiX7GicvPIuh03M3b0X26jd5q6q3Ntpy07B3fHdM+GXxu5uetDWPeE
jMt7TuZMvJz8zbqnu9y8y88dI2tdyiHUc5rG6Rmt4+eJmd9lbu4YVfch6c/8
N9xp06kOXcfN9GfUnGkMr5M+DXozEjd7JA1T3JO4mfUmavlavblYknUYxB/k
FtcbxRHMobroI/Ggl/MaUp9j+U5cUya/ipvp6+6YVNzMfDzvVc1+cNNc7pWY
2Dnt1713bq6gt4O9844wM/tTymfs2rN6yrDuc41ZMm+oN7jDzR37pp7YHOe+
jbQ9cfPFbzZ2np3Hmj4j3iPytfzLR/5d1W8a9frUrOzcnOKDV585sXS9ql5z
x82dH8N5Wu/lgxY7e30674PiGq/Gez1hcvMOx5IfpVlzPY+3muOIv3qnRkZi
847tk7dZ91AeDd5Tbic3n33j4OaLXuYPbOzcfPK5vx5bY8SF7E1CL4aCLEI/
KP2L/t1LVuZysV3pyzUPubm2FcOpvkOdC9lZjKe6zOTmxNDFnewLWPtovTNr
MZmYNHklVt7mzseRGHjH35G2Uw8nN6v2nz67Wud6Mj3aiZu1PrE113Vs3HEz
uZ216lKvQN+ff3fu1VhpzbtejYmjJy/GtN+ud2NX972Wm9M83W9FfBaeIjGy
r0vPz9/7f+KHztwsNhIzd+xMX4N0TmqQ4gFprM7N0+/FK26u16jThd/S5dXo
vAHOzeLejvmoK4sl2cuP193N0XEzQ75mfiYr5uWxk67cac0T30tf1m/8YjJy
s1+fdN8VNzu3Ojczt9P3m5jzKDN33Oys3HHzpFM/WrbfIh5pygvtmuPJzfq3
2HHzue851utvTPEmWHmHm8nP/+F3fvkUX/nVX7zwNk9ac8fQF7268dt+MVfS
npNHg/0D65U+DTIlWThpzIlLk3bbeYudzbtxK2ZO+jbn4nVNOYvShcnMuofJ
98xxZGUFPRvqjU5ulv+czw3UMSvIyc7N+j5Mepn61PG7nf23WTdDvgxys3wZ
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
63bnR0067S/Nn1xObt6Jquuregw7uu6uV+IIM6ve3bXMvOPV2NaK8d6PxXnT
MfVZ1d8ItWev2UxuTp8Hn3deCifvcvPExeLmb/78D51jlUNYIW5W/NZf/dpF
LQ2ysr86O9PfnOq4dbl8k9bcRVejjvlwK+/yTug5ghw7nXOnTyftWtx81vwf
vDLiZjEwcwKdm9lrhuvk66BHVtysmhrFqM7N4ppaljeD3Fx8K83Y62d4/qFY
TTqmuJl+DXKz5qHe2nkqVhzcsXHSm+/NzMmHMdW2S/U2+Kzh3OzeZNaFlieD
vcOLkRM3V7j+3PkxpnoaHTfv7NNxsbhU29kP5ignvzRuvsavscu49+TpHa8G
ta/J9+zsNumiZLp78LKifm+XP4M9VdxP4fqxGN+vZzcP0jnX+1SvuNl5eOWz
2OFm71novQPFneJf1iZZhbzWE7eS+yaOTtzceTjYk1Fxix59i7+C2vT0fKD1
XZ6fNHb/t+bj6u94qsN8D25+DlbuuNn14VWQm8nDaY6OnT3Iy+x94j0E5Q0g
1618F2ldMbEHebnC52DuHbXYa/wZzvjicF37VK+DTJxqXPgY1irR/BqnXEwx
cMqRZM6mrlXcXHORm8lY6kdC7qC25Vozv3NVj87rNYvppHGqroTnotGXQe1Z
fERfB3uTOO8mL8Y17PzU3JzyGqceLc7NfE2h5xRnaHJzx8FH/MgdA688GbvM
fC9udlbutklHn5j5KMPu+DDuGe6bStxMPwf3eXJuhn+Bff+O1tYQC7qeem9u
lm8gMbBzc/I7d+/JvhPLOvt2uYPdPNp+LTdrGxn5XKf3dbAGtLjTa/aq38UO
Nye27di3Y+FpDg/xvpic3Hy0lseK3XfY2mvNJW+Ks/M059mjYdx8tKfmS+Hk
XX9zpzMX24qT67XqOpdurBrPWj+xthg5MXfNpXVi0dR3m3XoXF/tdN+0vOLm
xMH0MqQ5EzN3/NtpxNTeu/FkYvdYOzdLyxY/e706+sypNfPZhH0cqY/rMxJL
0UNRIW4mS/j3vXOzajWTm9kTkLXkyM3kxQppzmTm2k7Ph7jPuZla84qbfb+d
bZ2+fa9aGomZlbPX1Q5JLLzLzc6/zp673NwtV3zz258fWTYt73Kz/Bg73Dxp
zymktae//Xsx7dvAzfW+/o1dozVfW1sjsbHnvh0JcaFrs/fm5oqJ6aU9d3X2
kreCTKs6d7v+jKRpT/ydPMretzvdX7EVOZmR6nMwuH3U9B+8GZNOvOLNHV6d
uHnyYnTsuuJmX3fEs9Gxc/JYdHOoVzZ/56n+8YqdOo0vkZUV/8Kn9nTljnuL
cStqWfwsHu40a7G2a9UdQ2vOehUf0vu7kw+YuDbxctpX7EyGlia7qn13RGum
pzt5lbWNY7q8yu4YKc9S91PzaB/yOn3d5HTNKYYmJ5OblWtGjZl6VL2qX4nW
u8+Zfgt6CFKNBnKpuJnf/fJqlPej1pH9Jv69JzdP7zu+7sZMvO3szPdJT671
iZddk9a9937a8kDvas5HPBY7/LraTm2ZMdV+5hj+TsHY4exJZ548FSsvxpvU
nNN5Jm4+ys4/9eH336Q3T3rtUXamJst6aeKCe3JzzVfnyd56Yk76Sa95JhA3
72jsvFfO3YmZ1TOEjExuns6NmmTqNzj17k5jujiq2+6w9LU6ccfQ9AlNHoqJ
n48yM8+H+5KVz3qy7X/y5f/6P/OXq5aJM3Pi5vI1V0zc/Nw8vMPLih1WTlow
1/n2iZvp1yA7OzeLmcnNDOdmZ1R/73qyM7N7JTjGx4tjyZmT7rzDzd4L24Pe
Z/HvlAvp8ydvCXMx5dF234uudToG+52Ik6lNusbH719qfq4/F0d7/xPWuNMx
dnhV+9Qcqschbmb/wK423Y4nY5ed+T71Pbm25kbHzaybnPTniZtX2rPqAMob
7RzN6Dwczs36nO7B0olZ5RlKXmNysK+b4qVzM3VkMvB0jvRkdPvo3/g9uJm1
KUublj69w82TP9fHkZ/FzRVPwc3SnMnNPBflxCXNOXku+H7FzbWe109uVnjf
a41hrz3n5cmjofpxuzUxjnKzuE1ejxV7OnPSB9z1/zgSdU/cX02dV9x8i+58
hJnlFyE3y9dEbk7XTs9Mpx8XG9d9938nys98aax8LTeLZ4tV//u/+Qun6FiW
LLzKKaTPY+XbqPhf/ut/9xTp+LWenErf7g4302+RGDkFcwE7j8aux9r5uPNh
MGeQerDX+HCfRvJ3aB39Js7aepXf2bmZ5+68LI2ZrERuZl5gvdZ7fc9qLL+T
pRl7H0BnzZVGS26mX8N74q0042n7Tu9ssbzPcau32c+P10OfRqcnpxxAci6Z
2TXmVN+Ey4mblTOobU/JzR0zkmmv5WbXpDv/c/I3X8O99/JJX8PNK05O58rf
l3jOt3o0Op/G5C9IPOe5aMpZU+7cc3GztO7kqXBO5rVondh3R29OeYf+7FAh
JnXfh5/7pDOvGPkabpZ/wLXjHW5mHQlx7C43d9vVc/tajXqllU/MzOvhfsxX
XGrVD97les7RZyp9Wayc+FnczLon8uD8yI//xDmem4PfFDdP+m/iZmnOX/jc
p07h7FzMTD1bIZb2+cXMHmJqcrUz5L25+dZYeZ07/7K8z2nfdAzX0T2XUfzf
eaN936Rli5vFSeKg+l70GsDFD8Wp9X1HLpJPg9pdvUpjIt9KH/b8O3kpJs1W
dTbkZ564OfG4s3ryJrvXetKGp1oY7rHQdjJ2t//EyL5uYmKPbkx93qlXiv4W
OtZO3KzaK4mbd1l6Vbei42bu3/XrTmzdHTedU9Jsd9mX46d9j3Ct7sEOW1/L
zb6/z3NtFG8rL5Df+dJSaz3rmO1wo+vN3tvu3twsZnYOrWVy8+Rt9m1i5916
IZxPtfioeYuZ61zlM2Ztt+n5hPVCOm7ueHhHY5Z3gNy8w53ky2s9wp23QnPv
MnzSqbu5u2uZgjU9OuY+n6/VluMzHbk5hXI19ZvCq6+9+vjTr778zvCyYlU7
I/knJm5WiI3FzGLkVV0O5Rc6qx+JYudi6N/9n/7ix//33/s7rZ+5Y+MVL6/0
5Wu42XPuOn4W6yY/N8+r41xnYeb9UUuv43iv7YnJ3f/q3My6yfIxM0/KNUpy
c0VpxNKJi6smH8XEzcl34HXtJmZexS4361ymmnGJyaf1zszJW8Eay+5X5nLS
hrk9za8xXE8/iHMzmZnb63OodYmHr+Vm+oHcM6/1vl/nfVad66Q5dzw98TyZ
1f1L1IHJx93zQMfVRzTpe2nYiZvvFdKnnZvJgGTlxJBku0mvFr8qnoKbU10K
6sbun3Bu9uvSfBM308ucmL3m+M3f/NbFtZObxc7kquiF3qivMHHzeO+GGnNk
RF1fx8y7/Jm4mdH1LHHtdwp6nZNe7dy7c/6dVq2/J92Hk1fD6jHX57eb81d/
E//q13/viZe/9tHrf/ev/z+s5edm36fg5p26c7u+Y633ORM3+zr3bVzDzNKc
6/Wf/j//7Ymb/7//9/88R61bMXPaPtXq6Li4q03n/mvWz3CPhPssnKvTXEnL
dl5PnhD3gaR6dJyH+YisqSDuogZJvihuluas71TvY8Kez+z7J84l13q+3o7H
gtqr1yNecXPyaUzH73i+jlnXSc1b56Bafp2WTE5O/uUub4+asDMv5xI3d5p0
4mDW007crOcE31ZRx1MdQf79MFbcrG3kzh3fhn7v6Bh3x6chbp705ufi5iN6
No89ac47Icbd5ebk1ZDHg/4Rj44LU+/n5MXoGNT5j73xnpqbnWGPcDN9GSuN
3cd6iJfJz8Vc5GbpzmJYn4N9sFf5fEdy/4rhnJuTltpx7C4zp3GT1jtp2mm/
ifmd970O9DUauf8uU6Ht4mY9C51049f3uZjZc/sU4uN/76988xTFzS9ZX554
+ft+8DOnoDY86cG7ngn6NdzXnObttO1btWZxM5lZ3KzlYmr3RlNvTp4O+npX
7LyqiUetefJDJI8FGXnHA8Jz4nOAz8Hacmlu947XMj0QYihxknOzmFn15er7
kPWTyWLUBMXMyUexw6zX5NpNuvLUL5CekTpnPzf2uiZHKseO3Ezdl2zcPQPs
+DTkRSffUmcnb1MP5viqq8baGeRmRspD5Htq/ytuZh8V52XPM9zRqncZdzcv
cJUfmJjZeTZx6eTD4DYy9y2a8Yqb3afB5YlvV8w8cXPH7xM3pzoP5OadOhPJ
s1GxUzv4ntz8hQ9/8KwDdvXluvNe+TI894/L6oui1wr5m1k7Tt4Czw8UR5Od
j2jPLTO/PmbNWeez8jF066/Vmye2TnxKvXvlvUgsrWfAk+9ok93J3RfcbFqy
+9orqDMXM4uXFR/8wR85acgVxcjUlRUvmZkTLzs3d7l7K54tPqUuzHy9KS9w
x6uxy+nFvP6+uFjc/L/9j7/xiJWlQZeHg75oju98GlyfNNzEzDseBy7LN7HS
i1dc7myefNDSr1f8n+4HjyveEl+R48hS+i4uZv4Dv/D7TyFuJj+JH2us11nW
sXa4dZebu+1dLQxxs3TubnziZr6nT5nXLQ1a9y5xceLmxKSuMzs383cC+cYn
H4ZzM5nfPc2uLSdvSeJm93u4t0OMPrHzjjd64ljn387j7PU0Oj15h5v13rl0
4t9um/uPO/5M+624/hpudtbttGYed/JR85lh4ua07lpuludAXoV7cvOFhwA9
XBTi5mLcxM0rPk68nDRnMhqD3KweJCePBvTeix5/D8x1zf3YqTEn3ZU8uhvi
3Dq/iZ0nnl7x9rRt0sYTN9d75+ZOu07z6P6czxmeJh0j/VvQZ1ic/AM/9s+d
o94XJ1d89fU4LcvLTD/zczPwvXVmcvOOV8M1YOdmxk49jY7NnZvFyx03K4qF
i4npzZDHmevFzOJm8nMtS4fW+jruLg9PbNlp0fQtdzUrkg696x3p8vtcf15x
85QnmXRPvRbj+G/j5OYKspP352buHvn0CDd3GvKkK3dj5S8+cjxxZOJyMqS4
j88K5EZys54hvO40vRtiz8TNnc9CPO1jyc31Wp9NlzvovuWOm6krOzMzqIHr
euWfT+fRcTPZtvMyJx9Ex72JnRNz+9+/rz+iBe/k4zl7HtWbd44xsfTEzdO2
Ymc/9+65gEy/YsRVPeFdZnaWvDs3P2iBzjBiW8bE/Mm3rHkU6TgKaswMcjOf
QVK/8iM9445ys3h90m1XeXNeR6Pj3Gu0aHqT+TzU1eeYeJd9utN5rs5vug+u
Ret8i4GLjRliY4/SmsnLLzUHcNKYEzeTY6deJaxB59ycfM8Tg//Y7/u+R7zO
3EPNrWN6uL5MVpa2TBZ2Tk5aMxlax6FXmsuu3XZMueJZZ9pOu06686Q3Jzbf
5Wa/jlUeJXMCycteZ0F16cjN9b1Xr9Q36e3w/CvxoXiztkv37fr5ub7rPuPk
rdhhYvFtmt+ZXBpyYmpys/iw5lUOJD0a1IfFkZpLWjF92uLmrv5y8m503Cz2
1vNMYmX3diRudu+Ge3ykJ7u3ml6RxM1Je6ZWnPzdKw904lCysZ7r6NF4F7j5
Ws6+lp2n9bynnf58RGMVm9LX7Bpsx830+96LmcnOPD+xNHl3l5s7HZrM7H6Q
xM3KC+xqZdAnzloN0nLvfX+OaMqJFxMj39OrQVbtjnHkOGLZW85jh5vls6hX
LX/lmx98/OHrbfVa4bxcPmZpzOTkl8jMR3RmcjPrwXU+5GLG3/nu1x/pvuLb
VFdjxc1+DHk8XF+WH4PcXK/UkouVVT+DXo3Exh07k5u1TudQ2xJLV0xMudKB
qRsnbt7J8et43Jk4jU1svOJmH0NeFtsUl9Rv+fV9J78Gv2eLnVVfw7VE/vZP
DdprK6vmHNl5R2v2ddx34mbf5tzc6doTM6cgN3u+ZMe8zs3yQNAPscvNfG4R
f4k11S964uYuqIV3+YH0fDg307dBD4p8LWJocay2k/N5P/n3ljh6h5u9F6W4
WOuO+Jt3/MjXaMG37D+dQ2LZI55m7p/2dV72Zwytv4ab2RNvYmV/zxrG9+RC
acRimsTNnheY1lFv9nGsL+Ye6pQPKG7WHJ4jST2/uLnrFXer3nyqM7fJzZPG
6vzaxb34OWnaO/NTB3ZP85HomJt8LF4uDv6N3/7OeV35louXleunZW0vLn7J
+vLEyx0rJ7158msUz4qZV9x8xNvM46pus7hZ3guFezTEywr3a3TcPPE0deV6
X9fs3Ex/SB2H27XPyvfgHovJb7GjWXfate/fzTWxsde5Zm4kPRryN5OXxcwV
zPFTv2zqmwrxH/2t7kWgx1jcrEi1NTpuJg+Tm7voWJo+Z5/fmXEn6pp5rxT1
nMHcwZTn19W22+Fm8SP7mLAf4MTNOq54NnmxnZM7bvZzpX5ONuc5629OjCxd
nJr0Djd3Ho5O1+U+Gsd9yePkamdn9aW+d9Dv4Fxaz67Pyc1pP88N5LaOmxM7
79RrnrhZ28ij9Gjck5vLK+zc3PXWTnlcXmuDvQS99kbqScLcSY4VGxdDa9/i
Y42jb+OUH3gDN3vtOeUbdjXmVj6Mld7csWy3fA9+XjEy/RI7evGuVl0MXNox
o1i51ouLxc1apq5MdpZv413RmK/l5q7WBXVg8iT1XvkpjnibP3h16akmq4ub
KypHj55k1b7QccnMrv8mFnavxWqsa+viZno46tjUr+scaz/3enjNjuRhvia6
WhlHOHnlxeD75IUWPzK/jNwsThH76btc7CJeKs5xPdGj+EmM2vmbybc73mVy
Mdn7KDf7cTtWV625SW/WfZAeL34lN7uXQu/dKz5xc7rHSfMnN6c8PfoxqHF3
9fKmGhu8Dh7Ta3p4TuPEze7PqLF8JmCOoTi37nWnE1NHFjO7Xq0+PuTonVxE
LbsufNTP4Xpz0nd39p00cObx+bFWnNyNS/fGzyPlDe5qzmTgHY8DvcL0OD8V
N18Tyc9MrZnrqTeTf/m+nhe8tgb7RVeIlxX31t8rWKvjqI95l5t9/S7vHuFX
Pw9/bhE/Kzxn8Ag3y1fBkHZcIa1Z3FysLJ2Z3MxlBetlvHSd+YgnY6U3T9zs
/a3JlGTnjps7D7X8HKnHNtlY7Ex2/Uf/4G+cIrFw8mO4b5ljGBxTHCyGnrzP
4uZ69ZxF5/Lafisz7+jZyYcx6cvXcLNYUxwoLqnvN7IKubleycniM753lhR7
kZsTy678yRM3i50nbk4MnbjZuZN+k47nE3d7rw3Xmp2T/dW5OXHnxM1k5OTD
8M8rMbPzMfMCV9o39e/u/MVT6mHCHiRkYrIr+c+90Xy+m/ICuf2lcnPyTax0
5tW2btyKmzsun/j9KDcrh03cvOoL4tysuJYTU23i4uZOY6ZO3GnM7svotHVx
c3FxqhlXIf+0c7PYOHGztOZbGJkMrrxDcuSb4OYjOvFO6Px1PVp/qpH8jcvf
Ffwz2+Vl6cev/s0fuvAjqz6ctGXn5lovVu6iWFl5f6nG3Etj5lXu3xF2npi5
tombxYJkZM8L7DzNU+4h90n17jq2Fd8WN3f6sXs42EfQ+ZpMy+cEauuTXj3p
22J07evzKnZYeKU/uw/kFm729+wvqOM5N4t3WEeN3Cy/htc8oz+XfOXc7NzL
44thO6Z2bk5sTG725c4Lks6D/Etu1rX79XXczPvn/uOOid3jkO4j8xDp7yCP
J47VZ0NPM6/FOTn5LDrd2Vk6cTO1Z85fDEX9O3GxvM7OoWK2a7jZ/ReJxRMb
p/3d77zi4Wt8yk/BzbrOHR/Gjg79lNxMVk5+hR39Wdy8qpW24uYTL/7SF8+M
tetjnmJ17eLixMzJz01u9prNF1EejSueJcq7zP4l7stI7CyeXXFz4uBdXzPz
HK+Jmo9acr3nM1qxMzX+evXPr66hxuhavvTRZx/5Lei7IB+TmxXiZuX5UVdO
Hg2NcW35bWRl599dTj6qM+/4NMTNZDuycqqnQQ5mP8CdnoReV0Pzim3JwWRZ
+Z+T1uz15rp8QPcvO9OumNl9Gd0YcbPX6UjHcib2XD9fl7zM3rNlh5k7jlYv
cPmcXW8Wt9R3qLRS5mZJD1TOG7nZWS35F8i67m3e0ZyVR3gNN/s6at7u8ej8
Gh3DTtycfMzOzStmTbw8eY/16rWdOYZ1M1KPb86v83BP8oqbndeTp9q1cT6H
ud68w830KE85fe4ZSDw81b/T/vRVT9zsbHmEsTsWZe5dd4zE2LvcrP19W3de
ia+1b7rWW3waO5zsDFnLzAu8BzeLjcS0u1xM7XmHm9O1OjOnXt/KS1ty8x/7
nldjl5/FzNKuJz1Z10bGPcrNEzvf6sfo9Obzq9X9c095quUnTVjcK26umskV
xb+lM9N7QY72mhge9GbIs0E/RvGxezKem4+P6sf3ZOWOm5MW7HUsEjNTI2b/
wRUrJx2ac7K2Bn0QZN3apzzT5GvycOnRxdrydHQ+Z/cvJz9zx87k4M4XwnPr
5nDGlueDLE9OVj/s1MOvQuvFvjX+Wm5WTxYFvc3imGKj8miIm8k4/L4TN9NH
ILby+mrOlRM3+6vrwc7UiYkT/3Y+Z+fqSedODL3Dza4piwV1z8ib5NZJZ06s
6pq16lckbmauoxg6acWuCTs3u/bsvOx5e75Pyg9M3Cw2VU6j5+/pvefmTVoz
x/C142nn5jqWPNTu4TjCwWn8NIczbPIKH/Upa17dvxU3T5q0H1fzK1+wO69r
uHnlcSZL+nt6NXb52T0aqhGRcvhUl46MzHM70rOF3NzVz+C18fXswzgYR7h5
x4fh3Lzj0ziiNU99sK8J1Vs+vUcNl8THYmRxLkPcLK1YzFzh9eMU2j4xc+Lm
YmT5Mt7GvL/n5OTEzVN4DuAU7t/Y0ZjJzcXJf+lv/coFiyukK4s9a1yFc7P3
ApROnbwZnf+Z+nPi5uRfXnGzj0vrycedJ1v3WcciN7uPwnsBSie+Nmo+cjM9
uMWMxSXsi63vPPk89Z1e36/Ji+C5YCtu7nwY3Kb9V/mEU55fN8bZmefJY9Ib
4trz5CNxbhYrywvOnD3m3tEfou3Uhb12MvclNyce9Zpw5F7q1hPjutbccXOq
2zFxc+d/Zl6gXvV8R15NfDx5kt1/8RK5+YiPwrVq16KPzDOdQ5ozsT3HHuVl
r7eROHTFzRU7ve06dq65uv6F4mYy83S+K+08ebQ7dnZufip2/sO/8IWTdr/i
5YprPM7Oz/R5dLzM7bt+jMTc9DSXJ0OeZn3eyW+c2NY9FtSbtS+9Fc7WPI5e
6cfQclcj47k15VuY+d6svONvFsd2fU6cbTX2CDO7xq1jJs2ZDFn+j4ri5g//
0M+cwrlZIb2Z/mItpzrO4uwV+ybm7vbVtk5r9jol5GivW6JnCJ0rfeBaTpws
1r2Vm//97/ypj//t77z6+K//7T/3iJupO8vLXCFuru85MTW10sRUnT+D+XnJ
o5F02+RBdhbvcvw6pp3m8+MmDl7Nn7RiavLkTN6zxMWpJ1/iZtePuxxBZ1Vy
M1l4Yt7VfL5d1+AM7/t2ta45F+uDVEy1M1bcTF168m10Ucee+HuXhycfxeRv
uIZ3nWunea9h6cTN6ZjX6s3SmVmDjj4H+jKUK9d5Gcq7cISdyc2lt055iWTn
5K1Inosd3XmlN9ND4DUz7snPdf1i8zpeabLkYLHnDjNPvoyJm7nex13DzdxX
3CyvMX3DZGbn5MTM1Ju9/rLy95y9NZa8TM6u19pHvbPfVm5+GzjZI/UoScy8
4mZynebb8Wq47szjqj6H59DV++Lmr/zqLz5iZtWrS9ycPBnJ28H6ctR22aMw
adZT7Wjnc9eRdV08N9fvydWsMaJj6vyqhp/GKG7l5tq3mPlLX3v97/CX/pXT
K/Vi92skrye/86g5uk455cy5rkxvRtf3JPFwx82drpz2m5g6cXQXK4+GeJSc
6Pqs+zacYelLdi7m/eexXGNecXPn2+j8yWk+ju18zq6H+3bWnyZHr7g5eZN3
9d4u729Hq97h4h0temdMx8mr7e6J3uHmI0ze6eDd+d/CzYoVN1N/TXGUm92n
UdzYacMMnueqdkaKlP83cTP7aj8lN+sYyn3zOMLMk97s4czs2vQRr4ZzczGy
4uR5eKhzoVpw7qmgD5n14tyzoffkZjKwuLmO51o2l73vH3Xsk1/6waPxnpX3
uDnpvt7XxJm5QrzrXmjVo9vxOHd5geRn52YxYu0v3nQfRjEzXzlGx6Cvg5qx
czO1YtWMrhCnJyb2OnVTHmDybCQPTG0TM2u8uJk1r2ssmVo9FWtMRS0fYebS
l2u5mFnczO88hZiN37OJP8jN7q3d5eYdz0bHxffk5iMM7NeW9uVYcqhzc9KO
k37caa7pWYUM7NysOiC17PMn7wfPf0d/7sI9IV3f8I6bWUNPr6zdLNYUQ1ck
X77zqWvSnS8iMfURHfkIG3su34pxj2rXRzXlHW7e4Xled5pj8iZ0PJq2Tdxc
76t/3n/5l//IKWr5SI6geJk9PVbMvHOuk7Z8DTfzmr0+XGngPP8VT9d41a0r
XwbnFjd3Pgxxs655h6Vre5c7uPJBa+6Ou31f8TH5luvI0PJMpBw+6szkYrKy
/MqJu6VDK0/Q2bv4mMfvdG96m992Xn5OZpZPQ74H51cxLFmYXCteTpy72zeQ
3Kyegc6JE2PW/mRlasjKBaQuXPxIZnaupT6dNGLm8bnP2TXhyfM8XZP3RqSn
2cfVK3nYuZma9P/+D/+789h6TTHVoxMzV/wbf/LfeqRHiZuLTfhdl2oXyM+c
6g/To+uadse9iZ1Xuu6Krbv+2z7ndBxt7+pYTFxN7nSmnXzKiZvJwap7wvfT
MZy70zkk70fnw+n05CMcvep/mPIYGWRqhf4unXtTLblVTeiXws07vo4VG3fB
c5kYOp0fj+la9zXc7HUnOj+zv086c/EyY0dz9nzAVR9t+pq9p2FXO67Tmqea
c17rLnGz9n/E0MbN7hk+1ZcDN+veSc9WrPzLzs2s8UzepV6c3uuedFp1YmTp
yMk/ISZWX2rWvtB21rvo9GYyrHuSPQ/QuVd9/JTnl3zS7vUQR7t2XaHaGW8j
Mxevvg3MLL051YLzehbUmDtupp9DWvQRbq59xPDOzq4lJ37txrKfX20vbhQ3
SzPWdteaE686t+p8Ul6fa8OumTtjdzpzd3zxcdKb+axQzCxuXoX3LSc3n/nZ
vh8rilGKE/mbK/tAaGx993mvY2ch1toQN4uFEt/u+py9J3anK3O/jplXerFz
szMw9/V6bomnGezL52PS/tSsE0eTYxMXryLl+jHc53GUm9kvcPJKp3XKBXR/
hrbdys0+9kjdupVmu+LnXea+Bzd35+nnMGnJXX7fipu7/bS+48bUGyT10pPu
mTjatWfxcjFfvdY692A4Q3P95LNIbEt/NUPrd+bpuDkdw30anV7tPVGKMfVM
UKFture6d908KR+wQoyse1bvL3q5wEv8KB5qWZCbEzuTm1NdC+rCxcIKcagY
unzCGl/LGjN5NBLjUkeuOVg3Q4wtVnYm5jrWcub+4nON15jn9Da/rdpyCunC
ZOXEzB7FtuJm1qGjx2C3brPGuF866axdn5KkT7v/uHhQuqxCeqy42bVr5+Kk
Dzs3M+i57upw+Jxk587r4bVG6pXcXJ9P0pp3uVnnrNfaXzp1Hetf/+VfOn93
qb4XtUVtU6+PWqfvuMQ96qVHlibz1Xco9d3kdRY/k0mdW5O2vMoF3PEfT3q2
OJn3otbxOsXNuzq097PWNScd2rldbKxcOx2beXc+z8TM7vXQ9SZu7hh38mas
9GXN1+2zy82sAeNMqr9BrfNaz87NnT965XG+hWm9jt4ON+/qyddys+/PZ4oj
1znxdkXHolpX9QxSDWRyc8eoXmOi42bqzh61LfksFPT6ujfE+wQq+Eyg2s+J
mVcxsbk/O/h6+S2kzVJL13mlZxBeg7YlZu6eY5ypXXPuvM4cSyamzus5edzO
3nxeK1ncTH8zPcdJC6Yfw5nZWTfpzdy3q0vHvETnbp6Hs/PbwsxvKzfTo0Fu
9lw/MjP1ZdZ7IDsf9Tf7sVmng9qu+LH6X7vWrGDeHHmQzKz1ZGf2WhGzih07
X0Xiete4pxrPK5+G92xJzzJkdGrN4uZdZiY3k/k1v+5RcXPFT//cT3/87/zZ
Dz/+b14z01/7O3/ikS+0WETf58Uxzs1cZl89Z6LJB+Gs6louea7zaOxyc9KQ
xbErxtb1iJVZJ23icb+GHU2483xoOfku9Fl0/Uw4l5+Da9XOxRM3p98bnKF1
j52P+XdyhLVZo09crOc/xqQV04Ok57vk2VjNkcZ1scpVdI7d1bNrmbU9Op6d
+ptM7O37u1/5FmbuuJleBGrO7lNwT4Qzc7GxenN3fo3iYnKz3ivE5R0Tipud
LScO7nzOEyO7djxp1Ktg/Q3yLOdTb0L3vqTfAagld5+n7pHXe1vlBzqzOjM7
J3sti06DZp9r6cLM75O/2HuSsG4c55Ze7bl99GR4bp/P1733enXOzVr/NnHz
c/Px5NMQq9Jn7DUcvLbDbh3nrqdKlxeo4/M83BORuFm8yHw9Md/Ejao3IV8G
r5W+jcS4HUNL606+DV2D19DgvvxM6hy1vVif2nZiZnlQyM1HmNm52f0mmvcv
vv6Orfi5P/HZU4ib/+f/6qPTq9b/8Y8+9/Ff+fNfPnNzfQfSU1r+DfFNva/v
7mJt1YGWJihmc/9G4uaJOdMY161XeYaJX52bnZedm+vaqv9Lhe7NDjdTW073
pNOI6dWY/MvkZrIl50vato/xZyOyujOsn2fy7/AZw3k46dc7HmiFNGcxNPtc
vuvc3DF0x81JJ/bjTfPXs0ni5hV3O6c7q3deBbEq+WzSnROniZuLbcWCFWJd
vZ76ePyxf+0RM0tr7s4j8eGKUZ1TV3yr/RM3r7ToNI46vW/3+8i+5ul5hdcx
1QnZ4WbPi+vquaUeIRM7e60K7qdleZzJpLWevufkp6Dvo7jZudi9zJzf9eUV
U6+4mT1P3uvMs96cNF7qzZ6j5uFczXE7PudUz4O1nCdvL70PzIWjTiw27hhR
+9HboX3Eil5Xg14Q1mf27UmP3skJrHHiZu/lwnH0NUtHv4WbU04k75+W//Hv
/tYpxMelORcv//k//cGJnZ2b/8Kv/Mz59Ze/9cXTa4W4mb+R1/fgH/75z55C
3Fw8LTYlJ5Jxa1nbOq2006vZx8TDx9CHIG4lN/IYGlPb61p/7kuffhTFzklz
5jHSdXTcnJg7acSdF1nn68FzSv7mxMK+LnmcOa7jZvE8a2N4viF7C/qzgPYT
E3svwlu4mQzoXLvan/y3w82rMZ6DuOst3uXmNKbLRSS369XrUe5w8m54Tp3r
n9dyM/mY3Ozas8YpT07+YB6n42b3Wkw82z0f7PDv0TGcPzFy2jed28TVztPp
s2DO4mndop6E163w3LyVV6JjZ6+FQW52XVnbmK/HPoDuU05x2v6gY2seXaNr
yu7F6FjauZn7eK/A957mnpudYZ2jOyZ2bzPHUDfd6RWY+m37OXS6bS2rDgb1
Y3oNOn5k7WdyIb0brhlP9TD8OWNi/rRv5+H25wNysThfdZvJzUc9Gqmunu5H
nW+NcWb+u695sli5QsvaxvjjP//pk0ZdLC1uLt4ujq51eq0QN0t3rlB9MDIh
+/XVcvFP0mg7vZn1MrzX9sTN5EVxv86T3Kzj1LjaVpxc10VuXvk0yJYrLT1t
T5y74lvq6K7n+v7O+Z2Hw3k3cfMqJi8H55dWXpy2y83U1tmjmyzqDJyYOLHz
bg7fxKBpzonHp9oak2a84z2euHnaV34QH3NEb077kpvJZp4HuMPOzrPSmsXF
XXB7x7kdO3vNjBUXc3vydySt2n3afp7dcXa4eeL6jqOnYylSLQnn5cTEztXu
RXY2Tjl6Ps5rY4jTtS1xc6o3l3wg9FAknfnEtDgWz23aj70BxeGswUHfNWtB
vw1683Oz8a7eTG+Es7OzcVd/zrn5GnZO50FeJS/TM+y+YnJ04kdpzdSXuf/k
xehY2vnWOb9jat+3Ow6ZmUG/htfdO8LO3u9Q3CweJzf/ga/+yImRf+uvffXk
0xA7l+5c8cu/9hMnXi4eLj6Wt6O4mDxd26lPn+I1Y3vUONc9yajFuM6Nnq/W
cTPrchzRm1nTjN4ScZj4TGMSN9c+1MlVJ9n9FtRjyYudR8O5OXG3+y2ciRM3
89kkeTYmDk7eZr+ma2LiZumcYkn3oDBHUJF05a53INnVx+z6Kyam3dWad4Ne
B3ol6F2ejpm8Et01dNycfNTXaMyJm3cieQYSa+u9uFhs5xytdamHN5mwOx/v
bTLpuEnDnWLi5sT4Pr/nJ97KzYnbXX9l/bVUL23a1rFyx7P0T4iFycY+T3kp
qFVrm/s9/Fxc0+58GNKYdX3O1B3jOyMnbtY9lgeb53Oqm/e1V2+khvNL9Wco
xKesA0de9f597sFw7TnV4Nip5Uxudm5Peq0zK3PnqBmTm3X+/t7rz0115RIf
U3suriQjuybN+6ix5GZ6TXh8Py7Plf6SlBO4w870YTg36xlCn4X4WFFMK24u
vVncXBxcbC1uLp+GM3Pty+UKadH0doiba7k4vdZX1HKFc3PKgxPvTd7ljp3J
3O5PEGf95Fd/8KyRs3+GPCbkZkW9r+0rT7PnEvL6krburJ0YuvNcJC5VzWf1
PEk+iWkO91CsNOekS6+C7Ou5fWTfCtYSUU5ghbb7vsmLm3wRL4WbfV55s11v
5rhUi9rHTOd/Czf7vV/5NK7l5q4mB/XkxH2uPU8a666/OeX87bKyc7Nzcqc3
J0ZPDL4bfi+TD+GrYX3i5K52m+bouDn5nDkPNepU04LeiklP9h4orGfhPVK6
/L6Vhsxz8GcNnnOx8m/89ncu2Jn3j3U/WAfkTfk03hVuLl52zTn5m7tazl77
YpeZXWuufap3dsWP/b7ve1SLzutmJF8DPRr0KHOdeJPbyeY8LrnX6+O550Ic
Su7mPGRmcrPG1dzOzX5eSY9mLmLS3Xd0Zvc3d9xcjEx9uZiWPg3nZnmc5cWo
dRVkZTGxNGlFrau5tCx/dMWrz/1LZ26u86lt0r8Vddyj3JxqbCRmljZcnPxT
H37/iZvr+7uWxQnOzfJqMGq7/B1d0L9Lfu78GhMDJ105cS7rWIhLa9l1Wudm
eimY60e+TeeU6qjwGMmjIT1crCym6/jXGZbHuIabnZ07XfpIz+4dn4bvNzH1
jid6h5t3mT9p8T5Wz5W73FxzqB/6jr955c8gl065aORm586OEz2Hz+d3/7V8
zZ3mnbRmba9jrfoBJk154uajbOwx8V63TezsNR88Vl6KtB97XFP3dY+zuNYZ
lLUynJOdif2V45L3gtc/3R/W0kh5gLwOsjL1Zl6fc7PmflN5ge8KN4uB3Vvs
3FyRcgmdtXc9Gomdyc3qo+3crH6AzpDu+6UeS89y0nbJwLVO8ydu1jr3XnM+
9jLx48lbnfRrjUkeEX4mGktu5lg+JxzxN3NO3VMeu9iU3KxcQHmbxc3FyWc+
fr1cmnOFuLnWybch77OzM/VmbRdnFzef53pYR49H7SvGF1eLrf+v/+HXT7Gq
0dxxs7hNWjM1ZHKz+EC5jTW242Z5cN2HIubn9lRrovNa+JwpN7Dj7JR7R25O
uXhTL5sdbu705XQMcm/qOyIG3uHmel+fU6cZr5h08hl38+yO2+Hma/Yn64tL
eX+OzJdYu2Nv15tX0XEzj5EYuePmpDEnflb+H3l1R2Ptjt9pyp2/Oem/XK+6
eSv9uNOgV9x/lI0nZqZ2PI1NfLhiZm4nJ7sn2nXnpBOzTwiZOPktPDSWHuQu
P4/5hCtuJmuzZzb1aZ1j55XuOJ/+jLeBnZ+biXdCHOx+YvdrJCae6tAd4WbG
B68+8/EPfOafP0etI1PSzyuuLS4kO5Jd3bPMvDdxrPuOxc1kVXpP3L9Mlne+
T3mC5OYpd9D1Zb/P3fWQm+uclC94lJv9fMTMDOm/xaXiZnkoxMqsucH39DdX
kIvl/RDrUpPWdrH5hQ8a74vn5esQK0uHFjevItWeY49qsTO5mfmM8mLUa8fN
8kRLk/aadBM3iyE77nWvxsTN2u71KNxb4Xqv97QmM5PXXbfu+JrHko+C3mNu
pyej42ZqyM7LWl+vZOZrmfUIM/v+nX96h93dP3GEdUtnF5cm/8Qt/pAdzdr5
13la61yjvoabu/c7unPnu0iMO3F6OocpL9DnJteK6+khuSZ4biefCViPv/N3
TEy/MfVj5+YjfJ242XVir6MmzdlrV1B3nniXr2Jw9jHReR7h5qS50wstPdu9
Jp0mrzk9r296HtH9S9dFX4n4+U30236pzCy9uesZOHFx6r1BDZax620WN3/m
gw9OIWZ2f6+4XByd+p3Iv5x8y+5jcB1XWrbm1rUlr3JiS/KwezQSV7tPgz4Q
XaefB30crmf7M4bYeeXRIDd3de/oi1AO34VnQ3l9DyG9Wdwsr4ZyAeV/PmnF
lgcoRiY3M84as+0nbi9uJouTmyv+yT/8jx5xclpX1/e//s2vP/KAkJv1Pe45
f6U9i6XFJbWOY6o+HWtUp3oa5E3Xm8XFK19Gpysnbl7l93VacOJm8n3yYazm
VS+/jpvFevX8IT2Z/Cwull6ZmNNZe+LXIxrz287Naa40zxE9O/mbqRtP3Fz3
QH4nZ2PdH59X57fi5qr3S++DeFH8ucPMZEv3MU/+5YmbXUNesXNFeTMU13Lz
5JlI/FbszFw852Yy9pSvt+JmzwlUTNxMzbVjcNeSXaNO/ufEza5PJ78zuVbL
ug7lHfr1nbRe1OxwDuZ7Xi+5OWnN52t98JqsuFnM/FTc/NI9Gu7T6ML11vTe
c+auYWf17iY3e8031uwQ43o9Za0Tm3ofD/o43HesOcnkSQ92rzXPKfVHSfyv
VzGwa9nkdG0nN4ur5StPWjN7pnS1+JKPw9lZ10Zvs9hYzFysKo9GvRczq5YG
62YoyM3Ox/7+XKvOamxIZ67lYmXmDNLnId4XD1OHJjdTT9f1al/3Tivnkb5t
BZm5gpoe8wJZTyNF1wMkcXPnc066s3Oz6+g+Zqob5xq113VL7Ow69IqbvVaG
5lftb+rKiZupW4sBqTtfy827LMr3rqWSCdNxd8+p4+1d5t3h5qQHd9zc8fM1
3LyKlS/DubnTmXd051Q3Y4eTE2MnHTsxdGJfeZtTfYyjXorEZ+4TEDtSR3W2
FvN5bYyVX6GroeEasef5kftcF6dW7t5leheSv5l8yVy+iZunnL7a7s8TrJnB
OnCJqRldPQ3WkX7EzfZ8wWt/k1rzS2Vl92mIyRIvdzUyPMSZKS/Q+xF2Udxc
MenN7pXwfD/m/MnDId8BX2t95192huWxUj5e8h0nbk56tNf24LHE8Lyn7tGu
ufUZTec69T9R3xT1GxRjr7i5XuUhpq9Z3Fx16FQ/Q75m8vI5L5C156BHp/cn
P3TiZtT00Hmx7ga9zWRi5+aKxMzkZp3PZ3/2hy9yHJ2bGfRw05MtZma/QbKy
9NXO30Du7XiXWvRUh65jYtYO2eFm+o8rSk+v3i5iVufknb5+1KaLo6g/iymd
mY9ws3s6ukgcSn/wDqcm/3Ranni9O87EzUeYudOEd7m5O7/E/0f5eOJm8fDK
z7yqobHyZ6gOXcfNYtev/tIXT7HDzTva83ne4Tf5I3yc5unqW1BnTkxH3j3C
zcm7wHoU1Jrdm+waMvVmcnznl9C+9FiQM5NePnGzzq10Y2q/2sb7xTnJ99TX
u8/In138uUbzO1uzhh65mfXnnqqexkvWlxM3UxP2PMGkL1Pz7XIHUy265Gdm
b8Disy/8+BfPeYE8tuuuZFItU1cWJ3qeGxk75RW6lp3CNePk2XC2TjmC4lm9
Z/08noPv45q0ztlrN+9wM+vUTdys6yU3izHFk87N8h87K3sdOnmRydDyO5Nd
lSvoPEt2T7zLccph5Diyc6c1M+gzce2cQU83/SzkZungOrdadk83uTQx5+Sn
oP/CtehVrxSfY9dXwei4mXl92s+9GB2bJ0/zxM1ar7qArJeR2DjxpuZx9uv6
ak8+C+dIMXf5jFXXY5rriGdih5ndJ5y2pXw8rU8684qbkz5dy64135ubqTnv
MPOKXzt/xoqbPRfv4nw2vA3OXyuteGLlVNshsTHZuaufTF4mN9NLMHmf61zI
nmTIVG/NNVPNk7zRfr/IyFpm3Q3OK05N+ndiZnEzPczpvrs/27Vhzqdz4LLP
xeujN0Mhbn50jAdufqqcwHeJmcnNSWdmJL3ZvQ1a/p3vfv0U7tdI7OzczHp0
7lWgz7eWi3uL7/Se3mbWnuv6odAD7F5hr3FHZua5JV+GOJW6b3cN9Cm79qz8
R91H52E+z6QaItpWGv6kN3c9EqNe/sCOiS3JzWLnjpvdbyFmdM4VE7tPQp5j
8rKCDCx/8l/+D3685WZ/DmAkf4bigv/tOhnOzZyDujl5uqtZrfPROfFaOp14
6nPC3iUdNyePdKcFOzenHMOUn+feDm1373THza4td/XkphxCcR2P32mk7xI3
Hw3n4p3x9DZP3HyL3rzjL+6COu8Rbp58Gs7OXZ2IKZKmm+bY0Yx3uDlpys62
SS9OTN35KVK+nM5Brz7WuTltS4yb7hE52WvFkYtdv+axOm4W00o/3uHmpD93
/KzX5EXxfMHTsp2PxvkzwXtuPs7Nzs7Oze69SPxMVitm9hy+rn6Gs3PFFz73
qYvcOOdN5eyxtoY8DOp7wmXvve0s7Do5Pc7kX43V8Zwvp+C1MB9Q56VjUWvm
vvTCcD7qzF5PT/vtcDO1Zudz3Rf3aJBZxXCPvBqmzYoNxc1iwhTkZmfd4mBy
c71nTh9Zu7al+bk+cfPkba44aeQDLzs317XKQ8IaeY88HeZB4T1KPhN/BvDP
ifyvcB06sbF7PHY8FK5HF+Oyx7V7lcnRO9ysORIPd9zsujPHpBp1R7h58k4k
ru4YulhZdb6li/u5HWHlpwrXpHe52e9Nx9W3+jR2/RnJg5y4eaVFU1MlU3X8
s+Jm9zY457JuQsfWiZs75iWr0hvg491TkDy4nf6sdYmF3XeQ8t14T2qeL330
2Zap6U9wVk7vycxei6PLP9Tcya/xyvRd5+bp9wB/3nBupm6evCcX2+w8yPHS
nF2nr3gKj8a7xMuuN7uGTG+zc1gaT+/CUW5WaM7iZvqqU63kpCOLd7t+game
hnsR3BssHZyeY9d3ne2lzzv3ukZPjdzr5Gl/5kK6n4TcrHXdcw37mngeoLT3
xM38HJ3HxHGuNbOn9rk+M+pr0NssDdV1WK1zTZncXK9e/6LWa1vSxhM/u8bs
/Nlxc527rlF5i4mZpRnLX03PNbn5p3/up09Rdakr5FdRTeuJm1NwvHOzX9sq
VtzMZfot6n15uLnO+6awdrJvJ097niD9zZ3nIvk1Om7mmI6ZExsnDdn3d2b0
8yMru05+tDbetTycfBr34Ob03OAac3eMa7nZNWD5M1bs3NWB8Dy15EWYOKvz
ynJ+57vkMUh+4cS4nS48rdc1pPNL7JxYvfMyix1TDh11atZvI7vyXnzt2x+2
97fT4nncjpv5TJC0ZS47NyeO7diZnyX17MTNF39XDyws30Z69jjfJ3Az8w79
/idmflP1M56bfW+JxFidF8Pz/eQTYK0H127pa5hyA//S3/qVszaqEH86g7Oe
hBhP/gbXmD2ctTuGTj2+XV/X/p63SG52jZoeDHK3n4Pr353+rH27vE0+Q9AL
wprO2pa8zfw8nbXorXBu1uu5BkZgSnKhs10xcDGz6l7QS61zqO3FzWLnehU3
Jw6fYpeVnZvFtOeeK3adp3vwoB2zlwu5WfpyMbPrzs7N1KsT83fcnJ4LeM+p
f0+M7Xq9/C8aw/7oFR03e7iPQ2OrxofGFEeJm10PXnFz0p/FpCu/8i4fJqZe
adR+bF2jH1darB/L6+r5uU7+CI6fuDnVxuieJdIcO9ycePyo/kwOXjFsF4mb
ycXkpFQnbfIOUAd1Dp88xM5Hzqbup2BdBj/+xNAT1ycW9XM+n2/w3zoDilld
j9Z+0pRTjmBtO/Jsklhd95312MS4rnnTy+Hn5MuJnUvfrZAW/Ud/7fOP7p//
nV14Ley9P19QU07PUq6d85zrvJ4yF/Bd1Zsnz3LKwfM6GWRC92jotaupwR6B
xc3kZfdF81isNycWTmzoUYzo3Jxy6ci2ruOyTze3JbYW06b7S4Z3P4d7u90T
wjH0JfMYtZ8YmPdGfhDW0Oh8JbrP7m2mz5bc6ezMHD/vr00fr/ZPjEduFk/T
i0F/hhhaoTmKryde9ldnxKRVs0aHrvHs2wY/6zVxs3ws7JuYuJl+DXlSpKnv
as+Tnu6+EffJ1LHqGSndGzK8uFnr5CcXW0/RjdHf0cTNzPdzX7PXwtAytWq9
przAlX76LnCze7wTU6e50rV092KXmz1XIEX9W+m27XDxOCb0eev2I/OtNOWJ
mzttO2nKKS+P3Dz5ADz/b2Jn52g/J55Ldz6uPyfPs7ZTC+b2HXbu9NP0/CPO
TP2wnZXVI4ThdZ49t7A4tOPmzkvj5zc9B5x/F2h8GH69uiY/BjVzZ+f3zLyO
4tev/OovnnPxnJ2TDj31RnGNlPtM3mYev5vXfb3iRub4UWMlG8vf6+u7Ohnk
Zuq95OZifOrAztD0X3vOoHOz33PeO/c1u+6e+JfrpS/zXtAjwnP1c6dfw7mp
Y07VNKbWTI+zGFos6B7njvOKwVhnmdzsQa9ycbPn1DEXkNdF3uN1qS+iMyN7
IOq69T5xs/ooipUv6usFTZ5+Z9XeeApu1rVqbrGy6mHz2YG+cK+VnVhYc1Gf
1voVU3uvHN1j5mOqL6V8M+zpXrUQz3O8XubfJuNNcbPXs+Ny1R3hGD8Xr2OR
OHU6h05PPsLNft/5nJh4l+u4D+vMsD77iptXTJ341j0OO2ydPAe+b9KaO58v
uaXTm1fcR02x8yNM+YAdTyeOSzoyj5U07cTL3T1OuYKJlYuPFYmbXfNd3UOx
ovfOZv2MLo+xO29uEzfr/tR69gPkfeZnwr+JyR9/frZ74GZ60v0z8p4tFZX3
x9pz5OZ768yJm5+bd+8VYlb11ZZXYuLm5NVIdSYYO/Wb5XHuuNm50j0P0lxZ
g468SN3Z19EvTF7l8dyPzPVkZ50Tl8mgrIvnGq8/F5Cb6fngM0NiXl4beZnc
TKb2c/T3nU+WfgHx15mVHzhFHENNVt+B5EnnZvbvo4+5lv/x7/7WRd2MiZsZ
xdAK52aynLzXqnsnbj7zGHhB9eacm1mDWjosfd/kZq+nUfGInV/P0/kjJs1+
xc3uxeCzg+/H4/O3h8TOum9k5iPcrHt6igf+Pf1NPdQF17135tJncISbGY/6
Ui7G8tjdHLqGR9txTt0xV+cwnb+vc771Z9qOVdN+O9zczeXr9f/Aio93uDn9
1i0uWeV7TboyGWXFzc6R5GXXarnNvQweHTfzuJ2WfA03dz6Oa7jZuc45NHGp
c7NeOZdzc3fvkveCumti6Ynp0zbeH90D1pFLnOx/N6/gY+50aP7N+N8ij1Fs
fPKIoF4GuZla81My83Nz7pvmZudUr7nhXOvaqe+36nuSPLo6TqfHMi/QtV16
dsWY4mYyp/ZjrYvJK7ziZs8fJK92dTb0ntqya9jJo+Eat+dDJm5mODen/Tv/
rHtupadKYxWjkAu8RjM1S7EXGXDiZq2v9x07k6+dmz3XkbWTxbnUMRMvkZu9
h/iZFV7PV7l+F/mSYOPaR/mAmqPG1HtyM+8T9Vzpz9KGJ09z8jH77wapZp/7
mle68w43s7+jtpF7FVzPv7UVN1PXpDbdbUvR6aYdQydurs+y/EvqMSn+FzdP
rJ7YdJehu3Pm3+nEvKvnA47jvdxh8DR2h713uJn8wBpnk+a80kgTP3fryEXO
zZ0uzXXe09p/e+98FIkVp2Bf7Im9ycrO1jwH8TeZcBVkUHo2yMzi5Y5fO951
hu4YmLqs87DvQx03cTP/9vR5k53T5y0vR91jr2Xn95Gfn97zb4r7iY2dnbXt
vT/juqj+IvJLJGZ1XdT9yhqzygfc7RnY+T+c3V1v9np0ZGZpq+Jd7yPtXop0
bNeaJ252b0nHzUk753xkeN9HHO9167yeSIqUC+jMTJ94rSsuFas6S5GbxYjk
E30XMh9Q/EBuZlA/FffyHDy0zXVo72dCZpZGTr2ceW3SgclYF3X0wBH0ZHS9
AsXADHGymJqejgtmfuiH6H5k92103LzSmpPfJuVWrnwVzs3+Sv9HYmbOX/e7
PouOm8mc/rv/mfce9GZpz4nZojZsDOt8+dK5+chzgWvT03Vq3cTCT8XNte/E
ze4P7ph5xdXOpklzJq/5e/dAdHqteNb35T5+XR1Dd9xMnvR5yWiuRU++aGfw
pJPK2ywNWTFxs+cK7sSORyRxs3umd7nZfzsgN+sz1X3lGHI1ay078/tnkn7r
IFOTm8nP4uanqtf8ruvNysVTbp5zK+vBud7sbO3c7P7met1hZoZr0M7w1HXJ
zfRiiF3Jl+4JVg6cs6/Og37hpGt7H/DE1M7Fqd5y4uNuvc7J9+e5uh9FPpUa
K2bWswW5e5ebXYukN0EcmL6T3bPg38GJm6kjM6g5S3dOvbOpNdPnQG4Wz9U1
JJ3Scxv5PMDvcLKxrmnyYJCbL7T6h/HUmTuWdabl5+OvHTurFknKhdzhZt5D
erDT7xKai5r1xM1JixYL73oq6lyS7noPbva/Ff8NQuwsnk/cnPRgbt/Rxzsm
flPcvHMeq7FHQ//+yBLM95q4mbpg59fomDlxs9jJ3yfWneYV+zg3O6f67/47
3OzbdY2dFzpxs+cZdtel9a4LJy194uYd38SKm1c9slfzODuncc7NfE/fs3O1
69E1tjhXjOufZ/fbR/JpJHauKKZ96nrNz824T8XN0prFTknvTXXOUk+UiZu7
XttHuFlcm2pAUIdl7QzyoPdGIVd3OXpkVNaXSDqw7588HNSgfTyfC/y5xO9D
4maeq7+ybnONTb4Rr0Gi8+x8w9JuxT/iA3oRHn0nw/PL+gv8/qVumhg5bfMx
rjU7H1IDdaaTds7vd++hnfpqJ3bWPalrJSs7N7N+BvfVPUp18JKvmNzs/gzX
kN3TXNfpXvaJm/3Y6gXD5yNxtB8rcTN9J/r7cHZ2D3TyaiQ2m7iZ41cM3Y1Z
sbhz9M62jv93nhP8311i7iN+ih1uTueUfpvhuFrPXM9rteaaM+mbZJVTPORV
TdycWPkIN3d6dcfNSTee/BUdRydm29GbycbkuzTePR4Kv6ZJmz+9//aHj9Yr
30+cvNKaVxw8eUJW/N2xsR/ba3Kk3w78PvozQmJrvdb84mb2yda8/pyXPjPn
5qesPfdJ4mbpzeJmMVzySCRNNfkNUi4huVnLXCd/terRddzsx3e9lX4KMqbX
cOZ2r7XMYF4ej0WmFfNODKy5dEzXzbmf33uyOXVvj8TNWlZNkRrntZrFzfSx
VFDrTTUpxM3yNogRpa359ze9EeJVMpLqFSsnT3XonI07z0anM5MD5c1N+XDO
T10fQA+yw2d/9ocvtql/orOy5wJ6r5iOm8W1zp7Jj5G8L7z39Hdwe+Lmjt2T
3iwfhnOzzkt/C0mDTnP6c9YuN5Mbd7l0er8Kjndff8fmieGPHNfHdlx5i77r
2vHE0ytu5rzcfk9uTtySuLj45Dd++zstN7tm6Bpw50fwOdwL0WnQibu+8vA7
/6QjT5r2xOCdZtyxc+Jmvk/6vnOeWNjvkWvNKy/ziptdt3fNuquhcSR0Ds6z
/hmmZwreE+rM2r/mdeb14/BeJ3am7vwmvRnvMjdXDTr6NCrEY11dDGfn5AlO
OYLSnVl7jtysucTNHRc6S8qXq/OgjupMmPoG+jg/rucBkpuTh8TvTQqvt5y4
OflB9J41QHhurhWnWnz0ZZCP+WzBHEXWS+48sOTmYsTaRm4mHzq71f7Mx6vx
6gmS6kT83b//n0Q/hmvQnJ81nJnT5mwpbtbv7MWw9Ge0/uWPPnf2doiVEjfr
GF6jWT7n7/7H/9llDuLDdurDrGPCz8S52XP32KeGeXoTN7surXnkw9A1kXfJ
zRrHfM+Vz+MIN+s5o8tJ2+Vfjr3wgQys+dK52f0Z6f2Rbavo9r0HNyuoIzs3
d5qwauv6Ph03k1Gdi9OxJ24mz6Xf+BODkY3JqkkX5/PCioMTF0/b61mDY8h7
nS7v3Lxi0hpDP3Hi5rQ9Mbbr0MmffE28sprf6fPyz5TaNJ9TlBcobzvP1UN/
U5ojPbs5N79Jnfld5mbXfyvEZ96/xPmO3NdxLX3RSXsmPzsjpmN0uXTc5r1E
3Lfb9Qh0TVlasvbjcdOzgjzS9LX4OZBXk3aevB3+nj5snrfry9S1qTnXMwmf
JVhzhH23xc3J71rL6oF99gQ/fD+Km6nddtycvBTiZvIYOb2rRee83NUcVo0H
+hkuvM0fXXqzJ24mHzvHcJyO4zXo5OEgN1eImZkTmDiWHO3PI64b6/rIzaqZ
kX5D6PTliZvF4a5l3xqa37mZuvMOW7rHgHmrR7k5cbnX6OC6xMKr+TvWXWm9
HfPWuImFV2zs+6fz9HP0edM5eB7EtSEu6/S+yUOx4l5xHzl1Z+6kXSeWcp9v
5+lIfLrjw3afRfIOXLy32mkr3TlpzOkZgdw8xcTN7qVYsXOnEycPx9Ho7ukr
1Fj2z9v3c31f94v3rdiXfL7DzdSxpTN/+tWXT/Heo3EbN5fGTGYWk3lOYMeq
nS7cMbci1W4Ws/E86NVwlk7cnHqAuAZN1vT19DyzvgQ15aQr81zYZ9s1bfYJ
d+7mfkmzFsu6X5peFHKys7qYWayceirqemts4mZqk87NYsJi54vaEw9+XuW4
1X7FvfXqvCtWFNtSG+08zT5HqqmmSNxMzVt+Wn2nJ24WJ3Rs5f1K2O+vQvWg
xc3n+xO4u967TyNp/wzyq3Mzw/P2kr48cTOP5yzLfY7wc6pXp/m6fXQ/pT0n
jp64uQt+voljE2vrebHzPq+4eaXfdly64vukDx/VlK/h5lU413fntoral9yx
+p284+ad39c7H8bFXI32Pc1Lbu72S7WTyUdc7jwdiXvJzR3fr3zXK3YWM7of
w/VnLScmTsuJm8mdyVchdr2VmytYyy9xM9fzHvB3A/dWaB/1JhE317KuzzXr
7jmFfxPk5ve8fF2oXyDzAxMj73iXV5qz7+M5gswHFOsV28m34efGeZM2K870
em5kX+dm9y3Qo5G0Xz1fJF9F0rR1Hqy9nO4XdWv6zMnfPLbmXnEzfc2pF7nX
32DtZrFXcQz9wuRmMTV15jM7fvS9XEDVv+jYV+O99i9ZkLzHfalLOpv47/1i
aDKzeKq+i5Mfg+sjNz94K3S9YuYaL2b2sZxPnE6WdvakNkzPBlmzq5mhe0fv
jY9xhk48rOcYLVNjppek4+auB3dX69nZmc8+EzcnVk3PPVrvevOOX8LrlHfM
3kXqiyhG9Zy5HcZPTMp7MfFnx9ir/VTbZIeb0zF3uHpie3Lzjn9iVx9OftFO
17vwgzx4khODrvRm9w+f5oT+O+m5aVvHu+5RJrOlcz7i8xA78hySD+MoN3e8
nLwc8jh0OvVp3Lc/vNmroc/o7It4uG7/rUL3XJyue+KfBfXk2qa6GvQ4+28C
6TM6jzPPhrTn99x8OzcnNk29TRIDd+u9Rh3Z2LlZ73lMMd+Kmzv/MY8v5nSN
1l+93rLmI2O7PkxudubWeSQ/Rco3pE/a72nnwSY3M1x3p84sbTmFxjg3J78A
c8CUD5i4Wf20y5+c8vwUdSxxOD25ns/XaaPi5U4jdB1Q5+3cPNXL8Hy+Cxb+
6Hv5fM7NFVqn/b0uNLmZ/C192D8H19bJtvTTJC9G4mb3rnc5gIm1nZvJx53m
7HPztwVt67hZzzxkZ/5m4FwsvvRaz14j+lG9u4Vu/K5xc8epOif/97CrKV/D
zd34dO6JR8nCYpY2oBG7T5T+hW5fHs+Z88RxqDWWdGTyt9erIJslPvbjutc2
ca9yIulV5vXyPI/wcmLkFM7N0mJX3Jz4OfkneE86zZnjOY73VRpv59Mo9uaz
gq4lcbPuu9aRm/2+k5vFzny2Sp8VedqP79x8D3b+JPmayc1i5grlBSb/7sTH
zANMXg2vo8b8QOdmeTbEg129O+qm5EzXi3VuXmNDuq/nzjk3O0Pz3MS4YvNu
DmrMiWmpRWu+5E3pvNHun6afmzyeamuwlrW2KXew88uSpZizd66jgZpqCufm
qdayaiiLOakrOis7Q9Frnb5bxReck+Gs49x88fs+amCQk3W9Xm9O49XzRBpz
V+eZ/bVTPmXKDey8G0e5WeOY19f1+E58LU6mt9zDewYmbk79UcjQ7J3Dz1HP
T/q8nU3PPPzQG+UoN+96lbmd5+Lz79Si2+VM7ntEM05cmo7rfg36mibu7dYd
1Zw77t7xaEzs3GnJ2u+0r3HzI30bOvMRbq51KRfPuXnyTVAj3vVpODenPENn
v5X2fC03u+6cNOaOm71XtrhSmrOuZ8cHPWnkjHQvOm52zTl9xmRq5/YK77lC
tr549nv4O/O/a3Gz5wi+r6NxnJsVxcyTpuns7D6F5PvtNOquljP7CtY4nZPz
o7apdh41Xfc1k0fd2+zR6bTOzbxHjMTb9GZ4LTiyMM+tu+8dN1PP7q7NPdtJ
l/bxzs3pd3Vy84lVHjTU+m5VHQlxpNe9kL5Mbj57nKGzUs92ry/HkJvJDq7h
iZupNZ516gfuVe5e4mZ+l4vbvEe3NGb3OYuXz/0AA6dL0xNnJ24WV7L/oXNp
0pp3Q8dM3Dwxe/J3OO923Ow5i+6T3ulXqPt5lJs9NOcON6sHi8I17fR32EXH
jR0HT7p20ns1F9nXWda3+TGPcrOfR6eLr7h6xc2dD4L63eTR6LjZvb9pXeLm
yc8x/Y5PhiLXThomGc55nWzXacc8pmvWPv/EzbvMPHGzztEZekdzdg+Exuj9
Tg6hxu5ycwXP/5U9O+nvTv1N+GySflvg56djiZ15nzXvmZHhiyE3e80P1nF+
rzffxs3SnpPe7PXnyMHe93rH45z6bkt/1npp4PJpeK0J9yUn3dZra/C9WDOx
pOfwOas647rWzO3axr4jpec6D6e+K7xnZFvp0bqPXiPE2dmZmDoz64x03Ex/
s9jG62CIM6gvi5s5jr0Hxc3OzmK+Cs/p85AmSbZWXiF/u3duds4V85ObXYMW
V9Pz7NxMX7X42LnZ5/AegieugD5NRiUf894mdhY3u7a8o0mT1ZOmPHkzkvci
cXO3b/KG6O/uCDfztwp9TuRi77/dcTP/rhnO1Re/RWxw7W5N6R2tNjGps/MO
266OoWcNepa6XMzpOjj/Tu2SiZ2dmyevxujTGCKxt3NR4mYyTOL5Tl8WK5Oj
3Z/hvOr6d8fN5LWOfbvnj5V+La9Fsdq1/OzcumJdzwfkazd+8kbLP7FiZi07
42qd/x0o2BuQ7N15nBM3c87z37X183m0/LD9nh7nTxozV3z4h37mETu754Ke
5E5z7jRh+oDdr+G1nJUrqG3SlMnNKT/PtV0P1rMg05KbnZm1XWMmL4hzc9K+
ycxHuTldL69J3OzrycHUtD0HUNsTNzMf78QkD74JcTN/U5dGLJ2YvUvEy6q9
zJxAbWe/bPYrSf3jEjMzP1G1K2reC0bG97HrnORmMakzMfVn96DUM0KFdOo6
BrnZeyjWNn/v3CzNXtdKVvbejQzdO/mbxb6TzyNF8jFTK/Z8TWdf91q7v4Z+
js7HMXEzj+EMLR4m23qPbtea+V5zaDnx77vEzZ22u2JX7//XXfd0Ps7Nnd7t
unvi54mbybdHGXrl/9DczkLOrOTRXW6eNF/3OFMT5/zu2+jY2e+RX+Pkz9D+
zs1d3l7qCyhu3vU4J24mO1N/XvGy3u9ys1i5juG9wHkf3fuh++ifB38L4D0X
N3f1Qvz3D1+mh6P2uYdHo9OZPwns7B5jeSU8N1AcK47rPBzUZDn2d7779VO4
V6NepTVrPXMDi5uLMenX0JzMFXSdVzzb+Rbcz5Fy4+gTZq6ha7odN0urdmae
uFnnRe+LrkPLfg5dHWpf59zc6e7U1p1txM30DIjJ+D0p/wQ5rTiPPUvYu5v9
scXN7sHl8ZkL5vwmnzX9DMwlox7pnEftXNfp3EwmllZM7iE38/tdTHyuDY3c
QOdm8jM/A53PipvFznr1z6vjZvdZ8J64x533ffJtUJtW0CftPQ8nbp60Zo9U
l6OLI9zs3Nv5kjtvx8TNu1pwp99OrH7EQ9xxc9KA6fvo5k16ctqHfD09G0zn
P7GyM+HkcdgNP05i5M430vklUp0LP1dnbl4Tubm7XrGV1152Ru64udOdEzfr
vdaRjVMtjcqzu4ab3ZfccTM5tOPoSa92btb1+bMW77trzpqDjC/Gpp6tddKb
pRWz/jSv1T8TbtM5PzU3PzfXPnV88OqfRac7J9/FpDcntmZuoHOzezXI7jWm
2Dhxc/KBuBeB3uGksVZ4TYmkwUp7TvmFXGZ+HYPcXNuTbs95mW8o/VnbyM3p
GYDbkk+7trFGs+/D6yZXnLkVWq648qxF4ztMbFecXCFudq3Za2okbnbvtDjT
eaz2F9t5PxVFMZRzs7OaGJbcfL42eCcSE+304z4z9wM3s3baSaskT0NzJje7
3zlpzf7c4c85nTfDPRRpjrSP30tu83xCZ2atJxuzBseOR8N52Zd34uJzMNbV
34yv02tiaL5PfO318ibtecrZS+xLbbZj7W7+6Rg73Dw9A1AXFx9PGn2neXe8
n9hWv3s7I3fcTAaZvNI7GjXfuxY56ba73MxzFLslDiZTd/P72E6f786BPgRy
M5fJxFNO4K6nYqqnUcciN5NZp1p2Pr/zMnmXvoyOm/nMIf4lN/O+8jjySZOb
WVdD/My/K/7dcj6tZy2Na9n5k6w1V/zoT30pcrNrx12uX9qe8gHFzdScd7i5
OE51Plyn5jnQkyH/r+fj0YPRsbKYUvzo/ao9t47jqOOyRp3Xd/M6e0k3Jjdz
Lno2vE8L/dj0XnN8XV/Kd+QzgOah1kofhP/er3GsZ+zcTI+G+Ni1ZvUA9D6A
ZD15LaQ3k99S3+3OV6Br0rVojPRo1oirV2rG6ffw8mIoz8/3nbhZ42pfchc9
0eJmf47xz6HjZt/u77u8Pt7fqfZG0ox93o5fu+P6NmfsSX8+wsoa19XRIE87
M3ds3LFyYsOVJt2xY2LbxKodN3MO16N3vBmdv3g6F46ZNPaOobnP9PxATkk1
1sgznW7r/JG01x39mXO79zZ5JpybJ67umPUrD4x6OhfLTyM3p9/0O26e9G2N
FW/qflFb7rzOt3Bzqq2x8lboOlY1oac5XS/WcwF/z+h+6/C5nLNdG6aGXeei
Whj+mae5tI8fz/Xme3PzczPtm+JmsrPXghNjeZ/sSYv2de5vTpoz+Zm9T8TN
Fe6xVs6g5kw15lTTmJzbMbH7Nbhup1YdfR3u0yDbev0RepL1rJCeO+jboLeD
eYL0XHRsTn3b9Wp+TuIieonpgXCu0Xceudl5mN4M92pojOvRzs2uUWo75xI/
8hzlEyGTuWaq+nepZrNzs66567vNPoDk6TMvPOQI6pmDzx3nWhvQt8l7rgF3
2nPSirte5F2Qj5l/mTRd92Brn+TFoL+DNTsSV+9wc9p/h585xntGkqnpEWKd
75fGzSsmpkei80l0evOOj2LS1Hej0+brGBM3O+M6t7qWfJSbL3jUtF/XmtNv
6vRWkJsTQye/MrmZ+jmvo/NMa3u6LtfdyXnOneLSjo0TN694t+Pnnf0S807s
3F2T7o//zbg/g/eIny/vl+6p87Prz/73514N6cfTbx66Dp7/e26+LX7Pj/7k
x5/54INT0Ovsffu6vEAxXadDd/U1qDm79sye3+RqPwfWzSM3q8abmJlas7g0
6capzoTXOE7MLC4Vb3K8eyg6zdg5mvfJmVb3i/swf1Dc7PXxOo924uaai3zn
3ExGESuSGeTLIBtP3Ox8Xcfx8eI9cU7SrMnZzs1iZ82ftFMxUWLlpDeLFZIf
w+s0a53WSzvvvBxnpnhgZ11X7T/pvx07S4NO/cgnZia3sj6cey2YF+iei6Ql
c3zi5uRxTpw+ac9HfRxHuLnTqHe8GSvdesfv4GN2uHXi4qPc3OnAXJ7Gd3r3
NcHjJI5N3mZ6LtL75OXteNm3U8dVPV1yUecFIdvpuIlzWY9hh5u57x/9te8x
+VSreYrkv+DzgXOz67Rvgpv9WH5eO55pcjP5l5+dPClJa/bfL5yrydLk7PS5
kpudn1d+IbL5rf7mT7pHQ9xMdi7NWfl2XX055QomPXnybnC8z5m4mX4NLpM/
9Z714lgbjlqwn4tzsmvKqaeeM7PukecCupab/Mwph8+ZmfeUzxq85zq2a8v0
rvB9lztIdq65zt9LyAUsPhHXkRGYU98xsevBk0/Dw+s+uz5N/we9Cs7O4nFx
o+uH0oedm1c9A11T7jwZ8lyQmxleq4P168jN9EI4Q3e+DNbYSLmBSWN2vTfl
AU7atDg75fh5/Y0un3Bi711NeeLmbpyzsRhvh50TFyeNtdOajzJj7SOffDfO
a8WttO2kae9ysx/XuT1d7y36M+fv/KUr/6n413mWwXmSZs11HWdRi3RuJjdN
Hg1xs9j3ETt/M+c/OkPTu3EkyM28Z/IGJG6e3rvf+V568+TF0PrVGF2jnjn8
78i52f8G3KMxca1Y3/3J2laftbOz8hv1OWg8j8c5P/3qy6d4rzXfzs3kZ3Hz
yoOx63WefM/Ozt47UHU2WF+a3msy6D/6B3/jglU1t7Mr/RNer7nzYiSfR9KE
a5k5gGJ4Mr7r1B4+X+JnPzbn9+eKjo/pEeFzj55h9H3EuhgnbwJ8ue7/FdOt
mNm5OXFw4uLVdtV+rkjs7J5e52By806On/ZxliYLqEY0uVkeDtXr03bvLcgQ
z+keO6t23Jy8zuLnHWZO7NoxN/dN3MztSVvu2DiNuZabj4Sep/jbipbFhO7P
6Lh5pSEf4eYuR25Xm+64OM2f/NDdcdP6jpuPXKNz/XQdHROTd5xnJ3+ygpov
tcE0R+JecjJZxo/nv+t3DC3mJTcnDZy6OblZfROPMjP5zq+hGI73TWPYp9o9
GzVu5XHuuHli527sjk86bS9mFjfzM5Lm3t1LsrKW/W+CbEwPibhZnmZysucJ
lu7c3QfOLW6ueK81Xxf/4utrrSA3q/fIioGpG3fcTH+F855yBFOeIOs6k6fJ
h9q3eLaYuUIczDw6r3vhNZvlYXBuTuN9m7OqPBHiZudqz8fjK2t3dNys+8jn
EOdm/zwSHzs3+2fGniBituIUctwjTfSj79W4SDl+Ymf3I6+05h12TnmAiZ29
t4o03h1Oph4sv0X5pelpXnGzepAzr5G1mcnN9HHwvoub6YlI3Dx5nvUMkbg5
+TQ6T8jEzYl3J1+Ga8Ids6f5kh6d+Jzh/b2THu093qk3OzevfBhvGze7N3qa
y/sBTr7pa/Xio9fYsf7kN+h+x+702hU3++/u1G5TDQ/n5nQeYqbE1h0/T9fq
90PMfO4b/s39nEfyIdmMHgL6FXTvlBvY9Qe8FzevamSQN7mO+mzyaOizL26m
1i/NnZ9l5+PhOP5NUJN2bwnZWM8lOif3a2hd8qfw7/jWfifvufkzj5i5gr7j
lAMo5qVGuVtjg/uQm113lt5MrZncTH8zuVn86edLL0bK8SPbTuzs6ycmpn+E
272mB9e7Hkzu7vIu/Vr5npzM+598Gbz/ZGLxCPua0AtaXCf9rV6dk7vwXMGj
3JxqQFNbTtqheLH2ITfv1o87f48/MCxrOpOf9bu5+EL36qQtf/S9HoPOzWde
fv0q7uM58vMgLya/c/I4OzenHt1JS05s3OnVOjfVm+P6VOsifVbk6u64E0N3
PLy7boeb2TvFuTcytMahP2HyLFzjVdDf54o578HNq5zANI8fx/fVeXWe6yPP
C+TDa5jZeZi/mft+Gkct98LXCsZKGqNzjViMXlxx3RFuTuepoLe5ONDn8R7R
ugf83d91VL8e9Yqu9d7/b9KX01y73LzDzJP2zOMmbk65mfSqdM8azrH8HHkM
v/b0nvwsn0XpxswRTLozt99St/k9M19yM3MDi0c9F8/ZTDXlvAeg69GJ8Va8
Tc2Z7FzvVVuDNZ09J5BeXvmYu3rHK0bu8gFXzJ10bfdBk5vpJ+H56X6594LX
N+nP7idPPO55nXX/2dvOmY4sUSFurvGl4SUtmbmAiXuPMLbnA1b8H//Fz5+5
WT22L/jjYR3Pr/jr4juX3hOwqr6nP/uzP3x6Lc1Y/MRXPldoPq3X/dQ5kZvJ
s9yn7rlYm9ycWLLza6S6Ggp5NToW7dg4aci+L3mUOXwdN8vLwf07nu76pHTa
9i43+3b6mLnu7NkoZv7WZZ2MNi/wga+9R+HFejB0pxN33uBdrbmb23k2MXhi
111u1vqY9zpoyffm5o5rOh8zGTTNkXwT1KqZ49WxrnOze4TJzYnd/BwTO/O8
mA+o/VkTouNmv1/uoyXrkRUTN/P55EhdjGs42fXlxOJ8lvH96Wvh/WLwHvn1
JW5WdF4T9777sx5zAsnNHTtrO73N73sE3s7N9ao6dKk3n4e4WZHY2fMEPYfQ
NWvf3zVmcTN9wuJWcSd9FwrnWHEja0+suLnGpvxAMXryKZObUz1meTm0jdyc
cvl0nUmP7rwzrjGz7gdZXPXr6rW4mXXUxGBiT3GUWJmsovy1Hf/FKndwWk9W
dm5WLTl5rxViZvI261LXNufm9F2t73/XH8W7+g1ffbfFyeJm7UMWpX+cdf/c
/1y1OcRuZMyduhpe1zn5nidu9pj4ObGp+Fi+Z+nRGkPfhNZrrDh6pTcnbu60
6HSefL5yVk4MLb+za87kZ/G0xjziZYT06C6fcGJqsqWz8MTNq3Bu7Th8Nf9F
HkFY59u74+5yc9KPk5eYzJp0Q3Fn2uYcyHF8r5oanivofUqcm5WX5tq4PxtM
HgGxufs0OI90YUZ3na7LJg6lD4VjJuY+GrveZc+fc/b2c+m4Wdo876n25efC
+3rtdfrvIP53KxZ2HtY6r7Ehnn5KZv4kcbM8GsXMFeIv6brSfxM7J/24G3+E
m92XwbrOzs2cn5ovj+0cSx03cXNi6ORLJteyfnPyRLsHY6pl577rpBMnf0Z6
zvFnBHJ7qmuiGiHUhYohilWoCSZ+6bTma7nZ9WRystbRu0y/QwW5mdtqPHMR
yc28FmnCYiDnZmrK8miImZX/R93afco1t3uRk85JD3nNUeP0maie9aoOHY/j
vJzqPHd+5sTM7i8mw9Jj7HmB1Jk7LXiHmxPDd9ycWLnTnPUZJIaeuNnrajwn
N1MH9v13PdIpRzD5P3Y0cJ7LxM2dJyQ9w/r5fAX6n7OH58Y5cyatmf6KHb3a
tWj5Ndyz0XlHnN06bu48DZPfQud7Czdrv+Rz4PJKSz7Ckys2Fh+v2Dlx88TM
0qL5ucnj7NeRfo+YrjF97p12343R50FulhbNucnMT1V/7pPGzV/48S+e61Yk
bl6xc/JqrJi582yQk9mDhTWl1T9Q3geG86Z8EGRRr7Xh/mPt33mb3Y/hnM1g
XQ33Qnfh3Ez/Be8VawHSF+P3xL0fqW6gxpGZxYbyE4hx/Dd18abW7+b6rbTm
xM7UocnN0pjJx1onthUDSev1Gh7Uosl9EzeTEZybXWOmbsy6cs680jzrHMjl
4mfnZvLk1O/E6zh33meyacfQzs2TB6PzcmgM+6J0OrV7RVZas/M0X8nhk1dj
xc2db8P9zeTnjpfdKz1xceJS1slL3Mx1iUev4Wbff2L9Tpvmej+/3WN7TJ6M
xM1dUItO/g1nSp87cXPH7BeM83ocmTlxMzVr14BX3Mxr2+Vmv1Ytd3l113gw
Jsbc9WN0bH2Em31//z1BOY78bPgskXh44uKJnX2cb9N1sUYGa5q4t+MWvXli
5+fm2OfiZuq7YuYKasjJM9vpll3+WvIRVLD/Nj3OrD9HlpeW654FZ+PU61rc
Ky80+29PNeKclZ2bk/fZuZm6Lo8hnvV+4FrPZfc6az72Fk/n73o1mZvnRo2W
jCBWc0ZJeWa3aM30YbgXg+tYT5jcXCENmlpwvTo3iwNrvdiZzFzhXs6zHmZ+
Zj5vKF+SPMD6c1O+Hvler+RmaePUrI9E4mneC+f4qYaGM3aqC93V7eDfVWJv
1rDrmNi5+Bpu7vzN/PtK61KPbunPiottAy9zzAUjB46euLpjas6dPMOTN2OH
nxMLH6ln3bEz2d/rp3dBXkisS6/v5G04+yYemHfXp5HYOfmgEzcnrdJ9HMxR
43U4N3ecTybW8lTbQnl8nEO5cF2O3uTdvSc3k4fJvanGsdfQ6M7P17uXx7Xe
FTev9OQpVveM10Zu9nOrYC7h+3zA27m58gFTvQrPB3Tvskdi5CkfkMybams4
O4vdi0PJ9Z6fR18EOVMMS++y98B2bk55gfRgkJu5H3XpzrNCHVj3x+tJO1u7
p9k9Kp7z6Ozsn1d63lE9B9aAEJ/J0+B+DefViZt3mNk52ZlZXmZ5UhmJzdhL
RBot/RrS1MXNdc3sS0I+KI9x4mayszwV9HKIm8XDzn+ucfKV16d62qyFPUXn
y3BunvwZZNpVHiGZms8Dk158dPsON08ekrRvp3f7s6OvExvSX8NadeRj+W6S
l4P5geeA/+MIOz9ic9t+RG9esbOv57GOcLP3bOk8JbvszNoWO/qy8yu5OTFy
Fyl3r+Pn1C/Dz8c5XHwm9iI313Z5CCYWTgyt8znt/6f+5QtudnZecS15f5eZ
6X0Wl6405q99+8OzJszXxMwTfye92Z9ZnJvJtsmX0THwDi+vmFn3S54M52bm
CdLLcW9ufm5+fU5urkh+CHFzVy/D/Rf0C3R+DPa3c03V63N4TY8vfO5TF4wo
hk51LehJYK0N5vi5vzjVw3BuTvl+xeP0OrtO7Dl+ZGZyM3VxnhPHdTq++6/J
zVWfL/k0yNz0fTDPTd/z0milOTvj1HdbbfM6yYmdd7l54mdxc4XryWJispD3
8Kux4i9ycy1f+CTAw2Jm9c2uV/ViFj/x+57crJoaxZDiYXGqnkUueOuBj2u9
+6Jd371HJAbv9GbfNnFz57leeTh2uHlnvJ9T8mV38Ung5tW8Ezun43f8nHwr
Ezen80p6c3dOzLFLnuKVxsx9k7Y8cbj7YbtQ7236MOihcI5Pfm2G5hU3y4tL
rkt6c/JkcH2xKblZbDvxLBlP19PpyHzv17jLzR2/H+FmPxfeV3po+DvArXry
tTqz/CXMA0w+DeUDur/5fQ2N27lZOYHea8T7lfjv+c5t7t0Q/yZdOnkUuroa
YujiZvZBITcnn7BzNJm0661NHTrptORizul5iJ6P57UxVr7odA1+b9I1dz6T
zkvN83ZuLtYQM+s9/cPiSvGqvBLy0ErPdXae6mZMOrNz85nZH/RcMhH7nejc
vC8J2Uosp74s6gGYPBje+4Q5fBff+Q+szpp+Pp7c7DzmDO11ne/Fy2JmLiee
nrjZteXJP+3773JzYnFn+5UG3unRt3Czf17eg9v9GBeMHGrZXbAzuJf5cslP
wec2/b6h3zjc++CeiFu5+cj2jvvdr7HiZt/PufnMPPAWJ272XLvO3+wM3XEz
vRiT9py4mcek1yJ5rT3fMXF0x82T5vzIp1Hc/Dp4Ds6g5ERnZ/cMuJfDWdCf
C44w+sTNk//Zudnvo19bx87T+i7Sc9CORq99Ejfz7+Mpufm5+fW59eYf/akv
XbAzc/C6Gg7Jt+EejFSPLnk8nLvdU63zYo2NVJMt8WDiyuSv8HpzKZ8u+U26
fL+kKycvR9K5/XpSTb907KQrJ252T/qFfx3M4dx80SfQvvM8L0+6s7hZDDbV
lZs8zR5k44mbz4xvfazpRa3zkgehegAmbia/ak49S1DX5nHEzOLm4hjnZjKc
1zx7pF8+aOHixYl5d5k5xcTN4mLXkrv3nV/auXnFuJOno9tnNZ/7NRLDJ3ZW
LuO55slrvuXvNM6Bnc95quNckX7HSOxMLVd/b/oczn9/YV+ucx14YuJruZke
a2d316yVi8vzS8cXM7Ofd/JmkKXJpYmb+T7p1bvcvPI6e96fa8f0MNMj4edN
LzPn7vzNXf5f2lbMrB7Tky9DvNj5L5yBfWxaNzHxDjd7fl+nLScm1X3stN5b
uHl6BtplZz2D7HKzxrz3aNwe7BeYuDnl8CX/M9mXmnKqk5ZqGZOxxXTUvFPe
IucXZ3p9OGdW1jFmjiB1a/YddOZMHhSydO1X+3O9WDx5j1O9i07L7+qVcHt3
rtP5k5nFBu5b1jrWp5CmWq/yGaSe1mJkzZU05qPcTI+zfM70Xa+4mX5nPRuQ
m6XRubcjcTM118TPzs2uJbO+dGJlfy7RMwz92Stu5meRmDnpz87Ovo2c67w5
eaWdZXeYt9v3iG8j8TC52HP+mHOaan7QX5O4mWPpxUg5ghf87D6OxmvhfOvc
+8gHYutYq5zc6syc3q+42b3KiZsT+/pxeB+817d7NjpudgYll3YeDXIzOce9
rmkeasSJmz2vT5ozGTqd+wULmbeD3Ey/x5m14VdObKyxEze7r7njZp0vt1Fn
3s0V7PIMj3AztfHunNN6erpVP8O16MmrkZ4fnJv9b8E1dtfrJ26Wf7lC101u
vqXfyXtunrlZ/QLJzamuWeJoH5v06OQtSDlqrq2y77bXo9OYqktX78XDzs3k
5a5OBpk26c3uK+n07OJm9f6mTzqdS9KJd+559znofPzcnO/5mfFeUnNj7Vzx
SsrBEyORm+nT0G/3Fc7Nk395p4Yz2ZmcnNi5QvzptS/IwnW+YubUr0TPEbwu
HY/PF+7r4G/n5GZyGHnZ77e8JYlzJ914d901/mc+Lzg3J39GFyu+3lm38lpP
/Kxnrh3PM3uyvHRuTl6JxMGTV5n8LX6NPmZo6StuZi2NpLN33C5dvWPWR1ou
aio7e1Ln7bi580lXdB4N79Unbk7sObG/ONaPy+3yajzqaw2OPvtAoCtzW9fv
o/NoJJ1WOWy7vHxES+7GdJ6SxO1+HWJb5+bExzsa8YqbK454NpJ2zVp0fM5i
b+17cfNzc+tzh+vNrjknfTOxbRpDZk7r3dfsr9RD6b1mDxT13KbWzLw6eS6o
ueq47mv2HEL3C+8E9/f6dsl7nHzJzsFHuTndQ+f7FTc7gxTbuA/XtcXEsM7N
Ew/Le+EadNKiJ8/G/8/e37TY1rXZeaAbdhXlwiUpcZadmZUC8ZLmkVPGqKgX
40K4Y1ISUkfZcoIahUEddSxj3FRPCEP+AzWr654L9Ack6n/5naEY4SuuGPdc
c+2Ic+Kc85zGJPZen3OtvZ/nXGvscY97x83Ret2LJH1O+Jv2qvsjNydXhMxF
5r7iZvbQfukrCG4Oc6VfebzP5ryJfU/ZebfvlY+jcbO5NPeIz1xm43wnrjTp
O7p084Tw82p+ZT6z3OHmHCu/U7z6DeGZ4ehxbnlzR+O/+z9qc+n5yPfSPb3z
XNZ6fe805Lvc3PY1C3MOeWbY5diRhxs3Z3k82/al8Honbn5T+wdufqS+74qb
J5/GGz14YKKmh5uLyd9tXTg4urNH4+YXfRnbWHNu3HzCxVe+A9cFtvM1Vs7r
k1yOdjxqzfZih5vpN5lYdlrXNGRyc0ar+Ww+EGv4azRufk+Oxk+9eebmsDO5
ecptuOJmey2mHI4pl6OxILM+yM1kUXJwmHSxIOv2yLDmZuvT7gvYfB7k0FZL
OPlAWk2gfdHUjXfPJBM3+/06lvNJqOeHnal1mk/s781gvZ91YPJWjhnWTe+S
xsA7TjZzk5H9mgxNbrbXmZwTZk5uBr0a1Jvt28jxw91rtD6B7BfIY+T+pnaQ
dXbm5jvs7O12vWUm30ZbZ/41N3O5Pczcr+nS077NBxLtvz3rnXLzCTM31ubv
A3lPjTmvrc1e8fPOA2H/dPiUz338DmYbe4onH/Kk5e4yOCZudr7GVX5cfpfh
MTjWdTVudk/7xqZvdFv17+O21J53HuUdN18xN4+xY8nwkXVcn2PxbXs+SH+7
xs1ZRl5ug3ka5Lf3cnPzcpgHqVOfejOucjmu+L1dS1j1Sldu+rI16ubb2TEz
Wd46M+9B6h/DzfRoPOJt/snN19y8fBprmJ2b19msTC9vq2Nrgz6LHR/G37zm
tLTlNcijTT9e+7LXSZY5s468G25uec1TvV5y3ujJaNkYzMAzNzfvirXhU23f
nmV60HfMnPfxW7D+i7yZv1lnz4WZlqxmXwb5beJmsxTZuHFzG9yPGvELw8K7
HG5u+RnxbZCb7aMgj5O7uc0a4XJyzotWiYzm5is2A0/3v23Xnm/ucnMGWZdM
nJ4ijX29fPJdtPrBSVueuPmkHnBi6MbarR/ipEGTn+/wctObGyfvfMDm2jDm
jnNzLnsnmq/itGbwEW4+GfSZhJcf4ebJQ2zPxnQcv36UmcOiE4eZASfPR7jZ
549vuXHzE6tJZ95xs+ez01QnPbnxrjXf6bg7vbn5kyefRjun921a8h3/xNX4
pTy3UWM3H9tnT80518QawObR+EjN+bPZ9VvhZvucycqtRtB+Ztag7bhu4mYz
OPXncHPqAcPPiz/X32jK5OIco/UuYW1g6zOS2kDzs7mZ/E4fsxmY/N64uXkp
diw9+TRy/ya/udk5f9d9JYtQQ03fDLJA/AjWMMnFV2wXRuY+jXnjDYmmZ07O
fs2f0bRnas7k5ujJ699d+yuSIRe+fcn2gufihX2f2fkNN//u+Mk34H6v9t1w
8xrM82v3tjGx+55fcfPkZ27zueLmxqrZ1ow6eTAmbt55N07GxMo7tv7RuJlc
/Ialcc6rXDkz8pSvTB/GbrT9zOS5R+Rm+pvNpjt2nVh2x8QnOvSuxu+V9l3q
yCZu5r72Src5xqdBXTk6dLj5ip3Nzev1VZbGlcZ86mFu66m7nnDzdF6/5nX4
3I/4mCfdeG1L7wd9G81rzWcPbkvWNjc7f+4RXv7Jzfe4mb0DGzdPenPrH9h0
0qahXvlBmEMXbl6vycqp6eOxyanWj6lJ53zkZvs2Gseasa01t/7bnI/90a5f
dI8YDveKaTqy7zP1ZT7DUI9lX8Bwc/y27FXNjOYpG8N9Tcy75mbOg54Gzytz
y75cRq6jxkzN3BrwC2/8btli3tQGUlPO78g5VnTj/E7ujIywE3uWrBHm5m/8
ua68Tm+UDOdgNy2f3MtljZsba086c+NmM3OrF4xme8KpV/x86oNu+vbExbtt
r7g5z3PsC+5ny4mXj/m5eHybf4H1eI21rRO3mrtTbp78HS1jz56QK1b2cXd+
jsXJ6zx5nn367+zP/112n/tQhyUnb4Z9wfY4N9154u0cj/7mJ156zpFOz+4r
buacGjevv3/5r/7pKwbO+VnLF25u/E52npjZOnxq5cJqd/0ZOy6evBVvuPm5
F0vzYLS6vdOawt28T7woJzpz0+HDwc7UsO+DnwP9HWZl995+Dzf/zG8+4+bf
/PGfvMp9o9fW3Lzj3eZ93h2j9UlpPudwXvTqzI3+4niLw82t7x+ZOevDqI1z
rS2HY+nToJZt1jWDm+cbN7cMkPByRrtX9kc3T4YHe5eE4cJCi0XNJuTmNqI5
7/po28uc2rpwiXVZzm3iZmaHhede6vCkwT3pcM9acHyS5Obw8Kvc6vTQft4u
2yYnY723Z5e+8XAzOSbrnNW8ttlx886n0frKeNurXo2Np5Nl1/zIZth4jKMv
T16IK16esjzeMziPph/v2Nn+jUmLbtxc+XKXryG/85t6O9QLNr05WnP+7moE
mX2x82GccHM7xyOejKZTN27m9b1wMvTeSfvNOnMz2fbKr3GVaWEWX1pjMhQa
NzcGo3ckrBVuJiOHdblsp42veey05hzH7Hqqwe64ua1vLJyeJeTmHYdnPrv6
wjC2tWCy6pQ/t0b09/a5uU7zhJvz+WZ/a/kTO+dzbL3F31sT+JOb7+vNuzyN
pju3fibNn2FObtvwGMxvXiMZGtGbyfTMkKOngZxqBqZ/wixrj0Zy5pqWHN3Z
3MtjpCc36wl5rom3m3eD3Ex+Xq9zzVOtZRtm08UB0ZrNSBw7dt6xmZk5Izpe
dO2cJxztc9uPQc2X3Oxe2xl5/8LNz69zP57+fZaX2To0mTq+i8yF3EwNOby+
RhjR3mty8xorW9o+irDl1X1vn8OVx6N5NrjuSvslN5t5zcv0/7R6wZ2+fMLG
PAfZuHGwvReTJ8Ps7OztqR5wytjYsSd9vU1LprY7eZDJz2baMKqf6ahpv/Ir
F308y83Vj3LzLoPD/pTGzVeejJ3Hwtx85e1oLN64mcvDSjv9MrnOPtZipsXN
YSdzc3j5yntN9iJzk7czR7PmqXfhKhdj4trdmDh88jVM3Gwtn9fJ3jH5vHKO
cHMb/JzpT979rsD9dvfZ883nxyzo9/YI/MnNZ9zs+sBVG8i8t0lbNvO2Phun
3NzWk5udLR1u9pyoITsDg3MjNy+eJUPvBrm5+T0mf4bz5ppPw5y+G+TkxtDr
GFl+8jtB8wwwS67xyyk37zzQjZupfecc66+52ewcDqJ3OTV8r1iC/ItlLZcg
+XDUvrndC+fiuORme5XzmnkMb7j5meed5xw+Du+6fm6nMzdfx05nnljZ6098
Ezuu3mnLrhE89Wnke2AvRsvEmLh4YuMfjZu5vf0VPs6b+rySA7Jj3dvcfOHx
mLTziWWfuGSTozHpzTv+tsbcNOrGzeTVHXc2bl7L+Tt9jmFudm4zWbpxczI2
OMi+zRNxqjVfZVHcYeYdO4ctJ242szZu5nVb49/xcuPgkwwOjx03e8557+/D
Gh9RE/jT37znZmrOq+/2H/7y+5fcPOmX1Dsnv3N8FNOwv9l9T1znRm5eHBwW
DkOudVlujde1e/Ysk6ebFk3dmPkZHK7ts9/ajO3cDvs9yMtXg/4Zj5fPEvyy
/saLTH2Y+nPLaian0acxsfSu50nYPbr3lbb4ipvx73z9TRp6bjiCff3iYQ4X
h2Gz3B4LczM9Hux5PHHz2nfp2mFnMz3Zece+6y+32en//iwmdp7e756l+D3y
8D4TN5uL228erU5w53e2V+Q93Nz25XPnCTdf+ZxfrQMjN42VdYM7n7P/u3iU
m5v2fMK6H8nN9o1kzo2FXxi1cHNj2xNduvk0KqvLL9K4ubFVGDl8RG7Oevua
OU64mfM0N5svG6Oe+jM4nC1HhlznsS/jzuBcT4Z5NNzc6jGds3Lix+B779O4
+Yqpyc38/NZvD/z9IX/XvfzJzV9eb85Y3NxYdfIxm6etizZ23nE32dv+Zta3
kZnX9uHl/OU8nHdBJiU3c7/mg5480M6dMwtzLtabeQzeX3uc46emV8Msba7m
52Jf9HpNJgl/hqesOed1y60gi5GbF1O4RtDcHMZxjWC4eepr0rTnl3q8P/+j
V7rdS42TspRfvBh//rqfdtg5+RnsCZfafWYvR5def818y2Nh3rSfOeyXTA/7
n6dcC3Nx/NAT87ZawLZ+d57m4bAPftKYzc2+thznrn595dcwN0++ZurV03r2
3+ZvJKw/PakLXH+ffhPROurL1ponf7KXm6fbdvQ8kD+vWPmEm+8c4yMYO/Om
3vfGP/FObm7ehx03/xa/9b8wk/Rja5KcP73a1G7JzW2+ZGRzMz0YXNa8HWRb
67yTv/dqGbk268y8d3VnarQ+RjtvNHtzMXViczHvC3sq2mcx8a+5uenKJ9zs
3zbcO4XczCy6j/ZqfDa/fu3x7/+f/6OnYW5mD5TozU3TrXplGewB2NjZ3Jz3
0Vu5fWN48jN9EM3HzEy6puNSVybjZhl9GJMHwzr2xMw5N73Y1Lntdwkrc0z5
G2FmfwZkZo+WZ0EOJY+Fla70zCnDYeJmv3fWHJc1f0ar8Qo3h3vXv68tl5nc
zPrBV7obdGhqydaamSNHZs7ItZMVF2+tecTf6yy8db7Gl5OvOZosn2/Iw2td
trfPg5+TubT5bqaaPbMtP6ucL6+bj57rr7waJ15nepm9rH13djWBZGXnaZzk
0O3qBfOdXYP773IyyMb2/nJd05CpZYetyaHWfNf3ka/zvmnDX5qb1zn53wiv
beLmycPRvBWnY7dPGDlZGj5P+Ge9jydj4n56WhuHtW3JeeFkcnP4z8zN/oAT
N0/67Ylng8dt+vAj3Dzt77mRNcPKvzznnMSL0Z6Jcs9f9SyHjuzXeX/lueB9
oYd62j7HdCah81aeruud3PzT3/yamSduts+59cs4YebGz42TnQNBxrPWPPk0
cjwzKpmUWrDr78LUTY+23uw6QvuZydnWoZPvQV8091tjMfEVM6+x7o9rBHce
jhNuDrsyJ65lze1+2ydftcwzc3PzbZiLp3znxvotj6P1vX7TBxseZ/on3vQ2
QT2h6wOTOUdPM+viMsfkYTRufpm7zt18DCfPLWTgxXb+/Mie9E2bXX3uHOuK
m5uvh7qxmfguN1NPnrTmloVB/zOZevJq5LU15u+Zm7mN2XjiZm9Hjr7yUXwJ
bm5sTq/GHT62xnvFyju9+Y3/GDl0E9tat9zyeGEq1vVdcTOZmezMTOformbR
xql3OJqZGe9hZWq0ZHD6fn3usK71YT6v+LeH9vnw3pCTw+XtHDvPxanGnM+U
34OnjBHlFOZe/OTmj2XmHTdTdybnLkbdemQ3OvOUwdGY2dwcdv5n//Ivxt4d
YVL7idnLr3EzfdFTTrI9HNZ3uYzcnNyP9ZpzdL6HuXk3ch76xM3BJz5o1hSa
S/na+WeNmZknbJ/HlHPmnoH0UIebm//ZPujGzhlm30lvzr/91J69L2sDmYVh
bl5aMfkvbEY2tUdiLc/xs91aznM4X8Jj59to3HySTde8GeTmdu5pfrxW3pcd
N++YuWnJfO4wF7ccjUe52T22p2HfxZadw7Ylj+4VW4MVmfE8eTToiW4+6Ee4
+ZSVzbJf0p+Raw2jNy3YnuQT3Xji11OPxrS92dbMR79A87Nmbs1fsEb6lZCb
w8Pk4qzLnMLN4cudlvsIN4fzdvuc1AJeacvOywhL5lr9zMB6v+TPmW3zfm2b
Ws3mr5g4eFrGz7h5N3huX9PafnmY2+8O0ZvNzncZ+ic33+Pm+JzXsJeYXNy4
mczLrLjG0+TmLAsP5rzh5jWyzDWL7hfiniHNw5xzZx2vxx4OM3fzIufY8Vev
wewPe6uZx7G4+IqdOecpk27iZj/vmJtbv+ud1hyO5u/+YSPyV/NB0+9MBm7n
3w1zM/NA6B22RjaNcHPGq9+AB24OZ6dnWbiQrEZubjy5tiVXNm7ejStu9mfG
Z527o3mbG++29+ZmD2rTV/6MiaFPuXnn8Wg1gebllqHBdcwJ58hxJ79zqwsk
W5ObnZNhHbYtm3zTpxryI9z86GjPt42brW1bKzQ/k6HvMPapr3k3+Bs7f9cn
n2XdTgNv3Ny2jeeCzNxym7OOHoQ72vLJ9jsfB7XjEy9GY2ceg88mEze32j9y
c6sJtE/D2vdJdshOd7ZObW7PXMLZi5t9Dfnscy/cc/s93PzZHPs9cPPya5Cb
mza8G2RFsjJzLnZMvUa42dr3U5+753OYZ6nrNs8Fddtst1g37BsuDctOWnM4
lt6KaMwZ4eaWqRFuznkm3ZnPA9NncMrN1p7Nra7zM4dRf14jmc9kKmvCjYUn
rzM9I83nYS9vWKvpzeTmK2aOb5keDHsxJu9HuDrcvJis5ZbFX0HeTf8UarB3
OHnHzTv/xpXn5pShrRc3bt7V+NHDQp6dcjLuepvJvieeDr9vfbTD0Flmhr7j
03AmXasjfMXX0Fe57aQ3v/Isw89M9o7H41saj/L5jpvZy6P9Js9lEze/+CSe
f9u/w8zRdNOzZPIDnGjaydKwf4DX+sJY6AkY/4i5OUy405bdL/AuN59sv9Oa
d9lyr3j5d9cbbqavhbl+EzeHea318t42f3M+Cz4DTPO0/mxuNqtbc+aIT2Pi
8Kz/KG7+0Rh6sfApM59w82Lm9EFx7+0rfm5eDWrJU4ZG06J9fmq32Y5ZE+HM
LM921o15PnPzlHVhjTjXEu0718dz8XgTx2fOZmbycv5OzxmuDcw9MSeTp12T
R5/ExF6LlaMxhyGj89IPnW3MxI3fdsw8ZRJzxCc8+jWoEcOfzH+j7cdoHua2
noPcHHYmM6915P1wc9Mu7V2YGNk1fXe5+ZSdJ2affBbNo8HsCXqTeYxowjtO
zv2c2HnyNNunwd6A9mw038ePxs07Vv1SdX2nng1zc/bb7Z9rM/eSJe2fsIZL
j/Dk5bjjhW7c7GO6HrBlnk3nauxMnTmDzLhGNOZw81oXD0JG42NyMwdr0hoT
T7x7ys07XqY3g3Pg58r7MzEzn2EmlvYzip+7mtfGvyvstGez79X2nic16WjN
5uY7/Pxr4ObGzo2ZT/Xm+JzZc2TSnidfM98zW26qEWzc7G3X+en/8DnoY2h+
C+rEZOZdXeGV34M8b9+yfdBkY3Kz8zLIze05hNfcNHfWEbaMurAqa7rIzeQs
siy9GVO9X+NmezR2zLbjZO7L+joyWTgtTPMqgwtaMhkhTD1xM7mE/M3cOGY2
k+GyjNz8iuuVyUH909x8xc+7e3miUftzaVr35Jlghoa5mfkVea5o3BwuzrVb
o+Y+zsloOv/ExRM3cz/X/+16oDzKzRNL24vcuPoVM4uLp8zmHTeHV78EN+e/
k/dwsxm5+Tiat+Ll9+/iO554tLHzyb7tONP2ZK7Jb+F6sObZmFjePub4McjN
4WRzM5nX3o2mA4dvGxNP3oUTlrbW3M5Lnwa123Zfqes2/rXOa2248bIHj+Hz
0tcx7T/5cHyOaM6Tt8Me50d05x+Zm0915hNuJjuHm6OpshZvYt8Meo1dC3jF
3ev1Oqe1bmbP5VjRk1sW3eRTdibclMfBrGUeI/ztmkefk7l0rgekDySc63pG
PwM0r3LjZuvWTXum75i8uWOuXU4GfRjrOJP/4sQncMrNOdf0+/0LN5dsjPB0
+zeYY3EKOZrbU692T0Pqzk2vXeuY3xwdkx5p+hkm3j3t23jq9bjiZj9n0Z+8
05upJa/h5xzfN9cGkqcnP/Idbs7yKXuusbjrBvO6+ZzvcjLfR082f7ceKa+4
Wb5n1g86h6N5HLL+vbrzSSbHCTvvvM38b5DDHuErrpyYePqN/A4zW7s0Czf2
OtWazc1mrngWwsTh5lcc/czE8fZ6mJkb33Ibz8PcPPHzxMhh4DXvcLk16KZH
W4Pl58B5MIuZNYLttwVzc/u82mc5eTQyz+mz4+c7fZc5p3hw4nkmN697RGZO
H+6f3HzOzHf05t/88Z+8eJwXx97lZvqY6fMwSzdPh8/HmkOeh4y63i/9mLly
zskgN5s5nXex4+aczxnX5uaWZecMaHOzvRrNr9wyNOjTuMrVMDevsTjFuRXW
k684tmVeTL7lHS+nju2En1mH2GrFrOFG1w0nJJt5ypuz/px/18MF1ozJf/Q8
m1Gpd5Kbm0fY7JrXV9z8ER7pdhwz7BU3Zx+yJ1nW+crRe3n8K25mPh2P2dja
WvPO88E8DXump0EW3q1rdYFcT09GY+QXRi09uvMbSMvcIA83Zn5h1Af6Zz/C
zfZOXZ5jmBf9Fk13JnusdWSaiZvNSW/YVTlzEzeHiXZ6ZeNlz4lstdM5nzjt
H/2Vfzfgx3VO8VrXdOYTbg5/7riY+XF3udle3fQUfFq39PP8zevnbRqTeh68
D2RocnPTfdvnwXvenh3asD/I3ovmw4gHg96Y9p2M3ztejfV38XLGo9z82Wz7
Wcx8h5vTe3t5ncOxLdd557lIDZ5rBsnC1FOzfuq5QjZd711H5/q/8GjTZXMs
szP5ufk0qFH7WWHiZmc753jUhFmrmGXNs5HBLOeWS3fCzeFIepRPfsPfceyu
h0nTp+/ozOZq5uSZm9mrmwwXtk32wRPLIEfD3PySZzDVBSqXbl1LXqfeLdzX
uHmNte3yO6evin2z9mxMvMvlH1VbmPrLHTfnfb5D/hziedh5iq+4+YRx2/vG
0NTAJ63avp8fjZtf+Z/F0u8dmfPOf7Hj5pN8j8bmrS9g49QwInnRjNp+I+fr
nVZNn0bjH2+/05l5HB9/8hgsVnZvu6n3duPmsOQV556M8OAVR07MaHZ2rh4Z
cvJATOfjPYzenGPtxvRc1PTlti7fNz+7mdV33Dz9lhFeXs8PeYagXyPcfMLO
P7Xmx7g5NYLMszA7T/WB4WZmqDWvRvgwWmqrP2T2M2sDybLRmul/IOPSj2G9
urG1uXli5xzP++56otCvYZ+ImT/3p9UG8hki92li5ZdeKOCNaK1hsxNmvvJx
TMxMvXnSte8O5nuE6ZrubM+AWWYxEbnZGc6uC1yMS24m49J3bbYki/IzmDI8
8rmQm3efyY6XG//uGHzi5l0OnDMxMm/mPptnGzdPvhtzt30fZmIyr8+142b7
SKZ859248ifbi0H9lzlxbb9wdPNuMCuDOXVkb3sw7nDzVcbze/PqrjLodvud
+hqc1Ws+Nnt5+8bN9j7b42p2b+xsTbtpmmu0/tis8yM3W0sNN/O45Ob1Pn3o
Trn4hId329mv7HWNrd/4UujtRb0lzxs2dn2gdXjfby7zM4rn0xj4ipsn7027
VuZoNKZfx1i8HHamzznbnOrOP5n53N/sbA36m60zT9nOLeuBerH9uFkfzZnH
tV+DfQLNzWZnZ8m5ftDsbU3afmmeI/PO8ZrG3NjZ6+hT5r3x65ynae/2wUyZ
zU/39JkFyIfmZvsvmqd5x827TGbXGp74mK+Ymb34pn4o5Cj6UslJL71P0Afw
lRYNbs6y8PMVN9PrTO14yrt78ZMgx7k9t1xxc3TgKffi1KNhjmbectg45/Iz
C7m5fSbO0ph0Yy4/3dbcPH0vJh5u3Jx7mezuiZed0/xKKwYHWxPO9tGnXzGu
dOnGwTzW5FNe8/ay5pV+xIdxxbw8dtvuUXbecfNv/9vX2RU7brbX130yzMjm
XHpPrQlOGnUbT4wVr8XzICe3fZ504gtuTp/AeDHoaX7h5mc9d2LdK/9FWPEu
NzeNlvPIcmd/mDGb1sw+J3lPj3PukbNP/NlOPhuy7HStYXp/L9qz2eTZ8Ovk
OZOX27jLzb8Gdv4a3Gxvhpl2x872ZTQuDBuyRyGP77o3a8Dm0nBucjPsbY6e
2/pw81iZy9QLhdfZ5hK2dV0hs+zsE8lrek2ars9cj0n3f8XO4eZnNqM3YKc3
n/qM47tlD8KdN/qjuDmas/sPUmsNP5qbqReHmel7fpWfAa9G/o3n8wd11bBz
80dkjNyc+sXn949wM7kw92Li4YmVJ93a7GxutqeDmc3uiULGnuo8r7jZ20Z/
nmoQcxzr0I2dXQ+Y+S1utv85OvLUN9AZc9aHw8051qQrW3d+xd7FxzFpzWHh
SZOmZn3lkzjhZrP8I3ycudoLMnEzufKXZy9H0xUbN5NhrQmTua155rg+VuP3
xr+N33OMibuTU81cZnNzli82dI5GRuoKd9y842ny74knw3xLDZmZyTxeON+e
C3In9208nfWsnyQ726PD3xAaM/s7Rb7nvPld4Xck34WmM/Na7dUgN7dh7flR
bv5sxv0sZn6Um9NrxF4L8pq5mQwYzs2+rtNrtYE+h/MiWv4FPc7Uns2j9GHk
eKwpJP9ag7YXJPeE3hDn0DmzLtez1oWbJ6a3F6Nxs+8rfSjk5ld6szhtp2ne
Ydzm00jv7hPuno4ZJtuxc3zO7lMYlncWcNMWmWFHHdk9uN9k0T0vJxM2bjaD
ho2dfRCmz5z82eT3Ad4nbhO2s9fiSl/ecXiO4XvsXDjycMtn5udAHt5xsz0T
zcOxy6YLS+czoQZNf8avgZvXsj/4W3/1abxiWhw/uvAdXm78/BHcfMrU4cbG
zb9Fj+RJ3/Xv7dZ+vW3jKjN1Y/Dsl9/oG/ORm6k3T88E8WmEm6es4rAouTk8
17To93IzdeSJm3lvrc3nM2k9UMzNZGVz8xtNXtzc/DL8TDKP9nlZk87r3TMD
awHb97BdZ/Zf+/2H/8m/9/SafOzsa3IzWTvsfJVN9yNrzXeY+ZSbw8zOJ6Z3
ouVdNG5mP5Ipj6NxM30HTW9utXysD3Rus3Vt58OlR3aWkX1do2f/M30X3J/c
7HpE5+f5GYB/7fN2fod9G01rfrmvG262z+KKa+1pnnwaYZpHfczrOOGdzMWZ
G/RrUPc2/zE/uPlmk21BxnjFzcqtYz7dGvQb0J/QfA5rG2rKOc86XmP5qbav
cbG5+dH6wJ3OPOnGXO7XEzfTA9G8F81T4eVNozbzvpebPdZvNdP6K38zGfcV
Bxd2nrg4rP2KvYc85/dy86RXX/Eu+3nf9XTc4eamvdKnccXNk+7b9jHv/Bbs
1Th6qlO0ztnGxM3rGu3fyDnIzXn/MndoyTtuPmFn5ztf1eM1/4E9vjx/9pn6
EfIa6S++8xm3z9zPMY1vqR+Hg8no0z0jh/NZLX4N3iPq6tTNFzdPvWIyj8XM
/GyoVZ9kOv/odYFfipuT3xwmm7i51anlb7hzx82tXnCXb2cmtnfD23B5q/8j
N9vr4WO3vI2pHjD3gcejx7v5nFlnSM243SPe58mXwdzntU3+TacvgR7nXeby
CTc37iJD3tGv85qeWXLzv/63//xpNN25zaXlApuz2BcumQRrvOqh4jq+3y2L
5hivhrmZ1xVtNZ/BOv7yTJubw4KsX6T23LTgK7/zHW8zPTeNiZuX2ssaN08+
Y+vFTXfm+9Z75Yqb/bfp1y2z2WxM1qbnJ8uvspepNb/hZvQ+iXbd6v7ohSbX
UmPe1QM+efPBydNcH+VmM+9H8fEVN7f6upff3aUt7rRn6sU7vtod9w1fS8u0
95isZkb2s0D8GPYzZ9vwMbk5XEzfQPNxr23o8Qh7UcMNN4fryG2Nm5u3Iccw
L0crnVi5Pc+Qmxvn3uXmk+0mvwm52/cg3wv/ZuFj5TcHezZyj6d+iuRm6v9k
a/dF+TXpzXe15rvc/Nt//Hff1P65Xo88R26mv3kxp30GLbvOxyMnTn4M1ufF
99EykK1Jk4lb1nI4OtvYR2FNmfV/9jxzG2dvsF6xac6TR8O9VtwPZY1XORrQ
mqNzkpuTRbfre32qDfMYYbq7mjO16+yfYzZvc2PnNcyJ5Df7NbIs7ExuZmbd
S//u1A8+s4RzmHfPEdH8c2xycz4PsvLTfPBZXenI8RyTW62/N7Y2M++4m5oz
vRbUphvXWu+fOLp5tXfcfDWaRr3bdtfvpPXhttac142X+ZeczVw5ezKcT/eS
kfjnf/SKeV9p0tCeW16dedz6clt+Z7SMufew8R3N2ZrvxLfOHiPvTnpz049P
Wdzc7LpDM/PaNizMmjVz88TA0ZTJxGbm9mzgujkeI3237Tt2bV5j5hPPc2Nm
eybM/vYHn7Cv/SB39m3+5omdvd1UF5p55Jkt7Oxrt2btz4Dc3Hw09Dr/2vzN
H83NzqAjN5NhzbRNBzXH0YvL7axl24dAJmd/anMzGbT5Kqgzc99ws7OVU0/Y
mJi5dJMGbn8y+bb5PJrvZNKS23NH82+Ynxs3k9OsN594nbmueTSabnmXv53J
MbHyVNtGTuTfiavIzWtQ7w3nNm4OO7cay/CWudl5HM74yHnMzeHViYGjr5tl
J1a+0qWvuNnLyb5mXq7f5Vy049qn7nN8xKBu3PzN3zs3W0vme3r2m1fj7rBH
41vgZrNz8wg4F2zHXM1/ccXNuzyNXV1jWJm1f4ubWwbIq14m/+RP32jFU59A
+obJyeRm6s0c9oiTeZvngzWA9hk0DTXHJg+S+U+YlzouP3NzNI/Vnnmads5n
h/Y8Fc7l59p05ix3Nh3vA7V9a87h5jx/hJMz4nv+tXHzI8x82md7MfPqs73G
5KvY9T5xVpo9HGZA5qlZY84x3dukcTO52twcDm3aMo9L/zPfO9Ou+TRyjNQJ
mpupwbf97cGmb4P7t/rAVi+YYzZuNj87c4A+4btas+vXmG/h89NT0WoCsx21
753OHF7c8SS52dozfcZhVfqbw86sBUytFNnJtXzk5hyX+1FX5ntys7k6zGg+
NjdzuztcPK23V9u+jOaX4GffuDlz22nczTNi/fmjudl1hfYxs96Q+/G7MGXT
neQwvzA26kYnP7M90u6L8iW5eaoh/JKMfMrNrg+84ubTrLhpH3pcrzje3LSW
x1NiVqbunPHCsfBAN51551Fu3GxeNifTo2GvcuPIxqG8Zuuok9bMZWTRE314
De43/c5Arm1zJ8NSC868Wm5d9OMp387fH9+bdo/te/Y9o0fD3OxsjStu/mze
/UxmvsvNzY8cpjU3t/wzsl7TmqmlWsduXo87o+nMrsWbeqY07di9Shr3sgay
cTO1ZG7PZX62cL2ftebG0j5P6xPofnRkmpa5fOqtcK2aOcm/uy/O2HFz2Dm9
+HbcTB/z7nhZ337rD++SnRs3MweD6yduJv85gyNsznPlPXuuWJPOfBs385py
v53Lt2Nl8+opYzd+JTe3XA1y88T2J4z8JbjZjOx1Uy3hrjYw2cnkYvqcX+U+
o/bP3BwmbjWHYWluM7E555GxskLsbT7hZrMy9/vSHL2O37Rc1wbutnlVS1j8
Eu6rd5e3p9/pzU6vWE+5zRxP7FTymj123Nw4eNrHmvbV9vbthgup69rfMc1z
4ubGtpPeby9H24/PL42t871o3uJcG/mW3Gx25n3J504d3s8UuQdm6FY3Gf/z
jpt3mvOPpDW/h5lPuXmNxc2rLnDHza4NbB6O+JbZZ9CaszOhs41r+B7h5ujA
rsPbcfMuE9o+5dY3hXNvmjPzPKwxM9uOPGz9edKa10ifbevY9D2EvyYt2Lrx
nVq+pkWG31oN1sTf5mZq4RM3r/1Zj5dz5jzWoxs3U+8lq5JX6Q0ny9Ar3bgz
HunlZzY3T6wevTnHMDc7X4L8SF8D85bNzTtNeWLXxt5+Fpk8FVzvLGjvf8rN
j7Dz5I+mvtzGxNepLZ242UxsPZjLnU+Xwff0drjGkNnLk6/5hTmfzx0f0uLm
cO80mrb8LXFzY1nz8I6dsx3XkZvDkdYGJ27OMa2BX3E3awfvcHOY6YqbrzRm
ej2Y6TxxMxmTrN24OWPKy5i0VPPvCT+bRf2sQp0/7yedOd+Nxsz0fVgLnz5j
688e9mh4+aQ3r212zMxMuh+1JvC9zHynLjDcvEbrFTjlLO/6b5OLm269Xk/a
7Ck/T5nL3sZM3F63nAz6N6KFc3vX9DmHI+ua1szro9/CWrKZ2fd7cXOrL0yt
HTXnMBq5q3mbzc6uv2vcGz9tOKxxy5XWHMYPW3Lbq7pAeiR8XLPgxM1kIt4r
1uq96sX9nEXHPIw1eDxys73NZC56psnNeRYIp/kcXMZra33+zM1TLWOeNyZu
PvltwX6LlgfduNmMPbGv+de5eebiPN+047a6wB+Jm60/M5djDR7jUY59rzc6
49QTve4DeWRi0Z0HeWIbcrN7WbT9WL/3ipvLb/Un3EwWNieyd4e3DbtecbOv
Zdz2mZ3pl2bmBrk594n5Fr439DXvsuaudGxrz1fcnPGX/+qfvnpPT4w1Zp7b
3EwO37HyFTfTp9Fq/nztyWmuvw38178cc/OPysxfS2+m5vybP/6TF5+zufm/
/K9+b9SiydbUSL3tWh9tefL40s9gZm7+5Kb/OkujZWdEc2besrVm+zVca2hu
9nxZV5iMDl57rjPHbrWTrcbSmSfk5syjMSP9GuZmMhS5eZdd0fIrrBtfMbOz
NLJtdNn1+oqZzc1TNl3TUXMf4lElE5OpXvmPkU+3/q79krdm7/LTtWDbxQTm
5nweYWZzp+sam77eeNMa7vQ5tXtEj4t5OLybudizbHZu3Dx5mSd+bny8Y+uP
4mZ6M3a1gjtudp7cbjn51xnM5uacM/2/d77mL8nNzM2gf4O8/8jxdvyc54yJ
m+0ZZt1Wy7CY/Bb0tTa/wO4YLzr24HP1nKMpm53NdY2Zyc07Ddnrwr/Oe871
Ttzc2D5zo06e65q4ubGzfbz2SZxqztPnM3Fz05k9B2vEJ89E67u4O0+eK+hh
znt6wOlxMVuHiV8+h5v+5h+Jm7+m3swRdl7jD3/5/ae/i5vD0taQrS9P2nPL
3CA/x29Anmx8POnJO026MbPzLHx868R5n2Oa9cnZzOOIhk0/NK8v25ibWyZd
85lfcXPzOccnS65qXLvj5omBzV9mMe9DhqEfIux6J4eO8zjx6JKbmWGRc5MB
PTd6LsjNbzKzn3k5DNS4mbWak9+XnDxdDz/vaf8dN9uv3jwc5Hj23Z4Ym1xP
Rm7zb+zsTI0rbrbevMvwyGe/Gy3P2dozs5fNwOFJ9zmpHmXmYpR6vvQspKci
r69yOaaMD2vi7+Hmq/1PteST3t3xaVzpv9QEr7j5ZT1YN17ViZsnT8aVvjyx
ur0Z5mZnZ7z4IsK4g/9454Hm8j/6ez0n2PtPXgNzM9fZV7Dza5BZ25yvuJms
vns2asPcHF5d3yt/t/yZ+ruV+9DO4e8euXl6tljbsDfg6Vj7hZvJzj+S3vwR
zPwoN3OEm9ffxc4Z9C+vXilkajKya9qYRdwyiK0zk3NPuJj5GmTlvM/xzM6N
zcnN1pKtk7NXSrh53YvmO8n98DHb/TipEXSGczwa5GbyQRjNOqH12is2bYNs
FSbOcnNzdGYyTNg0WRdrnqfc3LTnK24Oj8X30Or2+LzxSmseGJt5f+wzOHEz
PdITx1oz5j2bru2Em82skw7cagXt3Wijac72e9hbccLN3G7HzdaGG0NPjNx6
qNjHc1IXaE3ZunOr4bPHwrV8zb/8wpUHerP9zicei2mbO9w8MfSdrOcTbjbL
NF/pjpt9jOYn9bnvcHPjOHuOrZ1S92V2Bvejf8L+i8bNr3Tj52Mvbo5u7O2t
aU/6LXmx+S5OB/mVc2F2245/d5rwKTeTV/kcYIbmfPjM4+ef9v2zf5m6/Dr3
Ok/ymac+2yfsfMXNn8293ws3m5P/7//Zf/E0Jo4mOzeGbjWCu76BroEzE59w
c2NoZ8X5vX0dEzfbN2JvyeRtTi2h+247X47sTE/GNKxFU4+Ofr/YmWy02DSM
4t+uwxCtJnDKr7jK1zCz77a31hxeDd8v3lxsdOLV2PUP3OU2hMHC6ulPEtZ6
8Y64VurZrxzN2ky4jsne3Pz33uxMrdjzttdiupbTzIz2HJHPgceZWJfHYJ1f
3nOZ6/w8z4mbm2d5pyl7nT0e9ob7PC2H7kfjZnoyWj3fFbfeYeITf8ZpxjNr
EP3fkWu7rhjpapumR0++Yfpam8b9HnaOxt381Y2DG5ue5m2Yx9kX5ZUPAzWC
mXdj5zDzU1/wP3tbX3iiNzO3mXqzuXnHzv4M/flYx/e+nlPThsO65uad3ux7
1WoCfe41d/L7KS+Tk39krfmjePmEmxsXX3Fz4+jFy+TnSWOeBj0bd/PnpmyN
cHHzaFBrbt5n1w2eZt15G65rdY/hZrJ5094nHbpxc3puTwzbOCMcxIwKezVa
7vLV7/32ibT9zc2uzyM3P8LOzTtiZgtrsfdftGdyc8vbIIM1bmavkzA5e3av
a7THwnowPc/k0Imb2/X682jc2rj5LoOH9cmud7jZPDwtizbf9uXvKHe5ecqi
a2Pi5uaVcK5F8zNPHg1m18XHTA6O7+OFib8QN2e9z831ed8yOB71btDb7TrK
ST885ebpt31zTePm6ff2U0Zu/gyy19QPkDpzY9odMzdGbeehhs3zRJd+dX/0
Pjy9jhe2a7Vspx6NcPOJv6I9+9AL7YyMfOZZNzGzdWfXPjYO9me++05ccbO9
zYuJT3Xmxsvfu9b80Zz8KDeHlzlOuHkdZ3k4kmFH7bn15p4Y2nV1dzI17NWg
b/gqY27iZq674mb2+nZNIbn3yqthvdnMvPNvMI/DPo0dN4dfwqRhzR2HnmrN
Zqro2pNPg1lwZJP0mQ7b32Hn5nee/A6LoxaXmJvDg5M3gtzs44eTyRVk6HDz
zktMv8nk27gamffEze19u2f2T/t+kJvvzI/D3P0oN/t3FXNzeJoMPXmb83uE
R+rzyNeTbuzMjJ33eOdVJpcyP4M+6Kn+8D2ZF1fcTC73s8KVZn3lZ27cvF63
HIu73HzCuuRLc3PzVVjLJEe1eaZ2jLrljn19np1f+YqdX/VB+R0Dv/KFlHmE
k1kr6GvMcmrK1pevuJmc++Y5odQIXnGzmfkuN9ND4e8UP8vdc9RUT0hvczu/
6wPp12heZ3uZf7ReJ98qN2fZFTdnm5b93Bh5yrKLF7gxc/MWT+x85X1mtvNU
c+iMZ5/PPuxozY3LT7VmejycdW0mnvTmbGeOsO5rpllcmTwLas93vM3Wdtvv
6K2ecL1m/gQ9xVyWuT5SIzhl0tGfEJ5Kni29xzvt1cfkvOlvzlj/3vN9OH06
7qlP2/qv96UXx7pyG60+j9xtbr7Sqneej3auLLujQfP5x97mMG3O6fw+MrRZ
m4xt/ZkZ3s2r8cSs0GDX+5f+k/BePH03Bt41Y7PHn/uPXHmaT/TdO2PicHLz
e45tv8qOm9tIfd+JrrzTg8OXOx5tvPz0+tmnEA05r+3xCLP5WC+9AYve3Wru
dnMMN9c6R8yTLPpGX47P95mbw9fk3JyjeTHy/qrniXXdiZnzXDM9s9DT0bjZ
25Hxk4nsbIvGwPksf3nuUZlx8pxm30dj5lxn5mduJjuTm3+kvtpfmpffw82P
6M+r5+CqDyQbt1yNtq5l05mfJ2bmNqwJJFeahc3NLa/ZOXW7nGn7o83k9Diz
BtDzzz0gD7MHubXnqQ930+DCC/TTThqi+fSkHtC6rvXtVvOWusHWczqc4oyJ
R5l5YmfO0bV+8S67Dwm5dB2X7OhMDjKyawrpSWFt5sTN/qz8mTVtevKoTMut
+1qfDSs3Tbpx+I6XJ27m53LFzW04t46ZKRz2Z0wa9Y/CzWRYs/N7cpubNjz1
RXmEnaPTW7s/4eaw85WXYve7f1gm3GyeoebbuJnL6Qd272xz8yvWRV/t9BMk
rzJD4z3czL+TZv7Cy/CIUAd98g4869dXHuZpfdjRPotJYzbr515Or+0B8TJ6
IqgvZ/nuu5QM60mP5vNA8zav73TTxhcPPx3/2aMxac0n/bS/RWYmt342N/8H
/9ffu+TmcPHf+NO//zQmbt5x9G/+6K89jX/2L/9iy8vNt2EOnNjY3LzTpVvO
XWNbcnFjXudm+FzZf9KtqTs3/ncGHTP67L9gn/LWzzzrm1fU2Wit73b0uFMe
PeFm17TZ40xu9nyYgbzGaZZG85RMHEkmb6xLbqYeSU8COW3Lzc/HITev45ib
zck7tp24+VSL3u1jnuXvF+Fq72MPy8TNVx7n5s+wT2PiaGvIj3DzVTad8+fW
38XD5uawKj3MZmFnw03cHH5sWuzIsR/AzVONn+dinbitu8vMrKOkZp77fpeb
J835EW5uHtwrLTrczExjZy1kPpV5n7mZmXNPflfMzf7k5ovmdZBJJ18B2Txs
mP2ogZ5kyzV23nHz1bMOuTb1fxnh16m2Mp/b5BMho9P34blMuYfclvvbd8HM
O2ra4eWMtewqgy687J6A34M/44qdvyVuzgg3r9y5pR2vsfiYec4TQy+92cy8
mI56KZlvytfYcfPk2ZiyLjjMw8xsnjI1yNTN/zH5pMno8T833dx9tT13P3e0
Ptx1PTQz+zKdp2auWOvWfmSqU59G81NbJ7XX2nMjJydj+qom8K7n2qwYxsq9
mTRisj31b+5PvW3t/zf/X3/zxc8cZo62bQ278eapN8Pb+TozR34GV+xsVl3L
nF3Y8vGsWZtnpxpKr/N+k6a84+Zp8DvPvuUtp/mKm8NzL+9Lr783XgMz8cbP
HM2aunXzQTT/BT3RHif9RU64+Yp93+PPaNyc+7GeU070499K/7vDzmSeibum
Y0ef9DA3N01ysZwznMPNL1ov/MX0aDQNmutftotPmWwMTwbrAJm5EW62N2Tn
U3ZmWoa5mef2Z2AvCHXh6fPjM0/7/HbeCHNz07snbm7PHOZ7elH4PYs3JIxM
78X62zwZ37vW3Jj4s5j5ipvJzly2OPi3//jvPnHzYuXVR3C9Xst23Ly2Wey8
xvI7h5vTJ9C5zRMfUo+e9OUdO5NBWb/HXiXkXe9rb0arEWyasjVq9gs0e1M/
Zl0kPRuTbs/nj7oebEBuTr87+iJe/eb8nFu8XodB7vQZmTy55mi+btxM3a9l
e5zq4BMfNs/GyM3ybjS/9brHzmsOM6/BfdmH0EzavBhX3LzzYZhf7a9o/pxw
p3sQkilbTkb2IT831m2Zetajd9pztnEmhvebeLldj30Y5Obm0WB/86YJ26/B
/IcwYBgxXg/W7bWawTCwmZzZGOZjvmdtKn0O5nH7PsjXf/C3/uob7j5l4Dvb
UJenVv8qk+SZmyd2tnZrNt6xNn2pZJvGwY2Zd3V4YSzXM+Yvc5l9zGjN5Oas
5372efD8L/1RoFOTi8nNYeQXL8bzOp7H3uqJS3fc3LaPnt28ItRkud3u+edq
ju1z3fHv7nvUBuduzbl5p/MsQT6edOa1/S5r7nvUmj97LG7OOM2iW3xMbl5c
vNg5yyf9ebFzzrW4OYO5ztaBrTvHI8192Etl8mZ4Gb3O1H8XV061e+Fc5so1
XndGXfOArLmam9mz2x7mXJufJawxT9z8sp80tXBwNGb6Dl4x4bOmGlYIf0w6
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
5ditns/c3HTy5hNu8+c9fcXnN7jZ/GotPTklZukTHXo6F3uU+NmiHZ/e4yv+
9+s7WnPzhbS5nSxjTsYjOvaPyM13efjqGLtje748zpuskVIT+JKPN7B1/OL0
MTeN0txsfo4vOjVgjZvNWTtfQ/NZ0KNBZs4coim32j3zbjsXmZRzDNfZV9v8
ABMX3xner2nxmeNV7Zw9LVy/42M/G9BLscYvz5+xudmca2/z5Lewhmz92PeX
3NxYvnHzSc3fT4/Gt8HNH5Wl0cbqn5LegukzaHakrko+pI+D3Eyvsz0a7lnS
Rvi3MTJZ2V5n6uDk8nCznw12mvOUQ9e42dnOZk9rsWQL5jhbv7UP2Ny86zEy
5Ww0X3HTQs371kAz19Q1tny3HDPeFG7H45GJG997vXupZH3Ti+2Nznrr6uZ9
HsPPKtmf3plTn0bO6x7qGY3Xd2NicrPz1XNCy6DbsSzv4xX33uVmepdb/V/j
5zy7scavaavkXNcS8u/iQPd4J4tHv7X/gZ7fj9KUTzwXLXd59977vtT7FW6O
R/vV80Dp+WIPLP2nJ9y84+0nhnnmvMbN5ufW7891elwXXl55b9Ewmw6dES6b
eJ1arvNBrOvab8Fj/dHf+4+fxo6Rr7RpepynHuWTn4Is7Hv2Rn/X9vap2yPh
rGTqzebi6TzNe9F06km7bpo9mTnc/F5e/ha5+bOZ+GQs/v2ITI3T0fKed9sl
Y2PHzYst6Vt2P2pq0fFqkFOj+bYeJa2+z7V+bfl63TwjznduvVrC85wPeTmv
/82/+DtvjtE06MbN8bGGgRontBznK72Zg8vt0Wj9R3ZejTvslLxbaubMiMgx
7UUJPzFPzTw8ac+N7z33NtcTbra3hscnIycbe8fN3t76+8TN1tfNvJNPZPJn
7Ib7l1h7nrRv3ucTbuZotYdk6ub3oK5Mz7f1ZmY+mnHdJ7DlYkR3ftGeS6Yy
mbl5l8nNH+m7uMvNbV17nni5PyWvmll6ZOd2T9dr65KT1pxljZtf8sXQj6/5
A07q/8Ku1JCnmr9W+5ZjtFo3cx9ZjFzMukavM/ed1gNO/pQrLzTXc37kYvqU
/TlO+XST73hi8Ma31n13GXc7bjYrr4y+tp7nMTc/4lv+yc3fLzdf9RFsHG1u
Xppz42b22HafbfYQbN5neotZpxdudY/AVht45XP2nHm8cL2zpdtomnO42fqz
fRuNm9dwjoPZw5nO9HuaC1kXSEZrWu2JR4N867mxD/fEzc2fTSZq3OzMOjOz
OZ+c1xh/0msbg5mbzYO5Zh/3ipuvNGdz89Xg9qfcfKIrW4fO59T6rpxw8+lw
z7+TbGd+jmHl/DfC7xv15ld5ctJEW00b/5tjrkaeCZ2/tmPUL+FZvmLqk23J
za33y67PCzmbzwk7bra+PHmcm8Y8cbP9EqfcTM9F8zK3+eU9mZk67RU3Z770
DzQGtbZ8NaI9m4/D3Hc8HdNzjb02vsbJ9+Jr47NC49mmBZuB7fswQ+88HRnp
peJehOTm9fflc/5gX8ZPbv5Yn8YpO18x8nv4ubH0Ymf7D+hbtq5Mnmz1cmvY
h7HTe6c8up1PI8ekzkwvNfXwzNO69+RvJjuv0biZvbpb/VX+zQ8HmTvy737+
LWIeHVlrVxs48fMVM5ubG2dNv9PnGu3RJgfx2YDelV3eR8unW9zduDnPI1d6
86SNmpVP9OOrbU+5uHkudpzc1k+8nGXWlPOZcdnErv59pGnNbdzh6ZPxk5vf
z9OT/k5GnnKrnafR7uk6xwtrqUdFeNjrzFnMUjZHkfVO8uayfePmbR3gP/or
/46Lf/c3enW81a1uMeNVphy4me/b/ifsTB3ano3Fg5NOHQ13rWc9pTne9ZzT
NXqE2e1dITc39p6OHb9x7tXEzVdacxuth7ff3+n3915u/mxm/tG5uWUyL034
Th9B8vHf+NO//zR2Pg7Xu4UR470gO7ruj7ka1HfNuNZ5W3Y0mftKc/7f/te/
fBrM13BGh/NB4rlufmZ7NZonpT0r+HdocsT6N558R+ZMLRO5mezc+OruMKe2
Y51yMxk418b+LdY3rQmbm51F3biZNXS5l5x3Y72dXkr29ftJWw5Dn2jH7TmA
xzh9ftnpxzsPBvm4cbP5uXkodvfuZDzKyvz+s39kvmfkQP730/wXreaNngpr
rF52Jx/5vTnK72Xmk+1e5ebBo7HjZrJ2OLz5mydvRuPmHV9R5/3lWXu+y83x
XtgLYc8zj+91ZMKmPcdLHb7O66ZBW9dN/tyJB6Pl3TWOPuVme4bZrySfTdPU
qdVOnm/z7ik306vBuVwx826e7qHIc/G72rj5S2rNn83On83Dj3Lze+oCFzeH
fe96OE64OT1R/vaf/fUX/mU286Q7T3kT4c4pX7l5nNtYXHzifZ76nHCejd1b
drUzoO2Bpt68BnUwswM15zXCJtSa3Y/7pH7uRPNs+m5jP7JY87m2fna5Bo4d
46/lO73Z3Ly2jyeE5z7l5sbJk9fCGvK0/cTN7Tlh95k1bdksvfNgTMuZV+fv
4dXnOmnLj3D0KSczq87L1wjTUVtunuaWo8FaQPp6Jz+ve34wb+2zmPiO1sz8
jcbMfs9rbv1efG/JzVw//e7fvM1mp8bNYTEyGv0CjSvJxcxczmg6s7mZvBwt
mdfRauvo38jrte3yCZABzYGnWvPT9oWzd9xM37M9Fi3LxNzsczWPQ/vdwM8L
ZGJrvZN2nLm8XPsDOjN7kDemfvWZfmVm/snNX1dvPvFpnHDzytG4OsZiZ+dj
TJpz+Nr5zVluNranmT4LasVm36k20Hkc+UvN2nkaYfdWp+jeKOZsPicwS4Q1
fu7rtkZ8DNT08u9+03caN5uT73DzrvaOfJb35Cu+JqORm6P9RXM+1cGnwWcM
Zins9NlTbm6s3PjYr8PF7/FptLk37bkx9I6brSdzedOTp+y593Czt/N3Z9KX
Oad87zN3fvauo31h52f91Dl09CFQZ3aGHPVWvm/MyXyNndacY72pxXue610W
vqN3T9zs54n85X1q2vzE0VfcPLH0K08sNFrzmEd4yaxMpjY3c/+r983HwXnv
PMPm5sWjO19uOw7vwytufmbniY+v/MyTl9yfE3XjxsCc43Q/uN/Ex7v7QNb1
fPj98HeG25Cbqb/nHHk++NLM/K3ozZ/NwF+bm3fsTP/GCWdnnGjW1JxbL8Bk
bNDfO/Xablza9F7XCU7c3HzQ5Obk413p2ORmHjNZeezF3Xok0q+x/pqbzRJr
GdmZvzGv36Hzb9/Lv0uqp2t666STnujO/Nv8tuGyiX2s+zHjYK1/hJu5jn0Q
yU6ZV9NbW9+QKw8G71vTldt+j3DyVR0heXjHzebU6Zpbvpy/j42bH/VmNGa2
pt0y5Th+dG7me/ocnN+RsZZNPU3cs5uvdx6Nxs1teDted15zPq4J3NXdUXO2
x2GqpyPbTRl0XGdu5vIpZ67p0le68NrGtYONkxuDTrwZX0l8vxM37wb1fPP7
LgOwaceTF2R3/qu6P+va7b40T7K1aDK8fR/mZmvP5OYflZl/JG7+yBznq+3N
zfRr8BjtuKtW8IqbncfmviDOozPnOlPZ3BzvctOUpwxo9jvZ9Vpp82G2c8t5
dg/B8DMZkj0qqC2TMdOnIwxgjemlD/ezj9N6785fYFZrvNq4jczW9EwzM1/H
h5plO23W2XlTZl64Ob3I419prG9ubmzna+ayxs1m7kd5+YSTr7iZzwo7P0S+
cztu3mnAjzDzFUefcrN/z8jI85j5Oe/jcXLNm3Pnqgcaeit7bL/yb6AucMe7
63irxpC+kFcc/AA3NwZ2TrTncJVf5zzrHTebmSdPDHXNya/RtM+wUF5bdyWD
mpvNr9Se17jLzda2d34K8hz9HmbSO9xsP3P4+ZSVc132wew09Hwezftwh9Ov
ngOaH2O6R2RfzyvPWPx87HUmK3OQvZ8yrb+C3vyZ3PzZ7PvZ3Dyx88l2V3l0
7TjM2KDubB62X4G+Z/eibn0Dyc2tp6B1ZvY2sfcjXJ45Oc+ucbOHvRlXDP3C
0WCEZM2am6f+gOwjQs+muZlZG2ScnS/3LvOZ4cjM5KHW25DXFV3Y8+PrnKsx
vHubrPvgesnmW2h+g8kzwvnt7tvVPfT17Y7VPCZNN2/czGWt9tTcnOM2nwbZ
2n6cxr8fwc7m5ng0nE1H7ZnMzCyNbJMcjLB042PqzZP/ecfTYdtX/PysbzuT
gv1UJna3lrvj5mnsuLkxcrv2N9lyhZub1sy6QK6buDg6bqsHJDeTueyBJltN
PEdtOMzcuHni5GwfPo+O7GEt1Nf0pgbwwJtgrfyqn8kVq+a9ays5h8bRfn75
iNE8zXzd7pd9zvlO0GfefCTm/R03s7fJ1+Tmr8nOn82+3wI33+Xr0xznnd/j
D3/5/SduDjtPnmf3AQkrk5vtLybvNp3Z7Oy+Ju5xkn3X+cjH5O6dTs28D/o4
ONj/kNzsPmaNm+3pNDv79+cXbsZoeRsnvHfqMSB/Thpkq93iMDdbzyUnmpvD
yvForGW+B3e5+eqaT5n56liN/xs3t/o+6/x53+6Xn2P8uZiZJ58z2XmnNe+4
+Y7fmTqzvSWtF2C0Z3Kzvf/Wq82+Tc99o/fKk2GfxRvOlbeD51z9U3gs1xw6
t2LHxVeeC7PwCTfTV0IObs8T5OpX3FyunT0D15hq8doIczZuNuOZXc3NOY61
Zg97OTioIYc9r3iweRv4DHHKzR6PcrM92ebmdm+z/qO5mT7oE25eer2flewv
Z50hn7Ha/Wv3Pe9/dJ/GZ7Pvl+DmL8XOd7l5d5z0RHGmc6sD5PKwMmsI3fdk
DevI9hpnHfMywrTOec726/yTfyN9u83bznymv7mNXMeLxxnMkn/Td7pbWIDe
ZTN0/r3K8qWtmZsnT+nkNSAfX7FkYyl6Tshka/swc3TosJt1XXu0qS/nOOHm
ta25mUzJa3F9IOd9Vzs+1ZvveDfIwBNn2qtx9XzQ9t1xsNm6cXN7XnrEy2Fe
dg/t5hE54eap9/ZncnPOe8XNU80f3zc/xMTOvKamWWf5+n/HCTe/4mRo9PZT
+/6u66Y/YcfNTW/O3zCqOY9M3Dh2d/zGy60HCscVN1srN0NzztRRk2XxkVpu
42ayZmNpz5vejsb2J/6Ntm5xa3iXcyDLWmvO3zwzcLv2fOLlng8Z2c8TX5Kb
m878k5s/hpu/BDt/FDfnWI2bm+7M+kB6oN0v8D/5T/+Dl/EH/5d/75VXw/kX
9mZEOzZfs+9242bOI9tOGXjRvuPHaB4N1gmam+ltbsxhTrBnmPwcVrS3g3y9
O75/u1+v2+//zSeQfb0uc23bu8Zr4mbzMvOb17ZZHm5uOXfNvzBpuTl/Y+mJ
m62Tn7B042jP5ZSbvc8JO3PbHTf7+zo9f7Wx6zPYjneHm6f5TX1Psjw5avE3
2Zt8R1slf7p/3pQ70XwN8XPQ2/woN5vPrTN73leZy42TJ25ubO65mZtbvVnj
ZPsc6CkwD4eHyLHtfDutmdwcvp982FeZc65Xm7g5vNx007taMrnQ/l6zLxk5
Om7zEbfPI+drHoccz4zc2NqMbj9I0+Ltz/CxrnzT9D+TxePLWDkba9in8ZOb
v63xtbmZ7Lxer/yMXb+Uk+Os/f/Zv/yLp7Fj6CxjXh19x+t15rM8IMxftsbs
viOu7SMzx7PR+ny79wlZmvkZ2Y4Ze9adnfUcbvbv32GbiWGzzvzguqf4Nezr
pD/0isvjmQjP7Hj5lEfNr9E5PZ/GePRntPxmcnOYic8jGVM/8caWvK7GzTs9
+dT33DwdjXnbPeH3YvpMprHTnXfczPf8PSHLnaV4ys3te+i6wJPvLHVlcnPL
cKaXgHz4xlsMn/KrnijgTXKj2ZqabfNJv+LYcCf5WvkYjZk9J+vjEzfbr+H1
bd/pOeIV+w/c7OMsNvnLf/VPX7KaJ69zY2ayW9OByWc7bt7VH5qfGzeH/Zuf
uXGzmd56dJg2zOprjqZ6lSc3eYNZD2cNnPc118Z7P30O5OGmw5ubd8cww7PW
L8y842D62a+2Mzc3//Iai5m97EfNbf5s9v2euLnVBCZ7bo073Ey/Brm5DbP0
4knza/qXhJuX5nzVt4R6c6vtc6YyfdDkZh+buXPOy8hratWuBaQPxXrsld5M
bqaG20ZjZtdVeVvWEdrXYf6cmJnXw32aDu18Z2rKjV3XiBdjly2d67C/N9zM
HoO+hqbXTrpyfBFX3Dz5LyYv9KQV8774O9I+ixOeJvtSs+Z6c/DE7ztufmTk
+xcO3uV5kJv5nuz8Mp615XCmGZN1ei/cV7Z9ysB4Zmp7HOh9eMq5kZ7ccutO
a/zMsy2reeLkNec1qIfvuNla8o6DG2fvGNvcbM4yCz8x23P/QHKft28M6Tq9
9nt/zsP+fTtfhrmZ24adza27ZwHPvzFmfAzNk+vlEzf7mLk26830Lk+8TNbe
6d3cNveFmjSfdZomT2ae9Pp2Hs7Bfg/e33hhzM2/98d/vfLyl+Dmn1rzj8HN
Yec7Hg0ea3FzdOJ4l601N462B4J9/9axFjf/5o/+2uhFJjdTgzY3h2NbHxX6
QJoene3Dz61nYOvNneXWOsk+VzzBfLlWG7jjZ7PGrs7Q+5md7RFov5eHj9vv
8c6XNuPy/RU3k58nbuYxzM38LMyOk/f4Sm++0qC9zt6QHefyWcqM7GePq3GV
PzfpzNym+Ta4j/MwJu7lsabfRag9m5N/RG6+28uk7Zs57XqcWCd+lJvpG7Hn
hWy97l+Yc+Jm9+JrGq41yondwmk5X8YrLVV9r59GyZjmMcjz5GaytvnUHoms
tw/ZrDdx85Xe3DRecqi5mV4NPhOYT+kr9ryoE7eRz4LPLPRXeA55Tc3ZmvmO
mznn8Hr8youPM8zFX4OZd9z8tdj5s5n3S3Pzl/BomJ2nfimn3EyvxxrOoJuY
OWw59fhbr9e2i5vXX69r2crO1Eh+RjzNXt98Gu5xMuXMNW7m+rxu+mxb1hgk
bBtu3rEzGdj6tLl5yuMgz7SshR3je/vGSl7eWNbeZnJyOJjczBpLHifbmtF5
nomVJ/156sFypUVP24SPs41/lzCfXmnLE/M2Bp64uX3OTVNufQWn74jXfwQ3
t9F8GvRemJvNg2Fd+zdcN2dWpUc47DzlVuxY+SO4ecfIfj/5TsLD030iN/ta
ydr0rux8ETtudk4aOdC/+ZubX7HY745jH7HnNHFzG2HucL2P2Zi5+bHtdyD/
rnPs/Bk8h3VV8znvYfOtTD5kMqiXO8ct845HOL3E270x7/oeWH/27wGTBs79
7KE2N2eEZxsjc/1Pbv52xrfCzfZp3DnWYtvwLev/2AOk9Ttp3MwRbl4jvGvP
s9nZ7Muawrbe3GzuDv/SA+I+gY2fs11jwskbvOPmjPiZXQ9nTmaewCs+ltcz
utwa+W03o3FSY6JweXwlbVuyPr3UuS9m37ymZmwNOveq8XeYuXHz1biz7alG
3XRnvvZ3gc8W9MSf+DGy/11ubtxNfdwcTA36LjfnOWryCrUM58m/z+XmNvPb
lbfAWXDRms2F1mrJr83v2zj7hKHb8ke4mc8CZOY2F/s5rnzOEzdz/7Drjp3j
P3WdH1mz6c2N9SZutg+3+TDaOu4T9guPPtWRPevXZPEdN1s7tVebflz2a7HO
nPtC33jjcy5rLGrPiGvvMkcy6XTvm/eZ99f+iZYhPenlZHjeJz8z0LOyzkuN
2bz8NcdnMvNns+7X4ubP0JzvcvMaK1NjsW18Gm2QmembCM82bl5jHXf5NczN
U8YyGZjZdru+Kt4m3Lvrf+L+2tacsx2zIKxTuo81vRzWZandTtxM3ZjczOyN
DP7GSp3OHugrDqKWzcw87+N+ie24zTNBbs79yvaL6bh/e0YxV1KzfQ8XP8LO
5ufGzVdcO40dN3/UOOFmb7vjX3N0+41iVye4057zvXRvEmumztNw7aDX3dGA
zZDkaurTExdf6dCTVp3tmANyws3W3n0NPE6eJ5ov4xFupsZKLqOmam6ePLDm
vuyXer9Xfo1/8LoHSjywmetv5eWwRh19tXFw82hMeq65OPN3XZv9DJkD75M5
05w8zYOeBmvJnouZdXoOoM+F27l28O5cJ3+GGXod70v7Ln5y809uvqs1h5vX
mLjZWrM9wpPeHKYNN7OW8Kq3n7mWPuXmf2a+B3t6M8N5yq/b9QxkFkTrFd24
mUxqbqF+7H7C5GbXCpqt/e9s/q1rPpBkQ+evz8tljZu9Pp4Os3jj5uaLaNq8
dedw45fk5tOs5x03W9P9Epy74/FHjklmnvj8im/dG5A5dObtiZ1/VG7eac0n
o2nNrXbQvpVWYzhxc/Mzez216J3ObE3WORXUoumL2HFzG/Qj87zhZrLcer9j
NnKzvQ87D0njSjO06+pcK8dl8UJc5UhcsSj12cbMk6eax6BffOJmb+dj2U/S
vNZTvWD1fP+TP30a3zozf2lu/mzO/drc/KX52Rz9CHf/5o//5GmsPA32A9yx
c7ItWu8+cnM80/F25LV7orSsDevBrO9jjxLmxlF/tp85x8329nK0Ptvm5ubb
nWrlwhONR9gTZWKGiW3Dz/y39pc/+r+9cDP52q+3Hulnz4e5OV6TVgfI5wSz
LHmPnGnPQuPDpjW3e3zHm3HlVybf7/zNzQORbc2GJ/ry1x7sizL9HsH35t5H
uDl5c80rz+84/xsgw9HD0djWGRHkRWqnJ16JEw7+g7/1V49057uc3Jg5/mz7
U3jtzXdixm/cbBb3fUve3l1ubuvtOTCz0XM8cbN9zdZxyc2tD8p6vfah77h5
pqkF289stmz8be25eZObV7lxs3X9J6+vayLFsTtmnnRe55fwfvsZwVzenkmm
Z4oTbua2X6Pv33uZ+Sc3fxlu/hrs/F69enFzeHGXp5FeKDt/RgZ7DPKYru2z
X9m8bM+Ge2Hb20HGZm+W1ocl7Gz/hxmQbEWPrtmQfg3m1LJHN9nCmm7ThJvm
THZe3PyGiZVNsDsH9yM3t2zlxs1NE273xvfJzxSNhXfs2T6jiZknzbhxc+Nn
c7Tn07i5sfOVv/lknGrc0zzy/hFunnTj3TY8lntyT8+OzUdgDmzcbC2Vnt+m
xfI479GJr3j4bs0guXmNpoO/1Aii74o9z83TfMLNL8f63bHf6LHImfOYuDlM
RY+CmZQe4cbNGa3fH7Mxwlzk5qVbZj2ZkKw4cbM1X/qTGzdPDHhVrzhxs+c2
6eBk0Imbudw8y3m2Xjfk5mznvinNyzGxsnnZdYr2aXzLevOXZOfP5twfVW9+
lJmTwfHbf/x3n8ZVlga52V7jxtErm655P5pP2dqvOXjybUx+ZerM1LJ3nuls
y5pAZw+Tq+jfNcOFj+kfbct33ByGPfFqkKef/k0UO9urwRxo9pfguXcarzXk
9CGfuLlx98TNWWfea/z+JUbzl+xynCcGNZ82hr7Sn3e69W6c+K3bfPNZnnBw
4+zG1a139knGBvMxkjH3ymegrLhW6zfp066lsx9j51ne+Zd3x7nDzY1td9zc
/M3m5jd6MuZq/8bEzWSjZFy4Lo2ca0+y9didBsr9rGmHlalVU1cOLy/tOb/3
m0Gb9kt9mNzc5kq2bgzcuLwN3ivrsk0Lv9KRfT/Jy9SJrQlTS48/w54a6t6N
qa0p89mhfc6N6xs3f+vM/JObf2y9uWVAL38zteadR8M+Z2cyN25e67z/5Gv2
MOOamd2/ZPIr0/9hTnZdorObmyZpXjb7kCfIyFNG8o6d6T1uerM9F+Fmejem
2sGwNLneGu5VDgT19aYrT7qwmdM8/jW4ecp2vtKeqftOmu6J9uzravf7Ef25
7Ude5vfUfVCyjb+z5Nxdn5Np2x+dm3fr4+244mdngEy6sfXyK25u/m9q9Nbq
eZ/MwBM3N09F2Mj7n3Bzq5cjbzVuJnfG90wPNH0IZFVr5NmO8zAze7u2v/0b
9g7z3ObmxuFNb94xdObd+q1M3Ow5+J5x8NqiPft+hZ0bz3v+L76RL9wr+3vi
5h+Nnb83bm6Zz+Hmxbj0IDOTrvUNpG48+TTc7y/Hm3zRzW8RRnZ/kuZhZn/t
XV7zpEUzY2/K+W0as73Orptrel70WXs8G9vSO2HNmV4Mj2Tg8r2Pm2y8NS9f
G69nXeP6y7llv1zvOlb8s5NeP2nW7V5POurEzdNntstuPqn/a/OZtOemM5ub
J45uvEsvzBU3n/g3WBd4qmu/l5tbXeHuPT3O//P/8g9f6amtz7Z9zPYCn2q8
Jzrxi8Zb2PYjuPnK22G9OP8PaLybfXfc/KY3ObbhNVL3ta9g4rXGqNZYox83
fms+WrKjewvaB5ycjclTPPmI6b/Itp4jr4m8x2NSs8282cvFGnfzaljPbc8X
5M/Gv9aZr7jZzx/+zHj8HIe52+v4yYBuOnjzjHC76M3sB/hZ2XM/uflzuflb
4OfWa5DcHO5cfOv85nBvljd+ZU4yOdm87TwNZjqHY+PfaP1Iws/MjEuGhtm5
ZUSbs53VEW4mD5PBmK3mvh7rNRmCLLzer79h5p131Hwblog+/IqbCzO/8muU
jOfMae2/jvuv/+0/f5W7l2vJXMNv7tGSZ4E1Ugfp+9X4lcu9T+PUE615ygo8
Yec7mrPn17TzpvVOHo4rv8UVN19pz5Pu/Ag38zcS1gV6Xb4XO3ZOreDEzet7
Sm6mvmwt2v0Ad7x8xy/h7R/VobOueSTucPOkj5uF6VvOerNx05ib73sN+gSs
85IjzWyNm5u3uXFf42ay2TRS/0dubl7rO8P+B15fW57XyaKg9yGjMWlj1omT
d+/XvmZlc3O7D+Rmz8XbcX7N201vc3u+anOjT+Mzvc2nrPwzh+7rcPNnsvPE
zem1Ta9G+NhasbnZGXFk4CnXrjGzWZr5zC07zud1HaAzOiav9JT7zNzmcMOk
aUaPJWt6kJvDIid81fpy1zyMC252X5SXXGhwMzVmspK5Ocek3pw6yYlld323
ycJeRn688lyYjacMlEc8HPyM2vvcO/PrHUa+0og/auy4uXH/1BeF+Rjk3Sv/
RfNuPPkTwMT0aoSZX2mk4ubwYctjy/Id++605rsZGSfHtn59wuQ7brYPxdzc
NGnzsfPszM1hJ/sDyNEZZMBJbybrxbPsZebzHTdnOTM0Jn8Bz0+mbZ7sxvjU
36m9No/FmnNj5YmbzfdXnozG1U3LbXqzPcrUvM3Nk3/DnmzOcy1bujO52c9D
7TV9Gp+hNX9r3PwjsfP3xs07dv7bf/bXX/HwxLzJsAhbu1cfGTjeZmYsu6cf
NWov43Gbz8LZdM3jHHZu3uc1P2rZYW3rruGGaLJmMnJz3pNBqNOG/8JCrT4u
+4SRm0/55d+/gZmdrWH/R/jXmXhNF42euOZqz3WufcfNjV19//wcYn7fcfMV
Hz/KzWTnHXc2TZo9Ba803fhcPpKNT3l5t+3kv/B3xRw86cen3GyP846bs88J
N/P9l+DmK8/HqeZ9xc1h5FyzPRzmZv7lccPGO89G9iUDX/lqw0s7Zp64eWLC
af2kN5Odr7iZ81v7k5Vz3Z4TWbp5I+xjji/D/gxr8jkGnzumZwV/DtboW3YG
9Wlzc3omtjq/k8F9dtxsduYIL38mN99l5p/s/Ovj5vX6P/z9/9MbPp40Zw5n
wNHvnKxkZ1mQm8m05uYwfNaZe3d+DObLTVkaeTbINsySNjeHh/3ePMbl9muY
n8nNrgEjn5CRnR/XvBjMxCA/k5en402sFD3RXo1kbjQezX6+V2Tjyafh+spW
s7jTr3fcvMZVlnPj4PZMwDnZ69y4uY1dbeFd3r2T9fEINzcvxnu4OX+T0Uxf
c5a9qlkDO9vvTL20cd9dX8aOiyfefpSbr87F96wbJOf62cA+kB03089srXmd
b21LzrLG2piO3Py0DZiseTquWNh8uGP3cHP6XDcfwsTNzeMcTd3cnPU7bm5+
Zi9r/of12hlvV9y8y2zm50fviLmZy58+3+fMwcbH5uo21zUn+pwnbibzf2/c
/DV4+Udh5vdw82ex89RjcHHzym92DSB1YjN082tYbw6Hps+IvR1ZTg05LOss
OnuSyc2N0e3TyHbZlz1TMresb9w8jfDyGtRem0ZJ70V8H1NuQvs9PBwcr0Xl
5iGrOV7mljfXuDmsSt27cXN4sunvrWcMnyes2a71a/65F64/vNKYr3RtLj/l
ZmvI5GHnQrdeKDtubtvc9R4/ojnzeFffvek5yr9HXNX4teG+mK+yM5SR8eJv
Hvy3zIUgK2ZZ+HPyPp/4LsKnV4xMLr7Srk+2aTztHI1X2XFDHofn2uoAW11l
9ObmGWj9L/j7vlmVnEjeOuFmb9u8Aetv4+Ysm7wWTY8OO8Yr0jRweySaB8OM
yh58zbviOjtf83S/yM2sn8x+5mQv4zXwWcLXeDI4J35OTWN+ei555uSn+w1u
/tY9Gl+LmX9y87ehN3Msf3P6YU+ZczvdmSxMvzK5md6OxuNkaXsu3LOEtYvJ
w2s9B1veXLazRn3KzU13Jv+SE8kkzNhYvBDvA/ll4pscJ/y6mJkZHGFqMzP9
pvZER0sKDzsHhMenj5le1nWcta2Z1NxsfmUtYa6b3Lz+mqnu6s3ujU6v9Qk3
T1zcuLn1R7nKe5404i/t1zjh5lN+bs92V9kZHu7v8/S9Ers9+TVKDoTr4OhJ
aPlsU1bbjn8bD195PE79HHe80lfcvNOeo01Pvcmne9W4mX3lsixs1OoGn5Y9
a5ZTjd6Ol8luZsZJP158bI4zNzO7rp0zfxs3h53ja+AzQPNgrPGX/+qfvlln
zs5xJn8Edfepzu5N9sjzvbdHhNxs3dfPOdaST7mZx/V5mpck1/lTa/5xmfl7
1Jsndl7cvMaj3JxMOnIza/OYM9e063UOasDNA806QWdFh5t3zLxb7235O7yz
2SZujr93DbN0+IT1XRO/ZD9zSri51QmSiyf9eOLmrGu+jMbNHNSBdxovNfkw
sY+V7cLN7rG4y567y83Np3Hlf558yxNbc/0VN38pbfmEoU907qkukN8Tf29O
x4/EzfZg7HTrj2Jne1Umbm61fvS1+Fj0vqz9d9wcDy49wf79/xf5NKjVXmnN
kzdj4uaJmTOoFTduDsPtPNVZ57o497yzzjzpu67Du2LSyS9sJs/zSvNlUNvO
scm5rPs78YtQ8/fcdtwcdk6Gxmfkzn2rfuYfjZm/Z242P4eb/8v/6vfG3thc
3rLlJr3Zmi6Zma/pwSBr08fRagenPI67Yx0/TN+4eTEVfbaTZ8Me3qY5s25w
YpqJncOr7PUX9iUzextzc/NxOB+Bx84ysqS5eW3r626ejbVf4177XBo3n/Lz
ld58d5CBJza2T+OEm3cM/ei4c85Ji5487o9yM5+D6MtIHaB73mWsZzuy8Qv3
qQ9KqxWk18O1c3f8zjs2/trczOM3n0WrF7RGbW5eWX9+/rDvJYxpb0K4ytzc
GJe5cOTuu7xszfiKL7mMrN08wtS4XSfI6zI3T3NY61pNoHVfMmfeNw/16b3K
cXa+7t194/4n25PjOU+yd+ujTY2Zec1f25vxU2v+Prj5W2Bn1wj+5o/+WuVm
v576oJib0zPQ2rB1Z9b7tZwN1uyRxbO+MTq9GX5tXo7/2X0C7c+Nh5nbTD1Q
phoyc3PzjVJ/brVcYVnqwfQcU2PONru8OnMzWTvLOfdcU54jrq65+Tiozee1
dd9cU7J+nRt9ojs/ysmNkXfrzKon297pV/ItcTP/ntT+edu1vGXO8beQsHF4
jl4De6AnZo4n2jrqG880mH1i6lbXt+sT4n2aRv0erZn7OxeDfNzYmdubm91D
kNwczXh5DjLCrmG9X6BvmpupQ5/qzeYzekD8+/6kGzffQ+ZEVm5ZGK4NbEx6
xc32b9C7Qe9Ku185P/Xsnc7rZxpfyy7jrnHzFTPv5hOtef2lp9v3hsz8Wb0B
v2W9+Ufj5x+Jm3/zx3/ylOE86cle1moImw68uDm9CJvPeb3e6cA7LflEb259
AVuP7nCzNU3qoMmka9omOdosbQ221cXRM0pd2/tlW2p/jSmpQZNJdtw85UTH
A03N28zK+8Vrbgyb54/sQ87MfrueMI2byc5T5smdDI07TG1evet7/ghuPvFS
n3CzmZncvMtwPuFnL2NPE9YFhtfo2Vh8eKItuzeK+Tr8TV4mk5MtXWdnFp08
yxMns2fgR3BzjmFudr3k5FnhvfYzwMTN0ZzNrvmtv9WSNf9G04pb3ltjMp67
ved57aMgN3OufB+2ZQ51O/aVfmsvM8+f547MsbEv723jZuvQu/M37XhifvvJ
J7YmF0950fRgvPFX/5M/feHm70Vj/ixm/snN3w43k53JzbvR/M/kZrOse2f7
eFOGnI9ljfkuN5ORWy+V8DS1VOYxm4vpy7BHo3Fz822YU9hDMCzZdGezcY7P
ZdPv6dSen14/Z2u41jAcne2uNF77nCfNlx7uxtrrujM/s9aOm9uzjPn5hJtP
MupOePjR8ZncbN25/RbivztOjpb8a+HmU9/0e8ZO+77iZl5D80VPfVDCzdRB
yaqsC5xq6Kw3N95s2RhNf7YnIOd0/kRYLf1GwsPWmc3BnL/7rjRudoYcz9WY
3dtQa27X3p4pzKYTt79id3jTpxrFaMhm6B07T95lcz8/B/Ly9+TN+MnNP7nZ
mvP6u9jZPoxJa3Yu3dKVzbI7f0b6opxoyY2R7/ibd3WBzLhLPly42fzlWkEy
cuNA87K52bVX1PQmnTqMbW7mMVkbaG6mt6PVE77k1oGvyfKNVSd9OT4M5u7x
+WNdB7NH4t+euLllObf5TFnbd7m5MfS3wMmP+DROaw53Gv8j3Nz8zWvdU5Yi
mLlpo+TN1AiGp+31YO5z3r/sC342z8YT4rrBnc5rRs6cP5qbd/tZ47aO3LLp
TriZzy85tn9bJzs1bm6c2XwQ1nivuNlMTu2bDGlvQNOwG9c3v3XTc83L1KTt
H2mszPfmUB7Hmq25deJmZ/2Fm9szCz+TvPcxr2oDm8bcfDScT+r/PouZvzdu
/lHY+b3c/Nns7FyN9NwOF/+D//d/9DTyeqc7n3Bz8pnJzI1nT3g5LNyWT6xM
7TlZdO5BSHY1A7t2jd4Nep8bNy8eab6Lxs5ZZvajxkofQ7bJOZypYd9HeIcM
/caf8bt/M7nc3uawL5m3sTS5mTWV7D/O+8Vehi1Pb9c7sDHzXW72M9Diz3a+
9/LydKyv7dWYPEPTuJuXwf4m5Gb7ae2xtdfWfU9a/8DGvmbclqcRNiRDXnmS
G3uTM5s34hF+bttP/mn7LJivkfV8fcXN5G6yEjM1yKzNU0GOiz+6bbPzyDbP
cuNm67Pm5rVs9eBIHw7qvFMunrXgac6Tl2Pyh9g7sWPQyZsRbXinN7dljaf9
XNSOOX0eV9zsYzOb+TOZ+XvxNf9o7Py9c7PZ2dzMXLpwc7Ti5tVw75OWrZHs
5Z2v+Y7O7DpBszPfk91TbxgPSXTwsAP9BNRHyWVZt+uLZ24mn4Qjk08XZp70
VGvQOQbZh9zcfmvP/tGkXVNIbk4f7hxjysjgXH0PwmH0iNsPzvvVMj/IzdO9
MTdP63f7TWz9KDd7O76ndv9ebn6Phu1awCt+dq1fy9Cg5jv5NNo+NQttYOV4
PMzYk0fDdYDNj2wO5vvo1N6O/o5p38n7vOPhE4/z9NosPGU2ZzvXCu642Xos
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
nb7i5qthFm6sZY6cuPlEFyZjk/Emxj71ZGQkx7rNh3zcNGOfJ1l4ZFlzM5fv
+nvv/BsvHpHnczUfy9Lxr54h/Nk2nfsz8+Z+Lcz8PfLzl+Dmz2RnZmpEc971
CQw3U2+mfyN+DPudzc3JdD7pCbjj5n/zL/7O0yCHc5jTM/fGzWuQmz0mbp54
cnEzj0Wtl9xs3Zl+53bexoM7r8hiJ3Nz41Br2Vdae7h40nqvuDnbvPgxUado
fXzykpuVW++TO9rypNl/ZG3gR3g2dpryKTfv/BlXtX1TfgbfnxwnnEZWTt7c
mI8xeDGmrI03ff7i3Rg0VnPxquWbtGB6gneeixNfxh1tunFzq2Fs+jhZ2Zkb
jZsnlmqcTG5rGjI5jgznfA1y56TfXmmj5ELPuTHxbh2vy/l82Yfz4r2Yso2p
v9MzYT2Xy7MPPStXDM35sv7P/HylnZOPyc32Znzt7IyP5OXvjZ0/m4d/rdxs
ft712m41gemVYm6O/swawfX6//f///8+jXDz0rivOHnHzRzxa0yD3GyPBrk5
f6+42cuoN7v+jRxobs5fepvpd54YMXxH7bh5J8LN1K4nTjQvmpubnty03Ks8
jezHXoHOxbvDze3+vEdv9n141KfxEbWCX2o0XblxbtObT3waj3Dz+vu1ufmq
Z8kVN+e5726tH3MuHvF1WDtu3Oz7Yn/ztN0JNzd2btuQg9dwP+h4enOOKRva
uu6J9kwNd/KXNL7fadlXerXPNXkazOJmfV6jufkpRw5jqn/ceZ5bpsapvu86
QHPz96ozf2/c/L2w84/Czc3n/Kf/z//8abC3yaQ90wNtbqZvw76LcPNv//Hf
fTXucjPrE9mbxedrunP4uvFX2JKsaa9EOGrnbya7OdeCmq9Z1f4IM6P11By7
8SLn6uuYPA/WnSduvtKk17muuDm9t1t+tLl5mu9u7LbZMXTzq/B78dHcbH34
S3LzzsM8+THucvPiUvqiFwe3ukDy8Xq/7nPWrdfZ745PI8zcWLHlSdz1bHwk
N99lZfJ13tdaxefr2HFz7p052c8Mk5d24uaJdcO71m4bN5/6Kk74dfKETB6M
5ieOn+KU1c3OZNY3noznfopk2TCzNXr2y35h5nWuwTvia6fX2efe9VVpn+eP
WAf4vXLz98DOPxI326+xMulWb+01mNHcRtaRWTmcG7dYeWnLGe/hZvo9Mgf7
qlMnSG4ma691EzuFrcjN1FHpUd7xGNmWWnJYxdzceHC9n2r/ePyJm6k5X+mr
1sx9DGrl01zJzc2n4eeKqVfg+tv85Xe42T6S6bM+5eZHPcwn+3wNbr6q/Zv4
mAzNv4/WBU668+Lk3O/ozo/ka7xZLr8C/Q3Umxs/Nk9082m8l4vveqCffE1/
/rb3S+Y66civ8kI23JyR3+R3uvKVjmsPxKQ/fylubr4I67n0gFhXZTYc+x9y
NO7MXMzE5Giya3wXvj9m2zc+Z3HzpD2bj3fZeNbrecynz1D9sz/Dn/FTa/51
c/NnMXPTnJPnTP9Dqw10P5G2jL1PmsbM8Ye//P7TNo2T23L6lZmnYZ2ZfQKT
4RFuJqtQm20cGGaetNjGcq1XyTpGvKUTE5Ixw807rdjcbB148irseHN6HqB/
Y3e/cn1X3JxjOg/N98X3aNL4PeeP8jmfcvMj7Mxz3eHmRzzREzc3P4V15fV3
sdZTT55n3uI2rhecGDk6c3TlNfwbzKoNCE+HcaNXmxObh7dlTLSaPXLxXa05
527H+2rcDM3Znu2dB6PdlytuNgeHCydmnnzFjZvJ4FMPbGvDJ9xsn2/4kbxI
lnZfcfuZzZrh3Zb3ZuY0W4ebX+2ve2M9uunJfj5ojNzmcOKNZt1g5hmd+Vvo
ob0Y90sw9Gdz8E9u/na5uXmcFzevvoH0Ykz9AsnJrv1zFh315uUFCS+v16xN
XO/NyNk2/Ew+bszcvBrZjnkgTYcMBzammbLZ7H9uTG1ubppmY8ocP+w2+S2o
rU7+5N37ncdh2pbXbt8KWf5KC59Y9SO4+eRcJ0xtbt6x8Sk3X3mms37HzHe1
abIyn1MmLzPHkw/9mUmpEzdW/jVxs5n2UW7e7cc8kNYbu3GzPdTRxektaZ7m
lqfRuHkxlNdZG935IcjNYbrGvcmcCM82P8XkEWkcuMumyFyyfuJm8vPiydZH
e7qeV9z8vH9jambFeb7NJ+3lre+L6wz5GTVfhrk5+1Bv/uwe2l9Ck/5sDv7R
2PlL+TS+ldpAcvOuV2C42b1PogUzX5l6c7iZrGxuXqN5Oaw7tx4q07Jwczjf
nGN+nn6/p2fCTOL9J//yTjPOWOdp3oqdTznseOUJPuVl8ui0jzmX+npjWXM4
532l+bbrmrh5x/rt/RVH39WP72zXWPiKiz+Cm5v2nL7vLbf5Djc3H4Yzwhc/
Lz5eg8uyPH5nezbIxuFA1wC6h8mb2sAHvMyTf+O93DyxvLeZPCbOkcu2O25+
WoZeh02fDje38Yd/+/cqN08ejYmZmes8caZ5nAw5cfMuy26X6+aMZm4zcfOr
ZwXU6f12yAPh8a78xWbclv224+k3vhBpzfxNoN33xs30Nn+LzPxr1Zy/ZX7+
ktz8GSzd8ujcD3CXr0FmnnphuxaQ3Oxze2Sfv/1nf/1pMH9j0pnJzfQ3c1mY
Y8dyjVnNzdTtuF/Tk3c8Sybe9flgbeEJN09MeMXK9F+Qaa/407r9lFPX5j31
Ot89D5i9rdVPvL57BngPN99l7ImFm/f5I3waV/0Bd9xMfo4XfXFWuLZpzvRv
mIntVYrGnFrAte3ivP/hf/x7T2PyMocFyZIrA4OeXvNu8yiYU6fBbejTeFRL
PuHmaMPh3cbOzscg27f6x8bN5O41WAu280VccfNOe7anY8fN/81///94GmZZ
z2Pi5pYlMXHzqQ+kZVRc+R/IzU2r5rGnzOhpcI5TfgY9G9SWp2M2Xv+snOYv
zcvfMzP/5Oavy87m5l1NoFl64ubJ22xubmPi6MXO7ht4ws1e1jgurDexE3uS
TJooX5tT4tEw8/K36sbD9Ggkty11c41nH8mgMGuSm09Gu5ZJ793Np+nT9m1P
x7h6Hmj7mY2bv+UOB98dV0x8V08+5ebmb/Z3tWVrrO/e+htuXq8X09rfzAwN
5mOEm3N8+pfI0DmGs+kmdiYXRoveacSNp0+8GtZwvwQ3T/s0bnaeXstgnp4b
fC7fQ3LzpCu3nnzkN9YR3mHr5jkgN69Bnqa/wt4Ks2q0U3p2yd/0Wzdeblza
ct6o657ozfFKuw7RvVFOuHnyNzf/hj0Z5uXG0PRofDYvfzQzf+/c/C2y82dw
85dmZ7Iqc+WueDl/s7159j3cPDH04uadl7kxNPuhtJ4n1PQmTZZ9iRvPNk9G
q78KNzfGbjqy+whO3Dyx6BUvN272PpMGbH3a13913lN2toY8neeKk9uwTjz5
wr3PFU/v1nPdpBt/CWY+0Zud6dy8F/RmLP4KP68RHv41cfMVE+806912XP6q
nk85exM3747t/oaTLu08jRO9mduS5a642ccnmy5OvuJm1/SFTXfcHFbNMXc1
iY2brWN7W2fGea4Z9no07ic3Tzwe74y52Z9J42Zrzs0bbWb+yc3f9vhsXv5s
bv6S/Ew+XT0DF9eecrNznRer/m//618+jVbbl/EoN8fz0WoE7Ws2NzPrw5qj
2dcMRl5uXMJ/88O3jZvXWOvM2dyOy3m+MHNGtG/PsfGpGXBiVV5jXp9wMzVq
zv0uM5OT2zJmcOz8KFlm33XTmNvraRvz9sTIJ8vy/r3+i5NhTfkqk26XNXfC
za0WkP5mZs6tET6mT4N/ubzlzb3KJX5mx6mnScszvuJlc2zeP8rNu+NOXB3N
2Vpzy6Smn/mK231fwudrmLv4vvHk7v3E0FcZ0E/jH/2VN6z5X/z5H2yzLqy9
TrV74ebosM0/7Xlbf916OZS13PzQjZvtl26e5Z2v4rfF201WjifF3Nw+M3Pz
t8TMP30aP7n5a3PzxKcn3Owe3Ombbc3X3MzznHCzuT6jnWuqE3Renjmo5VWY
CXfsnH//8549s+3TyHFazSDXh4sbN6+M4/U38/T8OP+TLIqdTkuGJRu3e3TF
1lfrm895x82TRt4Y2c8GV7ycY3B97rH51/tM3Ny4+4qbP4Khr7TliZuTscGc
DWZtX9UDmp3phTZje/3Uq+QVNw4a9E5nnoYz28yYfp/tl0/lKgfjSnueuPaV
t7voytP73KMTLremnXkvjzg52fplWMrMa+ZkT+Ycg9sfcfOfve2/vY632HmN
pqNmDu4xHW258TQ9HtSWdxo0WdO9EF+O9czGZuRw+8T0zfc8MjMY3N4MMnfz
zbRngMbM5ObP5uSfevMZN38L/Pyj8PIVO0dznjwbrS8K+2pP3LyO+zf+9O/f
Zmaz88p7XmP5NqJvT5pzRrjZvGzdeeKgDPtAmTkcZiY30+NBf/RVzWC25W/X
8ZiuQQ9xmzc1V19z09ZP2HrStE905Ma0O24mPzdujo7afCE7buY2ZtodV7dn
kx1/N2258fTEum0bP9+9h5vJrGRYeoZafd97R7jY/QKZ0zH1j564mSM6uP0Y
zb/b8urs9+Ay8/Navq7D20ysfeLJiEdijRNubjWCd3T0Npdwc9h56ndiHjYH
8z0zM064mfs1bp68E6wTpA5tfzDnbM2avOzjkzfN15MHY+rRR43ZmSHNw2E/
+RtNG8dp3HzlJedvCeZmZ899Nit/SW7+kdj5W9CffzRmbl6NjJVdsdOdW+3g
5DOmX+O93NxGuHk34te44mazkfXG8Jp/7ybTNE7JcmuKO900Hg4eM8wcbt5l
dOz0ZnoYzLyNXflcMWnFyQJp9X132PqqP3fmb1/sxM2Tnm6ubdxM3bnpx5Pu
PHFzW2+/s/n5I7warRZwx9J8n+/bYjHrzXeZ+XvjZubYNW7m/k2jtga9WPSq
hnDi2Vc9xqUt7+oDJ89K1k3L7XE2N2esXDrrla3HYPMzX+XY7UZj2YljncVh
T3LTt6/OdcLNEytf8fQlNz/n+HEZayjNzrzXXObnovb7wdp2fcZrfKa3+Uvw
8a+Jmz+LnX90biabpk/JlK2xlturMfHyR3HzxM9Le17HvuJmepsbc7pWq3Gz
OZZcTC/p1JfNvuUd9/Kc1AHjiZg8Go37GjdPPPsIN1OP3nGz/cZ3uTn75p5O
+vk0hx3XTgx8Na72aZzd/BitVnDiZn+vuJx/va39EV+Tm6exNNXGyzsfM/0Z
fh/2Mw83PwZ1Wy5jVkbTbpPB99HcPLFzY+PMrenL5P0dN9vHkueZLJ/8Co2b
W3+Uk4znR8ZJnWLrKzh5mL39lKvhY73So6H7vrD5hpsnj3Mbb7Kon7mZjM31
7ivevMvW/5v2b27+kfpp/9qY+dfEzZ/l1QgT/5t/8XfG7GZz9BrMbiY7p57v
EW/zie5sz8bUN9DcTN4yw1hv3HEzezpM/lHW8zVfNPmXTGxd2+xtbiabmp0n
7TXvp97YJzqx5/+IT6PNYeJmPodM7L3j5hP2nTRo79uewfz842X87E9YuXHz
9BvH4lz+LjJlzJ1wM73DU81gju0sDfszqCl7m53mzOwMc/LLKL2lqRlPvuaw
JZed1PXZU8wci6v8uTvc/CY3A31eeH3xXbdnhatrmnwd9jPTI0tWvsqqm3j6
1N/8yJj6cdvv0Twged34unIz6//AzHk9ac2uBdyN5ICYtRs3t8zlzJt+FV7j
5FWPPyPja3Lz12bmH52bP4Odfy3cvHoGZiyNdsrPsN85mm7jVjLze7m55dPt
uDm+58XN5KqwDlmWLJLf7qm37mqqzM0Tn0xa8hphq3Co+ci6YnsOoJac85lV
J735ill3WrK5dcfNTVvmfvl82jzWMZJLsuP0074rbVnze5yOqW5xx83vGe1Z
LdxsrTncbPbN97Vp0/Y8Xw1mbkRPNidPjBwmjJbb+PeVX2HDzazdm3wJrd+H
tznJlOM52vodF195oSdu5v2ZfNWPeJzNzfYqRHuk7tt8GWTuj+bmlmNhzXni
5omjJ26ejm/uDCfbL3HiXSZvT3zdfMvNx9y0Zmc4m5MnrZm+5i/NzWTXn9z8
4/DzZ3Lzl2Ros6i5+UpjZl1gWHW9X/uy3/ZHcjPnS2aeuNlZGuSh8Ooa5ltu
R33YzBxvL9m5MfPKwrC+SBZuOuWkN4ab2+/x5mZzcctwy7ITf/EdX8UpN3P7
zLFtQ93+RAe/YmP/tnCy/wk7N26ONt1+a2jLHuXm5mNujDvpxm143yl37tfE
zc5vs2476c87rs76ppvf4eaTEa/H5OVomXOLmXe1fK028ISZJ25uyydunnwl
E0e7r2A7Xnt2aDlv1HmvPM1Vd4ZH+oSbm7a842bOc/d5cbtwM/PnvgY3f+b4
bJ790fj5s3n5S3BzY9EwMzM1nKHBdWs5uZmZb/RtpOfJRzAzuXn5m+mjnvqf
TDpj8weby8g6jVOY35y/jZvDu5O/1V7YiZfzuvVZca9uMpy52dd3xcGPjJ1v
Ylq3O96kG596SHbcPB3T++z06mnkPC1Lhez8qOZsfdnfiebD4HPf5POY+Lgt
zzMN9ezmybjybLSav3CyuZdMaZYMC+78GubpKy+wmflLcPPEwWHo3B8eh56R
K1Y+5epJs51Yt+nOj3DztOxKO25as3mxsfMTIz5nJb/xEk8ZFv/gD98wb8u2
IAO3feizaNxsjdocHA8Hc5uvNOmrz8HH+MnN38Z44tCf3PzNsXNy6NZYrBzv
xRU3r2X0aDR+/RrcvOsbaN6JLrtjnbAp9cCdvhe/RltPNtrl+u64mWwVtt/1
TmnMbK+wufA9fDztf+rtuBpXbDodd+e9Pjleyx65y818RptYecfN/I5NPufJ
S2QuPeHm5tvwMX3sZDCagakrTx7mKTfDeusr7Rn+BdcBTn5fsq1r7cjMOc+u
Vu8qt+JLcHM09+bfbtx8J7fD+zT2JH9ecbO9HI2Jr9jZ7xv/Zl142b4LXkPr
J53tGzfbO2x/Bn0W3Kf5M8i5ra9283BwOXOh7X1uc2sMbT2+cbO17S/t0/hs
Vv7W+fkVh35nmvNns/KX8mk0r0b4ufk0FiuvekFqzcmsi8a8GJY9+r4EN2e+
K0vjLjeHYdbYsY+ZZuq5dqX3hW2sL9ITEt15YrIdN7cs6PBe40Uy6An3PjJW
T+U1TrTmu+OO3uxz7/h5em8/+B3/Rp6TJm7m94LZ1Dtt2b893GFmezSmfa70
5qY/t22nvLgTjmaGsTMl/N51cK02zpkajRmnHihtO9bbOXvjkZrAHWObm3n9
3ubUo3HKzTvdlr/775ZPdYMTR0/b7vTSK24OE3PZYlByc3tO8D7sbdL06Tfe
ZWxDZk7fk6vawKY3Tz6MiZuZvef58h7SZxKt+Uvnz302I3/r3PxZjP6Tm+9n
akRztp853LxGlnFdfBnxNoerzc3NJ/IoNzdWdl0geYeM8gg37zh5YuvmY3U+
hmsRrTk3j3V08eb5zTXs2POjfRk7bp406EeY+aoucHe+iX93XHyy/xU3t2ec
aUxcfMXN3vZEc27c3Nh7x+GTd+NH5mZq2tap38POkzZtzX3HzSvz7oqXpzrF
jOZvNkNOnonmmz3h5lNPh3nZzPzLc1bblZd58iibMV+2R+/reCOyfc2aK1p0
y3lmnxSOaNKNm5sGbi3c3Nz2bc8t9Gj85OZfz/hRuflras6/+eM/+d/Ze59f
6cLsOisTG9GJnbjjTru73S3ZiZOv1bESh9iOOyET23GnTQwdIjkiQsjQBBoQ
PwQSg8xiUBRLkWBoCSFFQgyYIJIByoAJUlBGSMz4DxgxZmi+fX1X5bnrrv2+
76kf91TdewZbt+rUqVPnnKrvq+esWnvtk5ZMn0biZno3yMtVyoO+tt6s2YGu
N4ubxczk5mIoMhd7+shBiWXELM7O+ptmBXrGruuLrj+PfrOn7qx1K0s3cbOz
W+JPHestubnbPjXdt+DmET/7dlZ5eZWbOz959xkbcXPHzB0v+/XciJvdb7GV
m93TX8zrOcvOzen+qHzmx4iXvedP97f20I348hJu9u0nbk7r6zy4b4SvPeJm
vsZoP8m8Pn8vsfDMS+y688ijkRi642pyc+eDJk+P5g4mrjxpxiiuk5iXnuYZ
N5OLR16Nkd/E+/rqdvJDk4sTN/N5xcy3nneyNx+/BTcnn8WtPBf3xs57s/Kt
+bnLefO5gWJmcrM8G+RUcnP1GV4zS4P7qWzoqjTrRPtDRuvYpuNm6s3OvmSZ
ETfPmJge3LSO9smZidycGG7ExlzvVrpz7VfHrtzHEVtz/xKb+nNG+7PKvSu8
TPZP3ppu+yvcnPo9V/oG+ZnrfMkr3EwNOW1rhZ/ZqyftWX7n1B/IfIyUs5H6
+sjPZOStvoUV/0JXZNQum2IrN3es+/Qa4VzwdTv+3srNya8w02uTX6DTmUec
vEV7JjP7c52XR/l07XE868FkWnovTnwc+gJX2Hk2ByUxcvJaJO086d4zzd89
GlW30JnvmZuvyc8tU94BIx/cfFtult484mZyauLmazIz+xg7bhbLjxiLzCLO
IbfyrzMP+7TIzSOvhvssWOTmpE273lylDIMZN3dcKP39Vty8yq6r3JxY9Bxu
nrHtiJG3nOeRBt1la/jny31Al3Azmbebg8LlrlOnuSd+vz6TVe7BGDF2ys5g
0df74nGbPTLi2+7x1Z45rZNyM3w7rpFv9W2cw80zf3XHzd36HRPTx1DFnrM0
H6Xj1NUaeTNGnmbn5sTIM35OevsLH8Yz51KX9kyMTmfuPM0pf252DdN5NjpP
x6j0Hn9Uj8Y12XnKlXfAybfk570ZeQ9ulr+CuRnkZhW5mTl0b8XNVWm2tph+
C7+5/zl5OnjfczQShzgTi3dVWsf9rSxyc+ed7tiP1wTSbDvfyrnaM73MXnV+
Ziw727720a93Vrk5cfpIc+58z6uPd+W/Z3Qs7XPE9ZmYcbM+syNuZsa4rveY
Pcesja7/L2VnfDRu7hg0va6yObZ4Nzre7eaFj3LwRlx+DjeLjb2nbMajq3zc
MbNed8TDK6833E/M/0sZcczBmPEwfdCeEzfLc3aPcqf5d56T7ri7XJKOm289
J3BvLt6Tm++Zn++Nm4tTO/7dg5s7Ji1m9t4/Frl5VDWb5BbcTMb3/kBq3iNe
S9qi+46p8zpHk29GM0+cgZ2ZXVtOWrSW83nkcf1NbMbjdu7TeolRr6Erp206
v862pf30ffRrgNVrpBVu7tg46c+r3DzTm2fcPPM3u06drrPcmz/KVjyHmzsu
XmXmUS6dsyg13a2ejK3Vse0Wbl7RnUevS0ZO+XkzDVk1y8yr6riq4+YVb8XM
+zzzbJDrVvTTmb/Ej6nY9pRz8d3c60dudm+Ge5Y998J9G1xnNm97dNz0N6de
TO/902PpnNdjnHnyVnMC77XEkeew9CNz8zXY+RYaMflvKzffSmsmj/6ZX/zi
q94/5muQmZX31unNP/Wt77TsPNqPGTPr9ihXo2NAsW9inxE3J88GdTzpd2IL
rSOWTlzs7Oycrdes+6NeQPmJxXTOq7qffNzOuOf6N5J2ze13fokt3LzynC3c
POPfFZ/zNXwa7qM/p1LP6lZupge6mx+4klFXn1V5mxNDt/1/0JprPc3+837A
kd66Wud4oKvoax6xr/TyLdyctsVj9JzmFf34Wtyc9Eyf4ddx82idjqX9vjjS
eXyFodnTyDzkyM3mNU6Zy+5JHs09ITfHXI3vvs5+lt6sx1e52b3Pnm2SmJqP
7zFf+5HrYOfbcPOMU7ey8zW5Oe2TuJmz/+R/cG6Wpzlxs/LoVrj5XH6uKq9G
6eMpw3mkS/r8E+cgcrN7jUf6sJjDdTn3Vrjvmbze+TfEzc61ifWSf9aPz/3d
2qcVj8Vqafu+zx2Hzrj52tV5MDp2Tnr36LkdNyddOS1zpqb+fAk3J125W8+X
jTzOs1LGHDmazOwM7YwtDdfnY6cMOddrnTFTltuIpRM3z/hZ+7rq1VjlZj/+
LVyeeglXuDnx16zfbMbN6X732sWSI49Cx9zUeN03nDg38e8oW5l+5xE3d6X9
SP5mPj7zwsyuR8jT1J/J5W+hNX8Ebt7MmXfAyddk52tx84z/7ombxaKuJ8s7
TK+GzxkRXxczK7u5y9RY1cBn2nNl0ik/mrMLyV7OS+LPTjt072/HPzNu9uXk
D2dy/23de8XIQ+Tf5HF27vJj4mvx+JnhMfIub9Gf+brO1P4edNo02XlVb54x
+ci73HFzWnemPftxbPVprHAzvUPep5oyx+ll7vzNia1X56Fs5eYuT+Oa3OxM
fAk3u7Y8YtW0j6teDc4C5P5u4eZ6TPvc+Uq2cHPyQsy4eOTLqNuVezbibWVE
rHIzn+vc7H5tZh1vqdHckpRJ17E398/9Jdpf/R3p6jz2tO7sfeF5Obj57Zj5
2vx8y+29JTeP/LnOj3t6nMm45bEQN7v/gr2BZGpyc633v/xPv/OCnW+lOde2
nZurqKOSlVyDTb5V6r3Mevbf0zsvc1fOMu4HcW5OPmqysOfY+TJyK58nb4cz
3hZuXuFqHWvn4ehYm++F9qnj5o6JfVurnJ38GYmFOx/HuT6NmebM67TkoUiM
7OW/g6TnbuXmlDPH+3/123/0qf6Lv/frr3wYyafhjNz1Ayb/c5cHt6pBz55D
Bt3KzVzOfkE+Ru+y1tMxpjkvK1qz9nnl2Ebs7J6MlawG99N2PYAzbu606C1Z
EV2f48xf3DFzYmFn9C5D41W+XcPNmoHCx2bHmn4H6N6TxNv1erfKodubdd8z
N9+Sx++Fm92nu4WZr8nRaZ+KmcXN9GM4MyuTTjl07tcoli12nvUGXoOb63XI
zGQhcbO0zcRm5MnEMuKZUT9V8ol2zCwGSv4MlvIOyE1JS3b/R8dr5OWkU3sP
5Co3k4GdjUfavbOv8yf19BUfctKRO26eeZe3+J5HzL6Vnbvi+eC1H3Pokod5
Czf7MvdlbC16moubV3I0mNFczyl9Os01ISfzOSPfRKexjpg5LROHnutd7rg5
6c3i5DQrsHs9cnLHzKNzsJLPQFZc0ac7Hk5+3Jne7F6RLTxJJh3NGxnxNLm5
y9QYZc/JD/IJGdGJ7cXNaa72uTW6lrl1fvPerHsrZr6Ela/Bt3tz+TW5ObHg
l7761ScmdW6uupTRL2FoMmjtY2VhVBWPKg+Zmc5dfrNrz+LmW7Pzl3/ih17M
CnQ/AH8n735j5/KO96j7jryjzs2Jo8uvnLg5cXTnCUneaGrGrlOKvTTLm7xM
D/SKPttxNX0Vzn3Ooe6/cFalj6PTd51fz3lsK0N3118z3dl9MzN92bnW3+9O
X55x86wvsNOs2TfY1cjz3PUCJoYufituJi86N7rvwb0LycO7hZdH3LziWZ7x
8Gw/nJvdL53YnbyctPGVElt1GjO12pFfYsUn0HminZu5D+TIFQ9DYtLk1RCf
k3VHfg5nY862Tt5kPu+TZXG86lU0vVmPXYObu97Bg5vP05mvxc3k2xHn3pue
fW1u7vTc6pdT3RM3s2retriZnCx25rzA5NeoKpYtpi0Wn/k1+HdL1baryM3d
7+riMPfVik3d2zDjZmcP77NKnEFudm5JrDtaP3mhtZ+eC0JGLm6uGrHdJb5m
Pp/8l94P12k77tzCvbN1O9btfCAzLt7KzR0bz37nSNw8K35WR1xM5u080On3
kI/IzSMuHmnAqjomzSPvPBM6Hs+eG3HzyEPiPH4ON5OvtI77jlf9tdQ+/XW8
XGvm6zsL++t3zEzN2T3FiZvZr0et3XPnuPwT5gs+1XPuhjKo3QPt/YJ+jeLc
POunXL1+0OvovWCmxsHNb6M1r3Lu3pr2yj5cW292bnavxqV+jUsYOnHz3/7N
nz6VfMucI6iZKB03l1ejevSoOyd+Xu2dTOsVMyu/o9i59pH8kTROMgy5WUwi
Rkk+hlqXWcrOzeTbFd05adDiZm5r5BNxnnJtU8vEy4mZpUfzvJzDza7np9fo
9H96x1dZ2N+fziMxY1otX/VydK/jnLzq0xhxs68z+q2jY13y8Uwr3sLNfl24
mrGR+gI150S3mdNMZvaZ287RzovOuJzn1zFm99xzuTmtX+zs+6BjfuJqHC+f
m/wanb684llJ3CyWShqwc2vi42tzs3uIO24mO2udzguRsi3co5zy4TzzwjPt
1DP4ipsn1fk1EjdTL+40/i26++/87g9Ox3Bw835a84hxb8nj19Ser8Gtzs3F
oynbeG9uHvUJVombxc7Fy2JnepvJzOTm0p2lPZ/jxeiqzie9zfWa0pSTp5ma
c9L7Op+wuGzkbxY3ix9SrsaMm1ORm7l+8Xs9zp5B98DqeMnKI24mR56rNzvn
avu8BvD3g+c4cXMqHS+vNWbMnNjX+Xyr1rzKzTN2Trw88mD4bx6d3uy68krp
8zzSsdPvKfWZ9z7BxOdJY055Gs7Izrv0MCTvb2LIbsbejDM7D/E1uTllZYx0
8W77o+uGFW6eeQK6dTrfbOf5GHEeOZ1aLrXhjpv9tT3feIWbPUPO/RbkZGnI
1Ky5bKVS3hzzOUbXCDOt2XPnfEa6uFnrXJub92beR9OaE+d+RG4WfxYvOzdz
/Wty8xZ2XmHU4l9xs/ud6d1ghnOV8jXEz9fm5jqfzs2dVumcRtZM+crJ/+C/
fc98nmJp92rM+LtK2nbn3dDj9dc5ktwmT7N43lkuMefWLDpnbnJmp63Sh5G4
2dnWt8XfAXgMvH6Y+TG4/Uv6B9M12oipVzXnmXd5xs3+2XLfhH9uVTNuTr2E
9Tks7ku9gWlZ59kgM/t8QPdtiAlHGnJix+7+SlHbHWnSM771WSbncPOMqdNj
K3qzl+vL4tKRR5nsSl5L20sMPuJs+ih8P/na8nlwvTTDesTUPruExyNuVr/g
Fn/EqMjNPn/wtE94zY6faxt+3aDzorkuL+Yhfvefz0A59ObMzm/FzG+hY1/b
43xtvZm+5sTNt6hr+p3leRY/068hliY/03MshhY3X2sGt7bjWRqJ5Tp+ITOL
V8if8jY4NzuHsFwzJpckViYzrXCzP64Z3s7N2mdys3s1Or4jN48YmtzbadWu
EyduHi13fu64uY6P63tGSNKWkz9j5EPZws2d5sz3e8WnPOv5G/0OMtOa+Rnl
7yXd65CVPyo3d0w68lencp/JaTufz8WMb9P+83ys7O8Wbi72Kj5MXLvS2+fc
7ByaWG/EzdR+yY6pl4/cnFh7xs3s1fPXeGJS4+Z0vTHi47QOX9OZWa8n3h3p
9+k6QedF2yU7sz/w4Ob3x83nsvNbcHNiULGy+3zviZk7bi5/BbmZs7fFyqnU
H0j9uXKdZ72CW7lZWXQjr21i587bQI2ZvmDnV/dzFjfMfqNO3E2vhXP3iJv1
uF5XWjmPidxMTZbH2V1XbNGZ6zb14rRO0lkT03K/XBNO7yWvHdz7zWPu/NId
85+jN/Ozk9h55M+4pGbXcrfgZt93/RsoDwKz5xI7awYKM52ZSXfyPCO3OeUY
e0bdzIfR6bHMyVjNaT6Xm8nKmgfDmS46P7Wu+7ZdN+Z2O25e4WVyc6f/Ojf7
b//OzTNNVRworuXzyN4dN7/wN8AT0XmTk/admJWZc55x8YqZ7Xicy/1aYQs3
dzozrxeS3s7y4+X1hN/WNcYtcjX2Zt5r8PJ74eZVdj5ru1fWmztOfCRuVn6F
5nEnbvacOvqPtc53v/0jr64hRvMFZ+xcLF7s7LzjzKzvemcu1yVds0zz+8TN
/tu2uKJjBvJF19vlfg5/PHmg9bfL+e08tavcnJiS1xWj5yc2rmPqXitx8+ia
h+ckcbO/5/yM6PXSsa7oyt212jnc3Hku0vL02Umfo1VuTvyctsXPp++ntOZZ
f2DK1uDyk55s80587knK2ZhptFu05RX92mum+XbcXKX3gLlz9G1Qn+64ftXL
0dUn+HWTdkl/xoibO6+C50iI9TpuVskrzP0T1zo3d9qq8pBnzMrn/TxeJ9WI
hXVcro+v7IPr5zFLevLa5GRn/K7n8elcg5uvxc57s+974mbfh7Py4m7U53ht
bnV/wi16Aa/FzjOGriI3e5Gf5dXgY8XNxbryf9Tt2XzBUdX+1Hxw8ou+y8lA
7iElZzqXiQf5uPdFOS87GzvHsY/PtVHftp5LLS/5NLQdX5+8LF4TQ3ZM50VW
pg7MczLiZufepD3P+DNdyzg7p2uJqu69Tce1ys2j88VrkFvozTMf84yb+bnt
2HnEu/wcdr+nbGVl9gXytvs0Eit7b52YdcS6K/w78kXMtnXO9nUsM24eMfCI
m7ew8yfz6bq26TznjNZxs/f3kTuLZ8nKIw539tM2Oo4U89Y2xIXuu+60YM4d
SeuvcHOnfXf6eXfeEjv79Ye/H+6hcWbuvNDFzapr8fPe7HtNbt6bna/Sv3ej
47g2v5Lzbs3L1+LmLvutuLfKMzakMWseStKhVcW5f/xrP/aCm6ueln9edg43
Jz4jAyVuEQcmHZMlbk6asPOC/BbUohM3axvO8uTmxDS63WXiaZuuNcuz4DzH
21oneYFrPWdH+UCcG52FO89Gp01z+yMPMRnZc0zcs9Jxsx/nVlZO3JyOsePm
jp1HGnPnzfDPAX0VXLe75qtlvCZz79Hot5SPyM0zjl3Vtd2DQr+JjnurdnwO
O7tHo8uASxzrrNZxM1mQHl3nw6Sfkv2Ug0x9OM33IzcnDk3eCHKzez1mHoyR
V4LPScc2e246Ru5f8jj7cfG4dbvmnWudg5vvm5uvwc6Pws1voS+/hd7s7Fwl
blY+XfI6yw8trq774mbN92am3dbMulp/pGE6kzk3O2M5P+s56n8is3r2ret4
acYxNWKyM5m842X+jt5xivbf/dozrbnjZv11BvXzlvTb1EeY/BHeB6j9GXmJ
ycfOyh03+/Gt+DFmNTrPKzXr9euWdV4Kfo5mXg3y7iXcnDg53U/9gj5nW+zo
zOzztsnMM3/xzLuwlYXP4Wb6OLjuyZeC2S8snYOtHgx/7dm6riMnTdb1zI6X
+bjr1s7Nrs3Kxyv/s/aF64ibxZyeDeGeho5/O19H4lT3XszYt+57lt0oazlp
wSk/equOrWuHpNlrn16879//1tO5PLj5PrlZ7Dtj6Blv3zM371nXZmflUFdR
dxYzu65Mb7OYWH2FpRFXxsYTP38uZdZt5Wb5O+p7YcTNrnc6syZNkMwsRk7c
7Nld/vu3tGbyRzcHkHzc1VZunnkyRn4ILSc3Jx3VNdfu/I8yKxI3i8dHfXgj
XubvCSuM3HFzet2Vc7nCzDOe5nUVmTlpzO7tWeFm9+mnHtfZNr0XkFnN5GPm
Z2hfkx6d9GY+1vHySG8dse/M27yFWTdzc2BlHR/Z2fsifZ2Rrr3iAxePyq8x
8iZ03Kwi8+o5ZEjXlRM302Pc9folbq5M4qrSUau+8OU/8FS6n3RiZnvoOF0n
JjevFLdNHbfKPRR+fcHtcIbhyjVBui5IjE2W53HV/l2Tmx+Zne+Vm7fqz29x
HHvz7r2wc+JUcTO1YmrKyZehmdy8XXXya4CbdX+VncXMKnJbl+3AXkHvF+x0
WXKzs0otq+8+sjG1YvdzkJtHrD2qv/rtP/qKXehbcL9C4jrPcx4xIJmx6zXk
ua38uq050Ik1u1koiZu9L7DTmTtvxaW68zncPGPmzouzws3nlD6nnZdja3Xs
yxkp9ZlltoZn0zkvOlcnruWyUb/eOfryzO88Y1iyrGYlzrjZj4fczPs8xykb
pNPsxc2uvyafgWuZ7kd2bvbsY7Kb+wcSN5MhnYnlwSBXcp0vfv0bL3hVXoQR
N3d6cudFHq2nbbr/gfzsOnf0xDzPIvRsDerG1Kt1W1zurJ18ILxuqCI3H5rz
wc0HN1/GztJ4n/j5mXmZ49xxc61T+jOzNsTJpV0XN4vFq1a5+dPXfvRUxV/i
tZG26b2CKxyU/MzkZuluYgDyTdKknXvO5eaUsaHX7WZQJ602eYhTj6GuI9yf
Lfas2x03d1o0vRvcB2ZvOMtynzpfOr0eIz19CxOPmPpcTt7Kzd3j5N8Vvdl5
OX3GD27elvWcPBKeNy2Ptvu7z+XmxML1HJ/TMtLoXYfttEtyW2Iv9gCSm6k1
+3ZXfbvFw8Wbeow8WoxcJS4o1tMyPl4l7ubz5fMlNyddeEtx21XkUC13vbfT
tdP5T9z84v0Ken13XeQsfXBz5ue9Ofla7Hxw89tqzi98G5+Zl6xMLzPnb+s+
PRzUrqv+9m/+9Fnc/M0//82nEn+R11I+AnsFEysm/VkMx9+qySve78QetfSb
d2Ke4gfmUq1o0MmH6ryeONeZmdzcrcPlrmdr+UxT1nmd+TR4zkfcmthZ5zdx
c+eRSJ+FGTf7NcMqDycPRlrPewFTn6AztH8OOj7m49SWV7m5PnPcnxVmJhPT
06w8Z1131t/kb3ZeXNV3Z8w78mWsejBWXk8e5e5awq8HnG9TXvWMm7k/ySPN
x6lzfrL84sTNVfJHuGf5NDPEctw6bpZfQPoxtyn2fPKR4LYeIx+vljMsNWDp
0q6j69x4H2THzMqnSK9VRc3cPRijvki/NqE+Ty7+xKy+z1WvlbzmPEZp1N4X
eHDzN27KnG/NzTfZhztg3UfhZuXSMTvDszVU3i9YWdCq2o64+dQ3+LlWuPmn
vvEnn4oM5lqn/w7vvg1nH/Iaeca5VMvFrtKQ6BmlZ4M+1XO9zVqnNOcqeUeS
hu28TC02eTjIrt5vl/wrScsdafzk45XMDX9fOr6tZYmb6VEf+UpmvzXMNOkt
GvIWbhYX87HUH5iumVa52T9b9CI5K+u6j9d/I3Zmv5tzs/jQvdH6N0S+JvMl
Pqx1OhZe7RncwsazbZzLzdTjneP5uLhZ5y/5NHyffLnvr5jR/RVkWuqSzs1i
RbIx5zlzvcTkp7xmY+SU7+AlHl7luNG2/to/+H70IadZLLNZ4yNupubcZXck
ndu5OXme5VP33wD0N+0730NesxzcfHDzwc3X42bmWRTvipmLezudWVqz/MxV
4ubKopNfo5h5JdOZ3KzfJJ3pnJGTBu1cJMZ0Jup4ht/5/h0oXbj+kntmXOya
cjGyLyc3J73RPb8dAycmTjkVfMxn8s24eVVz9vciac6+DvnX/d2dHrzCzSNe
Tp+dc/wYHV/P8pxXuDnxrH9W/LPH56TrP+nDI24mJ3ceDTK0Pzf1BUpr7Xh0
pLUyB3nGvTP+7XTuxN+uA6/2Pzo3a1v0rOi19BuVz1GcaeppubhZ80Y+2UwR
cqN0YVXiZmff5DVORW7eysRbq2NaeiVSLrWzZ9Katf8jTqf27Np88lR7HgbZ
WTp/ygEhZ7sng15sLic3X/Ie7M2812bnvTn5Gvx8cPNtGXqVm5O/Ofk15HcW
N2ueyhe+9MNPvKws59EcQT4mb/Nv/52/+/S9UVpz8Ydn8yb9s8tI8Aw65xTq
uPq+13cgeaH2h9zM3kLnGbKLvgOTL8Nvc1mnN7sXucufSJzI9XVbf52bZ7y8
hZt9f1d5Vv6MpNX6MaZlq3UpN69kacy4efR+J98zOTktd9Z2Rqe3/uDml6+T
fMOcc8hjol7s5+ZU5svuuNm3M9LVZ56Ujptd66zH5TFwfXVW5/gqbsnNHTuL
I+WDXuXmGSPP2Jn87P4M92noNcnNqThfkc/jtn0mjF/XHJrzwc0fkZs7Ht6i
LXel/kDvCSQvc45g3f+//snfe6p6bjFzlWZnk5tHvYnqPxMrJ272uRbu3ei4
Wd5g15lTf5Y0ufoO49yv2h9nk+RFJc9Iz9N3ZNKeR16O9Du+c3PHzx1ferY1
PQP1d6Xvj9zM5zg3S1/u9rPzcTi7uhei81WscPisRjze6d2rTJ3YeDW/ecXz
fC43c3/dnywuTr4Nv67kvxF99t3PQSalpuoMmbi5/s5mYM902HO42XlW2Rne
85iuLehHHu1P2kZiYq1fv8n58VRviG6LD5Nf1rl5i4+i81W8FRevlvZF+8j+
QXEmZ397Vkbqp3Pe5GvM2Jl8m7hZRV+5Z0b7e5d+O0gc/uT3CO/vwc33yc17
ezX25tu3YOdLGLnLpyu/ReJmn8PtVb5mcrLmcK9ws763xcrFrmKOkcd2JWuM
Wmpi587XSW52HTnlLzv3yuvherM8ps7Nvg3nLHF9YmN6MTq2Ttzc9RQmbh5l
T7hWTW6mbtzxZdqW7yfZf6Qzz9jZPze6XusYeis3pz7AdOyex+KfMX//V7i5
++xQV06fbfcl+7KuN9AfY1ZGq1Nbb+BIb/YMi+SrSIy8moecuJla+CXcXOdR
yxP78jXkz+A5cn5O3NwVf89P5R6EGTffi558rv7M46MPW9y8eh4SbyZ2Jje7
3zxlYHiOc8fN6X1M2Sn0amida7Hz3sx7TW6+R34+uPl2dW1edm6mxuy9gvQ/
c7aguLm8Gsy428LN5Of63p15BpLfNrG0zwtkFYu63uZe0fr+S1yb1tUycnNi
G3oz0mPOTs7NyfM88nTQt0LG0/Op28+4mbd5XeI+DT2Pr6XXS78RjDi/y6Bb
4eZujgt/56hyz885xfPOz1lad4WbOw9H8lbo9xJmxniVlkyfBTVk+i1Kj04M
7SxNfnSuJpd3ecOu7fr9quJE6tEjDu44tdN86Vc+ZTHDY5zY/8VcRGPoETd3
ry929uf7HPKZnq6ST3nEXJ3/InHgPTLxFnZ2v4K4WbrtiJm3MnriZ76u3peU
1+d+51c+DfN6iI29J9P7O52pP7rmfHDzwc3OoL7sHHb+uV/9RtsPyLkoPpNb
M1B+/m/9lVMuHT3MXTnH1e367ljl5sTMKmfF5C/tuFmPdxkZSTPmetTeXKtO
z0/9hc7NzspVtZ3EzTo2/XV/M3Vq12STf7zjZnKy52k4gzo3++OeDzf7XcG5
ubt2Sp+bETePdOfExDMv82g7SVNOWjL5eLRu8jw7835EbqYO7TPBqZU7H7/w
K6N0fOkcVNU1CnNEZrybtpF4fDY38BJuHmnNezPwJdxM7blmUCfv76Ue4FHe
BrnZ+/aYn6Hb8mx4z2DXb6iMOvpDyM2JnT8qNzs7783K98TOe7PtW3HzCpdu
ZWdpxewHlL6cNGfyc61Lbu74Wa9VPYWJJ+o7Qhw16gnseLnjLPqYxSuuRbve
S9Z9+p6EHkUfhrOKvjMTD7/I0zD/M1/L/dfO+vJ8dNxMLv5nf//br7h5xMwd
N9PvQL2582/M/Blcx9/bVT9OYvrRcY0q+Ta4n4mJt+RnJH9zx7sqfS5dY17x
caxws3OwWNdZceTfWClmF3u/XTEhe+fIvmTP5HPWY9pO4slzuJmPPdWit9m5
eWVG9ui8+bnQzJWq6qWuqterksf1Gtx8aQbD3pUY1nl2xY9xCTe7vzqxs+YJ
utd5pE2nPGjm3lGb5jqcv/1RuZnsvDcnH9z8NkVvc8fKP/Wt71zMzVWVN+ce
DS/3QhdHK19D1e1nPcaewCrNQKnviRHfMJ8u8XJiLXKzc5yybZ0zyMHMWeX3
amLilKchzvVMjc7zIbbScxI3dz4Nvha5eZTB4X2X6Zx2fJy0Zi6bPS9dE7mG
7e819zGtu5WfpTt3mvYqI7vOnPIOR+xbxc/IjJs5N2fUr6rPl3r/yMvOhF0m
huurnVch1UnffmZUsZ/8I+JiciY9FOLf0qBV4mZqsmJIcTVnFDLbwjMunFW3
cLOOhR6tVY2Yx+qs33Ez16mq463XepEBbFy8ws0pL2Nv/r0WN3cMfSkzz14r
+Z3JzCxys/cNnnj6eYZgyqIjJzNTj9x8DZ/zozP0vXLzVnY+uPk23LyVnakT
V38f/c3UmKk1M5+u1qvnjvYx5WkUU9T//+LmKs3dHvkzRtzc/a7vLENu5vef
MzC52b9T9X0mTvGcAedmLnPGcQ1SbEQNOfmG3b9B3u76Ap1h3cs80vDd35y0
4+4ahmycuLnj4MT0zvojVp+x81avhrOwvy/Slv0ztcrNvIbSNlLf38jjwc+j
tNARNytDzVlSzxnpzdxGx9riZPEt2VnH6CxLTkysS22Xr6N/szN/s98feUvo
b17l5tF8bN+fztOhnsARN5OhPjo3b2HbW29fs8KZ60HvhnI9mKvdcfMncHMV
87fd2+G/P9CfcunvCXuz7zW4+d7Y+dCbb8PMK9xcXoli3uLnS3oFxc2av51K
TK2ZgrWsvM7cx9oPsnxtl/NOqsTKX/q8vEqZziNeHmmaXD7r19LcPvZV0ZPB
ks7M725+Z/vzqPXJkyFW1twTslLSDpP3QsV+QS/OvNB6I89E4tFRRvasL3Ck
AXsPXqcLu3bdaeEd5+q91mOrXg3+BjIrZ2Rn4sTNriP7NZs+Y+l3iJGe3K3v
13FJM36v3Cxt2RnUedbzpZ1N0/KTJm7n8KSP8zwscDM9GK4/Jx84PSq1/oyb
V/OZH70ncMS2vCa4FjPP+Fmv5fl0noNH5vVZjVombnYPRpqrIl+0+gvpgT64
+bG5+eqvfQeMe6vqegJZNcPkUm6mVyNxc2VoVNGzUeuKm5O3uXhe3Pzk4Xhm
ZNUXvvQzp9v1vSZ+WdGZ/XH3DVBnTb+jyxOh72+xhufMpr775Nlw3iY3u3dj
xETyWJN/eSwdN5cvo55LP/ds1jbPoffr+bL03I5Nu2uczu/ccfPsd4dOZ07c
nD5bI5+z7ie9uePmzieRPiv+2dAycWXXp1ePn8vNM4Z2zy/9z+LA5F14wd+h
xMk6lzzG5NOgBpu8Fc6m1GAv4ebutyXnXL+G7q6teT47hnZu9nNHVmY2nbav
HrE0z2TGze/N37wnm6v+8Dd//ZVnIzHuiaGDzzl5NujH8SxoVb0Wufn0e8Pn
19Bn4iP3CD4yO9/kde+Ab2+pOXfcXFxadQ1u/uqnLz1xcBV7A0eac62rWShf
/okfeip5nLVvfI3EzV/55q+c7ut7wX/39/uJs1jqfyNXUislQ4ubxQDd96G+
Q8k05GD/rqWWTI9z8mnIq8G/HTenWdrkZtepeX6Sv7njZu/1c26lB3ik5TrP
Ug9O3OxeD9eY0/s90p+36M3Md+64eTRzTxoyr6PIhrWc/l3/XWOVm/la/Cyy
P5XrjLjZedj7Arnei38XweecfNPSgWuZuFb/7vhvj+yYmJieY3/cteiUsbHC
wlu4OZ5De4xacdKSXzF0eA8SN/O+eIm5ZJ3+POLm96g1vyU3Oz97P6L7mk8c
/ZlpmT+XeNk16FRic603yvA+16uyN/ce3Hxw8yWas0rMTG7e6m8Wg1fWRXGw
ZgOOspzZH0h2rhr1Bjo3e4mZE/NQ4+Tv9omd0oy61Lfl39Ur3Jx8zOx94m/c
zsyJm927Knam10Jc3PkzOm72/Avxd9J0E6d2s/u0LXkbar0Rl448M3491PFv
5x3pNGzXjrdwM/sFR15n+S6oAYtT6cHQ52OFm+lddXb2/EPe5mfZWTt5K9yn
P+v16zLaRj4OsTFZX+xPdq7SeSdPKy/D+TTetn36hd/4zouaeSXIzPz3T12a
t1e42Z/L+0l/dlYma3fcXDzEzDLx88zbvBc3k2P25t1b8HPHzSyfte16snue
X/QINpkb0qA/Pc/n9vyObl7k1vd9b/b9qNx8+DQu15zJvOWRKGY+l5tVpRWL
m1U+O5B6M3M1yM7F38XxqSew9GV6M1KxT5Bc5XkK7ptN1eUdqO/OuaT7rZXf
d1XOMs4+XC/NC6QW3XFz8pR0WrOz9Qo3b9GJE2frfu0bvcEjbp55rbWu3uvE
zd7f6fvo7/vI80FuTvvMbOmOn6kxj7i5qrzt+rw49/K51ImTF0O9b/Ql8DFy
d+dJfs/cXP9evX+CmRxVvkyZPpFn8e97xM7SzVe4ecTx3o+c1nFuFju57nwv
3Jw4Zm/OfQt+/tJ3/uyrEjsnX7PeN2nPM62Z+rK4WZ8B9gmmz8I5fZJ7s++1
uPle2PnwN9+WmxM7ew/eVm4Wb5Ob5W+ezdx2zZlV7JyyPUbcrMf0fVffP65H
pt/tmafR9W8V39DrLC9EsSv1YbLvyNNInul8GloveZxZrg9rmdiaDLjKzcrU
SBqxtPgVZqa+m9Zxvu625V4Rn5+deNU18LQtL7L1KjcnrblK51C3670ccbN7
NXj7xefiecaIPBnUqv0z49wsTjyXm5MGffIuL2TLJU7tfBrMf6Y/o4rLUtHj
8MpzDd53zZ7/Zs/hZi3jtftIj07/5rl/K96MruTrdnavou7sWc2uNW7h5ltz
8kfhZrJz4uYqeWtSfsZJd37uB1zxP3N+SpV7dvyzcW4u397s+1G5+SavfQds
u4fmnLIrVuegqF9PVbo12ZczBMnNZGlm0lVRc+brl29DXExu9ttk5/rOT5zT
5Zv5bGrv3/L5E2KNxAbJn5H6BaUbjnoDyUTUlJ2bPZfBuZkZc2muRuLm5F+Y
9d05N1MPTt6H5JdI2q1r/h038z2d6codNzs7y1NC7zL7BBMzr3Bz4mfXm5NX
t+6nXr5VbnY2T7oubyftuHtspDdL/326Fmg80Imj6zb1ZWYuu8+5bjNHYvRv
T/1+zrrk5ZXy/uQZN6dK73Hn5ehyMkbc7D2T2j96MZyNfOZc9zv9tbh5K8fs
zbZvwc0dO6tfkL4M+pt5LUSuTj2BnsPh2jW3VcvF1GRn9TPe4n2+lzq4+eDm
LdzcLSMzV/1//+//GdnZOdnnccu/Ucys2/I4z7i5K7FzFX9HT74MsiLzM+gx
LqYmDyW/BdlE323pO1LLXTvm96M/Vjpjyu0VJzsLa1+lz/nv9VzfPc7icc/T
6LzNnZ7ccTNz29w7kzzp7i9P/gzXpzmrJnlGOh+0Xk/nNPG6+zI6zZn74X2C
PCZ6neV39vd4hZtP2u9v/swrXqU+XeWvnfwQq2w881uc8jKwX+k1PBfCrwlS
32DSyfXvr+PRc9h4dJ0+KrJ02p+OmxM7++Mjv3WaM564mRkantubesxcgz64
eR92fsHNz5ryiJtHno3EzLxmUs+htiXfRu1H8bLqvXOzs/PezLyFnQ9uvh47
e7YGfcWjku+jOLnqz/ziF0+3yc3yOZOb5XvmY2JlMbV4vOPmLaV8OjFVsZ84
jQyT5n3QNyxu7pjCv+/c05x8z+5R9fmA5N3i5lFPYNLFycZ1PNSoEzfLx+Ez
UzhvO3EzNV/1xM34tivya/Ip++s7x4pNkzbNx5Pu7Iyd2Lrj5k7D9u04V5Oh
V7iZ/g3PYkvc+mIblklRNcreeMHiAx/Ge+Tmc/+/GbGza9vOujPNOXFzmiHO
5cnTfA438z416eK3c7j5WhyzN9vempv1N3mcT7NpAjf7ezabK5i4uWNwcbPW
3crNj8zO98LNe847+ejcTHYWN5durAw4zUNJ7FzrfeFLPzzk5tQnSM05+Z6r
/vjXfuyVT+QSbtb3sf9eT77z7DUuFzfrL32h6fdf/306eTW639LFz64nct5J
x8zKZ/b1nMt8Poq05i6LLs3Zdl05cTM9wmTNUT5F8lb4fqzozZ5V59zM64mR
H4XbE4t3jDxiZnFyx830a7CoAzNb2/tByZHix06TvpSbRxp0p1OTrWcadvtv
6JmZU08d+VrbSPltzswd516Tm93HkXwhVZ7d0f2fMuJm/v/SzTwkN3fe5RE3
s86dI3dw8zZ+7rwaVc7N7rVJvPw7v/uDp+oYOr3XiZs/Wn/gPXk19mbnvXn2
rdm5myHILLkq6b41j6Q037pd6xRPi5vFzixnZ26TvmefjyKGviY36/sqsQo9
G91sPDKNfs/m9zd7473n56STNb/LusdjNItCWQpa7mzb+ZbJzc6LzsbUmbU8
aa46V8mnQa9DpwmPPNHOsc7rnY5NzVfH2/k/6r4zc+ffcP2eHo7E+Ok2ubnj
6/Qbh95nv1by95lzsLdwc8fpI4aWbu1MPWLh9Jl3LtZ20vyU5DkRR6f16th0
e+RbvjYbr3Kza9sdR3d+aP+/hkw84mZtt16P7FzsxZl4nPFc1WX+buHmW3HM
3kz7Vtyc2Plrv/b7fYHFzWRd96erP/DnnzPmnJu1fm2jlo1ynr1/8ODmg5vf
e4mZu1y64uPSjsW4xbBk4forbv65X/3GqWbM7H5n3aZHg9xc++D7dul3FrOd
PWOt05qdm8UommHG+b7J19xxc62XcsQSM9On4Y+75piYSts59TM++z2SF8OX
J6ZULge52D0LYtN6XT1/xs2JKanvdu9L56nu9su5medKryO9PDFr4u3RPuo4
1HfYfbZ8Gd+3VW5OOjHvU1dWH+yoHzBtb1RJY9bnndeWya+RWPuF7urzShpm
5ozB0m47P8ZbMnPi5xVudoZO2XYjn3Ni5sTNzszyLGtenevOKVchcfNbscze
XLs3N4t56UOWNuzczOXuvfFcuuSR5jqcIbiVnffm30fm5q28fHDz9fi5m5Nd
zKpcC/mQxbpi49KaNS+lyvXmmWeD81F8lmBxc7F56dvX5mbmsfH3fvfxJi2Q
3JyyaFPGqmtk9DHOuJkeDmrO9D933Oz9bHpMHo7aX9eWvWr7if/ofxC3Ou+K
D52bR7Oq3QPhvogu36PziyRuZiaGtkVPuXuidR78XI9+l+iq09O79Z2b3bO+
RRNORd8R6xxePrj5OvycMug7btay5JPWuesYvM6N+LkqcbNrz+Sr1dkXBzff
lpv1vtBr7Ppw4mb2+jHnOXFzpzuf8ja+/62Dm9+AkQ9u3r+S5ixm7rhZtztG
Ln7+7rd/ZLP2nGZwFzuTm/0754d/5CfO+o4q/kk+WfcsODf7b+b+HZ24udOD
uLzzN7umTHYm5yVdecTC5GZn69RP2Gm79O6OuNnPrbOtc3Liy/QbQLo2GHGz
1mFOh3Mz+di5mQzJHAr3b3Ss7F6NjqM7bvby95y8q/0Vk/pMb/LyVm7u5mDP
sptTvkfibX/s9G8GM/CYqcbtOo93vX978/K1Wdq5WtcKo/Jtr3Jzac+e3bw3
M390biYzew7GixzBATc7M59800FvfrXtz9x8ZGrcn7Z8cPPbsXP5iWt+iYrc
LK3YeVnrFusqi27Ezcxspk/D56Ewhy5xs9fs++gr3/yV3/v0tR990lqYHeHe
DfKduIY5FuQV54iTZ+P5ez7Nw61lXWbGaiVudk9G8jpz/8lK9Hh3Hul6bJYv
l/rpyIYpX47P5TVLlztH/7Jzs7bL1+FcG+dm5lqTm/UaSWvmOXR9Xud/hZtZ
6XcCvofOvp1+zOst5+bE2LMaZTgnP0jyNHc9bSp5R5zNX/kSrKfAuZkatbTU
R+HlrQzdcbR6C1d4ma9Fnum4WdkZiZv3ZqK9ufatuNnZud4H9zUnDwb1Y8+W
c26m13nk06i5gvJCOzd/pPknj8TN197fvRl2L27usjXIwsyPo1eD3CzmXeVm
9zWTm1XK8SgdPH2vbOXmKnFzFTmI/JL6tpxVyRWcudDN1nb/xsiLwfL52ilz
g/kY4qKkGVNz9t/5ya28pnBvgvjTuZlz+ag163nem8e5JO5n7vrluuW8/nG9
2feJy6gZp2PtvBAjX4tr0h0/+zF0zJxqxM3MYqPHw/XyVa9Hpzs769KH4Vzd
9fiNtOlTxjmuSVNemz+3mPGR9OVr8PO51XFzYmj/Hd65+h6YaG+23ZObxbjO
y+Tc4uM0y4Z9fuRmr5StwvWdm1fyVfbm32tw880y3q7Mywc3X19zFkMzW0NZ
GuLYjpvLiyxmXuHm1A9Ij0aVfNPyXHffKSvc7N8XP/WNP/lUzKabMY4Y1rU4
/63audmz57Rspicnbi5vc/J4OHc7N3tOs2vTeg4ZlOu5p4Ueh27mNv0Z5Oak
S6es587D0HEzZ2+7ru0s322bzF7r6xz5dQlZedSD2e07PdbU1We8rHVW+Faa
csob5zHMNOaOnQ9ufixunr3GjJtnnHwuC3Xf7Qc3Z24uLj31BP7gF0+52+Lm
1LspJiY3p7knyuToZgomn4bnaqz4dw5ufnyd+eDm7NVQffXTl15owOV5JgOL
m+vvP/qn/3DoZ55xs+c4i5lXuXmkP3ffJx03Oe/U939xK+eqJY8nf19OGVEj
bnbvhuc8O4Mnbk7eiu6+PBo8fmdl94Jr/eTJcC1aj6UcZWnbeu3Eta5/j7g6
cXPyk5BnfaaKP+bc3HleUvaxjjl5MsjNzsTJlyFWXmVmXjvNfO/ncLNrz6kP
sPNmLHEzWJn/pnym0G//nb976m+7h5y5e+Hoc7a5ys3X5J/Z9/zBzq/Zmdz8
E3/z3zqx6iw3bpbPzOWfkFWX8lO0XP4O16i39AiuvI9ctjcvvxU337vOfHDz
N9psOnHz3/7Nn36qYmbxLjmYLL3aD7jCzaqv/It/YNP3whb9mbrz08yAz2zs
GrQYQ9x80tHY3x/6orp8KM4KLE4WB7vPltqyMujqL/Po3POR/Lgr5f2BiZvJ
3M6q5Gb3FOu268LOzXqMz+nKfdPuVU8auM8K9G14f6FY03lRvmc+7r8TjLiZ
/Jy8Gs7Nyd/cvY/X4OaR/5kzUqgpJ5256wtMPmnq1Z5T02XViJnvMStjD3a+
ZHsr3HZtT8bKd/2lfLM3696am6uoNct7McrAoCeDy7ucZmdm/WUWB7XtLXnO
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
T0M+5Eu5Ofk1xLBiK3HZyOeg3/nFUlu5ufNfkKUTN6snkXycvB7MfEieZ+dm
nvcZN3fZcMzZ8MdT72DKM3ZmJDer98//psxmHceIm+np0Pqnvsvn9+3pfH++
T5Z0bk77TZZP1xndc52hZ9ycfktgkZfJxORYeSXIz7NcDZ9Rws8+WVlefbFy
0pj3ZsiPWO9Fa74VR+/NyiNuFjuvcLNz8cp9nxO4lZ1nmvO53HzSmsHDf+If
/29PxfuJl8Xa5Q2vGjH0TCs/uPmoETt3unMxc9V/8l//zei96LiZswb5HGVp
FD+TIcSnxS01Y1ece21uFstSK3VOcbbxjIKOHRI3d75latD0XMx05VGehrOz
81WneyafRqcZk3ETNzNfzrmb2+Y5ns0QJCPzPrnZ961uU/8V00obrr/MKum4
mT6QWT9gd7+7XkjbHfUGJh+za8nucU56M/k4faYObn5f9RbcvDcvX4Oj92Zm
52ZqzuJmMm+nE4/8GXy8Zm5/es5yHvUZzrh5pDlvOc/eB0huFjN7veJp80KL
m1+wdfBypP25Ba/eOysf3LyNm7t859KdVf/on/7D03yUjps5L4XzVKgzi5ud
DdS7NePmVWZOXg19nxcfpdkYiZn0+73YynMwOE9Qvgxxs2duJK15xs1diXV8
/7Utz2+mtu/cTE8Kn5OYT2xKT4Z7NFKRm6mfJk3auTNlM5OFkyfE+XTEzXxv
6v3kvvn2V5h4ZZ1U9f65Z4jnbcTNqTfwHG52b7P8Gfxcd7l0YmXPYT6YeX92
/ki8/F7YWbMD669y6Lb4mIe9feDmc55fnmvn5hV2nh33C89y0Jtbhn5m4rot
rVnczPtPy0J/oe+7PjsHNx+1ys5JexY3p17BGTdz/ol6Al0XJTePZh9ci5vJ
K2QVsgSX67fwKurI5GbXnF8wSDN3cCsvj7iZ++/sRW7uegR5ThI3J7+Gby9p
x/7bQsrYmHFzNyPQNW/3ZSStuO7Lz5AyNXhd4dq383HHxOwTdD3Zn5/OffoN
YAs3u9eZPO187f6OFR8zPc9pZsnBzPdTH5WZtzL03szc6a7sEZxpw1v8yudy
8xaf8+wcO3fT0zxj5RdeDfdnmO580p6lQzc9hDoGfs734ua9mPng5vO42dlZ
2XRi56rybhT/kpv/gx/8xgtmlkcjzdyWLpr6rpTl3H0PnMvN+h6v73dm0c38
zezJSv4McbGq82l4Vp1narjunDzNW7nZ/bHOZe6V4eOddjxiZ3pfEgd7f1vi
ZufplXJulkeDWri/n8lvPuNmbtevB/w10rFfws36/WOkLzNPg/5m15Y7rk4+
Z92nzjybXXIw8/3Uwc1r7Lw3M7d+hc+1wsxba+ZtXpmj8sTf0J1n3Oznmazs
vYCuE1eJl9Ny15m7vsHyvrhW3eXU7cXNezLzwc3X4WbmOxc7V4mbxcw1d5DZ
zvJDcxZKx83uwy092LnZv4PP4WYVZ6DMuJn7ljQ/Zt+eOPk5t/bV7JPnOd2e
saFtiZlHvNx5m8/h5qQDJ6at6nTkpA9r3aT38lxy22Rges9rO/Ioj4qcK73X
8+G0Hzo/K9zsx0BuTprySI9O3JzyMpyX/XHddl05cbPryr6s4/CDm99PHdz8
ONwcPQvPLPlL3//WqznbMz149PiMm1cyPHRf+52OZ8bNqQ9QJQ4u1k0czce5
TsfNWlecrefUY2m/b8GwBzc/dnXMnNiZPueqYmktK4au8pkoxcyJmzv+E0+I
m0ffwedqzs7Nzo6e45Y0Z3IVuVklL4dnNZCb63nubxY7J24Wz8iXS116pJUn
TXSFm/25Xd6cl5iX3ml/nS6bgtxM5lzhZq3vOjNvD7kZ88zlGeL+Mvei6/Ob
cXPnG9G1TKc1dxl09OGPvBhbuTmtx4y5Ok/lp3JP1cHJ91kHN69x873ws2vO
ytYgNysLo5tfssLVI26u/ObiZrEz/dVp/VWvRjpGcbP3+jkXj7i5jkW6fOJm
blOzZLjdlE9X+3sTJr1zZj64+XrszB5BlZaLm8unwexmas/M0/DfjJPmXJl0
Pn/bvw/O9TprW7Xd+t6vfdBrJ24m6zk7u1+Dv4t7VoNyz1IuHbk5zTnx/i33
c3TMzH0fcXXKutjKzcyREzcnPky8XdvruHnVr5FY2fPp0u8I1G7J0bo+cRZO
5yflY6Q+xS4nW3w88miscHPnuxixMbXjzhNNL3itc2jLj1O34OZHZedH4eaO
n4vxxLxVmk8yY+dNvudfelk121vcXI/XfS27BTcnHVnH/sTIn68fToXrB/kt
kubsvmjxc+27uNnZ+VYMe3Dz49cWzTlVcXNpz8p7rhmCnCMozTnpzfRaitnI
dM7Nl7Bz952i7XaaXvKtJnah55nLOOPE/c6uKz/xNbRoMlzn39C5cy4iK5Pp
3Aewys3O0D6n5Jrc7GxK/tyiOXPudurt6zLmal9WuLljaJ3HUd9gOi8jbtZ7
6r4hvvf0MSdfc2Jnz9VI29C/w2OOyf3Uyv9tWu/g5m38vDc3d7pzFXlZtcLF
6fG6nzKcS2MmNxcf+zrFzXptzhCceTU6bq5jG/kvxMn1urrN88L+vlf5GRNu
ruq4+RYcu/oZPbh5Pw6+lJtn7Ez9meycvM7Koxt5dckSzKyo///T9/S1uLmq
Zhaqkobb6X1iDWZnaAbdCw0TfmfnYHo1OANlNkuQ1x7OzV2+HH//dw00zeir
qn2Tf9i5OXmfEzPfkpvlv6hytk3ZdSk3mdzLczzyY3A+YLffq+XXNZ3X3rmf
rDvy4nfsnDI1Dm5+3PL/+w5ufkxuJmOK64pN5TNIc7K3eDa0PpmY/gwxc7Gq
HlM5NzNbY4Wb03WBbstrIW7m9lP2XecHp+Y84mZyOPf3Fvy65TN6cPN+7HwO
a5+rO4ubq5S9Ib1Zc7o5X5ucQs3Z2VC/H19j/vYsZ0PVcTM1cdf1OB/CvSji
ZtebxcvsFUzcnHzN8hc4N3N/yX7OzvQgU+tc4eaVrI1uWz5PO2VXJF13hZvT
c2fcnD6P7oNInmTftxE3s9fRzw1171SJnf39Tp/Xc7m5Ps9P163oAyxffsfN
e3PiR6ktvrSDm98XN4sLpeumOYCreRti646zXWt+0njhhxBn+5zCFW5O59e5
+Ytf/8bJf9zl3c3YeWV2CrnZPSb8jB/c/DFqCzNfk5tZf/zrP3OaM1jM/L//
9l96qvJrJB4Qn4jxyIr6LmfGxrl9gp327Oxcr7eiN4t7mWdLPibXMkPDdeYX
c7efudt7At2n4d5cr46bk8eZ7DziQzFg4lP6npO2rHXFr2meyYibWcxw1l9q
zntx8+r+uwaffBodP5/LzV3eRuLmp/6/Z24uZq7lh858ew6+NjPfkpsPdt5H
c67qZp+Mev2oL3f6tLi4eFn1gpmftVl/3S3cPNKdya/us+7804m/9ZfZzq43
0y/d+bL35OY9+Xlvhn2EWuHmFXZ2hhY3a+625gw6nyTPBtlZuRd1+9J8jZnm
XCXtd8bNVdSKYyYdSuuJT8jNL7RlmyfonozRfdeceU4Th/nv/pyR0vmdk8ba
9QtSR3Zupud4lEOX+DzNQCE3u8/bM+NmXu575ObUx8j3esbO3vuXuFn3xc5V
xc0HLx/c/F54+RG52XXnNAulvBXJU+Hc7Mu9io9re75e4mZVabfncnPi5xFP
b73G8Oxn5+ban7fQms9l54Ob77uuwcyuPRc7aw5KsbOzSdfnxvUqW0PcfI0e
wS5jQ1Wvp9fsPKb0kL6Yf/Kc3TzjZj9uXydxc5ex0XmcydWJm50HE6+l+YKJ
Fbk85UqIoan7zvr8tnAztWT3JqdtUL9NLOu+5tlxsxfRc6Nndc/crBk+Bze/
DTffog5u3s7QezPyjJt9FsqIm11XTtzs2xI3uz+DmnV6zjVmbZ/DyivsTM8G
/dMjj8a1ufWcz+bBzfdf12JnVXmdK59OPYJJ06M26v4CMhi5+VrfQYmd6zXI
NB1jiTs4E2KFm1ndep6lMesLTNzszEym9Uo5Dp63wfudvjrSoqk905Pj/CvN
OvUJcrvOzP6+0K/BdZyb5d3W/nV6u/iYxyxGrueOuLnTq7vrEteo/VrN2dgZ
+eDm+2PhPZj52ty8N98e7Py6/61KXmT5KpLePMtzpj+aWRtk5p/93leeSll0
P//LP/LieYl5b3Fe0/Z4O2VtpN7AxM235NeDm99nXdOzoV5BcXNpziNu7orP
oc/y2twsdi5uLn7lftK3Sz5L/uKOm8XU0qfFJD6Tm7kc9FCnbOdOZyYzuR/D
3wM9znM+6hFMzOye5xFXk01r/+hr7rh5pDMnfk7c7NskW+pciqmTXuzcTEam
DtzN4k7atV+zdF4PrbvCzZ3erGX6XKWeQPIz88i/8s1fOZj5Qm7eqw5mPo+b
752dyc1PWW2WKSfN2L3II3ZOXmfn5hd+j8/cXH/53DSv+prndMVfk/oEi5W1
vJhZ82Sc82/Fsed+Lg9ufoy6FjvTr1EzuiufTt/LzsbSlhPH+e/n19Sc03ef
+gM1V1CV8hLEWS03U4dm3+BzvxW5uf4yx+6Ur/H5b+LmzsORfrdP2Wtitq3X
Ls7TiZuTbqpcZz7u3Kxlepws7Hw94mZn3c4PXcV573zO7HrBGVhFbtbxJoZO
+v6Mm7u8Dfd007+u254z59o8fz+p9epzpz7ZPbTmLf9m76X2ZuRzubnjxoOb
9+fkLdxcGrBy6pKOzCrmHTG0c7P3E4qbmRHXZThv8TbPvBlbPB+e7exeF8+1
EzevfPbfq9Z8cPO+3Cx25m19d1Ono/aWPMTktrrdcfM531vd9x89G6qv/Ok/
0uqHZA6vJ5YO3Mx1pDNTcyY3i52ZudF5N5IGSW2Z57fjZvdwOOfN9Od0jpQ5
536JNL+k9oFZGf74aPZJ4l3XrnluEje7Ju2/N9BzMiquu8LNZGey8go7jyr9
LqLt+udVv+u8B26+BWvvzcHX4uatDLk31+7Bznsz8owLpZmSm8XOiZf9/qfP
3Psp8LOem9j5xewVcHNVZcidw7pbvM2z96jLhU7cPPKVzF53K9se3Pz+61rZ
Gs7Q+h5WRkb6Hdq/78UsWqY8ulvkajg3s4qbVUkL5Oy1Ew8rX+OZmzu+pv+Z
Xg3yMf0EnWcj6c5Jw6c/oGaK637XC0jOczbm8qQ7k5sTh868F0kvlrbsnojE
kyN/Bj0M9F943jK15JH3Ygs367Fue2ndWXUzU87h5spq1jXjW3LzLdjxnvft
Hrk58eTeTLsXP+/NyCt6qvhZHueOm9UfqOWJm8nBrzjZegV9/ZlGPOPlpA+v
MvhsO4mRVzTu9Dh/o9nCuI/AzAc335adz8mmI4OmbLARN2s9eShukasxY+h6
befmf/b3v33iD848ITcXh5CdydjK02Cenfs1mLNBz4b62lImievIfl1SvFzl
5zxxc5ep4cw44mZxaL3GjInPKen+6vMjn/P13M+gc0o2Vh6e8/tqTsZId+c6
fu1xLW4WO8+yOOo+M+d0PVufv+Lm8jXL2/yIvHxtht6bgS/l5r159JHqnrlZ
POfcXPWUFffsqVjxNbun2f3Rt+Rm791Lc7MTs8405hE3d8zeLfftXkN/vnd2
3ps9H7murTm7duvZBN3vzdTGxJL1/GvMDlz9HvW5KMz6EO8oy9l1Pc3t1vrF
JOznc534lGmH2SkdN488zuwJ9N/zxcvJq5CYmX8TG9J33Pk19Dh5dJWbOy7l
88nNT+/Fcx42WbjKz7vYWVys/fP9pG+EnN2x8Ix7+dgKN3Mbyd+R3uuRlyNx
Mz36b52hsQdT3tO+3Kr25s9HrUfQnJ2bNV9a8zxWvBqpB/DVvJOmPMN5xMwr
3Cy/Nu/P/M4d33I7WzPtzmH5rcx7cPP7rGvqzc7NykkWn1CLHHmcn3r7n70S
o+/0W3Gzqnr4uL/i5uLR1GslTpOWPMpbLtYjMzvnpfy6LmPDX8fP6Qo36zhX
fM3Sm6kx+1xt13Gvxc3eR6hjVZafsi70uLz25GbfV2rQei0xr/uiXVd3H8aI
m8nCfj3mv8kkXu5ynzvPOu/756OO86Nw80epvRn0EesRuNl9zuJm9Qo6N8uP
TN+GdGTOCFzlZrGzehG3aM2uDWu2n/c8rnCzs63OgfPuyvkkN1cGh3KfZ56P
c9h5xM+HT+Mx69bcXN+VxS3krKSJSTd1bnamveQ7eCs3l4as/SUHMQs4MbE4
1+cAJm723r/k2xhxc9Khnad4W/uedE5y80qWMzmaLNrlW2zl5vRY9xzOEtRt
Zq7pueTKUf+hvB9+vmfc7OeLr1f3O82Z66d/J+nfTfLlbOHmurZ7K27emyk/
Qu3NoI9Y987NSWv1jA2xs/ubEzfPvMwzrbmq02JTTtwrrRkzsak7r/Iut8Oc
5hE3J480uV3bcB181MN4jZ7BPZn54Obbs/MWbk4MKm7m7/qpb0vMV4+71vwW
mnPiZumNZHtpl0lP5mNJG6b3ImnKnq/RzU4ZzUjhvsirQcbTMSR/gJi582DM
uPlSTzNfT9ug/8O3TZ3YvRpe0pvJ4FyfenPHzfQTuZ4981+MMkmoI69yszOx
3lv/N0XeZzEn/dZa895M+RFqbwZ9xHoUbk4sSvYUN+svZ6Io39mXjbg59RBy
zvaol0/3X/GyyriZ7Jy2Hf0Z4Ob/7v/+X0/s3PH8iJvFzqf7z7qz87Ozudh5
E6se3Hx1Vr2nfTmXnROHFn/q93FnAn7fkxGcm+v5l34fb2HmKs1FSXpd55fw
LLnR3D/py9SanZvTdpJOnSr5o12HdD8A2XnFs8FKDLyFmZ155Y13Xdi5udOi
07Z4DTHiZvI1NXydH21L/mr6Y0b684yb/TomvUfuB6GfnX2ivO/Xd0lvPrj5
sWtvBn3EegRu7nRXcl/K1vCZgudycxXzotPck1SJm+mJ2MrNYlrXmqk5J13Y
3+OOm1/sG/YveZ/P1ZzvqfZm4HM5Vay5NzevsPMl3Mz+QNfN1N/mv4XXc6rX
X1XfC7fMc045dLVfmuNBTzM5mvO31evXzftLy52bn5gY3ueURydudu251iEb
OTcnruvyhUdzBDsWvJSbO9YVN3M/XP9XiX1ruc/EJjfTL00+7vod+Z6xT1Lc
3J3f7lyN/M1e3bVNpzunSufot//O3z24+R3V3gz6qEWmegR+Zmax+I9+iqeM
jF/+kWVuTuzccfMsU2OFm1nud3Y2dX9K4mX3aoz05qjXD/bLK3H9wc1vx6XO
m3uy8y31ZmXDFt8lbk4+5/r9uL4HxMzMl73Wd3Pi5mJlZQ7QgyBuZp4bMwmU
TSduFrOm38vdk5y8FyfvczEZ5ggm1mYfodZJ3Mz9SVy3ys3UOmfcPPI5d75i
525xLnXeLj95xs11bhL7k8UTG9e+8L3ruJm+97R9fvbT+fT73TWOePtRuHlv
nvwotTd/Pmo9yhyUme7svuRzuJm5G4mbxc5b9k+9d10lbdd9xeqHpJ+i+gLl
0ajbK72B0W/d6Ncv2BkatL/Gub2Ce9feTHwNbhY738O+ncvP6TvTubnjCOfR
YhGfgT37jj+Xm5k/R25O++g84jMAdT/1C7qfQ5qxZzefNOVnbhaXOSd7H2HS
s31Z8tE6kyV/ADnQmdm9zSslHiXXUgfuWNO34dysfazz7Nq1zoG8y4m/Z9zM
/tXapvzNykVJPXkdQ/Pcuwd9Czc7gye/s29P5/zpevE5v/lg5ceuvfnzUetR
Zm93ujO5WWxbvYCaK3guN6csjeLUWYbzVm5OnJqYOXmiXafuuDnlPiefRtwn
8264H2SUmb43G78nbu64c2+vxipDb+Fm+YTlFSandLqzKvGy5jNck50TN2u+
XhWzyJydOQeQDOv5ck/XAsbFXU+guLjrAeTyrleQ+RkdN9MnMNKZnZvdf5D6
AlfZmcysjAuW+95Xt+nP1WtIE9Z70nEzdfnE2Dp/mlWtuTdazs/PVm52dnZd
2TPpRvkap+u7Zy+RZvLUZ7zO0a3yNPZmyI9Ye/PnI9ejcjPZmZpwcXNlO8/Y
WZq068vkZvozvvpzX2xz40aeiBVuppaszD1x81PmXPBEr+Qup1wPnbPl/drA
zWnZ3oz86Nw8Yub3zM3J5+nanHOz5o/UNnyu2bW5mbPBq7yfivvl3gf3ZDg3
n7RlzeMOzJxYmHp054M+adKmXY/0Zucz6a8zvuP7l9bd6l/259T+ddysdX0/
kv6sazItZzYduTmxsPwa8tmn1+H54G8HM26m76TzvkjL73wb7ud2ru5+v/E5
28XNdU7q39XBze+j9mbPR65H52ZxJnPpxM31t9hY/Ox6spadvNHP+RueP1e3
pf2OtOYRN89YtcvdEDeX3q39WZlbkuakzPoLV3TnrocxXUcc3HwdHn10bu6O
IX1/lme4vqdnXln/zmf2bmnOT9sybr5WLh25mfzbzTcha41moLzg32etzz0d
XvTYOj+TrU+cjB7CLhOaHpFVbnZN05+XZm2f0/c342Zx78gXTSbtuFkcnDJc
9BxmaYxy7UbcPPKQ63x3/hh9RpJXw5nZb1/Czf5v6hr8vDdDfsTamz0fuR6R
m51Nyc3FmbpNbq5ZJ90cQc/j8Ozmrdzs+9dlVyQ+7fhV3Fx/O83Zi/tB9u34
eLTc57TMZqRQe96bk98rN++9j1u4OR3HiJvJV5wdSC5wXZd+Dd+udLJrcjO1
5hE3k5+7ddyL7NxMrk5ei1csLG3ZNGZ/fJTx7L/3k5vJcJ0m2nHzuT4NZ1LP
iPPlI91aTOwczDnvnPnC80FN2XPoEjdrW9Kmeb6TL3nU88frEb2nW7nZr4H4
78g/l+Tm+use54ObH7f2Zs9Hrkf3OJOb9ZdabTGvuLmKuc5dL6BnOBd/y6eR
2HmUlcxa1Xg7blbNPBs8ftW0DxDZzZ02Xtvx42LGyWzG4N68/EjcvMKke+/f
VnZe7QvU79fkGHEz/RpiAOdmZWpccw6Ke0k0n4VzLJSfISZ070bSyRM706Mx
mmWSPMvOw6vc7Fkc7oF1dnb27PTSkU+i04NXfRrcPnVfacWdn7nbv8TpfA9d
o3aWJ0OP/CO83up05VVu9vcleT34mPu//f2tzx2vBVXy8V+bm/dmx49ce7Pn
I9ejcjP5lLO4nZtVzs0+G6Vj5ie2/szNo9yKbmZgnLW90SdBZj0x8AZu7vTs
1PM380HzHCRuTrPD/fO2iW9vxNp7c+Y1GHXv/TiHm52fE4tKxyVrpRwD18y8
iidn3LzlOybt65//9a+cip5s9zl3+V5J32PvIPM2Onbmulqn5sZI14y6sy9D
JW5OfWTeYzbzGfDaxzXoTltOc02cQ332CD0Wia87PZc+DWdwcrN/DpkZnZ7P
nLs6v3rteo80l33Ezek10yyTTqOecbiX+Ljj5vq3udo7cHDzfdfe7Pno9Z64
mRkUZM2qrk8w8TK9G8XN7Ndb6Q1URR49g5tLZ679ONX3/kTLu37cK17qzuvB
7XTrdLNceB5m3LzyOT24+T7rHG727096hhMvjLiZPKrlnjV7C71Z++v73enJ
zs9dH6H3DpKbU3k2nbj5qccQTHxab8DN9bhffyS/Rspm6GbYkfVWuXlWiZt5
7ulxnvF84mbyr/bR31t5L8jzKS9vxM3Snv36hD2DiYNH3pgRN8/Y+eDmj1N7
c+ej1yNzs9iZHNexc2nRYmXpzyOPxsnHYdycdObu/CW/xjmas7hZPP+z3/tK
y7IjXTvl2q36pdN6r2YhPvs9zuXmdD4Pbr7/ugY3p35A5+X0O7truMXMVcmr
cQ1/M9mZ/Fy6c7GF+MiZOPFz6s/qMjdSMdfuBRNzPeQ5d9wsbdo5OWnl4jb1
pyWu9prNE+T7vOrZYHXLVrhZfYH+PNe40zWc9yY6N9PbrvPL90s8WvtDVpZX
ws/n6ByvcrOzt16vinzMkt6ux8TNl2Y5782OH7n25s5Hr/fg1aDHtvP4Fjcr
n445dYmXxdfqCdzCzcmv8WLfzuRm6uDFzfV3yrqBoZV3N5qnnXwms+Nwbk5e
55nW3H32Dm6+77rEo0FuTpzs2Q0+u8K5WesyM6v7bt/6XZO4mfO2i53FH8ql
6Li5ljF/jOtJ62Vv1oibuz5B8vBofgpzNTjHjvubdP6U0zBitcR4fi10jv7s
rLvKzR1P+jY5OzBxM5/P3kLPm67PBrP+xKXuwbmEm7do0f7vR6/r3Fyf51q/
Pm/8Lefg5setvbnz0evRudn59EXumrEzmbl6/aoSO59ynp99EWJNf91Vzfka
3Fz1tV/78acSN5cePvJQ+LlgTnSnOXdZGd1xdJqz686dfqz7o/f3mrrz3oz5
XusSbpavWYyR9Obk1UjcTP1MmvMoj+4cbu60Z85DYZ5bV+Rm13PTzL/Op3Hi
asvIcG4eZdqJuztudkbWfiYPdMdtnlOnPjtfL/mbu/7AzltMPZvbdL5N+9lx
M70XekzsPyq+r7wGOYebZ9cB/vsF96/j6Nnn1LVo/Xs6uPlxa2/ufPRaYb9H
qI6bi+OkN8ufUSVuZqaze5zJzavM3HFz3T63P1B6s2dQi5uLg1e52XsLdY62
cnOnazs7d/zrn0G/xriV7rw3X77X2pKn4cxZ/487M5/LzfK93oKbO3Z237M4
lhm4tb+eVyduplZI3Vm865qzWFkzuj0vo8uWm7Gza+TUyeXnpaaZMjdGeqd7
oMXN7psYac9bNOnEwv78tJ8+E0X+lcTNPnfEWd2vh8TNPGf13qm/lD2fI48z
s2X83HH97jeDS7mZda7HeW92/Mi1N3e+h3oP3KzquPmJnZ/12qpi56f5KMag
nDFSpYyOLdw86hPkfm3RmpkxfdrnZ64XNyfG7TzNHTevsLPnaUR2Dj2CM25O
+3Bw82PUFm4mwzLjyr/XlemWfLDdb9TiG83dVp7zNTzOI44mN5dno3wiI26u
v8quSxXzNZ5znalPjrhZuRr0ZYyYmdzMc+rcTF0zaaAjnzP7CfWeyhuxkuuc
eu+2+DhWuJlMSW7utjniZuYMui5M7i1url5BenDStSE52c/jVm72fdG/xa4/
sPapPteqg5sft/ZmzvdQ74mbX7DiM8PRq3HSkp9nnrBHUNzsuW/OcCvM3Pmd
fQ7KKjsXw7uXRJr4KCfv1TlZ4ObEzt25HmVscBnZV585MjOZnMdzcPPj1CXc
rPy5TmvuliUGUCbBp6/96FPV7Wtl0nXcnDwb5GZxrHiZmjM1XrEleUu3Ezcn
r7I/5uuk9eXRUCUNPPljk7488+D6+yzdWey84l9OWvI5XuhU3Da1+hUWT358
acPK+Et+cWWh6H1JunTi5pVz3PlhOk725fKNlLe57h/c/Pi1N3O+t3oP3HzS
dQfc/DRX8Fl7LmZWRkVi5nO05sTN9E5s9TZTbyY3/+Xf+snTMXX7O+Pm2v6I
m1fOd/RthGw6z8rgdhI3O3Mf3Hy/dQ43F2soB5nM5RkL6rMSn3gesGtndVvs
LM+GfBu30pxnfYPFRcUd0pmdoZ1R0wzBp0J2s2dnvJppssjNVeRm17+luTob
O7vNvBozbnZ2J9+KUa/dS9j5O9zj0mnfrpVzv3TbPTl+O3EzPxt+vbJ6frmu
Xxu4puy8TJ7Wb0IHN7+f2ps131M9qu7sHoKOm5mvUcxcHudPv/TpNKfb54vc
hJs3eps5Z5scvcrNeu2R3px6+jr9WucgvYazs/zX3XlM/M2sEK57cPP914yb
U65yfQcr0zYxgbwa4hL3b1AXdW4WRzKf7hbf3x0zu8ZNbhYfdp4NcjO1a2Zp
vPA+N7nMT9vwuSeBm6U5M4+OecXMLnPPLjXUlZ60pIUyd5nMyeulxM1iwTq3
1+Rmn6XuWXnybqjHsNPlO252PwXfF7LyFk72bfM94/lybu6Y+ZbcfDD0bWr1
3O7Nmu+pHp2bZ3qzF7mZLNnprVuZ2c/hFm6WZ4Se68TNYufkbVjiZvCza8+j
8zDkZjuP3X4lbu785PqMHtx833UJN3uuBrW99Bt+5+sUz8mr8Vbc3PUM6ray
QzyjOWnO9GeQm+l57uYJesbcq7kn5ol2fzP7Ep2bndFcE5WWnhi3ir2B8v3W
eu6hFsM6Nydm9vWuyc9izvSZm3HziYcx96RjXdd+k0fDvdQrmeZJo9brqefP
+wCZP6f15aXS46Ns9IOf74ebu/O7N2u+p3pUr/MrZrM+NdeRn/Tmz1VaaHHz
TGM+l5sjv16Bm+v2X/jrP/lU8jmPWDfma/jsQMv5GPmcR9khfK3k/+iueUY9
gXq9Q2++/9o686S4uXhSjFu12vM16xOs7/fatrj5lt/XI25234bm+jkjO3up
t6/j5m524Is52xNu9j5D52bq0M5szmgr3Oy6tNjOfb/1/jqzkqWvzcld+es4
N+s8pM+i+zao9XLuiY5TXhy/Fhlx8yxjxt8n7wP0azfuG2e46Hni5mvNDTy4
+W2Y2c/x3qz53urRuNk9tmmWdMowriI/r3h635qb2afInA9xc3mdxdOzPAr3
OafXTHlyM+195T0Z7Vu3jr9OfTYPbn6M2sLNYmdmYOj7Os2Qc9+zvM/kK+dm
Vff9fuvvrKSxJ305zUhRloHPOfH7Kbs5eZ1H5ftEn4brwUnb5G0y8Yydxc3c
XmJW6rvpszFi3/Q7xurzkg7dabm89qnPn54nDtU2Om7m+36OT8M/U4mnqW+7
X4MzT7TNWq5/Z/RoHNx8P8X/a2bvz8HNH5ebX/Gy66iBk73kz7gFM1/KzWRn
L7GzuLnK+/B0LDGXzvg4sbM059Sjt/LejNh5VCl/TnVw82NUpzmvcrO+tz3r
wFmZy8nZ0uO2fMffWuvpvCmqUYZu6ufTjL8ul/lVz+CEm0dZdCsM7Lycsjg6
zkueaq7DvtAZN+u3harOezFj7pGWLX9JVdJ6Oc9kxM0qeqipOfN8bvE6+zyd
t+Dmw6exf+kcer52ep8Obv647BznnIgJG33ZZ4Bo2Sw34qrcfGYWXcfOuq1j
6vzJI5+G8zK9Gt0MwEu4udOaRzNPrsHOe/PkR6oVbqZXw5m54+YR6/A36VpW
3w+Jm0ff9bdiZ9ec6/jcf5GY2eeWkJ1XZwFKf17hZq+OZX1Z4rzEffI01PuT
vBr0rDg3k51XPg8q8atzczdbR49Rn04+DD9+fnZ1XaP7dY6L5Wt5ynnjnMBU
6h/Va3UemBVu7nwZ9Ddz3gnfM/1uc6nOvDdnvrc6uHn/uief89LMujAXT7lz
1JedpVfz1s5h5q4vkB7sLexMfnaWFkOvzN0ebT/NZenmopzLzn4NkbjZz6F/
Pl/xcPO4r7s3S36k2qI3c0Y1WW7LfAvOTtZz0vfI7Dv/Wt9fM3audZ2dqfnO
tGcxdPJrpOVd3gZzN1KRC8mLnlnnXg2tn7LqXPPVffd5i61dA17xaTg3y6dN
z4b8v11OuLJblN+SuJmzWF7MRodPxrNR3G9DnZdsew43d57o5G3W6yZudp7W
vyv3ARzcfB91cPN91Ftx88p8jRVWdmZOuXIqbXd1H++Fm0catGa3pH48937X
8+PM7cb/vOKn8PdyxZORMkx4vkefz8TLM8bemyU/Uq1ozc6T9f95fTeLKcq/
IH6esdIKNzPHeVUruzU3S4uskuY4YueUl+G69Yint3Izfc3ksNqXxM28L7ZM
mSH6TYDcvJodsepPdn+Ga+Cpt67jZpWfB77OC26GP8b9MsosX+Vmeimo2fv+
JkbWsa5kNXM/0mPyaBx6832W/x/TvVcHN78dO99aQ078PJxJ12RmsFxjpt55
TW4erZeO/Rrc7Oys2YEjbq56Wuf5fHHd5OVIr9n1+W1lZufndL7P+ZzWfW6H
7Lw3S360WuVm/n9OnVDzh+v37dX8BHFz0l+cm1e+96+pBblXQ/2KdYwrWrMY
NOVrtHkbKUNjQXuWnqwMNedZ95DIp+x8TC3UudkZ1XlZ2YP1OLXvxMR637vP
hXszOm4Wi1Jj9vW4n9Ku0zXHjJvdY+xe43Tbtf/OMz7KyTi4+X3W6Drdz/3e
bPkR6trs3PGV97O1/uWQmZFmm8y4+Vxf85b107E7+1+LmzVDvIrHvFJ+Xjpu
rtfasl2x+shD0uVnrNTs/Tu4+T7YefT/O8t9zsqRG3k2POO3/vp3h7h5NHP7
Vt/t3XeZSj4K5+a6r9/n9Rv9k5fluXeMnJzmAMb7A46mp6DjZteSOadFnDzq
JfQ+wcTResy5mezong+yb/qMJG5OPYzKYvb97jIPpce33Mx6nguo94387HNG
0gxsz+rje3EON7Pvr3uMv99083wOZr6/mp3zvZnyI9Rq39u53Oy6Z8eXsTZw
85Z93NLvl543OvZrcTNZtvzN4mZ5nROrrl4vrPYuzpiZfN8x8yhDY/U6bpY1
/fTcO+DIj1bOzTMfA28zR877BJOXlX5a18bEzZp39pbcPGNncTNz35Jf4wU3
mwcj+aSfuLfJ0WA/IbkucbPmk9A/kHoGEzen0rE4Qzs3k1nlH+Ys7rRu3d/y
24ReM/UoknlH3KzfC/y9Op1bu35RhoreL84mZC/hKjeP8jLk7Un8rPPF/j+f
JaNa/TdzMPN91MHN+9e5DDlj55H2OMpNG3Fzp7Nu8WWIt849tpXjvjY3qw+y
Stxcf8/lZjHv6PXk+Rj5L170HYZ1Uy707PPY8XJ3jAc378vMq9w8YstiXs3+
G3GRvvO7vKx6/kgvS79pXvv7LM1CYZbviXcsz1c8R6aTnznlYmheSZux4Zrz
MzeTTWt5/eW+SYN21pwxXPI+k3vJsymvI+VeJG5236+2474Ofm6c/Z2bVd5L
yGsIP2bp8OJkafqr3Mzl9XuDzqPmsndeZlbn/SE7p1knXpf2AR7cfF+1N1N+
lDond+1m3Dzwa6Qc463MfC4Pr+ZM+HFdS29WiZ3FzTwf6fogvYczbvbbrjGn
4+L7NLqecXbmfe7n6nyVg5v35+eRFrLCzVXi5lmOQrFA8QYzoekpTtvufn++
BTf78dX+iavISs7N8m347/D0NCef9Ks8Z5svmHwazt7Uikdzo1NvGvVRsrJn
RtAr4b16HTeneX7O4NofPa7XS9ysdenXTt5v59LOLyFu5jn27O7THJvn9zv5
NOp98vPkjEwtn58NZkTvzc0HO99H7c2TH6muyc4r3NzONgFzjphpCzOv7P+s
n3GLB+JavYHkZs+kowbfabud52HEzSOfNRk5rSsNeqSBr36uZtx86M37V/I3
X8LP9FpUpR4xMVDHzVVaThYY9dHswc3FMc7ByuftuNlvKxdaunTyQdNfPeNm
+Ui63AtyccfNen/cS0x9OHFz4lJ6lzsfMznZl3UeZj5GfnR2F6um/ZPWX7fF
zU/v8/P5P+nQz/kn4mPXoemzYK6GX69s4Wbv/fNj5WP17+WaM072ZsajDm6+
N4beqs+OsjQ6hh71FM7Y9RzuX82M2MLp1+ZmZjnTR7HKzTx2auKrr791n0e9
iSufoy3vw8HN+9a5zNwxtLQvcTM1R3JZLfdewOKA0qzT7O230JzTMTk3UxPs
uFnsnLI1Om52j8arfGf4m72oDZOnydTOzR0vc9n//F/9c89Gx83KtiAPcz3n
5MTN4mL3cJCZ/bZYVP5q52Y/JvK1NG9lR5NjmRfITDrxLNdZ5WbX+MnHfN2k
OXd9g6kf8ODm91F78+NHrWty8+q6W9l7KztvYbMVnXMPbla9yGd+1uW3nO9z
96XLgea+jX4n2PL5WX0fTr2Bd8CQH7FWGXK1PFeOM7jJEZx7oR7D8hJLm3YW
6LzPt+Zm+pzrWoCeC+8P3MrNiZl9fmDqC0xzA8m7iZupIYuHkweXRW52H4eX
a73O0+k1/LeIWo/9dV0OnXNzyq9zZu3mW/JceTbdjJvFzrUufeIdO2u//HcL
5+aVTDr9pnPM035/tTc/rrLl3vvyVtx87cy6S2rFV7KSzXDyiMBLfSk3p765
S9m5ZVj4imf7x+N+sa3Qx9h6zM2HTm7W7S3nrrs+mnHzK835DhjyI9a1uTnl
IBfzprwD1wHJzWILZt+l3IBbcvMrLf3z/tXxkJvpbVYVM9XfWp64eaQ1d9yc
5nF3M7eV+aF9S+ddVWxc5Uyr5Z77JnbmOiNupt9ZxTklnj1HL0+Xk5E80vos
+b6IYekVofbdcTO9zvRniJ+dfalZa1na73pdzvPmbxh6X1fYmb21h9b8vmpP
Dt7CZVx/b+Z9C25OPPrWPH0ON3c8FnsUB9kdK3x6TZ/zyCvhfZPdvr063hEj
rxbODxma65S3ZNU7vkX3P7j5PuocjtxS4mb/HZ8aHDVA+mrZ8yXv9K08zivX
A+Jmn+NX7NNxc5eX4X7nrdycNGfmNStzg9zsXOrczBmDWt5V4uakPTsfd3lz
zs3Uo5PfWfnRo7zwqhk3cwY3udk959KWU1+gL3MP9CXcrGsBXmPqt5drcvPe
rHjU43Fz0p4fmaPPPXZn2nP59xJGnnHzq37ERUbs/NYdNztP3qpS5gj5eNZ7
eVFN5n7zNRMjX8rNfA/25sePWrfmZrKze1DJU/Sechm5ufNxvhU3e/8idUdy
M32q3uvHPsAX8wNtBkfK2egy7cjNnvHccbOzsXTqxMUdN5OT6f1IHpDEzK4X
M7/NteqkO8/m7JC7ndv1evrM6dyLV+u80afB2duqVW723j/ed18zt0c9m57m
+reUchwPXn4fde+cuIWjH6mudezXYN5r7cel3Oz5aiu6c9J2b8rN2M9Xsxg3
MnPn45hlaI/0/BEjJ+7fojvvzY8ftS7lyS2sKb9GquSVdU+q9OY9uNmPp7Tn
lOMrbi5WS1qy52d0fMzZz6mcjTX/hF4NcrPPQBlx84rm7P2B7udY5WbqwNpX
z9XQc1e4Wev7nEqdD/YQ6nxx2zq/dXvGzVXyFHHGYPeece46Pw+jPI3afvJo
XKsfcG9GPOrg5nuqvVn3FtycvBpb86O3sPNbcPOMby/h5tH1w0peiuekTL0j
do4572XG0Hvz40etazHljDXp13Aelhe26zHTY7UvpTvvxc08nuJmFTlKfKZs
i5FPQwz1Yt52M2c7zYX2udEdN3OmYMfEt+BmMjDfV/mb3TvB7I+Om+lHKcZ0
XZrXB2n2oOdejLjZ85wT69Z9z8UQP6d62sZvfeMFS9P/Ti374OaPW++JEfdm
4Xs8J3tz8wt2HrFm0EJX/RpJw92VmxcYOnGzn7fVHsTuHI20aWbtpdmIBzff
R92KL8mZuq18jRE3ezYZ/c71+vJr7MXNrjtzHrf4idxMLqKHlTrzq8w5sfOI
my3T2WeBs5hTN2JiLZ9xM/n2Vtyc/DzkZh1TusbSuRE7d9zs25Z2LL2X7xG1
ZNec3Z+sXsJrcHMqz2g8ePn91XtjxL15+B7PyVtzc9ScF3wC58z4fqGlhl68
N+fmRV+Kb6/zFXfn+lxuTpl7zs31XH8v9ubHj1hvwZjOm4mdqSf6fDXyVK1b
r38Lr8a5OnriZpb7kF94msHNZCfO3njl1wA30+fMGSj++uJ4z5lL+Rkr5Xkb
4vPE0+wdVD/fW3IzM0C0vudvsOdO63kfZjEv5weew821XLcTK6e5Krwtbj50
5vdf75kR92bjez0vt+Tn1Jc28s/O+Hk1+y16jhs/8dXY+YrVHesKN+v+qH9S
58cz7TTvZdQXeHDzx+Bm15zTDGb/HZ6/qVcVP9yiP/Dc64CZ55l9Zs7N1KM7
HZrcnDI3nJvlyXBu5rnVPPBLOdp9NUlv9nWTHs3PQJcPXftUrH1v3KzsZl4z
jbhZ7Oy+Z2folOWsz9Wl3Lw3Ex41r/fOh3uz8T2fm1twc+clmOVidB6PLZnJ
0ZMw6MdzHt6Dl5PevDUPZZWbu2MrzXl2zvdmyI9Yb82ZzpuuPYtxPCPCswZG
3PDWx5PYmexDbo6Zc+bV8J7BF+uZ1ux+DPcyi591Dv2a5Br684iN3QvdFbXn
jq/FzXWb+n3H7Dq+lHvYcTPP28HNR+1Z98CG18pDe0RufjR+XmG5FQ/BuZ7d
0XNbP+8Z3om3Zuet3NzxM5en6wnqzaqV8743Q37EuvT/9muxpmccJMYjQ8jf
eQ9+jXRsKVvMs+lG3Jz6BpO/uePmxMHScVe4ebU30LlZ5Xq2/BlJa9ZjM25O
unaaDyi/h+ccJm6m/5neZs3PrnNM1j15lH/rGy+KM2w4o5vv46XczH07uPn9
115MOOOgj8bOe/PwKjNvqXP5d8v6HTsP+xPvsEa9gJdew/h5SNcCs3O+N0N+
xLrG/+/pe3grO2tmMLmZDCiGIN9wG7fignO52TXnVM7NntHsPD3qC/QeQFbH
zV0V85KbR+z8z/7+t6e9g641J25mr6DW81knzsEpj3nEzV12tHRmeutPevOz
x1z6sZj3RS+fcTP7CP23BfYWyg9fRc8zMzvqsdo/ztXuZv8czPy+ag8OXOWg
a3Pf3mz8kbn5Eh4+9/Uu0Z73YucVvbn7XG/lZuZqjLzVBzc/Ljdfypvya1SJ
c7yfTvznv6u7bn1rNjhHSxdfud8kZdAllu64WefF+w6lO7ueLJ51nk7c3Hk2
ipNXi4w+8mfoL/sGycHk6RE31zqek5HmnSRdu9bjZ0v1ojez4+bn98t7Bb23
jzq0P+75zilXw7n50Jrfd90rMx/svH+dy8Ydv474+ZpsHTM9rj3L75qFnJGV
3sDus3wON2ud2WvuzZAfsd7qO2CFM0ujpV5I7U+zq8k0xTkpy/nWbLCFnctP
MuJm92yMZqA4H6sn0Nm582sU95I33Ufh3EzNmHkZzs8dU9OXrOeN+gapObuH
w7mZPX7M5+ByeZ/TfBXu14ibaxk9Grrt75cYmF4N8jI9Fv6YF70fnO19cPPH
qrdgv0sY6CNx8x78rHN8LUZmlkaXobFS19SfZ1kb91LX5ubuPSh/s87Dwc33
WW/1//8qY2qGSLFK0kD5W7qWd17PezkmzeOuonbOrIuYpYF+tNhLONGcuxnc
fv64XPyqHGj3Wqicjztu9lncfC33anTcvFLUjH1Wih4fcbPPdmfOc70X1INf
ZDAHXdg15sTA53IzP0vncPPeHHjUtroF612DeW7Fz3sz8Vsz9Oq5XeXQUaac
6kvf+bNR793CzbfQnc+dUfKWunN3DrrP8uj9Xnm/Vv+N7c2RH632+C6YcSZn
pJGZpYF6pljNH9yDm2fHlOailE7onmefi6JZc+LnlDvnno0uszlpzs7N9BB3
vYHuV15h5k5v7rhZ3O79fyM/9BZu9hIvi5nF08x2US6GvzecG8jHVrh5pdJz
mCFzrrd5bw48altdm+tuwczXZOe9OfgtuXlFM96iKyffgxi5/rJqGWfSfe0H
v/jq8ZFWrX27lJ+HmvNe3Ny9NnKrL/m3sMLNox7E9Bo/9IUf+8xzP/5c+3Pl
e6+9vg9GnCnmSNxMn0YtL2a+V25O7EzPBvl2pCu/0pjdv/G8bKQ5e6YGa5ah
kXoCnZm3cvMo+3nEuilXw9d1T4fmbvvzmQNNr7P7n/26ZsTN1IaVf9Gxsdaj
f0Pre85GMfTIy38w8/usR+Lma/Dz3hz8Fvy8RTNe8SW3+W6f66s/98Xf+6Xv
f+tU4mJnZpXW+/RLn55qxM1bdeeRd3rGzW/SOxhes9uXredgpjWfo+f/oS9/
86n+hT/ydTBzV/uz5nuqvb8XEmcWOySm89/4H4GbnZ2dm+lTHvJymBOYegTp
a6bX2fsA5VMmP7umzPu6blHOhudojPoC6cNQ+fvLdWa8PMrVSP4Nn7Etb7Sz
8oibi2/ZF+iZdMymYx9fx8zyftQ6em/42NPvDMi4U6bGwc0fq67JcW/BzJew
86XH+GjcvMLCMz7WOsW4/+Z/9t1XuvILbv7en3h5+3ORmZ/q13789771q19+
el6V83NiaWe8mXd6dK0wmvMd+wjP4eKFdXx/mG1xLud21xGjc+OMnGqNm5+r
dGnVHfDno9be3wtVzpjV55d4WdwnBpI+dy+MsKo5p3ncU2YOXmdxsXNz0qjJ
zuRr52b3aiR/c5dFl7zNiWW7zLot3Nxtm0xNDvb1yM0+b4fcXMuV31znUsyc
ityctOcqcfDBzUet1DXY7S15+RJ2vvRY70lzXj1Hq7qy866KPFvc/J2/9elp
+Z/6Sz/+VFrviZ+fubnW0XrabvGyqri5Hq/tiZ9rWZW4uf7y9Ve0cGfMLfr5
kJ1XvByr3o+gcb/idHus2/dzGLpqxMgXcTOZ2evQpB+em+tv8toWW1AHLJ35
nhhhCzdrFnfi5phJh/kmzs1iZ+foUWaduLnLoRvlMK/MD3T/hPPwaF5350VO
PYXJ+9xxM68RNF/Hn+safD2X5/Ba3Fzl659mreAx+pwv4ea9/40fdV49ksb8
Vtx8Dx6PLed6lSmlZxavenXcrBILi4d1++e/+9Wn+gt//SdfrFNVy771r/3h
p+LrkJtPy59fR/rzFm7udPQt3JzW28LBiYFH2+FrJo/IKtuP/k3MtOTi4Spf
/qVPv/hUm7h5xMwvvNH2nDtg1Husvb8XqpLeXEzsLCfeqSquqOdee872tY5j
xs/iZmZrdNz8lOkAbmams+vNI3b2jDp5Nc7h5s6jMZolmLh55Fnu5vuNtGV/
njKd07yTNFuFc3W0PZ7PGTeP+gDTzG2fEfmiL9S4mX6kLdy897/vo86vR9Wa
b8XNt/B73EpXXvVh0ANQRa4Vtz7xsHHzX/6tn3wq52Evrvfpl3/kqeo+uTlt
69rcPPIHr2rVmzTnwMxbags3d6/z6t/EMws7E/vytI542bm5qmXfZa15y/r7
c+vetff3QlXHzd6/VhxTfFLrPTo3y+tMHiU3kaOZ7xx7AlWBpcV6p35CzOYe
9Qh23CyPsxh5xsxiY+bMOev6eomXV/3MzsKe56xKerNzs9Z9Op/P527EzWJn
ei5ce06e6FGexjX05r3/fR91fp3Djnuy8iXs/BbcfAlXz87zCvvxtrwVXuTm
Yll5K+ox8S3L2XjEzVxWvFyvoUrPd26u0jL6n+l7Zh6H2LWuB3T7d373B6dr
BPKuP2fGzaP+wRnDrjA616vbiZ1H2nOnHz/pw3/oj0VGTsudm//Ub/yNp7oa
N5/Dzq+etz/LfiRmViW+ZB5YMUfxtLiZno574IT0+jN2ruMpJvNZGc7N3TwU
6dWJm1POM+emFDc7M3sfJpd1PLzCzYl5k96cfMoqz3MeadSe1yyPz4yba92k
wZ/mbS9wc5XPByQLU0++lJsPj8b7r0fQld+Kmy/dzqV69BZduVvOKtYUm454
t7hZt6UPV63w8UiDHnGzlqXnipvLzyH/SDGw9yTW/I6qekwz8KrIzVU/+72v
PDF4Paceq6IGT65OfNp5LFY/o6ue5Bfas81Dcf2342Wx8ag6bh7VkJs38e8V
nvfOWXrv7wTWiC/FId1cwHvghFVu9mMjN6t81nKnNZObkwfj5OtAdp1zs9jQ
M+vofdasRmZpdD2EKbuu6xlM3Nz5oauULedszVmBI25eyeNgn6CO62nmyXNf
ptiYnot6rzSv5xxu9vfWZ6LUOnXffRr39m/gqOvXo/LyOdy8wrxbtnFNTp9p
y36f67hOK07m305LHtW1uTn5n7Vu2nf1ClYvYTEvc+7IzXq8Sll3L3LwPj9e
y2qb4uZaT49rO1Uz7/Ml+Raz0ntbnPrln/1rp6JvInHuKi+fy81Df/MK+96M
m98nS+/9ncBa6aWb8cLe+796jO7VcG4+zcuA7zVxM5eLkX12oHNz3fZMOs5L
kd7KmdrkZnpmqlY80iNu1gyVUW/hbPZJ4mYuV5Yc9624mP4N9gv6tUQtk4Y/
4+a63+U28zeF2pb7nHk9pN5A+ZyVafeVb/7KqQ5ufv/1aJx8DX6+lJu1jUu8
HN25HvlxTzkTyEumx0GcKQ7tuDex8SXc3OnZ5Gb5nbl95+YXvYc4RnKz9ys+
sTKyOkpb5nP1fN6vdYqduYzs7J6MFWYeXXOO3u+OXYuXR318nVd5lZ238vMm
bvbHruWJPrv2Z+FH5WbVOdy89z5fcmyamcy5F+Iu9oq98jWjN5A6svzQ5GbX
nrtZ3+wV5HOKO+nZ0HLpz0lrTtw86iNMmvUoI4NsPOolrNLxpXV0TGLnETd3
uRrKFKwSU3OZv696b5PXmb2Fvozz5A9u/hj1Ebn5lnWuh3kl96EYUb184sbK
slAmHLnZ++46jl7l5hGHp8eKTX09as98Tno9Z1/ysHNy1QtuNrauc/IiM+R5
ezw3xdFkZ/Fz4uazP3OD3rwRv16DkVfZuePns7h5pW7OzI/H0nt/J6Ra6at7
VEaY9Qgmbh7l0zk3t/MFUcWQYuBuJrf8F2Tn5H+mr6PzPq9k1pGRR7l0nQbd
5TeTm+XTcP4mN6t0rji3kvzrfmbOOXmRSWc5GbUd92icy82Hv/nj1KMz8z2w
85a+v05npgfWfbXyIYg5xYvFhLrtjLuVm51Zud0RNyetuZ6nbA3P2Oh6BJ2b
mRfN/REjax0/RvetaH/I3q5LyxPt7Hyu1rzKyFvqGpx8rvZ8U+59M1Z+DJ7e
+/ugq/fMAt21gHTnKs3CiP1i1h8oNu76B+nf0OwTcrPPD2Rx9mDyYZCzxZyj
rDr99d7Arj+wy+XomHmFmz0TWsvpP6FfQiW9ud4DejU4v2QrNw/nDtZzrS/w
F37jOwc3f6DS+/cemPmt2fmcrIykLSd9udZ58iVQNwU3ssjNzrgpS2PE0Sdm
Nd9H3e56+LzHzzm1e95IzxZnJ02a2xPzdvvF/sKq0uZdx5Z+XfsqvzN9G8rf
oGeDn7eVnLdVDn5rVr6Ym3fTit83S+/9vbDynfEev/9HurN8sp5f5tzsLM3H
WGRfzgh0r4bP5xZTJm4mY84yN0bc7Lkao1w5rcPc5Rk3dx4Pzk+RD4X6s4o8
rN7AGTcnz7LY9ykj5fPfLr9uxM1Vzs336vU/6rr/T+zNuo/IzudkyyVu7rIb
zuFmZ9/Ua6eiX5harPscyv9RvCn2rHIWru1xGTM5Rrzt2/Acj04PX92e838d
Ry0vJnfPB89pac913OUlp9d5lG+8lZ9XGPatmDmxs2fTLXPzu2fo2/L03t8J
H7lWeiD1+z/nyKkXkIxMXTP5NehxFgfTn0Ft2fVlPe48nTwa7rFIPX71t/zI
szmBtW7ia+fmUcl74azs8wZ5jCvcTF+yuFg9e2LqUcYcdeYRN6fn1m8RBzd/
nDq4+bY6c9LxZ1rziJuLKU+MG+b4sXx+NX3QVSmfQsvIyOJmsvOTbmtcnvjY
Wb7Tg8XE4mYx/EgT922MHtPj5OZXcxLh3/jX/+Nf/73f+p1/9fd+97//m09V
952XR+y8ws9befYtuTnND4wcvJqlcbD0wc0PULNsOnEzcxmiPwO3vT+QbEwP
s/iZeRnuZdY64snE2fIAF18mbtZ99v91/guuM+Jm9zcn3u64mV7mETe7l5le
FOWSOOvWuWcOXce90p7dp3Fw81Gj/yf25txH4eZz55iscnPxsmaVyOPAesHN
4Erv5yvWJTcrc8IZ2Uu6q56rEjeLnXm/m7O9kllHXq11qflq2czfwYwOLnPv
h5Y77//Ff+ebT/WX/u2vP9W3/urXTtxct6vqtoosyb+zHLdVjt7L5+xaM68T
Ktvjatz8Idj5fJ7e+zvhI9cKN8vzrPwyas4pz1lcRm04Fbn5RWb0MxO6LuuZ
HImb5RF2btb65OMZN89y6LrMDF+v42b2Noqb+bfjZs2hSX2BnXa8hZtXGPrg
5o9TfC/35txHYOdz5pgkf8ZsrobP+CPzvdCawc30JIh1v/j1b5xqxM2axVfP
ETdTb05FVu7ymUdZdtLOq8jOnrcxm0/IbDvnY3/Or/67X/+9f+U//NOnKkau
v+JmLddtLS9u/nPf++aLKq7+mb/4Z0586bP1Vhn6HH/HLbXnjptbvflg56vz
9N7fCx+5rsHNL7Loyv9qenNX9CyTm1NuhnzQrkUzn06M6n4LZjO7t3nGzK41
jxi542atr+PjcmXLqbTM+ZpZ13V+xdSr3Ozl/ucqZT53xb5A5+aDmd9vHdy8
j9bszPwijznMmk46q+c3k5uLhU8cXvPmkMXhxbmCVfRxdKycuFl5eFVkVXqV
tR3xMHVm3h7lR3cMzfvFw2Jk6sRaRl25iixdVcvEzFXkZS2TFl38zJnUK/7n
rWzdcfMt+NlZ/t1xc/3b3J2Twz6x/uDv197fDx+xVrL2Eje3zLzAzfRfcD6K
s7NzM2ei0Ouh/kLPppOO69zczePmcvkztnBz1/tHHwZv6xjEzMpt1lzAGTdX
Odsmdq735MX708wKnNU5eRp7f76Puu7/EXsz7r1z87W8GUlrdmYme3oGsjNz
lThXryFu5txpzmx2btZfsbPKuVn75l5p7rd7Nrh/5GY9R96M4mvysvoJu3nf
VeLcYlhqxuRmVi0TM4ubfR0tr239zL/85Rf87Cxdj4unxdDOzYmfz/V1pMfe
lJs77nsEbn7FpnfAyxNuHtXe3x3vtVa5Wfka6jtLeRnK+r0WN/scQe8L7Gah
pFmBynAezT2hFu0MnXg4sXJajzMNPa96xM0+u1HHXQyt5yR92e/7XO1UuvY5
uPmo0f8PezPue+bmxMzkVHKzex9mnmBtgxozeTnViaHRf6j9KU+HzwxhiZvr
teUH6bhZy9IMktNt5G54PXHzsyb89V/+4olN3VchJnY9OTGxStur5dSTv/M3
vnZiYnIzPRzk5rpd2xI7S3suziwfh7wcW/3QWzTp3bn5HHbenU3vgJcv4OaD
p2//nbiFnb0PMOXRFePRn8vsZrHyW3Cz/BvOzomfeXvmuxhpy3x8xM0+5yTN
Oa8qRqbOLJ9G4uRbcTP5eYWb9/58H3X9/w/2Ztx7Z+hzMufEzt4HKE5NOjO5
eeRTcG5e4eWWo5/5+Ws/+MUXfmj3P3PmiF6fHhDXqnVMOm5t+6RTw+MsPnYf
sXi02JTeirqvIhcnnVlVzF0lpiaD63WKm1W//m/8PkfT76xt0MuhfahlYmXW
iJtHfo4Vv8esr/BaeRptfvM57HwXbHoHvJz260JuPnj6tt+TiZ3JzWJnsRdZ
zHOYnZu9P5C6qnwJKWui4+aOmVe4eeRpJht3WRpJi/beQGbQsbfRvRw+D5v5
czpHur/KzaffAlDM4pZnw2cDat0ZNx/s/Li1+v/Awc3X4ebkz+i42bOYU0aF
50NQf67b0ns1l+NcblZp5kfVi4yNzzxdVbd9np64Oc2i9nricbBgMaV4k9ws
TZh9eVXiZjG0eyfIzcW8VYmbxbzuaRY313bEzVV8DV9fejWXdezceTiUV1E1
WueSzLtVjj5rXuAWdr4nPt2bn9+ImQ+mvv73JfnI/c2Jy5JPg5kQq1kb7gd2
z0I3O5AZ0Nfm5pGv+T/9/H9pla9TXK+/LB5Lacqct0hm7rg5+TTquZyH0mnN
YvMXvxMYW3d1cPNj1pZ/8x+Rm9+CnUfcTF32ydsAbmYesvfVKRfZubk0XfHo
NZi5fBu+TLyskjea2R+1zP0nM/bzEltKX6b/mMxKrdm5uXhY7Cq2da8Ft8Pc
ueTlcJ15Mzc/v7aOqZbpeIvFtYxcOuPmmT/6mp7os7m54+d71HUPbj6Y+szv
UO8RpP4ojZTc1fmbi+k8R0PPS9q0M3Hnx6DvwbmZfYPkXubSpWyNt+Rm+ZXJ
za5D099RyzhL27nZ8+ecnXmfbL7Kzgc3P2Yd3LwvN7s3g+Vcqbw1z6rQDJPZ
DGxx86qfufU3W820aHKz9FGv1SyJjg3ll1AVq37t1/6lJ8+w9+WlXj0+X+z6
1V/4sVNRu3Zdu8ujS1l14mTvL9R9vba4XDNUpGGLtelHIVtLG1clvr7EF+36
8kh3Pq2zN/tem5nfkpvTaz0AN38kpj6Xm8vjTF/zK27GfEDysvoFfYaJ83YV
+wbdp+yc7DkbynNmBoX353UzBJ2bR37m5NHo+gcfiZu79VjHnO3HrIOb9+Hm
5Gde4WbOfq6q+XXUk59m2v3SS11ZXgfeFzefMucWOLjjZn/OL/yTf9zWCjeL
7Tq/bOdXcI+DuLmqbnsmnKoe035o3Soxs5ZRa97KzWR6crNn2nH74uZ//z/6
c09Vy+ovtWr6SHTc0tCVe6eq47tmX2GXcfduuHnIqTu89ojl74CHPzJXn8PO
5Gbyqmdt1G1n5xk3u07M9Tpudl90VadRd9zcZWyMZgSO+gW7XkEeg/Zdc7Tp
fynmdY+LezZm3Dzi34ObP1Zdysvk5uRJ3Zt174mbEztvYWbnZtZTrx/us8dO
nmjWi3kpysawnDkuS9xc/PvT3/tvXtWIl2f8nLTm5Bfo2DmxuJhZ3KvbXEeM
7Ot7iZvJzh03e86zuNmZ27k5ZXmQm7WMt7VO6mcUL4urU19h5+e41Bv9Iid6
b+69Jrfu9fojhn9n3Nzy9I9+9ffrDr4/L/k+JSOJ79x3XLxG37P7NNL8bWZx
6LmJm6kv83EyqJaxHzBxs3Nv53HmzMHOp5E4Wdq2XtvZ2YvXGvIlr3DzaEY2
2Tcx8YrfOXmf6/ZXvvkrU14+uHn/uhYvJ24uHlN/2N6se2/cTH4eac1dXnPi
Zs0EkdbMfLhRUXNmz6FKumUxU8fD5/Jyx8+JmWdFzksM3jG0s/OIl0fcnDiX
3JzWd96ecTNZ2fm542Zq1VXyeKz2Gm7pK0zXNa88HHuz77W4eQ92Xszj2Ztp
35Kb71GrPoeZ5XGmz1k9a87N9HNIC36hQdscDudF9zknnZkzUUbczD7DxM/M
exYrz7jZWdkZ3bmZt3l/xs3ywoibpdOPuFnbTHO2ycfUmg9ufl91C24W7yVu
fg/a8zW5eaYzd5nNVcw85iw93eb6L3rwjKfVg0dfbMpyqOXFjB0vk5ul527l
Zm2j4+aRbzb5OBLz6TUu5ebk1SDrJs056dLUp5NevcrOyp5OPM1lzs1832fv
f/lBtvBz7Cfcm30fmZ0Pbj7VSW+esPN0Ozt+jzo31+/0VcVqnNEhj7LYLc0V
JN86N7/Kowuatvua0yxB7xMUe7u/mJxNZnZWdp9G0o//n3/6X57KPSIjbn6a
B/h8bsS/zqzywYiZn3zcn9f3TA0ys+vOl3Iza8WfcTDz+2LmxM3Oau+Bm2/B
z4mVu7mAnHUiXzNz5Zybu9/eyYAnVrL8Bvpm5e3tuDn5IBIb/w//x//4VFw2
0zNnGQ6jvGDn51twc5qTMtKYU5GbZxp2MbAzsvTkEWtrtgp7CDUHRsvq+E68
/Px54ON+jZXO9d1x8zVzOfbOz1jh6Dvg2rfk5kvZebbtW32HjriZGqd05sTN
8jeTm8Xc7CX0PLk0FyXlbHTsXNsnK4tXqee6lkxmXplrou123Jzy8tjvyPPl
56RKGX7yaOjxTm92bp5pztSUmR/tz9X7vqo3782OH6Vuwcgjbhb/Hdy8jZvJ
yjxvrjWLm8U+SRtc+f2drKi+N3Fz8ZTnNtAXTG4mUxYTF7+N9GTNwks+2lFu
w7mzNhI3zzzQK+yc+gq9B7Dj5pHerMfV09dxM+eziJu1fXE1n1fvJfM15Ash
F2s9XkOdPhtBox7p+5Gb3zpP7t4yoG/NzXfAtG/NzNdm59G267Y+y3/wj/3J
U12Dm+nTYFZwl4/B2YLkYfczc4agczNZ0+cJiltTznPiZu89dEZOM/60zL0a
ril32rJngqiKhcm58mOQj0fc3M71g08jadgjjzOLvwescvPeHPnRag9u7jwH
e/Puo3Bz4mEVZ+I5K4/KmUa3yc3MYBM3MyuY7OjcXGxcf4vDuMy5ectv+1tn
1I1056pLWPkcbk6ZdeRmsW/n3Ujas7g5+ahHWrW42bP2qEHX6/pvDszg47XV
qhf64OY3ZOc74Nr3xM3pscTNKzXiZjFzlbiMXg1xs+vQzs7eJ5i42fnZ+wHd
g5G4mf2AzH5jXp0Ylywsjk7c7B7oxMwdT5OZxcgjbk6zA+mrmHGz5qCscDPZ
WftwcPP91lvx8io37826d8PNCz1tq/7TkVa7ytFiQW2b7ObcrGwz50hpzHV7
635cg5u3+DbOZWWvOhfkYNeROcfEmVZ6sfiXeRvJ/zHybVBvpu5Mzta8bzJz
YmGyvjRn5lfXbZ9nKO+z7qffE+6Om98TO5Of74BrH52bZ6+dmPlLf+rPvagV
jvbnqP69//yvvODmLreB87iZs5G4mbnL9GuQN52/O26W/znpzSz3X5Cb00zB
1CuYvBw+Rztxs8/LrnPi3Ky8ZpZ8Lx038/x3PucZNzNbsG4fPo37qbdm5hk7
v3tuXpxRPMuCEDs7o52bb/D/t3c/vbJcVxXAJ5EcxLPiOBa2IbYAAREKCRaI
CAVLDIxACAcURUhPREICJGTLGTLLLAwiGCCGeOJRyBdAIPEF/LUeb7fvalav
Xvv8qT99qrprsHVvd9etrq6uvvWr3fvsUxs3p8+FfLbGyU/kZt0G3s7SNtTy
wUu42Y0ddHln5MznuFn7MLM7sxoN515eD+YybDWzhhsf6N5TnsOFc8+ahz6P
JXwyNJvaffehx+tN3ezqj+/ZzQ+Yb2Y78+3Rbna/T3XzRz/87Rc/+uQPzvHh
x986xZ/849fP8d6Hb5+C3ex6PLuxgK6vBtf9ooaBxwi6+VDwOM8nyG5G37lS
LbOrdc76Njs3q+25Dwm7WWsm4u/Yy3As/m4pN7uaZzwvXx8dbt6ulVt6nKyV
c95b4HxfMuASkdWHunrkmpfnPCdbkPOJPCYsq53GfS3bVPLyVCf32rnUk25K
zYabvySbf1vrMsLJ6uaSi7W3XIul1cYcztQ8dyLy4icbP1kZdtb1cS3PZtyc
+Xm0eQ83z4pbWZmd7tysOeY3v/mnTXbO3Pzt77764s//8lfOVg43h6XVznDz
+//wWy8+fP6NNMLgH710IyyubkZwn4lszu0s7+z6QrNts7xyVrestkawxzN3
o4cG17DAzWzZmpvd/CenWo2nOvPM06V+cwiefxvzGkaNzjHP9nbdvKadR1u3
5uAp9QIj3Fyqq5jSc6LmyFoPsprte9yssaSVS689y7XX6p1bctJ8feFyxBiH
pzXQsTz3udA5A52ZuYajNf+snmfj8/Pifr0GKLmZ6zm4L4c9Pkc783DzESu5
+dd++INF6jXe+v3XTt6Fl9XNiD/86988uTl+IsLbGurmCPx+eowi7vuXf/rj
i1w3rK29N3TOFNfXwnnYBddwlAJOhtf1dgRqj0tuhp21dgP1LzF/Y4Tr4VzL
Q7fE4ebtW/ke3Ty1bnZurOHm1tqFlm2Z6+ZaLUirm1te8y28XKp75npy5PLV
z/G761Pt3Iz+dOHgCDZyuBmPa743lsV64nYs6/o4s3dRy9FiZs45a421q70u
uVm3gd3MtRrZcdrt2zX9PNq8S1n5cPPNolSn8Rvf/d2TbyN63OzszG6GndXN
MPM7Hzx78UdRIxb/D17er24OB2vdBzv5XAvy9JzOzRxY33/82/PzeuI+jXi8
1c0tueboRYecM6LmZu5B5+7TemMe81er1ZjjZu6xjW0JN0etxjE+cLyV9fql
tbf2rdw8yr+9+dy17Ow8W3L0Uu7sdbPWZ7Sa/tY27rWzvnauhdG+IaVe1e42
nMy/6/IuNP/rHBz3l+o0eD4UdjePR6y5Wes8dBn1fzYvysWxMMe595Qnzjx8
mHmzwTnnkn3Zza25Z12WDX5280vXcm45Iqysbj7VZkR++SngXPaw5pjZzbAx
4rQ8rY+tXHNzxOf/+cn5d9zmwLJ8H9+GmdXNblwg6kVg5H/+8U8uxlHqOD3O
ofNjLTXOc9zsAmMDW+qcRxt0jzHHtUt62X3+R9t3ipF76w6WtDNbridXPMrN
rftitI97Xnvp9aPXsat95hzzlHGFWU+88Cfy0rCvRmuOWfPVmZv5NtwNe2sP
EHZz7Vi5OibWMnP2+Kg5sde09eHmoRFu/vJXvn6KlnrlFju7ZcPFUbusVlY3
Rz30VU0zmZkdy9blwN+xmdXdGuzxzMz8u7Ozs3Tmaxg74s/ef+3qPt5mvKZY
LvYPgq8Ram5Oe9E95Yp5uSn5ZqyL1wE3s58PN48xc2+fyTkxyrktxtO8YlbP
yjnHpfPOo81Yy726fdX6eke/nt7XXcrrs5txPMTvvAzc3OvjUnBuGm52Pey0
1rnF1c7NEbg2wN9xDltzzOj/rL0QS5+Ri/0/JV88x82tedw9xYO6+ZbjAJdw
M8YH9tQ7u7yz8zLXLrMFI841zVSvzG52fTrwt5pndvlpdnOsk5dxbnb3tRg5
c7Pmo53bW9wcgXy+1sDgcYy95H0f1zKnsZgvl+Pfe+NwcznmfkbVJ7d08JJu
nlPL63pL8Hff6peaq9XM4QF87w273LubWw2J6Fnvl155Nvy1tb7+2jEHN7vj
kI+7Uo+OluB18RznOn+360+XuTkex7yDPM9gVqPBblYzw82tn1k95rvqm3tc
/GjxQG7mfnNbcDO2Z7Sb4Tp2K0LdfJFDFmefHWzy09bNtJyre1Yv6++lHHSL
n/H8vHzm5ohwM9d6w8G8D8LN3L8kbmM5dTP6lyzhZve38X5HxLGD0OOm5Is4
Jvl21uu8JUZ/1uZ+Tvdi5qXdnHmXncER5/tPP3t+iqz+NAueRy3GY8W6uE/x
Em4ebcSanTNPu22Hi+NnFqNf11Q7Z3Uc/FOP0ZKbW+3Mx3LWL6PkZudcuJnv
4750er8+l/aYa6ltL+3n4ea8t3gQN2/1fK7nZDazurnl/OnqNaK/hjoODkTt
s47vc7nhq1xzo5sv1iW1G1oL7dzsTK1e5uVLNRvq5mx9vN3INcf+Yv/Cw6iF
0T4lPW5WA6uHW30dPVki4OfasVNz8xw/j/5szf2/cS9unmrlCHwnrFaOQO8B
dXOc6+N3nkcN30lr6FzDWH7JfPNoH861rfvbkpv3ZmfNvbdc45W+w+jJP+sx
3eLmbF4VN14PPsZcgjxXIPejwxwnsRz65GGf4HXqPmo9tg83H26ecv7b+jmd
z8vqZs0b9o4PLLkZNQZsY+Sh0ePZ9dHgOgX2cClv6/pvtLgZ/mbfu+XZvzU3
6zhD529sH9d8c755jpvPOX/yMNdwtOaW1dfucbZz6fip2eNw83gbL+Xm1lpl
17uL541Avy7+HcvB0eEA1wMAf+Pur9n5FmZudWj2eM21LdZdYh17i14/43hu
qV92ds7crLXK6mY3318p4ObsmhHXp+pi3gdTju/zcqOdeW9xuHl4uPNzNiaQ
3VM7r6/lZvZkqR+G83Pm5pph4eZs/CC72fnb9d/Q3h4afH2QuTmC+/rBxb1u
Zj/r/a355jXdPMXPoz9Xc/9v3IObe8f1oaaULVFzs/MFHs9csTc37yVGOXeN
dTpD1iyd1RdleWcc46hF5jF8fB1Ym+fPLYf6Cv7ehuuU3Xc7te9ZJr8/o525
dIysu36g+uatn9O57jnLHzvrZF7mv3WOCwOqXznHurSbOVfMvTechd3fZm7W
dcfPlvqNMDOWLbkZdkZdCzsa9RucZ3Z1HHof12pwntl5urVOwy3/tz/9wSlq
fVlcrQZijp1Hf6aW+jzuwc49Xs7mpsNjzgDq5SXdrP5APi7r07G2m0fbdy9m
VuOuue4sprjZ2RlznnD9sV7XOS9jbnQ9Vp2D47mm1FBN2cdXn4PRzl3LzqOs
fMdm5vPfns7pc8+hrh+duq40D2AE51JdL4ys/nkNNyMvnuWx8Tv3B3H1zJmb
s94asQzmfeGcs0bJyD1u7h0D2LI8AmMFW3PObOepYwVHf46W+L+xBzef3tPG
XHLE2m5mJ/O8ZjxPcGYRni+Y+9L19GXrNQabc7R992TnpXL7cxyduVlrONTN
/H0KzxOIObndtR6MXJsTfclYaj/ZnnJ839E3oxwP5Oa9nsuzeVGmuhlzoKRu
pnoFremN/s7cX6PFzdojA6ZFbQh+H+Vm7iHi+nFwrlrruXmMoNZuZG52tR3a
30SdWxoveDFHzQJudv9nS25+BDurm0fbeISbNXecuVnHQLGBsxxd7btudvPU
Oo3MyCVvjnbvXuy8ZE3MnOes1W9o7TO7ma/1ONecudl9XmrXde7YXTKv3LqP
msx8uDmPB3bz6O2Zs/09OS+Xb3ZudvNla05V+zlnY/y03oNrPmBvdrOa2c3H
7UKdPtrN6NEc97GRNZ/Mj8X8jCU3O/eW8s3ZeMHDzfM/e1vPNZfcjLnVONQC
2t9CXezczDlo7iUAc7Cpe9zMVkE/56n1zZkrRpv2Hty8RTOX8s+uJoO/I3HH
PR/npWvR0nGZbTfyyNlya+yf1MmlGG3VLTj5gdx8T+dwPX/XzuGleQMvxrKF
+agGg12qbkatc8TJZU81FtpfTnPO7GYE6h5ajIxeyOpmHRfIBsZ2cD85N/aQ
5z65RzdzXQ7c3Frf7Px8uHkjPjZxuh4q9OVSN2c9s2BhrbMoudn97u5rNTMb
PqsHPdx8uLnH0OxmrjnCNR/cnOWRZ/dOluMuOx7X3DeT3PzIdrZGNo9t4Fy1
1Lnuns7f/NpavjN251XXG43nDLTzk3DdBlks7MxzDWZuhje1BwXXNWsP6Fi/
c7PaGffxYzqfStZrw7mZ65p5GRgdtdARMQ9KRDyG54/XCE+X6jEON+8ntupm
15/yze+9d2FknoOPeydrfjgL/Y5a3ezqKrIxfj21GpoHb/k+u8fNoz17D2a+
ZUyxcpZ7Zje772Ba65SnXJP1HH9r7avJbn5UO2dmfhA3j96mpV9fq5uj95z2
R4O91M1na8l4PfhTc9LOzVqnjFxzr5s5LvrA0X2uflpz3c7N8RxZ3+YsYGd9
7fz6e93s6ptLhlYDZ7UYma/j9tQedHP7aoz+zGT/I1qX24qbS33dY54bztO+
88HrVx7VfHBWw8luzv421q+5aGfkXjfHerHuzM2tZno0Lx9uLrtZv4ep1Shn
tcguf7yl9y69dtyDmdWnW/Dy4ebdh3Nz9t0tGy3qI9jNqB9wvdXCWcipnvKq
37+ec9vlpkv929jv6mbklfGzFi1uZrtrTrw2TyDu0/ppNTO7Ga8JdkbNhvZr
xvuhj/P8KaXxgC7w3qIO5nBz/r+gZ9u24mZXk8FeRpTczHOTqJtdzldzyvg7
uLZ1zF/vuED+u6yX7ZRc82jLlpy0RXut7d81jFxzM/faaK3BwDqWej+Gvk9z
8s238vOW3XyndRpbPHev8RpxDs+8HBHnUTYzei+w21Cjq24OB6qb1cjn2+jF
wWHGGDr32txywciZm9Fn43/++6fn4Pwyu55rSVxOuuRm5J45xxzPzTn6LMfM
v8PMrv7Z5ZynulmvkVrmmqz5+R7dXLrd8v3OrcysTkbg+6NSn1nnZuda5Hrd
sjBzj5t7LY3vyiMfmHnmcPP2zbyGgXu+Z8j8XKvByF7PXbwvW/YyW3T0+h8s
37zFc/car7E0Lwq7Oc6n4TrMfcH9NM7zdXCemdzs5hEs5Zdh0qwXdKkvxoWz
EzdnZsZYQNdnw/XD48czN+v96mit3+b1Z/MJcvS6uebnzMpa47GEm6f2ct7S
/4IeR2ff74xwM5zsjpU4rrQ2gvsF/Ozzn1/0DHC1GNnYvqk+djXLLevC9+fc
u7nVzWuYZ00zL7mNw12WuHlqnc0UL/Pz6+2W7Vji/Ri97917MNzNNYdeWXRF
O8/JN+Pv78TMj+BmvBZ2cynnjL7NcLPOFchu5h4abmyg82ptbhO2tnWzqf/I
3Ox6fvB9Om6w5Ga3/aV65nPuWnpcRy5e++m1uLlU+1yaN2WKm9nPGBdYs1qL
m9nOI9081cc94Sx7SzdrTUbmZs45I8eM+PSz56fxgaWxgFP6X8y1tMs1R58w
dnOPn/fq5nvwmns/auPrlvZy7/ZFrPl+jtz3V/tpdL655tGtuNlta2r/bcWU
c+4ju5lrHtnNbmwg3OzGttk+GQ354mKNcVIfzfeXejife99x/pny45mbNUec
1TO7fLNaXeu8MzfH9UmvndXH2f01Gx9uXtfNpevTNc3MNRlxfGVmVjeX8rxL
5ZKnhs4fqDUa3DdM3XyP+eYltnkLZsuM3NPzeI6PS/tl7nu1lf3u9ou7XtHb
w93cY+e13Dx1G1NPby+mnHsfwc3xOWjNN8PNWp+h9jxZ2cwbeFXPbOY1ca5m
p2brdDUVXCedjR3UbY9o6Qcdy5zmQZHt5brlopvl2kL798HuukxsH+/7bP7A
mqfnuLnWh25OrUZvHcRevDzSzVqb0epmV3uxtpt5bpPmWgxyc/wMK2NMo7oZ
tc61eba3auYpNtqDl53lWuesrM0VMjXWfO8yP492c2uO/8KGW6xr3qKbq4/f
Z9yLm9nMcLPWY6iLwswRp+/4TQ2zHeOX+DbLGfP6nJsjYpxeyc2ubsK52dWP
ZHUapVqSkpt5f7gaD11O3c9ziHOog3vdrGP8Sv3qXJzGL778mc0XOCXnPMrN
tzQzu7nk51u42Zk5InqB41hxedxazfHSbm41Mwd6g2GuE56zpWdutntxc6sN
t2Bl9lo2rzt/b5C5ebSRW9+3rVm5Ncff5eaRbt2KmR/YzXyuHb0NS1gBZuHz
K8wcwUaGz7hfBs/Z4dzscq12/N5TfYRzeDwfvIyo5YIz45ZqpxE8dyHGM+I+
tx6dXzAzsd5WX2M9nHtucXOvnUt9nmu5aK6JjuX02mpKXzr4+VHczN/vrOnm
Wu+MzM0RuEZudfOS0WpvtTLbneecUDe31sYebh5nucxq6mbYuXUekZHv58h9
O9XNpTx/0YuHm19YN995D7pH8LNzcwS7GXM+c/0Fbl/0lhMDZ/UWWZ2zm4uE
c8i12mH3HGn/5adct3uca5zVzRFqd62tcPUdWAbj/FDvrfvDuTnuc/Ub6mnn
YTdnijN2bZygs/Ph5rKLS68l61+zVo655ObsOqrm5jXrmd0cK015ZjPvRLjq
ZOinx1t7OI821h7sdUs3Z/Xp2XcGWzPzlt67nlxzZuYY7zvcpFuPnj4aN3bz
aLeOfv6l3awG4lpmzGsCN/OcHLCg1lmUcq64j+ctgd2yuobamLuWGmr+m5Kb
z/NtP62D/RzBptZ+H/y8JTe31IC4Ph7xvLzvXf8MjN10/TTmuJn9HNuhY0mn
zoWydzdnr63m5rWiNKcJ92PPcs7ciy5zs9r2l7/z1VNMNXZPbjt87dysvuL5
j7N5KQ43j49SzrNkuD28b1t5/3pqmXU/cx/2w83OvJ1uHthPY+lz6CNFKfeV
uZnn6HO1Azq+La1vZjeb/nCZm519L8xt+ke7eunatnE/Zudw9XXmZv67eBy5
6tYaEmdq91iPm2u1Gq1mRuC7Cdd/ZetuXtvMmZv58bXc7ObORrz5vfcueuKU
3Hyqe6jUa7Cb5+Sge9zsappdXrJU0/zoNRojnNayfOa3Ug+6rbxHW3n/emuY
+THt14gcM/eibPLkaNuO8HOt19xgM7v5xkZbdE+h5/yam3Vu6xY3lxwZETUe
WhvBdQsR57n/pI5Dc9QXkYxb5PkGa7lq5J+dibOedbCx5sTZ1nwNkF0naN1H
zc2x/tO+knw46mx6652zubV5DkGeAyUi613Ymne+9fwnS9q4x826rq27Oash
znLKzs2tddKtbtb1Zbnme3LzaAMv5bTSvq7lPrN1YP+Mfo9GvYc9/49KPbB5
f+NzFP3PI+Dm+Pn+37/T7sjRrp3i4CX8XHP1jd3sanJxPh5t0T2Fc7PaOWoc
UcuqFl3azZl1UUuMHg4RPGdhqe+D296r5zLLOzfX6ra5Vhs1HNqXg+dN1L7W
mZsxLpLnG8R6eGyi7XlBr7M2dpDN5OY+wTp1n9+Dm6eaOHsdbh5Efk1ru7lW
o3HqJ/l0TNTqNC582mDoFudOdfUt3LwlK+/JzS0eq9Ui632l3Ojo92NL7+OS
ZlY38xxGCOvmtGZ3AxYe4eYN1Wg457lz8miT7iFq45TQW+Ocb654M86zXPOs
HpziZh6Dl7mZg3ukub5pvL3IO2du1hy4q5c+r5f3h7yOkpvV3q7HBjsZDlc3
w/d6naCvDx5yYwanuhn3cb1GaazgvbnZ+bjlsbXd7OYGZDfHceTeez4mrnxa
6GExZ6zgkm7O6mBrOWY13OHmPreVxpKVait6Y/T7sLX3celcs47HVDfjdrMZ
Rzt4in1vbuY3Vrdey3njsHO7G/jc3uTmJ3+x0TDHNubbdm7WvKzWJbt6Cedm
mHkRN5sxfljm7M7E9RfXDwU3s51rYxnhZq3TyNbJlu51MyLzs9pZxwxmOX7X
Y6Mn77y2m6fWX+j8hqW8co+bMzvP6bHR4mYdu1Bys0ZWnzGnx0Zvvzt2u+ul
0VOXkRlutLG27mbnMe1nUrp2eRQrr/n+TTFz7XOi4wH5cxY/oy/6btycjdlb
090bd3PpnDzapXuI1hpnDbUWW017bGSR1WW42oVzDpjym6UY4ma67XLsOsbP
9fNwNcxuX2Vu5r+zNSlP3wtkTmI7Oze3BOeeYbctuHlKzfIUK5fW0ermuf2c
57iZj4ml3Nxi6V5v47k+/ez5Rd+F1vqAPZl5q3ZWk7ley5nRtp7fX+v9mppn
X8rMzs21nDOCr0+b7LgFL7/8+cqrb734hdfevohF8sxL5ZwLbl7i+1WXb3bn
lThHjTbpXiKrfeHzNnyGcWHOzK7mOfOw8yj/HeoY8BjytLpc5ujUt/Cw864s
u1U3I6+MsYARWr+BfaDXHthfpXxzVrtxb27uyQ1P8XLrukru3YqbS/lgNXPW
77m19sL5vPS8f/evf2VtcG9m3pqbnctgKsxvjh4nzmi670fv27nvhz5W+h+Q
mbfV1r3/c+a4edK8J1uIlx6FkZ997VfPwXYOTy/q/MlmXtfNWW5mj25eokZz
aTdn+xf1GjU3q4GzfPKFNSn/q3bmHhGZm926rvps1Oy7RNDzaa+P0W7mbVzb
zbWajcPN23AzG9n1U4mf7F3nWNRKlIzcWr+h66+5OWwWUXJzy/uxFzNv0c2Z
teI9iYj3R2tosOzofbnk+1E63mrXcNnx2mLrOXZu3absPW5yJM8VeON5A8PE
z7727im++kvfvrAz4hdff/fFl199+xSL5sdXcHOv6/g8U6tp5nPuaI/uxc1q
Z3f+hZvPVqZcVWblrE6Aa5o5dP5B5JnVzaX+z1eGXtHNPG9fzc2lfhk653fW
i+6iJlxfn4zRO9y8XTdrDMs3P/d1O/w5b7FubRm1d5ZLztys8wdinX/xN18E
5jw53Dwu3wxrqZtLPhu9L6fEFItODX2eJf7X9HwXU7Nzs5sHzbf9RZ75CzOX
4mzmpetKFqptnuvm2rmCz21b8ei9uDkCXuYxZjo+UK3s7OzcjLyqczM8Hve7
9V95ssHNpbF21oAtbuZrB/k7rdMu+dk5eYqbY39pnbn2JXG16pmbe2qca3aG
Bee6ufXzU6ptXsvDc9ysn71eN2deLrlZ3/s4dti6mYm130apjiOrl3bPUXIz
Rzwe9QC9bnYWHO2yvZg5czPbueSzre9r7G/+vcfLrWPu3DKl/iO914Q1P081
dsTe3PyVN755Ebg/cs6Rmz7VbNyBm9nLvW4e7dCt2/lLr7x6tR2l8zl6ObOH
Wvs6I3jMno5bc/0lYGJeB+ek0cMuzu/Owc7TmovNxite9aKo5J0zN3P/5szM
k90sdtY5yBGax4f1+fsB9N/O5uLGfdncgaW89JbdPNLLa7mZc83OzDHnibrZ
Bdyc1Sy7HDLmvq7VP7dE69jA7/zvf53mZejpN3e4eXk3t1iL3byH/V17fbUa
4Fr0eHrq9ylL2LrbzerlQW4OE2t+We0c9RqnnPMa29Fs5+U8WfJyVtO8JzOP
tLO6GduR1cS43hpnNzlPfvytKzdzrvPs5o9lrB55Vr3t7Aw3a87XWZgNnvWB
Yzfjud1rUZvitbh5X1rczD0wWrx8nktR6i94WZ4nhWul+TGsYy034/FSvcZS
ftbPUW25rbjZ2Zn3z1puLvVT4TqNHjdnvTS0xnmul1vdnNkis+Boq+3Jzc7R
PW4evT9rUbseaLUxjnuMk1QT4348puMocbvm5to1zVxDX32GNmxm1Cw7N7/+
1nunwO2im+fWbwxyc08OZrR/577e0W5Wa+B8XuvnfGGlQu5Z7ZflZRHwsOZH
XfBcheFpzC3iLKxuVpdyLz0Y372uC/N/fDm20ZmX+8UhsuV1u7RPCOY8Yf/y
PCi9bo6/1XFi2fzLbgyZ5pidq2/Rz7k1YOYtuLm3BmOOm6PnOffTiHjng2ep
m0tGdve5uVDUzzU3t9gZczCgjvbXv//vTW4uuW+00/Zs5szNbt+P3petZq5Z
2fXYy/oy4rjn21Gbz55Gf2QdR+mep5TDX8PN+h5u3c3waOSca/XNZzfP6oWx
DTe7PHNtLoUt1Qvvxc4IZ2c9p/Pc25pfTOcUpFoCHoumYwgxJ566GTY8O5bW
xw4+P/YUPO/KRe2FyWe7epKLbX/+jSu7Zm7W3LjWiGhNSuZlzpnz+lrdjMe0
5kPnC+deHS355tYxgy4vzb3pSjnnkmfnWpljC2beqpvxXmseWestNL/c6mZn
51otNdbx4Se/8+Jnn//8FJFrjkBvjaluHu20vRm5ZOfMW6P3a0/UcsthW84T
Y4xqVovkPj8u4Gast3U+n7XdbN/vHjff0sxP8f896K5zztpj46of3VJ+3kC+
+d7dPCKcm/k9yOwMA7Gb07Fh5FmunYR14TyewyMC4wAv3EjrYzM7N6vdtZ4j
AjW/PO/3xdzfxs08P8o5T/30u7qZt4Ptyk7WuchLblYDc+645GZ+Hq594f0d
v7Ob+DoHfTf4fufnrJYj7t+Sm+/VzK11GrUaDXazy/NGuF4Z2dhA52b1My/j
ctB4LNwMO0d9BvcKLtVnbN3Lezezbr++rtH7tmV/41gpeZltG5+DOBZ5/ml3
/Yd5qtnIelvtzJ8HV+OR9cJe639Vs5vZzwO8jMBYP+7X/Oob757dHHGeA2WO
mZfIOy9oOmc2/v/P593ecUJHXLq51c7q5rOdeYya6TmBOmF1M1uQzQm/cq2E
1kuwTdNct9ZWUK4VnuTctLoZ69ceyrGdMf83vzY2Jtdqq08zN2c5aH6tbGms
k3PO2gca92utiI4LxP1ruhnb3DpG0Pn5Hty8hpVdlNxcqmnG5zPes6w+Ar/3
1CLX6qP1Pn0MOb2PfvR7p4h5AkturuWaR5ttj2ZufR2117fVfZvlmdnE78c8
qk8BN8fvtb4zes0JN+v92dgA52bY+Rb/t3Rf/R/RVRh7
           "], {{0, 630}, {718, 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
           Association[
            "Exif" -> {
              "Software" -> 
               "Created with the Wolfram Language : www.wolfram.com", 
               
               GIS`GeoServerDump`copyrightData[{
                "https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?\
access_token=pk.\
eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa3dzOHQifQ\
.msWbRUe-nqmNC-DZyl40Ew", "Earth", "Mercator", "Satellite"}]}, 
             "GeoMetaInformation" -> {
              "Software" -> 
               "Created with the Wolfram Language : www.wolfram.com", 
               "TileSources" -> 
               "Wolfram Knowledgebase with tile data from \
https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_token=pk.\
eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa3dzOHQifQ\
.msWbRUe-nqmNC-DZyl40Ew"}]], Selectable -> False], DefaultBaseStyle -> 
         "ImageGraphics", ImageSizeRaw -> {718, 630}, 
         PlotRange -> {{0, 718}, {0, 630}}], TraditionalForm]], 
      PolygonBox[CompressedData["
1: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
98jo+4dE/7PzryX+AIOpP6D+gV3//wFfIfiJ
       "],
       VertexTextureCoordinates->CompressedData["
1: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
        "]]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{0.21672767353873734`, -0.17581807049976084`}, {
         0.3612127892312288, -0.17581807049976084`}, {
         0.3612127892312288, -0.30256238531082014`}, {
         0.21672767353873734`, -0.30256238531082014`}, {
         0.21672767353873734`, -0.17581807049976084`}}]},
       "\"Wolfram Knowledgebase with tile data from \
https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_token=pk.\
eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa3dzOHQifQ\
.msWbRUe-nqmNC-DZyl40Ew\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Wolfram Knowledgebase with tile data from \
https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_token=pk.\
eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa3dzOHQifQ\
.msWbRUe-nqmNC-DZyl40Ew", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], {{}, 
     TagBox[{},
      Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{37.22971078723078, -95.8414785}], 
       "LongitudeDetermination" -> -95.8414785}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "LambertAzimuthal", "Centering" -> 
       GeoPosition[{37.22971078723078, -95.8414785}], 
       "LongitudeDetermination" -> -95.8414785}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  ImageSize->Medium,
  ImageSizeRaw->{645, 647},
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        Entity["Country", "UnitedStates"]}, GeoServer -> 
       "https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_\
token=pk.eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa\
3dzOHQifQ.msWbRUe-nqmNC-DZyl40Ew", GeoRange -> Quantity[1200.2, "Miles"]]], 
    "BasicGeoRange" -> {{19.827123840409108`, 
     54.63229773405245}, {-117.81836210087735`, -73.86459489912264}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> 
      GeoStyling[
       "Satellite", 
        GeoServer -> {
         "https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_\
token=pk.eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa\
3dzOHQifQ.msWbRUe-nqmNC-DZyl40Ew"}], GeoCenter -> 
      GeoPosition[{37.22971078723078, -95.8414785}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], GeoModel -> "ITRF00", 
      GeoProjection -> {
       "LambertAzimuthal", "Centering" -> 
        GeoPosition[{37.22971078723078, -95.8414785}]}, 
      GeoRange -> {{19.827123840409108`, 
       54.63229773405245}, {-117.81836210087735`, -73.86459489912264}}, 
      GeoRangePadding -> Full, 
      GeoServer -> {
       "https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_\
token=pk.eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa\
3dzOHQifQ.msWbRUe-nqmNC-DZyl40Ew"}, GeoZoomLevel -> 4, 
      MetaInformation -> {
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "TileSources" -> 
        "Wolfram Knowledgebase with tile data from \
https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_token=pk.\
eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa3dzOHQifQ\
.msWbRUe-nqmNC-DZyl40Ew"}}},
  PlotRange->{{-0.3612127892312288, 
   0.3612127892312288}, {-0.30256238531082014`, 0.33115918874447636`}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.7394788506299334`*^9, 3.739478897272835*^9, {3.739479103388966*^9, 
   3.73947912654987*^9}, 3.7394810803609743`*^9, 3.739481664352916*^9, 
   3.739482632899775*^9, 3.739483703030793*^9, 3.739484007549971*^9, 
   3.739484307653904*^9, 3.739485258875821*^9, 3.739493114157445*^9, {
   3.739493170438328*^9, 3.7394932298081303`*^9}, {3.7394932616160297`*^9, 
   3.7394932754510612`*^9}, {3.739493527232621*^9, 3.739493535842402*^9}, 
   3.7394939231584997`*^9, {3.7394939562163353`*^9, 3.739493968324246*^9}, {
   3.739494007776533*^9, 3.739494083384087*^9}, {3.739494114271069*^9, 
   3.739494134468665*^9}, {3.739494179706252*^9, 3.7394942054512167`*^9}, 
   3.739494246859983*^9, {3.739574387123723*^9, 3.7395743929988213`*^9}, 
   3.739725390629747*^9, 3.7397255062794657`*^9, 3.739725553114792*^9, {
   3.739725593378826*^9, 3.7397256080086937`*^9}, 3.7397257528619223`*^9, 
   3.739726462201045*^9, 3.73972650044153*^9, {3.739726801031835*^9, 
   3.739726825329446*^9}, {3.739733913787291*^9, 3.739733925012705*^9}, {
   3.739783959239139*^9, 3.7397839833857718`*^9}, 3.739784611255776*^9, 
   3.739809343135192*^9, 3.739809429705398*^9, 3.739809461104163*^9, 
   3.739809584382751*^9, 3.739809675802122*^9, {3.739811506562398*^9, 
   3.739811527271861*^9}, 3.739811582445055*^9, 3.739811826299049*^9, {
   3.739814272777957*^9, 3.739814298937096*^9}, 3.739816906875252*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"ec1e7cca-63b0-4f7d-b59c-45805f1f319d"],

Cell[BoxData["0.2`"], "Output",
 CellChangeTimes->{
  3.7394788506299334`*^9, 3.739478897272835*^9, {3.739479103388966*^9, 
   3.73947912654987*^9}, 3.7394810803609743`*^9, 3.739481664352916*^9, 
   3.739482632899775*^9, 3.739483703030793*^9, 3.739484007549971*^9, 
   3.739484307653904*^9, 3.739485258875821*^9, 3.739493114157445*^9, {
   3.739493170438328*^9, 3.7394932298081303`*^9}, {3.7394932616160297`*^9, 
   3.7394932754510612`*^9}, {3.739493527232621*^9, 3.739493535842402*^9}, 
   3.7394939231584997`*^9, {3.7394939562163353`*^9, 3.739493968324246*^9}, {
   3.739494007776533*^9, 3.739494083384087*^9}, {3.739494114271069*^9, 
   3.739494134468665*^9}, {3.739494179706252*^9, 3.7394942054512167`*^9}, 
   3.739494246859983*^9, {3.739574387123723*^9, 3.7395743929988213`*^9}, 
   3.739725390629747*^9, 3.7397255062794657`*^9, 3.739725553114792*^9, {
   3.739725593378826*^9, 3.7397256080086937`*^9}, 3.7397257528619223`*^9, 
   3.739726462201045*^9, 3.73972650044153*^9, {3.739726801031835*^9, 
   3.739726825329446*^9}, {3.739733913787291*^9, 3.739733925012705*^9}, {
   3.739783959239139*^9, 3.7397839833857718`*^9}, 3.739784611255776*^9, 
   3.739809343135192*^9, 3.739809429705398*^9, 3.739809461104163*^9, 
   3.739809584382751*^9, 3.739809675802122*^9, {3.739811506562398*^9, 
   3.739811527271861*^9}, 3.739811582445055*^9, 3.739811826299049*^9, {
   3.739814272777957*^9, 3.739814298937096*^9}, 3.739816906886629*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"2e52184f-8986-48bc-a00f-5362038846df"],

Cell[BoxData[
 GraphicsBox[{{
    TagBox[
     {Texture[
       FormBox[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJzMvduvdut53hUBB4i6hRwQ79aSSNy6cZ3QBILrTSyEd3HE5qCIcIAaVjYm
QkFBjZ2SxAkC2bGhQkJRBVWlggRnHDYqtHbqHni1dgU9qARCSERFykH+jY95
vd/7e9dvXt/9jM0752c4eNYY79g+4xnjW/M3rnHd9/2DP/8f//n/4J/4vu/7
vi/+0w//+fM/95/8a7/6qz/3G//2P/fw49/5lS/+h7/0K1/4xZ/+lS994Ze+
8Ksf/fl/8mHhP3jY9jsP7Z96mP/ut95+8Q//3jdf/OZXvvTiv/jab7x46xfe
evGV3/7KZfqBN//Mi3e9+8cOt3d/4KMvfusr/+WLv/7X/uqLr/zWX7q0n/r8
Jy7Hon34x/6VS8uxf+3Xf+eyLftynKzPtp/49CdefPOb3770j2XZnpb+0jhu
+v5//e//6NLyO8fl2D5H5j/wY5+/HOcjn//CZT5t7/rcpmVb66exYrzTMh60
Xsa1rPqVMeAedmN57kXGNNt//DP/5uV6M831Z5rl6c9l3cP9YT77cP/ym8bv
H/mzP/HiE5/5Nx62+9hl+pGf/qWXvx9a1v3cz//spWV9pr/261998Vtf/cuX
+d/8yhcvjfm//LXfvLTMe9/P/9QnblPmOQfzOe77f+jNy/x7PvCRF3/yxz9/
a3/i3T/6Sks//Zvt3vXPvvfSMp/jcH05z3//1/6bS8u++Z112eZoyznObO/m
vp7Zppcxn/5nrBljjyO/c33ZlrFO+9xPfu62nnvn9jtf/rXbOH3nG3/jco6v
/qdfuTTWZZrfrGP7NH7nPv8///f/eZnP/Xj74f9VmfdzwfPElJZj+PfWch8r
6zln+kafeC6nln3+0Xe+cWu5Zv/28jSuLefL88rzlpbfl2c4/5auLdu+9bP/
6qVl7PM70w+88eHLWGTKv6f89vPr59jLp+dhem4872fX8+//0Gde/PEf+LMv
/sU/99MPffnQix/50Z948Ud/+I9f/IWf/cXL/D/8+9+8/P7ql790mab9D3/9
r7741rd//9Y+9KfeuNzftOz3xr/w5uVYaX/sXe+5tSzPMbM85/vyV//rR9tk
Hetp/P70Jz932ybn//hnfuZyjPzOOf+r3/nypY+Z0rI8+2XbNLbN/n//m3/j
cm1MPZ/13djG63Os7JPz9jYcL83H+fRPfvTS0pdM3e9Lfx+W0Q/GO7+zPNtx
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
x0Fm3jF4TNsf4VwUZip7IcJffh+Bi8NtcDHbcM5Jw135gFca8YoJ97jY3Nh6
MyxMDolm5DxPftbsn6C1dntEGzbHus/wrNfxvuCxY4zM2I4VtG+cNnGX9ait
77ZmT/Mg2jAsm5Zv7ngistyxZ6yDl81p8AgaWLa98Oz1mOwfDwaMZE5u7Zhv
0fA1jGWW7Hi7ibeaizpPRa7RumKOARtbo99qW2yca4CNM20e7v5PfufptzVw
69r0tz0Xz8HFMDHsZr8MbOx7as049/wDb7zvlsfj3hwVRzl5YmJYubedPBbd
iDc9OlZ46mFjv5s6JhM/x6QZm41XHDzlqOhcFdN0xcR7cXhZFiZOi36M9mv2
bT72cnsvzMLmvvwmj5j9DJmGOdE108hDYU62l8J5ENyiEYeH+Z1tP/PwbKId
w3R8/zcXh4dh43gY0vAzwMXhvPb09vXZP3DUG5ztuGYzsfOrsW7rGOSIM/fn
unIN6Mgw8dG+mWu5H4wj860DM9a9zOzL+0Pr0Zfcb9ccE9YNYVv7KibvcPsl
zMW9D/4JGBVegxfN0sRbOW5+5ZewT+K2b/Eg15j/d9HH9lXfw8Xep/uVBvNN
XDzlG7uHi9P3XJM9Ix4XfK/kOQvb4WdpPTT3oDVgtGG8FM1y5mJi0HjPgYvT
B45FnjLi/HJc3h1aF10xrhnPcWy9zs/0Xsyd9WfY3f4UxhL/Sa4z4wwXP8ot
8TC+4dYsO+OZ2IoNNMv2OvwS7YHu+WbvTM04E4et9ExzcZjEuiXMlta51yZf
Mcth44nnzMZwUHiYxvnYhjxo9nHY8+FYQXLG8a28vaT5nXXtIW3e9LnpT2+T
4zYTb/Hvlp/CGi7vEyvdeNKGJybm2ti++8q18H5khn0OJqZlmXORtJ+Cd6CL
J+cn31mfPr4uJt7Sjfs47sfe8f/mN75zuY6jXuMpR4WfcXtxYOPm47N68Uoz
ntqKjZ0TbuU1DhcTh7fK2dZacWvGExczH86D/9rbYE+EGfnmBxAfr7i4GZkp
8+0lTl/S0IYzpX/xLWQfeBm9GF4kzg8tvP0CaLdHNVl7KJxnmLEww1s3Zlyd
H45l9v/aS3FUK4aLGW/zsPkYnvV2k4clx2I7b+tlL4/3DsOac/t7tr0WZg3n
MTBPM88Uzo02a9/rVmsuNn+iEzv/Mrlj4UCzMVzIdXWs4Yq7n8LF7R+e9OJe
dq+XGj3eeb/8jsG7CB5Y8iWwnP3Qkc29k2di4mJ8tjwrYU1ylCUXSLbFd3DL
jaDc0kd8Bm7Wt1d86bi2ZtT2UeDz4BraF+x/E362zMO8czi+rfu1xcU+b+Yn
pl0xcvbPsvaF9PYTF8NAW57ViZnhYvOTuXhi4FWDJ+1raDZFH71ozA/nRZO2
byP7hzOiIa9i8cIV4Ysf/+Qv3jiMvk8xb60bmz+9TfZJrro0+gRrEifneLnW
X7d0435HYbm9273efLRi4+a0vT75XQM/ylM8xSv/a9aj6+de2WMcLiZ/Cu9S
9gOd4dxm6T2O3fJTTNrxEd0425zJ6YFeTuvn2+8wvEM1E2f+DBdvsfERP8WU
18J6cbzGxOBFM04+i85N3FqxdeQtLoYfyW8Q9oTXrAs/8lLAwZo3a6J/dgtb
uW6EuTjN57amama+5JN4889cuM5cnOPi84VJuU7nSMP7sBfbxtjYz2z/RPMx
GiuxdfgW8Dp7vJ3jwe8f2e+oVgz/H/EXe/y79srkpWDszcjvHONVH8WUf8Ka
G3//zZ72Ivf+7ANvTI3z3HJUSC+efBN4Jdqj8egYldsCzRhOd87kiXWf4qOA
i6eaFK0Zw69nc7XhJW5PtnVz5zq75aWQXmzd3to7vLvi4syHea3VZl+8ve2j
+Fvf/HsXFs78RbO+3iM84fYLdHzfiiFh+M6fQcMTvdK67bugv9k+faI2jXM5
wPj46517gjHF87vHwNP1wPocZ+Lgrebrsudk2q59FPCl/RBbWrG3meKA0DJX
+vAeG7fm1d/1HefmabiA2h/knljlqMg+4WKmYTTroh0rZ4Zsr8HLXLD/+LbP
Rct8GM/wsbXcI9ot14jnw3GPkx7IMsbN1zDpwubkFfetuNi6JH26l4mdd2TV
zNxo/NH2YWKPVc/f46c4qxm3x7jHNL/TnyOaNDkqcq3f/+anLm2Pjft7iH3G
re9PcayTP+IpuvFeHF7rxnv528LGzt8GB/8f3/1bm1zcGrFrocHB8ClcGsZr
//HEw+ir2X9iYnOwNclmOpgcvdj1PGDHcHHH3bkf5lDW4b/IMY8wKLquvSJ4
KeDhzj98qx84vH8w9n4PsRZ/hNfN/PC+YxW34u74zbsJy31/WW4927r25Hmw
BmxmNY/wvZ48Z9SZIAdD63jmQeuXmVJTxHFqaI98w8YHDOvBxWbBV/zJ0vPI
k0DfYEXz+BmteM9bbB2367StuPgevRguti7cYwD/ExuWeXIUmO/QOfHGcr9X
XGytGN7CR0ycXI71J994/42J02dyN3DPoyXTz2zn8zFOnYOMvBrtm+jcyu19
X7ExcYHZP2PEGOBR4Lzkd3hLdTvQeB0juMfBHQdHzgmuwVrxER72GOCfWOXr
sL9iYuIt5m329d/gZidY1bnWjrIxGqB1T1gOz4b5DE72+ain5/yv5uJojrAI
fJztuQ7rgRMbZ5uwhXXN7MN21r/NxOaqiYmpjQLntp+bunc+htl4zy/BPhOb
TT7lLSbGN3JUM0YTPcLE9hrn+GFi59Pm/Sc+BHwV9iJ/r9l4Wk/snXMfbzWu
8UyOCtdZ8X3y+1OObTZmfI/kKL7XU3FUN26fMXF4qxwVK48xXGytcqo9DA/b
Q4zvoHN3MSXPWtZTZ9pc7DxiK5140ivtpei8Y7DuVj4KtoEz7QNJHzPfnmQ3
8tOZibfqcNijQR+3WvtS4M4VG2cZXM87g98VGDf7OszGLGvN2PfFfhC/j/hZ
6HoO7YOw/jtpyDChc/RahzUjTPqw+diaM6xhPRo27jxkZt9HLDjkR/axfW1Z
d4+XYuV9ZkymuseTt5icw2eZOFMfv+vJTR6TV8Zf9VjMg+2XWNXwmLwOfM93
n1zf2K3zaHhMO/cy7xDZ1l6F1oldu3rqd/fVXJzzun7zlMth0nn9DG/5JNym
WMc9DnYsnbkY7b63dTye2TjbwhHWNFf5Kfwt357G1pc7b8WNj6/1j48w8lSz
2Tpme4Zh4vgrYAbYyzq083uZ37MdnorJT2GGzXxYzHkEwm1hM3Ko4ftgPF1j
zxxFzorWij1uzcbNOzBYv0tMXuMthuv9jjAxY7fHxazPmHFfzrAxnIingnOS
mwSfBe821EB83bWiuYeTTrzadu94Z3JUEIfnfwsrNk7z845evOLip3qNt7iY
OLzpnOHjLDcb/97Dv7dVDF5zMfFn5qsLS1UeXfOQWQ8ONg/DmfAw0634u2ne
uvFUK8T9QfslL0YYbuJiz5N/N9ef4+Xc5DxeacV+JzjKxfRvj4udDxkmhpNZ
ZrYnDwgcTS5n9wNfcevvHtf2D/v3xMXW6l/6x99h4PZfmp1Wy+09gAPRdanV
S10G9EHY1XFaYbOuedHMjKZ72WdRB808bM3U3gD3/61r3ZKce6X73sPErDdP
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
E/ce8QYfYeKtxrn5N0O/Mr9ioM5l1ty8xcXTsq36wqv9eh/O6xwVUxxes1rH
9sV3HJ8yzNpsPDW+dfv4WY5WfPNOaHpr4mP0a/fPY+rjT3F4Z+LxzMV77zju
w8pLYy9J99H3jHZWMzbn3svGaRkvdOv0w56H1lPDxtn/HjYO827pxWno0enL
Kmde+45XbJxrYL+j+duyTZ5Han7wXPAMOQcwOc/OxNK9rtxtH374/7LZmFwU
jsuDizMf/wTTKQ+FtVjnNdjKc8wxyG92hsWmFm41+5mL6Rcsm22p7WYfBeyL
58CNvMXhYtfzuMS56dj2IRxhYrgStvc7hHNCo782B5uHO68FNffse8mY2APT
dQZzLffq3fZ6c/5pLLbyi6XBdLAw3mH7kF2DrvNW4KVY6bPMh20nBm4PhTVP
a8j2V3QcFDwcluJ7+FYza6at8j5MmipMDJvCeIwLumrXvIbPOmcCtY7JQ+G4
PnJ+oHFmG9f7nfLmmSPhX959rL33da38DLAZ+ffQvRlvjh9Obs3YbGxvO/1D
U/Y7GEycFt8D73M8q6vvHI/e8/RcelmOR1+tm6MJN4uS19hsDHM69g4PxZZW
fDSvxDT2e14T3usyn2tz3jh8uPgS+H3TVZW3YeUxPqIZd5ycc+Ue4WJ7Guw1
dl5jmHLKzUA/cw3hYvIQ5xjRcfEAT56BqV/WeR1jhzb8StN6GKV1W7Nxey3u
YePpO4BZ+YiPeGLi7ht9tp4OKz8HGx/dFy5Oy/97rf/jpXAO6vYb3JOnAv7e
8lLwjrClBROnvMXMHAsmzzGPeo0zjs3GcLFznNG+Fzkqjvop0pK72N6KcDz+
CdiYqfVf10zD5/Ao31izsNjZPofWHle/99gMzdhxZuZilrsehr3GeDiIr8NT
bJ3YMYEsc+3ke2Lv7L++5Re2H+WaS2Kq4zcxcbbNNWZ+qiVoJm427jzMZ9nY
Y7nylKzqVHQ+BriDPGvkg8jf1q7LPPkduq3+hltD5e/5ylvMfJh65YcwY6IZ
N3+jPzeHw5Wwof3EEyOHR6n1nGPCOuHV8Ej7kjvvxBYfZf9omfBzjom26bpy
julCw534mHcb3yvnMoZpGZfVuwD8m76gDzMWjLnfAcg1h+eXdw68IdO7Fv7o
5mKYz89fx3P2PJ5rjg9Xw8XEPloz933h2cg2GS+8J4ydWRhenlh2xbh+Lqdz
n+Flnit0cbRr3lHSHmmdD8xmHu6GNtvf1be+66+4uDXNjrNrX2/r1ulr+CaM
y37W25qLWQbHwkdp+Q3fTF5c62s+FrxKfyYuDo+94qm4eo4ZA67fbOpz4bmY
8rFt5TWeNOM934TvQccjttfDcXbtW2B8jniNV7F6zcZbjMwxcl+jAaMVOx/2
Fkdmn3tj8XLsH//kzMawdu556+zWiCefxZ6nImN9JkeFnwH7KMzGrRsfZdvn
8BonR/FKOw4Xc8y3/+63b35ouBgmjq4Mt1mnTXOeCHNw112b/MfhKGun93JZ
+oUm6jzAnCvcij8ZfjQXT3mKyU285Svu3A2uJ73SibOd86g5Ts51mR+9Sww5
KLqmHdcM+8PDaMHmYGvP5Og4ew+yfTzGjEGuyV7wLb24869NuXj5Ln/JNywd
Dx3UjBVW7by5/p7rv/GZx4dL3br8HXe82IqvWwucclCYpczFzu/rvt1yOVy9
FGiz/qZvroWDyaFmHdS6sTX2ia+bjaxTZzzQg9kOFjYPu55xv+O4hh5j7TFj
TPreTLnjmovRsc3Fzqdmf7VrjjDWOUbGA68v2jI6Mu9h/U6DB9h+HsY542ff
SnstLvf2oR/UFLQHA1+E/SbWie2ZgIXxRMPUq7i6PSZ+zsa/I66NebjYOX1v
PNyap3gZH8LkQ97SLVd+C7NXL3N81+TpSD8+8Mb7HnkprOf2d33nZoCJX9aM
ft+NjV0n2n2wzm1/Bl5bPMu3sbvWmoDXJi7Gw8F3/9Z2ibWyRrtiY/rT177y
yByJr1u9m6yOzTH6fYRrPaMdn+Vi683kpXjPBz76iJnxL6+4ONui1R9t4V48
GpNuzHY8R0eOae/53rbxf9g3veepSJ/yrsY9di7glafC/oV7PRVd82NqKy5+
8wffvPQrLOzmeDu4OPzsGmzwlrXIm1arXBSTVtx+Cryo97KxufgVvVh1K2DP
9iQTr0YsmhmZ3845NuWkcOzddB2wv+vduTZz16RzzY1H/oohrpHYRo7NPBo4
9QY7No+4PHu7uzlmrhtxd+TUwPPNdZD3buLirRrHXm4Wtm/UzLenF8NfnSNu
8nEQu+VzrHIWTx4Aa8U0ezi8X+vSLA8Hcr2MhTVKa+n2GMPFYdWctz215uKw
FnxrRuL72sVTcNVOc2642CwMM8OWExM3F3Nd6Tss24y2FXPXXJz+4V3Bn5Ht
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
PcFmcXK2OYcE+u2Ki+2TYN7eCrRc8zHngI3RjdMPeDZsfISJyUVsJnZdD67R
WnHr0ZlGv+Z4mW7l8nD+jmbhtHBwGr9bT7Y/w75odGruWebhYf6WpoWN0xw3
B2NOui2M1XrxpBN3O5o/udukT1s3DZuirVJzbpXHt3Ox0aZaH1t98jFhEdel
axZsRnRNPbgafy2+C+q2XfweD/fHNQj7Wlo3dj4L59mjcQ7rxcQKNn81F8PX
6LtwMfcKnmd8urbJlH/6aL5eczEaMVPiQtGHzcbE3pmNibnb4toVB/M94LnZ
98g4oBN3/GD33e8D8b+stNeJYbfanr94yzcx5T1Y6ZJm4dXxm8G+VTWXHbOG
xot/gnrO+Z37mW/TaHD4EuA0clOkURsEnkS7azZuHgzjEXfXfuHu/0XLv3K0
r3liYriYemd4c4kvpJ62vdPM22PR92rlq5h0Y8Z2il3cem/YYmP2OcvG9hpT
527Le5vzxHPOfT7CxV3/Di5O26oZknW0fg+aYu72dGzeO/a4OOvNxWZjvMZf
uzD2D1+4FR/vX/z1r72Sj2Irj9uWZhwvMb6JHHfKObHFw+Zi4vXCWmlTzgh7
BlxnGMYMG4Un8SeT5w22NHv1N3+0V7NwNFD/hlvxVjg3cLcspxacuRiOdrNn
goZWDBOTTwPPMZq6r/UoG5P/4vJeoXx3sDw5M7pWdB8H3zdsjOdlK/fEpBO3
7tvvKqyHv/F6sI7zcp/Ml2jF+XuKf8Kaafso0m5crJwUreNu8XH4bcXEW81+
Vc7RvgFY2Dnf/BuWYlvrqPYEwB3UNt5rOZ65GAbsmnlTXgpyXdCIvzPf5Fj4
Rumrr+mm/6vOxaN3mKt2yz0mX7Tjyrq/zWGOxUNjpl5c5uFi+unxgc1XXLxX
o2Vq3H97rP1sOwcFOSRyvfYaw8StW7t/Exv3snt04iPXunUMuNj19ViOhmyt
nPeBLaY9w8XTcfb2nfwSvf/EZyvmbv140uGsF5srrUmil2ca1mEdLIHu2hxu
hrJnY+I/+Jbv9WjVabA2PBxeCqPBtGlhN/TJiYlp9gnQ3/SPffAf21/c/Lu6
Z0e42N4KfNm+B9PYrI7RbHy2rXIXT7yIpswzeSQnRFrH3jG/56Ugd8WWfpzG
87XXHzxAe3F40Wed7yxT68XRX8kTQR7hKXfbKsfxqr5HtoOLqensnBN7+vBU
ow8tm3pyjqMyt6bBRrBgmG3LO4EeS3MusWYxeyysHcPe4WH06o4FpGU93A4X
p59wsWuANGtnGbmNM8VXwbm59hwbLmUM8DAzRp1DAl8vuTlgb9jSWq1r9jlf
cXs1YFWmU44IPMCsaw8LevKUl8LvRvSdc7fGfHufKW8wOrG1YnK+rrwMK/7d
8hWjfcK4zTR7bDzx91YMoRu5htEZzYzWv+Fi2lYMohucZv+uNWDyPpiHmUcf
tnZs/oFB0a5hTHRia8TOP3fLp3edmpHtPUV3z3KzcXOZ+5U+wdb0zT6KbtRu
mfID38PF6Rdj3+9uXA/sazbO8alXR/ycvw2wPM8BWqv5l9x/Z7Tfp2jJPBO+
d6yzF8Q1+TrncrYlNx1cvKW/ntWM2+8weRxWzV5nN/tcm407n4WXTzrxlJsC
RjPbRecMfzrvFt/j3c8eJx+P6SUmr3zGYVzG6WVtkQ/d6oyElcPj6NVZZ14j
Vy18zLS1YjTRTFme46WFtdGNyS/SPu6Vp3uLi1dsjDcFLvd7w+SnOMLG9/gp
juZrwEuOV3pPozXfuo/8zrmP7Ld6l5vytR2Jw9t7F6B+shvcGyaOhhvfbjTj
rKPWHN6KZmJ4d083Zttm4s45sYqzmzwf8SWHjcOQzkFmLs7y5CSwbuqaH64D
QouvdSvXrc/TudKmXBT2DaOlNhejv3bNN+pSO68b+YnJy0ZrHubcmScOz2yc
+WZjMy2aM/3Ptj2+bo5vnHzL7Ttm2z6Wj+/YuUkntr/40X2/sjr3g3PioSCH
yM2TrfwLMHD7gf3ttXm1/Qx7vglYk/xukz685d1tvdiM0PtZL8ZXYF01PIe3
Fh3N2nMYi7xhzueGV7n7hDYL83KsruWBftzsjOeia340h8KisDHvKOkredDM
w/b49r2CkdLM0ejHzsO80ovps/VJuNjnw6tMTYkzevBes4cGPsZHgY7K+51/
461wfgkzMc89zAwLH8kncW9bHW/lA7LuPunIzkFH4/2gmW7ivZWWvMXGW/rz
ltfYfufWglda5nS+5tTm1ZWH1/ox8YfR8exThSVXnE6f7XlwTJyXoQO3Xtkc
l/b9b37qFa4x85qHYT+WoR1zbvjYsYRbPokVH0/3fsWx3L9mvlVe49ehGXcc
3pZebKY9ysZ8X7Cfgvi7rvHRjMv3htU3jvZKHPF3pM+wsd+VaGHYZuJow+RJ
Cw+HX60lO0eF6+FNenAzMtvGj3E0D9sZNk5DM7SuC//AqOHCcCQxZ2ZjeDgM
CjcS69Ua8TQlF1h+o9eaV8Ox9gw3F+Pb7WatGG42D8PH+HqpgZfWNT6yjTXp
9lLAxjm264CYiZ2bo/MLZzns/Uo96Kp9Z05GY/b7hsfWdVJ4v8mUdxLrx9R+
hoXts+Y9pd9dWH/T8K4eY/Nh13/Dx4pP9VJL7MqCK314pR+jyR71TUxatWPk
Oh+Bp60Xcw3hCdiYWhYZhym2ztdov7L5BC23/RGuS5zmnBh4DPAcuF6Iubjj
8mDj9MuxeK7vjDZsPkY35Frg4SzjGUgjTm3yUbSGTO66nBvdkhp4nAdGY7+z
Pok9dqSuB/r5Tfe+cnG/C8DFzMOPcDI1Ush/TZwdz8n3iouZn/Kz8A7E+E5M
vDo2/banoD26W/y7YuLV9/ejTL2lNU/MTV7eNLirY9cmLdcty4iV6zg28rfh
PUafhZVcH9vHdP0xWNRxjOTTOppTa4/jzMMcM300C6FHZ3k06eiPmXZd7y0P
8ZZuzD2YdOPO/2b2I1+GWdfs+zrY2GPXYwlH9rmP5qhoJoaLedZW+03xdVN+
CnztXrbV0u/Vs4YmDBfDxNRfDsN2ngrru+RIW3mLm43xJ+dc9k3AxEf9xBMP
Ry/OtPOoPWK3a80P50Ozx9b52GDicCCcS46DKW8CjAUXWzN2jNweFxNXl9Zx
d8TOmTE5ZuadjwLud/07YvvQffFXOw+c3w8ch0h/WO76zI4/JLca3E1cX3T3
zMP2eCfII5xxg9dXXghrxni3ubewbWv39mDbY935P1xX27xgPRF24m/rjRuv
zGXmcG3do5qx84s1X8KyW7F3zle2YuzMo522ZgxnhKfIT5ZrJH/ZKh+G49O8
vJnRdTKaj4nLc20OclJkTOy54Lj4jCdvRa6LXBX2Vjgvhz22njLv2EuYGK6d
4u4mvThjh0cGLkYfbs5/KhdP/Ofj5TyMQ85PPCDXNenF/i7iGtFw8sTjZuVu
fF/Y0nMnbm2vsr8L+DsN72e8H/W7i2M+p3Pkues4tElvPcLG7Q+e+PYsX7e2
3NvApeQhttZ8pP+TB5mxyPHxUkTThZPgJrTfcGZ+Z5toyGGhiV3Dfvk3jH43
cexKt7yHk9GHzcTeBn04bExejslffIaLJ0/FVn5ja/To1q0Xv07d2Jo72rrH
u/tAbOUeG+P7hontxdmKvzP/rjzG07mP6MZ5Nvu7xOW5uNZZDqtSf5l6ys3E
1mzJLRymDcu2l6I5mZwTWd5MzHFh4q28cebiqSZJdG3n5iXurGuqkfMX/dFs
bCZOc15gOKs5jTzCcCkMlvkP/uk3HjFppmFE6jy/wsWqe7fKR+Fcyzl2GDjH
zTx+Cc7vOtCsz3L4G83YOrF1c7az94NxtabrfA68f7SPwjmIYVjGH0bP9q0X
209hP/HkXeFeZP/W6jsuEn0er8k77w9ffKQf2q/bf0fR2uJBPuIh3mPkzlXc
NSnMyCvdGO23v6N7X5gUfQ2t17F2sHG0Y+ZXenaO2XX64N/m4mZi8vw6dwH5
emmMfdfDg7W8HO50zgf8H+idnXfC+cm6voX5mTy3e3F39Atvh7kYDZf4SniO
/M7PwcV+j6Cl3xcfxQPvu/Yz3N9czL8D68j89rLWXFd94vlIH/JdYKuW9opd
M4a5rskfQi3wPK9+z/M7Ac/qFhs3N27prVuMuxUfd4aJV1ztY/nYqzzL3nY6
TudvmzTlsFt4Eu2XeXwO4aiwBt7gI3mxsj++hjBTszHT6Zv3vUw8cXF+Mxbh
JnLV7dXzmLT93tbvSe2tsFfGunGWZRybiY9qx3DuGc9xxyX2/cv42RMRtuTb
wJa3N9c21b/by0txhI2nODy+d2wdz3F4rRfDwWFXfoeVqa9sPdbcGhbNvOvh
TVycebTnqVaHY/6cF2PloZi0Ypj4kpNCtTxcRw1/sZm42ZY8DWZi+2Rh6mib
5jD7FdLMac28rmEHM056cfso6ANsTF4Kzsl+mcLK1o/N7I7vg1dpzisBK+Od
yHrr766ZEq34Vh/jqsvit0ifOq4OtnWN7nB4+r3SiuFZa/Iwuv3UaOLmZL/f
ZHxg5kz9zpJ1rfESp+P6XmY3a8p4LM5oxG72Pkza7F6uNvt67Vf2cfED51pe
8RiIF4kZC2ekEROeZTDndN5M0YVXeSbQoNPCK9brrBWjC2fss2zKYcG50O5z
fs7XeqL1fHsk7DcN+7UP2LzIs+A6IxMXs45YL+vF/U5hfX2l/Z5pna+ZXBfU
bnnrmgP5LeVns17u+ErHpHHt9lY4b/GqP3xvoKYIsZQeN/tq8vuWP0+xnR3n
CRNzHp5b177Oso5bzTZT/rnmYph48jBMHoujbLvnq9ja3xw7nRvN2DWVV9rw
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
k+23bL6gpjE+SeeVDffmPMSVWe9uBkcXzHLym9knYY+m9WO416yF7udt8Ijm
HOSvgP2oXde5kOFqYvvs+3C/HKMGE5Nv2PvBwSxDJ12927S+Czc7ly9cbC/C
pBc3105cTC0+4uDQkf2tYWLko6zs7wvEHsJ9PK+8A9hXPOnc6PkwMfvjze7r
obUnAqaFX9F/zaz4gcklQeP4+Gzoo33DfKvgONx/vBVezjNOPhXzPDUq+Fu6
8i3cy8STz/eMp9m/O//b6vxmY5jV+0/9b314qvuB1xYW5tj4cHNeOCi/n0sz
nmpPtF8DRsODusdXzqUQjrYGTQ2/rA8Dh4n5nkCejuxjnfQ52HjyfKd/sPFR
b/FeHN4WJ295vfe0aNeWeV1eCn8LWHGx33n220uWDIeSQ4I6zR13h06c5mXk
aOs4PLwSvRx9mXXm4hwvrDvlpuiG5wOW51qsB9PMZv170nj9/b91xy029u9s
M+Vboy5y671osvm9ykXRcXfMc7zpXCP3/cI73hLm8ey6vgcMGjZ2nmU8DMS2
wanWgNGI6QMxcfYvtCeY46P1Z1nzsb3SK27uY0/ebOZ9/2mtv6IpNlPBm3A0
XAwbm73MrxOjpTleyVof+SX4G59jcg58AXAc+Whh74m/YWLmiYtqP6o9vjCv
v33DzJ3LjeUwIFxszwXs3Bp0n9exVOzHd3c0ZcYBFn7E84qdJF8G+/j+om2j
m071XMibgV4P+096MeNqviR/sNmVnGW8IzyHXpy+O3/x5Xl76C8+BX8LQXdf
sT3MjI+ia5swRj4XeSKcq6S9wmi2WW6WxUc8+SfwrbiuoXPEmK1vnqLrvxsf
H186nhhY2Vycv935rkud4vY/3MPFzUd7y8+w9WrZ5DW2drzi4um6VroxmrH1
YrRicgFnPnx8bzzdESZGw+xaFtSP2Psen21zz/Gjpt855ve/+anbOWA8aqWZ
jcPF2b9j8HxfWks2D7uN/uJrLGPrnubSM2wMD+9px1ta/6rOh+Px0Nf9zvEc
+dq2GHnPN7FdD++d+LiwJfF3NLwKzcUwbPy8K+6FXTlOe4ibmc3BaNJ7sXZo
xdk2fcl1TN6GFUfx3T61JiZvsedb6zTPtq84U3LzUsfN+RimuDp8EDku+5qL
e1vqNHMOH5+6zuxrndXeaudzCPs67i77tVbsGia+Xmu2ZuFJm28W9rjSOn/a
lqdlxcdmX87B+4O9LOM59A3dXgRYwMwLF8Og8KrZ+PJd+5rrDb9j/h57G9qU
hwJfKtvQJ+vCfNcmx0Afl3M5Bxn1Naytwqlow1OeZNjW+eScTwA9kO/vLPN+
sBTvAh0f5nOzj+OurGn7HcO+Ds/DQOQMwRvLmODpgGNhYeu2WcbYmh1ZDlPm
2p2PwRwMF5MnGB7GZw1rOgZvpR0Tb9hcTOwjOSDgULjYeTbs9YaNfS76GU8x
73+udYfn2EyMJ4L81mZilqEhW8fF9wsP812D59NMTC1DPBD2T5Anjvvtc9gn
RNye3wvzrOVvc/6Gh20m78JKM17ptff4iJ/iOd7yDW8d94g3ZNIyw4H4iYm7
Chfb05Ax3fsuf8ZLPOUQw58Kl4WHPd1i46xH885v2NhxeLBx+B4NnfcAs2r2
Tb7jPD/WgqkdEf6zr3ilI3vsGbeX3oT3PeojjH5P473iXi7Gc0RNaL93wcSZ
5vsBz+WWl8J5pZ9DO57WWzuet3mcO4L8xb/8tS9e5uOvIEdFuDXb2GvsnBXR
jcOmHTPXuvEqzq414omnvY561cQAJhdF5uFDewkee0e/9E7dCn3Ph80mbRFN
dtX6Gz3xb2bZNPIM01jO72wLU7POsXTfvdQZe2f/7lfWf/dS1/ClfssxO0cH
uensGYabqfdszdjvEK6lvPQhFCO3/u74OMa+/RWTTt/neuR/Lg3anN3n6Zwd
7ble+Rymeh7to2gOtT6Lhpe//Ry/2bj50Jqwt4WNc2zmYRY4zV6P9naw/OI9
Jk+DWMI6Kwxq1myfAwzrfBd4JcIeaHQwCYzsHGr2ELM823FMPNCOw2sOds4N
rsOeY/Tmi+YrnrbvGX00Y2MvBLXuGHfylrn5+779JLwbkYvZPpNJH56O2R4N
WK81XjiwWZQxcSxo7o/j7SYPCO9dfv+zt9jeiYyrOZdxx89OrhI0bGvF+LXN
xdRqxlfR/gnuXx/Hz7IZndwmxDvi66Cf+Y1mtcW3R30O9/DuPTw89c19merX
Tec6ysVhC5aFe8zFeCiIu0PX9ff6p3iJm4lzntYZrRXDxWkr7vK4ZGpmwitr
NmYssh6d3HVPsj5jwj3putmdp3iKv/M9JPdF+oH26lwL3IezDZ/DvR5j6+jh
YrMx15Df07P43F6KI1zMeB3xUdD+ztvfucXbOYebvcEdgzd5KawHk6uCfZ3D
ovXnlX48acXpV+bDwzk+8X2d8zc8CO903QqYtT0S1nrNqJPOSzydmdoaLi0+
As5Pg2Np5mLi8pz7mO3Yn/517jO35COe8r1lf/jX825oxmjLnRdt5TfBQ20f
9eSpbn25lzuXWnvFJz62Jt3vKkx5L+oceb6miYWbLadaePYYpzmP1Y3driy2
qplnPy18x7HMtdnfHoruc2uN7m9rmP0eYK7oY/e69loQ22YuJkcd36rDJs43
wbhY/3UcoP0PbuZia8EeSzeOfYvTqlhENFuPS+vCjtNj2xUXp4Wz2M65GOxb
yXmcc+yIj2JiYbccy+fB18Izxf3uHG1Tyz5wsb3FYWPeV9pTDJdT4w4mxseQ
5m0v7w3X7wz9bsA8OjjvNnxHaB9GluGxcX2PSSsmh4YZ2qw0seeeF3hi4162
tf9Tc1T08dsjPK0/Us9jWsbxYCzyNMDJ9j2EZ8NYTO/1TnTsl1nI3GMuNh9P
eQ/aV20uzpT6drTOUUGtb/sbYE70U3ufs7/zVqxyU3CvcizGlXXNf64Vfabx
LrDlpzhSX8VsnOMx72fN72Qrzfh1eClWbebkP3ilhTOJfwsXf+gjn715jpuJ
8fXaY4GvYasOSDPxqobH5KWgb/ifoxWHh9PCy5NPYauZE+G2Ztot/wNcbHae
9OL2CMPnrR/D764JZ6a3PmzdOC01+9Ko35cWnnWuimyXnGtw78TDNGvJ4WPn
T7N+62tLv+BRe5+tu3ucOjdzc23H5jXDejuztz0bbONvAsxPPN6MOcWuscxx
dM3FbOs4LvQv1w3bajmONT7O03o23/ftiXWNPWK7ciy+jU9asn0Wj1jZ/t0r
w964WEyLZ6E1Y3yj8MeNh4fcwlO+OGvIbPeo/shQkwRNsvn4xsnXfueaiT+D
oeAqM1pzcTMx4+3a2rBujt85+JxT2PWup2YWvtWfWLAxejSeHftc8I/42vI8
OA6S5trVfpb5RhEu5rmAf+1ZYJm5GE3Zvgd03EmzdrvElZbnvOva5Vouucbl
K4bHrQlbK8azQ9/5e7nniTBfmmuaHSde3eLePtYW924do89t/vV+W0xM6+P5
WGGfcCO1hp2/uPNF4P3N8jM5KlyLDr5E+51y5PK9fGLj9G2lJaJtNjdl+2Zy
vMWMD/mLs33uHTVPMj7xVHTMYbaffBRT3Tv8Kc3NZmPqXNhnfMRznP45x9o9
mjENPwX+avLJdb9z77J84mLu3+vg4hwbH8U6Fu9VLia3RBgzXBwmxksBC3fM
W3Oxuda1O/A6HGHiFReHiZNTzrF65nCY7ygXW3u13tvsbO14YuPOx2Z/r3Vd
+ya6oRdbH4brOs/xO9rxdy/HTe5fWLhbOBndGH7u7bsOSpbRF36zbuLTzg2M
7m3encZv9Y7S42ZdGM+wvRL4V/yu0lq6YxZdG7A9zWZgx91bL3ukoSonbqZs
hyYMF69qeqzaozp41Ny45puw5mzPBPOuRZaGRmoPBf4On9N13ugDHP6oDuC1
P4/qXl+Xhckc19eMS0M3bL+DedvaL+xrFjbn3rYr/4dZfOJj68LkkqNv1md5
95jyTpiLs54YQ8fitR/bvmp7r5132bVJWqt3vrLWmx3TiO+7dWOzca4ZNnbu
Yp7/tFxf17zLMXhPaP2XZTAxPiL7j/EU2z+R5hrarklnxneuY87JvzW+W3gd
99pjxbbUmYaLJ05tLnaOh8xT86Hzuz1F813x85aWTH8mJu78GjAdjNu1O7zd
lK/CeqY9E+jDYa3mSZbDzHte4s5LbC/xFv8wbb6DF4/ylI/V/oHc63Cgc1TA
mzB8lvHuwO9c/8UT8bA/PuTJW9F5RJox4XDfi1X825EcFVtcfLQOIRpxX5ev
g3i/1+UxdnN8He8B27XvZi6GjcO8qf0RzTiMnN/kRsuy97z5qYsHecpZ4dp2
/CZOz37i9k/s5WULF6/06Qs3h/OuOXnNp+Yx81N7Eqz9+veWv9ittdNmw44x
s+bJt317ic2c3ajhPLEwdeS8LNvCn/ZaoBvjmQhH07Ie/blj9Rw/Z18C18R1
9/ituLjHj3eFHjt8JtaHp/eZo5p/T6e8Vf49aYTOT+xcBmZDc6wZ2znVmomt
6dpL0TXa8HOwzN/gL7qeeKqZzudcMfotn4bYtrXm6HRTnWyf2/mDWe4cwz5f
69U3LmS+ljU/48VovzTbopu6Fkv0xjS4ylotXGy9eOWj4LqsQ2e5mbj518sc
B+bW/Nw58pzHw7Fwzl188Z9c399yLa7Vjc8aPs725CuGjdnPHndzMXWl0zJu
eBh4N2uvRVrnn/C3Dt7z0KW5LmvO9sBk2/TZ63hGp3eIjIX7P+m6nT/C6/l7
HyYO6/DN+x4G3tKkj7DxKifF5BHu79pTTbvpGF5v1jEPTzkj2v+An2Ja315i
eDjje/Q7O4wbzmrmo89H2QrdGL61VxgvAnpt/NV5FsjthmYc5stzEaZPo042
+088PHHlVB8PbkdbNv+fyVXxVC8FOjhMbDa2Ps23guj3r8tLwZj4u4Kf/3u4
GL9xGDjsS45jz/ObenNuK88EzL3XyG3h+LtwMVox3on2bKAV55s/zEQOh4mB
7+HdrWZP66RX2u/aNdfIX3ybXvO23erOaXmOF16ddGI4NpzLb3usHU+XhsZu
/4X3gY/NxfYpTHU0Om5xip3b0oytG3MPVzklrBef9dFM3GxOMA/7tzniSOtj
unWtsW7Og2BO8NT6NNzGPhcvsrRGfy/fqsFn5nWN6Gn9qoVPHB+V48DPMDR6
rvm7fSow79QHr3P8oz0UXesEHZzzTLVGsp+5mL5YL/Z6x6rx/tH3PsunGnBT
TYzO89B5o928HAadjgcXTzkp0Iz93PIOhz6Mh4KcFF3DBI8OXMxzzX3wsS9e
4CuTohdTf5Fnvj1HjEXeByZ92u8q5mXu/eTjzr32sVb5AaYGi/DdnPy1ztt6
Rhfe8i/3somfm6VXPuFm2631zcZeRh7k8AQaMM08OzW2bzZu7wUt/oy97+TN
xTR8Hc16R7VJ+3jDnVwXbEzuEmpFw7xcB7oy32TSyFuRbdH4V8/CipM7vu32
jnZl40krfwobH/W9ZFuYePI94z1PDryJjXmmnoOLz7z/HOHiL3/9dy+6MCz8
/g9/+qIRw8Rm42zXNUBWfgnntVgxcXg4vguO5Vg7aoCEkaMfo2GHk9EYzVjN
uOQ5m3I5tGY8fZfvnBDNvuZC92HSiq2vmnl7f7y+bAMTp5ln+Z32L/97/9kj
7TcNBg4zx1uRRnxf1mWfHCdTszD8/a53/9gL19Wecj20V3jKAxHPxqTx9rvI
lOdi0t19LK4n45RrPcLLHnO+Fze7mnGO8vDExdMx9pa3Ltnc0Otd35dv380O
Xr7i4taL4c3WrbuWn3m66+3BPpla+yX/A8eAWVnW/pXOo9c1CtGDzcWOe7Rv
3ByVv1nNvisubhZjHi7u+5BzwnbOf4fvghoc1EHJvDVh1vMuYJ+08+xxbOcF
pD52pq7rsXo+YdyJT10vjxo40zj0eHSuCuvEbAcXNx+nv8RgNl9P9wNu9/ee
Seu3DyTbTaxqv+9KQw6LwMbkZLjXN3E05u6Mx2Llk2i/MXkVfDwzsXnNXtzw
zOSb2Gpsb01yyjkB22zl39rSedPMxY7DO8pg1hlzn92/aMIeJ/Ri/NTU+vD4
MsbUheucx2e4GK52brSJjY9wsfOGTF6KLQ/4Kg6v6/DBxbBx7vfr8lLkfPfU
9eiW/BJovuHd8DBt4mL8FNTkaP/Ein97PbkqMs2xwuXkm4CByW2RfHIsw+uc
tvKSbjHwXmv+TW4Eaic3FzervbIe7ffa8C60/2C1H96J8CmtfROt+1o/Ng87
H0WWe9uVJyPny3ym2ce+CrOvfRSTNyIt13Pxiuh9oMdyVW/FOnvuB3VE7JFO
H5NbznGH1ofZN9ulpkm2zfFhJPJEoY2hpcEN+XvsGr5eZ1+DeYBv1LQVb098
3NxhX7G15f6u3S16mfW89GOqBWdGjgbr3/5+7pwXLGeZtyVXcvS5R36KKxOb
e+FWsxj6LstcL8XcbO2YfXwO1z2xX8XaI2xqLuY8zV/m/Nb5zcXcQ/t+rX9u
NXwWxB7i8aDv0zcH6/Ms8/Vn2izs59LHIgdg+4OsjTtvnffl35GfyZufQ7mu
HTvq9z/42Dnb/Dw7F579F4x/vwf6XbK9RFm3pQ9P/k8aXor2gu7lbtvi4tW8
+Xflv5j4txtshu7rbZmHHVsf7+/RYY+jHlSzlOPwzMNwJdx6hodbM2T/8Fjn
p8h9mnJU7HF2Xyc1TGiwX64Lb4HvDbnuMpboxveyMc8aTJzp5T2t2PhoPN6K
jbe8FL0u9484PLMx096XdWHi5+Ti88/Nq0zsHMR4i83EExfDxmnZx0y8V7eu
dWJPw8bkJm7fhH+HkTOfqX0HN0YThz7yqrZPwX6FiunKNBpp+IkWnmo9s30R
k95L3Bic2vu/0p+Bpc3Fk5eC5V6HryJsnWY/sRl4y6fMb9jYTLrnMbHGPmnt
UyPnW9eRzvlyXmpQpx/kZsZHE87t2Mc0cnHgQ79c3/U9J+NihvD3+ExhH+K4
usYXPA0PTjzgnL+dY4q8qv09u9nK+pf1YRhpS7s2w3Mea6lc8ypXm6+tfdjN
G5k6j7Fj3bhWs7SP3R5T69qwmLc35zbDT/moe5v2o9ojQY0S+2A4/1Qnzlzs
luWdk+IMF5NTLOd1PW9fS7wr+U0Oks4XiO+m3+VWXGxvi+vb+Dnk3k33nvcG
vgfw76M97/S/j+X3P47LM97vaIyH84lM31O8Pd8ViBdd1VpoT6f5lNxUzRdn
4u+agSb2Peqn2DrPxMbZh3wK3ibsFl6LhwHmyjZdFxq+vqeeHfzVXJVj4TO9
l4mbZ+H81ozPfGuHs6kVbQ6Ef8nTYS+FvcHOAY3PI2zMPdh6H+v59hz7+cv7
zr1+iomN92rfeT3PQlg3Y4IWjFej90UzhouPvqs8f5tj7ZJ/IkxqD4W9xSs+
Zhma7ipP2xE2JvcEGvSPfvCN2zFzfJiYGh/RivN7imk72/DNOsdXGnnKzKJd
p7gZNxxHrocVS6/27TxibnDppBfDxejF1nebbbvtrZ9arm3Se83Drhfi5vcC
69dmaLwX/Q1gdb6wMMci58jKC47GDFNnufVWMy3fnF3bLH+X0busPeI37TwF
/h6elr/FOS65fc1LsK69HPxeeTJgG+evbV8nLJN+O6eBc61NHAnLmF/MRp63
7kcsFd/zL3m0ruNg3dg68J5nBP5xbo1mnj6WPcswPTyZY/f4ZOpcaeZBuBEP
srmYY791zf/WXJz3Kby+6MZ7TOznIr955tBryQ3oXCH4R+wl9nhNz5G/YaCv
wo3UvGtvQvsR/Cz4eaAWCL4a9GI/A2jgeNL9btlsy7XzPcfvRBkn+9qJE2Rq
DZp/e+RwgzNWTLzS6Iiham454oGYNN/JT7Fi5j3/hZdPOYlhs+bi8AzMF85j
225Z7niqp7bwYRjF+YCfSzcMc001P+6Jw8t1w772D2Qcw715n8h7RdZn6ueq
303wLWd6RCu2n9jPXeZz3/D1bunGR9jY7y57XgryTPRyM/EeV7+uvBT3cDG+
iXAmGjEc3A0unmLw0sKp5Dzeque8irXDV4xvAs8EHAwXM806NOPXycV4bc2c
nbes2TachYbpb/ZZNtV26/i71bFzbri44+/sPbZu3FwcDzHN/Dyxb+vTLHM+
t7Bl9FZr5FtacDRa3hVozcZs63ocUw5n18ee6p9Yr2Y/dONu/A2232HK7zq1
zlEBc+bvvT2jcCnzrucBP25pXOYS8wdT5/vK8XJ+MzRMRt0w6tGZUSZN1c1s
ZY4y3/i66AvjgK+4c2/09TYLM2XszGR4YnmfwUPbPlWOCStT14N3IWvFU0wk
yzrH8NS4P9kn9zwcjBcg610ne4uJ8QrDxfQNz0l7XboWjH3z0/Pt7wd+3p2r
sN8JqO8Bb/Y5Ls/i1ctB7mLqr5BPmW8H5lfeAeBox5D6WexafIyFv+V0rfQ0
52SmBh5aPP7HiRPMKfnNt/PW7WCjVQzbUS/Fyjux5btY6czNwtaE7THmN/m2
4OLodysm5rrP1uuY2spLjD/3KVzM8WC+1ozP1FtzjgrHF/IOwTPC8o6vsxcl
Y55/b+S76/erlVY8faOIRsx5qDfSfuP2UmyxMrx6RDMmjrK3gXcZn1U8JnF4
z+2lOMvFrlXnHGxP4WIaXHwmF5sbnuEwbxo6NDycGndpLM8y639HdNnnbBfd
tPzF8Ff8vHBgmM1xY+2fMFvitZjaFhdPnghi6rxu0ovPaMZm2jT6nmlfS3tK
nN8CTzDXlrFieebzTjH5uY+0KV81/G0vMowe3jDLtN73Opr9q/gLmgm7tT5H
w8ebxnxvG07JOueFcO0Mx6N1LJ5z4bpeGzFhW3nGYMDWoe1H9ndz/B2Ov2uP
K4zU1wh3dl06x/SZq9Hbu74z3AtXr7jY94pz8izZm8A3e3RL8vv6vatrT+Db
yb0izqxjHz3NOvwUsKLfI5if3v3sp2B7PNrsk6n139ak/U7DO1cYFSZFM4eN
rdvjPYajYfJmW3jZ72j24vNs93sr7wzo6dHBHQtJrTbyy/IbtoA9yNfl2Hu0
Y9rk893j4i3/xMpL3Nvg6dw6F/zr2h1ZBufmd66Ta2++ZB84jWtub8FRHsZL
PNXxtd9grlF2jmVh40kzPsrenaPC15zG2DB+aMHkaGifNveBXBb2GlsL3mLi
6T2O87en4qhmzDMGV+95Kawr+/5Pz8eKrWHjp7wH3dvi3W2dGOY19x5pExd3
joojdTusHVNHJEwMD3deZPRjuJiYOFiKebdp+Q+97/2v/KaFl/r3qmVf/LZm
MHIkEHd2izcbclKYLc3BWZ8p651/wvxLDF3nbkMX7ti8Vf7jM4yMjowXYU8z
5hryLuE4QGLh8P1mTPmNnxl/dBr+cNeu7vhGc7GXZ39ybTy6hw9/k8Mznc/J
OuL/X1vYwPH5q+uAv8MNzgEHy1pPMxdnffiX7TgOy6dcu9bB3XLuzvXc/mIv
s95rnnauhKwjN699HmEltnPejPAtHGWmsg/GXDzd/9aL21dinT5Mybhx7rO5
TdxPxsFMDDOSj83xZ74++jjp4cTBwZfkgYimmufLfMl1Tl7zbMN+5E2mViHc
Sz1p8zusmvU8n+0nWsWodv62adv2VqM3Z/swijkEpoj2xjSs7NrA5pxJM155
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
MfaYcY9Xvot72Hirxkdrxtlna/v/LzRj4jh5JyKH8hQrd4SL9+LvpjrRTM3G
W0yMZgz/4jN2zZAcJ1wcdoaLncOraznTVh7iyQ98tpn9trgYT8RNK74ycVh7
yuFgfbhj28J6zrc2sWxz7nMx86rBptRlJoca4w/fTqztPBvOOeec0Znae5zj
ZXmPDfeia6HkN54L+8MzD+uaF+ASeJhvu73enNw6WLPztN7noBZdpslXMDHZ
mRwZ+Zu/5we+R/M9qgs3E2+xN/309uS9gE+PvgtYU9/bd/o+4OWtra58xXAc
rN18az31LBvbz0COMX7nmXJeEXJ5kEPNPpSjOVY6bhBWtSfhiNcX3XpL850Y
t2tCw7tm5dW+HdNJc26RZuOVDjd5O8mFFcYxG6Ejm6U7Xm3yWnTO4yO5LMgZ
ERZ27FzHarmZcbN/86E9lz7W5CfuHHXEeJFXwS3L/M5whmHSR865FZt3tnnf
eBwmNj56fPeLnGt+L7AmzHMzPWMwcX8jmGLxusVbnHPl36rvqe8X3puzPNxs
vNKMna8NRs4+naPiiF5MnpKj71BH31/8jYRrSTuah22rrbZd8XHayk9BLmWY
GC62Zkw9j+ybvMXhYuepWPmKJ2/F5Ctub/EhP3D5j9n+CBezfzgtzBtmS/0Q
x9ytPLGscw3nLY23c1Kc8Uycba49PfkmyKM39dt6N5qwj0tuN7bnd8f9uZE7
uutYT+8/RzlzK4darzcPm0XQydDKWreceLtzKPD3nWP1enJUkDfCTGxWXnHy
94KL23dsrdjasnPPMb/Fw90cK7nnI+9aHV3jrTm6n4fOz8a7Fjqy9edm66mO
CeNiLn7kmXhYn3uPvzjTsCg+3ylfn5+tI1zuXBFm4z3/x+RxoC/2yMDA07aT
XrzyMMG4eL259taXnduabZpT4CI02FVOWRim68CZOVtPhlG3PAl7XDxpwdnX
OYmbrcwEU/+c92DVR3+3by7ONDq6mTg65j1MTOPYq3XPwcbpV3NxvBW5vqfk
qPA4+L61n2LLS2yf+RYbT1zc8X7MU2vjSOtt9/JSNBffw8bkpsg48W/rOZj4
FT/2T76M/8x728S5zklxRieefBUTG6dRw85xeGZia8fhXXJRwMfE25Fv2Xna
mmWdz+EM504eY5o16Qvfav0lF9h1n+Zi+ydeqTl9zcmAX8O6J6znPApeHt3T
erF9up1XAjb2fK8/4zfeq5OX5XiNXYcZ1iVWr/MY9zJ7KMhVh+eE8cBTQZ5j
czhj4vPmWvFZEA+YNuV3MKtO+iB/oycfbHPtPW2l67lf9g7gA0HLIw+utWLm
HW/H/EpXXq2ftt3Spfe0avuce53zHzvX8x4bw2CrdoSVp3efSUfm3EydK437
g0/A8WeTv8BMOtXXwyuQZV3zmmeV7w5n9eluuQ5yPHRc4RHt1zmK/a6x0omn
thW/2sv72J2LO2NCf/Bbd56AbymnL3H9E8P0MjOyuWvyWrQeao6BP2Apc7C9
w/YTd7vVPrtqlOGM9kS7T34fWPH69E3e4xDtNfwT70DOn2PveYm3mJi+rXzF
zfj3snE8HqscFdSlPsrG37rW0YYF8Rr7feVeNp6eu/hXOI/7g3/HbJ9lfu7O
asfh5K28FHAx2rGf57N6cRps/BQm5nnGc4TvhPksP8q3kz4cvs227ZNoDXnF
xvE2//LXvnjhXuqLmIndkmuCPGwdcxcuzjGyb+LvzLt4DuDMPQZ+lDNtWOfW
OSjMxcw7puuyvfKw0R7F3T38Tl/jabbu2XnbWjfOObd8wVNuCvPwKo8b68kH
sTqWp+xnvdnsyZjgHW5dGN7FL4Hv2B4L7+u62DA2NToYQ3Ihu6/2MOPzoI8r
7WyKF9pr3hducA2FLd41d7U3doufzfXZ9zm8Elt1il3P4whbo1Gv2Hmap240
x7dW3Lox885Tt6Uju8afc+1NmvGKiydutmejGY37FL5Es/Tz1V5bexbal/G9
bHiF7VdmXOxPMJM7JtHvEVu+CR/bx/V96Xi6aZk16NaZyV/dfTFv+O+w/Z/2
Sqy8FvYrmJGbQTv/mxkXlqCOsOuHpOEnpgZC9snv1vbYLlpi5lf8CDe0l7j1
tWZiuIJlsGw045Vv+SjHtEbMuwr6ffP8U7iJ+5Nxfq78bZniIbF2jqcCHuux
PcrFzcYjF189x9aQ4WLnvziiE3dzbGUzLb5deylg4yOasbn4qWyccXIcYHid
fvHvI9NVvN0qX7F5l+06Fm/Sm1eeiniNw8TtL3YdaHLJxTPh2s/RkPEWk9c4
XIxPOEzs7++wFFx5020Xfohm3klHTs6JtBw7sX0554qLL3l6O+eE6k7jpcBP
6746Do88Fa79kemROLkz/ocjyztPm3nZeZV5XyBXRBqaLnzLNaD/On7vVgPv
qvcSf+jtrTFbh3ZMJMxsLwX6PPcpfbxHy53axNEr3j5ap2C1zn5RfBTo01ve
htflm7iXt+0ldl5oeJo+x28NX6OF4xWx3yLLOlbSsVzmZPKNbenGW3p0ezXC
j7kXzYN+RmCy1pJXzwzM/LrZ15rvimE7l4W3Z9pjM+WH4L1hWrfybk/vJ1v/
Lv1vwt7uqV9mD2uzcMdU/3jLj9wc2Yw85Ufu3/nb3TUh4Cli9uFTGCXb822Y
v/k5N/UzJm6wD8LX7fN2/NZl2VVzwxtrHdIMflbPRbOemBNvNceE6Z+Dizn3
U9m4a0XnXuCroJ4d4zSN61k2znHs46aRo6K9FV1r74xeTAtfpjUbT1xsNm6t
eeJrM3E8FZluvdet7uklDkB1sOFi4vroJ/7izllsnqX+3ZY3whqzWXlPL866
aMZhY/zCZmP0YOqOhIujGbuuh/MYM49fNIzqHA18j4cjp7g7mNrf/Ltmx03D
vfJxzuNaaWGs+INd74425WLLdh17B8/hASGHWTdyKxB39xxcfNRbPPklJj8F
LOs4vLCnvRDovvgryCNsXoaB4WDWZ3m2z7ngY1ic+h+uN+2cGT2GPDdHPA9n
/26j893D2/wdd03qLa7uZt5sBt3Tgc+0Zt2neJHRhXMc+z/QjKlB7WWdfxkd
Gx6GhezH9piiHbtZnzQ/Tzn78DL4Oz06qr/fN8tNmuj0LNincPSda/Vu1c+i
Wba9uM6h52ffcWt9jJV2u1q2evdY/ds68m8uLX2f3nG2/k2bPSYf7xR/d6RN
28JFEwv7d/RRGPOm0V6/jVOn2vko0rK8c681g7Msx7KnGC7uZe2xZjt7NNCL
vT8cc9ZbjLbIPhkHNGF7qZ2DduUPOcuyPn+3M/nbnAsO1oONGZ9cF/eu36PO
+CkmLub+UlOQ5dnez3Tn4D7amjM7lwTcPLGxawSiS5uNYeFM7TU+6pnhuwvn
bgamwfVbXGyvBDrwim/NxuRk29qW7XNcflMretKN0yZvsevdua40/onogOiD
HQdmby55Eshly/f08LBzKNx8EKo5DN85t5u5mDprNy6umnWTxxg2holhN7ec
I+e2bttM/NS4uS0GPtvIPex8c91fa71mVudx4/2AcYCTw9zsz7bwMsew14P8
FTwf3EPrxWhMzcjhCuatQ07rPc+x7uHjiZFWyybd+mh9jjO+ie9Fsyca9vU8
XmN7krk+cjSE8aIZT/mJ0Q6tI5p1J3+qYxfZFnY249rfi2/1rWtdN7Z1zRL7
Wyc/LMvZd8t3MMWq9TJz+JTr7P8l7m1frdvSs86vLQlig8HUqaOgqaQqqZR+
SCyrUikbTaUSYysKDd3QalV8AUEQ1ARTZSNNVyXpDqJCQ38Q8Q1pEBQkGuPR
HEGrPOXbhwiK+IKC/8jjvtZZv1W/fT33GHOutZ8yHwZzrfky5phjzr3Xb1zz
Gvfd89teUpqlW4c+KjB2863jde+K4y7bM9NtY/+VR3fFKDuf8T0Fflyxq30d
1qw7PobrmbTW5u/2PtgrbN5CrzYrezv5sdEh0cWtuT+iGfsaiK1ljZhxBXW/
ibjGroOYZB1b4ZEYFekfszFxnD0Pr+cxnmVj3yfH/EUvjYeGdeFwv/vo2HBn
/cX2UuzirJmNux58PxT8x/Awn6kDhj3ye8P43Dfa0Uzcpf3C/my/8I5vo+VG
8+14xUds3PXELzHlw8Nz3PHaKPFO4E3+f685M8Kl+FKtYfpde1iKOF1wquNG
OI+HeQzPco6FdaP3ok2adZ/nkfi5Z3P/prl39kegE7vAcfbSTnGK3xQPv0k+
Rg92HGG8EcSScAxjGJbrZB/7YtjPHmT7JqwTm7n9PHBP6Uv7KGAl5it5Llsz
7sTDZusVLztWgfe1Lgx7WzdGl3SMi/DN5FuefMXfiFhsL/EqTzpz2k6s5Z5f
BzPjp+AYfMiXGGXXZY6lT+jP9lLY98u6jm1gLk6hHvOqtcxJL85x5PZOzAji
RpCD41Ku15CSeXbZv70IZ+anOZbZLjfjav5as2mvm1i8mXbF7SvNdlfInX1P
yd8KfUhuHFiZ/ln5i8kPdlYLXnHyvazcc+ms+eEJbd5alUk7dY4vNEPOyzGv
eSc+/dkLb6XA53BZ9oPlyB8Nu5q9HU/gpbEj8DKEM5nT96YLfc88PBd0z7MM
3jEq7K1Nn9qzE0+2vcbTmMxafD9nqbv1bOp1/0+xU/xsnNWLcy64eMpvaC5O
WfG1Obu52Fxthl3p9rk25qtyv84wccdpa534qMT7G0b9yj/6Jzdu/aZf/oFL
MWOf1Y/jqegYFdaN0YtzznxOyby9rAsX41M2B5nLep4W79zRlpOjzvkm4CX0
WXyp+CXMu7AzMRDwKMOAzDtDE36NjaUX35i8NOUwJMzYOTQ8b+6/Jxffy8qO
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
SeuddGbn9dhtb48wHNrn7RgbZmv2bz8F7wB8r/C2oBnDxOjI3Cs049QJC1ur
NienMEcHH6IL863uLcz9Mb+iObqEf83lWeecFjuPanOumXDHxVNOuW+0b/gs
YzMWIC4FvgTngranAl5ufdd96bl4O524uS1cCUtSX3MxHOlc1jt/xFk2hout
AdvjcaaYk6Oh8jl1w8t+V2L+xnPRGvROH+Z89ig7lrNZ2sy6iql2D/uazTt2
nmN6+J5xXcwfm/i3dVl4wssVL0+MCmMdsfPke3iJb6NZ2PU2G3NtxJqgODbG
yqvK+cxYWReOgf1Sx5ucO7di43s03V29uS5iQ3ecirO+EHM2vm3YOJ8ZN0Sr
ZgzS46QzbDyV9k00F1Ov79mRbuw4ElMu544n0Vw85Zi2v3jloTAXOwbbTmde
MTHtPeLT+Cui/SaHBnPfwqFhUHIzw8bMv8sSfTc6MmyMFyLHn/FTJI5b+4zN
4ynk9kid2R8fBQUeTsn37/jw25f5dS7JxzHpkRd+us7HS4G3U1IP58g2n4e4
xebisDP5jx0Do+Mh5/uKi1c6r3l3x8ZHXDwd09y7056n+Xi7Nqd4DELsYjwq
6VP7JpgjyT1oT7HnVHKM9yHnXXs4svT9b3+xNbusQ0ub5h/tSt7lTxxLveiM
xCjg3TmMnmXruhMTT55dx1A44uL2aPxS8HCX9hW/5pMoPRge9RgDj+8Uo8Lx
RVasBTNxT8zFzYgX78rT/baveNLn4dBm45WuzBw/cy5MR/E7i5WWnCXe2imf
TPNlxhlhYmI4tIfI8eb8riRe3o98+wcvfXFGRz6ar3cmjkX6aKUlr+Ij998w
DLDj2el9tpl4pdfZq2A2PuOh2GnFZz0YK5+EPcVuq7VrczHHTN7UHYddrvf7
P3FjmHgz8Cm8qblzq/h0zaMv0Y3T5ujm1imZi3dW+6au/B/yHLwwWuqOr4D7
MOXDay/N9Kzt2Lj1+34uev+OGdEFVp1iUsCoHetux8YrHwT6cX+nbs7fXDzl
CentZ7g4fBr+TAw1YkFkXfTc8CgaLR6GZmO0YgqcHIY9mpuX7amf+G2wtrkY
j3H0YuJjPNMhr/4IODYMazbOPs3FzcgUWMx8DBvDcfD3xMbh4OxHDIbO50xs
C/aPvkx+OGIV37TTBzXjM6zcnN11n52Xt9uez46jRnwPdF3HFGnWzf1MH+M9
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
ko/YmDaELckdR0EvTsn2MChz3iY+tp/ij/zUn7iwsT0V8WZ4rl1zsfOAdIyK
HSOjM6Mb5zpSyNdM7F/nnGOOW3gVHzL+CVgJhibOcZjXWiIxJSZ/Be/1YWZz
XNqCHrzk4iEuW7MnGmva57bsmPZN8LC16kd9FH0eGJ/5bu2lgHPbL5zrtsei
NV/uo/MHOmZ1xyqBlW/3S/pvF3Mv32+/vVeNCj5O+V//0KdvXHyU18xck+Ps
k21WgG9bdzOL3rhoE6eh9dkzGvCk/+649014KSYudrFO33k8iP2RQuwxmJr3
7WE5lrCu83SbPz1vDN5kHT5ifL32FPf8QeqC16grzGrmhWWtG6N1ui3E17A+
zDU6VrB9xowHvL4Zu31FsDLvM+hTztXas/VY2mpfimNO42de8XHr060/r56b
nqfazxTzN/PdeWXxQxKfDJ8snMP6FHiaufVh5zAH8+xSYAFiqrXvIveitTlr
1eaYI4/lND+J71kSbwOvBm3/yuW36svPmHjSgo/04uZl676dT3Clm7LtJT4H
jqMOxh7W6vm+4vR72Rj/RPPxWe3bTJ9ny/wWPibnB74G68o979Lr7Q1/1E+B
XvzMe6A4KCuW9Zw3/j7QmYlrYY6f+NrzPym7eXhnmNh52HNtYV5zsAuMHPYk
JzN5ntGK7ZOAU4mZBhtTh/dzLGL0Zup2rmhzcfNx6o3OTf6QnA8upkx8jIYc
Pm5vRdaFk9CVW48Mh2XbxMT2IsN6k48imrE9xhMX57ieX9csSd1nYkycmYM3
eTB2XEw+vJf4KOB8tGL8EoxNzLBss1clBY94lvgm7CO3Zty+445rzbb2TFgH
9tIFNp72hzOOChzzjIuvevEqDxo8vHpP3TmkV/OmWj+eOHnHzWf4d8UtZ47z
te604vQ5/egxQev4xOwlDh/c2Rpt+3fNs+2jwAMDF0/jEOawhcOog/V4jp3D
zszJnDjruuifeDMcMxg/jvN9oBWv9OKUnC/tcYxk5wXx0mNE7w83EweZ/ZqR
pzl2zHeF3c3Pvk78GX6GzurPvZ1xROqZ3sP2+9j8XpsFYA4+u458DwPAerA1
zGw2aQ+DdVlzMT7MnY5mXph4IO2CB/F82M+cd/X2brSn2Hk6VvPwpm05X3Nx
Pq/Y2P7dezi4GdN6tv0iaK727750Hp7ZGCZGRz47D89tcD482Jhr6Xx5q4K+
i958ho2n9Yz7pvr776C5lvXoxbAxMdweYeJVbLgzGjE6ca6T2N+tDxPrLLyM
vxivcZgTNg6PdrwJGDmMSoyIiY3twfCx8XPA3MSoWHExn8mHR8zkxDM2E/tz
dEPHeTAfo7/iKTYzdbwCxzTGQ5HvXjfpl/goznIx8+qmuGzWSPFSvFQrPuLl
1oof1Yt7HflSJl+w9WD8KXCz+9Y8zHruPX4M+ycmX/GzeZd6b3ymoBOv9GJ8
pZOHwp/tC37mC7jmn26fxKQXm335vacO+4tXevGZctYXMW07e74dx0waMYwb
xvK61jpbY4bViFHWMQvQjM2hrQ87PkK+RydGh5y42H7dFDzReHrRgz9fvh1z
JBpz7imeh3gYmGdHHAhyznRcQTwZFLiX64KLm4ezDQY2v0/vVNz3+Rw+bpYm
7gs+/mmsY53aHA3vd66/9mVnPmMKMT88x8+eoVuRFta/080B9gzbBznlqc35
8/ubd/dhMGIB23vqeW5wCfnlzJmTHnfERS72beKFRkvFT4DfwfG6VrntVl5s
ro91qQOPMvW/P4fsra1uDCOu+PkMX8J01obR682GL/EZ+x6Gf1svpn/vravZ
1/Hb6Ft7LY48tLnf9ssfacbuH3xF0/w1jwuJlTLFWsu2ZuJm49WYbxUH7l4m
5jxm4rRrpRObiZ2zI2zcPgq4NmwK94ZVw62OodZsjL485fxgHt/Exu2nSBwN
cu2F6c3DXXb6cbiKfB54iVtfdH48eDlL/MXWjFuH5H1+x6TYzbtrHwVcafZu
//E3gosnJn5kzt2KizNWcGw22Ni6sXXk9k8wpmEbsUaoIx4a3gVYS578xdnm
3/lJNzYL77g4TIyPYsXFPT/JHmN7Kdo3gV7m98N+F833bMfzyrbW1h7xMzzC
xfeca8fFuS6YzOzVGrI5yzGOJ+6a5q7BgvYgWC9mfh56Mf4He8LbQw6T5V6k
fRzPe3zOZU+0vcHmYs6BJm5fMO8aWD/pxebirLcnAx9Fzmt/BX1qj4S52WMN
ckF2gat7P9Z53NIxKMzQrofrnGIhd4yY9s8Qm4NxEV7i9EvromEd1ue31D5J
57xYMTS8lHe3xHbIe/AVE/HOOmwMn+DjhBOIJzxp2+iD03t1+Cr1p02eJ2gm
9jtm66kurRWjPV+u7/s/sfS1Un9YecWi9ho/ysbwsefa4S2GjVd+6EfPlWXY
z7qxvbT3atDTPDyeizyzuY9nuJjncZqHd8TFvFvI+Zhn1+zJ9eXaYV2zK88n
22DoIy5eMfGkKZ8ZK6auv/vOe5d7T6xkc/HEwM3GcDFs3FwL7ybOMXPp8Brb
bzzpy84Vnc94N9pPsZuHBxvDvo/yMR4I/Kgp5ij7UtEfnR8PDZl5YswlCxfn
nGHuIy7GC42XuPN1oBvDq2/CW3wPEz/in9i1zz5gfCzMxXN8iim/B2MPeBoe
tmZM8fjG9zSfrSX3++DJGzHx8KQXe98jLubYSS9un2qWbAtjhYfMz/YXw8TU
F1Z+iV581v/wiK/47Lws2Ayu5L4kTi7XSr+bl9nHS2uRLp5/t+JiezGIq0es
avqddjOGwc/q3G+tQ9ujQfu7bb531pntLc512TsMBzcX27OMXux5p9M4pHXe
VfH40gw9leZr2tP8PWn/PAP5bu9GX4P/vv2dfmpe8Hy61kObIc0P1h8vuu/V
n0wsgaxjbt/03t6asTXWozhTLmGD8Fh7K1o/DA/sYi+3F3fyS0y+YtocfmsG
g4dT55FvwV7jnSf5iFU99875MXxtL+Hh5uIU4kw/EqPC9x3O7nx4qYvY2Cln
2dj+8tUzP62Hi/FSwKxmbrh4iq/dcSY69gR90+9rjrzDu3c7rRHDxGjE3of8
dC7m4ZTWezO3LvuQ88757xzbmHx4YePkykshzgWe4jDwlCs66/E0H8U07nx4
73smvnYpZuQVJ5uPw8YwacetYB5e55X2Pi7kow7fwXQ5T76PXHzNd4e+GR14
x8W7+Wxvio2bhx+JQbFjYorzXTN2YP5iPjNecJ4P5tX1PDvPt+Nechz820zc
ngr/ZpqDJ914xcfkeE6J7muvq3OvwY5sm2Ijd7Fu2vPLOr6amdnbp7gUb1oz
frSc8YZOzObcFtP4At+s2Rl2wmvreW49z85cDJtGYyQPs1kafwR+X+5X697M
leMzunDnVOyYEfEDdPw9PLh4eh1/ovPTmInNxVw/enGPCVPvxKjNq6vvKzaG
TdF07Wu2Vuy/y8l74fve2vWKqVmPJ8Ne3valmoWtefqdtP3BYS/Hmbhov9c5
eme1QsfcJRbAPZ4JM0F7PuCrzt83cfERG69YuccKfDYr2z+y6ptm6kc0XTOf
7yfX9lKdeNJ5UzpGBRryUYwKjvM8vKzDM0GBJz3n7gwfMzd0V1bz7ogfMWmz
eOp5VzHFp/C+ZmL6hc9n/cPt2VgxsXOS2DOV9enf6LjwZ0r8D8RnMxfbK7yK
UZFjzbjkxGMeXrjYdbTOHG8xTIzfmLYc6cUpyWH9Uxdt/3fctMJwaLPxxMeT
dsy7986fR9wEPKnkmVjFOubdPtxrLn4Wj+K6HZYjHkXHb3DBg/yN0IonHn6E
iXNMfBJm+94n9ftehIfTF8SHyGf7i4mXBz9zT8inTc5ANGj3MfeNfa09893v
W89ysEs4GE3YsRDgDnJk2IdhLXPFw8zpCgORA9isa2154mTHqnpTXHyvTnyG
o89oxhNT5TPz2W79Ud6J9lOg2+Z7mGjK0dGx2uDVKW5uCvHh2j/S7wmyH8/I
LYaGfDQ5B+0Ju6butBEej2e2c2KglXZMNfwT5mKva60cLqauZkrGIs792PcC
brX/Y+JUex/MwF7n+nZs2+PYnTa90ovhpfbQrnRR56IwR+KRIA8Ghff3Z9iq
vZ1Z+j3wbm7gio099789FeGFM1w8+Q6c224aS8CK6MTuS2vA+DBW/eG5e4/o
uxPbrzibe/ooG69iVLisrsE5UeyxTsmYotnY9zha6Nm5eM3AKz62lyY+IHI+
wvqd845YLtP8OZ+f/fBSwMKObeH3HY9oxdaJaWeugec1z31yqaSEW+2ZYL5d
x6lwvmXvR845mBgWxm8MN/t4conYa4zG3Lnw8j1z/HLMERenhL1b+wuTwcdw
6E47dp5mvBX2SfjdPTow+nAYr+fhZV24Dc/rkY8iLHeJJTcwKMxKHDjPiftG
6MSw+aM6cYr7l/gZKy8FfZHrSz/g82aswzjAsaRTLpr609JjIu4fMfrsr5i0
Yhf/Zk86MWwFy0ysDAOFh6xf8l7cujI+4tV8I+vI2TdcaYaCecPJ1o/NhV1P
a5dnfRVnteFd7Il7uHjFyfaFmJ3CmukHz6mib555b68sSizjHB/WbD9Fc7E5
uP3HzMPzNdpb3FzsuV6wdLbbH81cNXRl3gFk2blAOueJPRSTn9jrnecj12C9
eNKAO45Ex2dj2TGOp9gTtLXz73FO14UX2e2xzmwm9rjAbff29iqnD8xzZ2KQ
dQzW/M6aiXlfa50588x23oEwnz3FZpZ+73vko2gNj/rgh/CN32sf6cb+3vHa
HNNumo9n7bz15C6r/rFmfI9Pt1m3GX/Fp4/yd+vGX7m8L36di3MNqxgV9ujk
u/fLszWxcZ638F32PfOMEBvlrG7MM0gejtQRrrRfp/0P5llru3AqXEzpmBYr
LnZdO++EYy/y3KSfuLb01d+9eID/87PYamFVmLVjGWc9fgr2gafDxHgwrBmb
i+M5bt252bjzhDh2G7miz/gppngDvHdHo935KvABd24QvBIwLnF1oyeHhZ1P
+Jmu+cST8B76ZXNxSrwENy5+WuKfCAdmW/uI7S1e8eYRH7vOiYnTV44Fdy8T
p45cG/lMHJt5xcXpY/ReWBgepj/dRnzI6MfNxWj/xKWYfBPm5OzDb6y1Kdj4
Na/EVR+25osWDOdZEza3oCHDu3CsGdo823ndyN/meL2OYeV9fV77lXc8/BIt
+RGuPqMTT5oxHoB8ZpvHCLBynyefyUOR36xosfdwsfNE8N3elm6v2RgO5h5e
Yh1fx1Pos2i1eJSJWUEd6Uvnjb7loNaz2fPtprhsXu/xBbzYDGoOnRjYMdYm
Xp7mN7ZG3HPkdmPGlZ/D7eq/O8fM6OKYBM3GEy/cPLTXOLLkIOvtjsuAj6B5
Lcsci5aFB9R5NvIbzly7sEjPu5titJlFw8YU84P1vs7V13HNHKMCf2rHoHAs
NufzMxPvuNj+iklHpU8f0XPRpImxwbqJf7lfj3Kx2ThL7he+ipXX2P0z1ZV2
9zw8NFx0/LBeb5/YMc+u7+WKi+kzvC7hb4+ncj3Nr1OcYevB9AW86ufQnL3T
vHdM7P6mD9GGYWK+p8CkYdyOOUyJBmum5TNcbDaO9zgMnM/4jcO5rAvTmrGb
jSevsWNUkCt6V6Z4tP4OM9l/vJqXR87m8GHYqn3E6JZZet4WeaWJ85Zz5bs9
GuFf9GtrxtmW+sJ93/O//5+3ZXOpORYGP8vFU2yJZmL3y84DcaQV55rgYuLU
TfXCprmO9BP8CvvCxvZnkA+QcQm+C489Ji6m7ul7jm1/I9rVUUy21zRl+YtX
ejB6LnErVvouXGw2fsa+yuvFso/30vnCVmz8pnzDrnvnSb6Xi4lrZ+aCIeHi
rhcNn/X0YbgSr8KRj2LFxdbhidHGHMdwprk52i9sRp5izw/MZ+uj2R+9m1hs
lGwjlgJ18WzaQ+HlxMa+5vZfr/y/Ky244w97PfEf2jthtm4Ot0bf49WJlR3/
bdrWvmnXtWK31j/J4/E+C7/1mpfYBU7uOLBhRRiHeAn4GbLeXOz32PZFNuv0
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
qK2Zw6SOIYKO63fozr/S/mLy2rHdejE6dfYJu+N9zr3nXuSYybPBuSdGnLwF
9nU4loR1VriRbfgknMODe2JfNMzt57XHetP40Pu2V6J9Rb6P7Sm2Xt8M3h5m
t4H+9NgLvbv9UFPcNn+fvLNTLN+ei9S5c/09/JL98GD0/CW0UzwDrA87WVcl
DwTsaVZuZgoPt6fyiItXbIwe53l3HafC67hm/NbNxVxzX3+41zp2vnte1S5G
RY9PHIPtjH7LeAP+t0d8pRvf6weeGDdL53fLvdq1k2PIDWjG4z0D4zDuC5pp
nqcssy3XmSXvM5o34VxYetLVV/EgWituLu44FOZiPC0877sc5rAz15djPCfW
TOy/Te53x7nL0lyc8rPvPPcaoxPDwfZXTJrx7/zs911YNVyMN7hjrbXPglzR
nvPnOXzhc2vO5MNLTDhy9N3DxRTP1Vr5LlY8ZzYmBjHHpV4YuJdhblga3fhr
Fz/Z15m4461Zl71oyL/6u25tJw6FmbjZeeefgMk9x82l/Q9wca7dbAyz4i1e
jSkcgyL7EavYbST2WrZ5PeeJ/o6ub53fXolp7GPu9f21hwJfS36rM4dpmiNE
ae3Qv9+sM5+0l8J8NnGy47y5+Pfdv+v4jFkH65iXm1/RVNGMH2VjOLt5i9Jc
DLOe0YzDvR0PwudB22QOHPnj+O4+sq+k+9Hz7rhftNl6sbenj90P9u+25tq6
pjVWeG7SPK3JmklXmqvr6XlpK18trD75nicfQ4rfkRyx/OR7aF24x6Ervdj9
1t/72nqOno+b/uasFx8xcWvDLry3NsPAbcRy6/i/Ph6/RcdPhkXwS2ZduKY5
qvXEFPI8HLEx8/rCGq25TWMFmOpMjIrOjbe6PjzV5FSDtWDreHJXuir1UX/6
+4wXwuf1PcQXPdXhGMiPcrHrxU+wyg3d9zTn9hiGvG32zvK8mRn7+eY5mvy8
aLWdp4WChyL1c68cb+KoNCujmcPGxLQzF8P/9vb7783PWArz7szGPHPpr56n
98GP/sCNiWFkPMZos/ZNmD8vx3z8B1/zIYeNMzcuXOx5eJ6LBx/zGf523GT7
kZmzZ69yeDksDT8zDw9mmrzF1lXxPuTzaj98qpMH4P15ej9341vzWDh4mu/H
sdaLm4ujn5pjHZcMXwA5kc30eGytsx5pxu3BbSbua7aenaV16/BsjmkmnupB
08Zb3HrzxPbo5owH0PZTv+81jIyPwv6IFGJNWyfOevu9Jx62BzIl/JC/S/+O
93tiey2muffTe3P4DJ0SVoMnWzuGlawPowO3l7bjQdwY/BqfoufD3eMjTpze
nNv8Cw83F+fzLt+eC33j+txnWZ/rzLV3TrvWpz1OMAs6Zof1yhUXWy9mfh1j
g/QDbTJ32qvs8VOPp+zddQzeZjnXY65mX8dEdh1TPdO6Fedyvp7LtuJgP/P9
t7LSmle+fF9zb/P21o5Xfdd18rn5D4+rNV5+XzumG/uvGMgeC+ub1uSYp8dv
veM0OPYFnIIefPSun7itZ3Rj3u3DCmiLK+91+04mP8WZ+Gz5HO8nY4OwMUxM
TA76e+U19niEendsGqaDx8xP7cXwHLfm2aNz7IqPpW934xzHPGGuHbGiuQe5
Vzwr9qlQOA/MyLlX+i/cPenGfvY7PsQRE7N0frx8zzMI9zqPNHXD+RnrmYun
MUT6JNfZ48Lsz/EeA15yJ195OEuzMbox8/CyHj8vDGrd2D4Iz8PD/9B57Tpm
hf0Y1GHPBZqxfcbsB1uv4lHYH4Gmaw5bvZd3LumdbkyMCjwTK406zOU5eHy/
cLHe5XecNc9nw9fQLO+8b2fYGM2Y8zcbT9ecdT0n0PHknHN76q/Um234JVZz
+CYm5vp7LMB37q99xDkH9+WSK+WaE8/ek743cPGKifm9jk8iv8nERFgxwWo+
/vRuud9P89693zc7Nxnsgz7quXTwKtow6+FeczH67SrfxlHcCc87ayZunRj2
PBNrAj7tgleDfsu6aSxwy5VdcxCtsdt3AvOai1cMB/96bEDcB/jYHNc81hrx
yitrbRbONTOv9NKVXj1pyObciY39jDon9cSV0zmm+nZ6c+/b9afYY+xnofti
dW2tObOu4y2Yj819xB5mG593TDzFwMITiUcChgkT8g4fTwD8AfuxP5/fXeQT
foSNUxzjAL/vSjdeeY3NwW6zc+G1n8Kx3mBi6nXbpzEAx/J9p+emvxwvze1Y
MXdzcOu4L2FjOI37uOJ8PNd4iT2/zjnEpzFI68X4K1L/FNsYVmUuZHvV7Vth
P45Z8bDjGXfeaLiYZ9WxV/gbwe+S30Jia++eBXzLPa71ewVz8U373XAxbMz+
ExdbN45m7Dl06MPNwvYeZ7v9FDBvz90jzjFLezPSRr9jNws3Q3ZejCMv8s5T
4ZzO5Pjg/F0H+9nneotf/MRyaYtjE9tj274Pt9M5kbnGM7EpmHfXPuL2UjB3
bpWP2pw9xZR4n1G/djtHlru5e62Vc/2McVKYc0ifMAZKPzomBf4UYoSEj4lr
7HvDWCUc3GWaL/+htz94Ka2H7XImTNzsczQb9PYVq8BnvM/PEu0YZoOV/d7f
OfPQPs9oxNN2cy9szBJm9vadZpy2xA/bPNysDB/jGwn/4pFljp39FDBS9mNM
0SzaPooVFxOfonX4HGOt23zI+eFvYre1X9YcyPE5X/tjJzbOMty6YuVJr524
sVmV7XAxc1Fbl3UcC7fJz/Pqb8Lta453/9sb3ly7046738zvnNNz7FYe2uzT
nGwfqv21HZ9ixcWOR4E/lHjBzUV+H2yePMNg6HA7HrbXGE6axgp9/attrQub
i+lvriG58eztte459eEqP90ZNk7fOx5E50brOuGoo1jJj8SxcJzhXPe7iqnm
e4++SVxnuK7HZ/gjetzBuIuxBt4Z3jns4qPBrvYmtNfcHowdGzvGsevGd4yP
Ao8xz2zuQfqF9uOXnu6H/8Z6DEl/OKeOuRjdmEJuDvsp7OOFi+017jl44Vt8
xh1rzXxsNiYfnuNb4C9GMzYjT94MYn6tmNjaKqw1+VQnT0W0x1WcCvLhEbsN
7XfiYucltl6cc+CjmPJ1RKtNux1nLt/N9Wbnjnfc+qvPY0aErc3HzJ/b6dD0
ffcNWnPqIM/JUay3jsmBd9l+YDwVeEh8v7IfPhe05ZybOCHwM/vCxHBx86h/
x/M7SkzY8IH13HuZeFd8btoS33O3CaY1m9ljyzv+1nedMw9tdfJPrOKvTXGK
icFmjfg2jrjuS1sd/7eZGNZt/8WKi9N21sHFnCslx9szYW0Y3RjO4v7kGO5v
5q/BVb6PHauNfs85yalBfTAj7xpaW+35ZObQIy24NdDpmClu2XRsa7BmVuro
JbwPg3r80Oy5K6s8eC6t/07X00zMZ46dxh1wu1ltmmPGZzS5jj9hfW+K2dZs
CEs4D4O3hX+sG9q7wbmZn3dWt3SMivZPhDO8zhzWXuJ72Hjyp7KOHIBhYq6D
Y2HQyYOx80m0btz74UNwjDFiGtgzAVfjq6AN9ll4e5/3nuLxj9ka30B8JI6b
9752/Naz8QPjJe4b9wReznOb+qb4Kjwbzasdey3r8JyT15D6mCt55KcgB3bH
m+A+oPPmupiHh08ejZv4fWjsq9ze8L/fR/gdC/vl+WvPMHoxXNz55sK71o3j
T0YjhmPthchnNGN7jfEIU689EuFgcot4Hl7HtXC+D7MyzHOkGzsvxMpfbK6l
ziPdGL40p9lfDBebH/G60k7aRV3WdnueIF5bvAJcLx7qiV8nBsXbQF6RtKFj
tPUcuZX+PI0d7D0+ky/P9dG+tKP9MLl+x1r2GKHjGHtOJDwMG+ee4DGemNS/
1/ltRTMLf1nb6t/0aT4+3k+2T9q0Wdu6XfM3vNLc6zlgWeKn4B1/1qEnU2Ba
s/MZHjYXUq914XxfeS+Yr+e2wL3WbNtfDBOnhEGT38L6JDxM7jc0WnitdUl0
W/so8GVkX3MxbeD89p+gv+MDIf8ybXOcEnsCmo1bm90xLnHweDY5zu8CzH88
PyuvsT0PbhsxC9GKieXtMYVZf/Jj+Hk+O4acNOmdLj0xcy+bi903HWNiNe/O
XAGnhj34fTYrwzDNxeYX5+bKfuh3xNiCxYiV7Hr9e3+WiydPxaQj40elfVyr
GXmnr5vhJi4m5m2YxPOm6Ffrep0jD6ZuL/CkG5szeT/vvMGOCZHv3Zdc98TY
1u5f4jduH3GW6fO0LfwX5sySsUvzrpmY2Cf4KtK/+Zyl/TlortTJ9eErtpbr
PIvovvQh994xjDuOsQt+YXO3c3vA1bzfoF2XXM2ac4fXhn53Xhn+jnj/Ys3Y
z7I1ZGKvNRenTPk+iDn8jKWvXJz9ow33HDrmxhE/wnEpPPcOVianh3NF53v0
atiZ/RzvAi2Z+VyT3tt8jD91F/fLvtUso0Gm9LyyrIu3lnwf9hlzLPGL8znM
6jzJzkdBfF7nsQgr4gVwvbDw5P1YabsrfRYfBEwOI3te4Cq2hX3Gq/jPjBsc
v+KIjfFJWNvnGu2P8La0NX2Nxm8tvAvz7qwXt0ZrLoZZmoun31fYi3VwGfpl
x7LtckZfs5cCb2vrlq37mo3Nxe0JWPHvUSGuGlwMk69yRZsxrQXHR2FPxuQx
vuS4e/uDt/uFlg8TeZ6ifROt+3qbuZh4yeZiNHDaPPWjc/FRf9bDkXDtlCNm
5RfuY83L+Zx+wNsAF09+AXN6a8jNwm4753MsQvspOj9eX4+136Nn3Nsmr0gz
b/8Ndt+1xtzzBv25fcCwrRnZ76vbg2w+tI42caH1rDDPpDVmXTRBYgl4nhPn
7PfCZ/kYHe4MH/MuevKPuA/aa7xi47SVOHNcG+2H11on5trogx4jTNdo7dXv
0bO/2dgl63r+ZI7zur5P3c5HeLjn1oVVYWLnR2EeJDqxvSrvx/p767Xnk/7m
GWIeHduJ2cZ15bz29aITT8VeZdpqn7J5GK15Ym3yYWeZa0x9aTfLtCv/Uy/5
SZ6KxzFhfzz5XFeOM0P7b4fjWI9vJawaTwS+CHJ52EsR7gwPw7H5zP6OZ4yv
OByMvyKf8QuHicPO9gObje2RSHHcNs+vm+Ihu47Jfzsx8aQj73wU5s34ZKeY
C/ZT+DgKbBjehPPIKe2cE5zLXgr4b2L4HN+ad+phXtuOh1eeXvTj1IUHwtr1
io3T1tXcO2LU9bzHVWmPNN+5T+4Xjw/QgRmveE5j38vsm2Obi1u3nfRi9Eh+
u61Hmlc7VppzQUTLbA4wuzg27ark755zNBc7BlvnoDPP0b6X8LC5OHWi9U4s
3PHi+prg4o73BovCxBmX5PoZv3AfpnjQXg/Dte7uNqT++FbSDvRV+409/mmd
nDhtjikCU176/epvdlvaz9Dsa+Y143H/Lv6UJzbueXHNuDvunFiV+Cvm4OZi
83prxFOd7auY3oN43+6Xlfa7KtPcu5Wu3DljV/HI0Og8H8z8h++xPZ5d8lt8
+a2/5nVrbyr7oYl1m+wn9fy2s0x2honRjfEYcI1uT7Pxyo9s1qXtrRGbkdsP
au8Fx4e/mK+1ukZ7Ii46vPJ3mI2dm3jF2jAyOqS95Y9qxM5dR132npOnuOci
0o48Q/gKzHveh77NftGNb/k+FG8FRsz5iQ1MzAhrx60bo1F3vg/rxjBxriP7
k9+DeY98517kfnK/4VuYGHYmZzT5qOM1uTyr1xgdHIv3gvFq9xPXHI4Md8LG
t/l0V59xNFpzLNqs2bjjq6EXm4mzDBOT9yP1xf9gniX2mr0R9lOYjdtLYZ9x
WGkX37bZMdtY7lgYtg2DtZ/C+Y2JawzfTlyc+tB/w22OGQYbo816vp1jFqck
lq+vw+3les7w5xQrGRYNMxK7mBht9hKvYnVYU5/ivZ3RjO2rtvYNg6f/4OW+
dz4fPu6ObYzHGy6GpfO7HB5FG4TD/JvtWAt4Us0DfE49xCJOfWin7SMI02Xf
VaxemM36JUxMO/h9h9dhJjgUPRlmhs8oZvd7OXhapn3N5ROjp0/MR+7jLD2H
L/ch+4eHU/c//Mq/vLTZx8Gb+CLMw+j2FHirmTB1pb/Cxelj7s3kk3UcDvo0
XEwuDe4V96a13dZq3X7rwc3DjqXBOtqbfYnRsYr90M+q+TjnZiyQJefvdsDG
HQ+6/RjNyEf+ifaUTN4Hx55u/nU7Vqw8eS9yfOu7HZOt/QPmVC9hJn53/R7X
nAcLRePDS9Dv72lT+Mg6oHXTjkHwEjaemJjCPj1e2LGx28w8Quu+9kS07j3F
dwv7mBdhr9RP/utmT+u7ZmN7KPyZd/S55qnPUoe13EdiUnTMN/tniJPHtZEP
nHYSyxnehfPQVs3CLh5f2WfBvUE35npyDrwNHE+fe24d/U//rdg418F7CsYf
rr/jCXtOJtyP1u2/ETia59fvJ+zZx4vPtePJ5m8H5v2OD3zLyMbxUxADAi9w
mBhf8k1fljbs0syMZkz8NrNxtsevTN49/BITG7fvGc5OWXEwrNy8HA5qr8Su
4OdtLsaDy1yvC/8pbq65GObFr9BcbD0UHffmjfjV33XL7ZFzpd4sfV3hPNj5
KDfdkX4MxzpGnOMfc60TF2d8sOLjXMNZNiaesWNPeM4g3hL6gPNzbsY+7mdr
yuStvt3P6/v81g87HgW5hx0v2DEe4FNyszVLNkdOnOn6V7mRiYuAZsn+HVuX
+W4wevZtXbX13bNc7JJ19N2qvvZqdD9TrBcTFw3Pb5gz1xIus8elvRPW8Pu9
vj0zfX54Gz0aLm6GC/dO7MsYhvWdwwUeC1va18zcPPslYNEs7ZfmXNmf5yB1
ZF36K77ryeM+6cfN5t7OueFg3pegG09xMlZa8aRH97r2TKz8Ez1OmPrZvNx1
TnP5rP/yWwoHmvMm7rM+x299fvfRjVcxKdAf4RxYGcbm9xs2bhaHa/qd8D2M
tmJjfKf4jM0Zzbs9dlj5KdqrYl/uionZ5vf7xMyIV5X+XuXF6BgVfCf3G0zH
+3nYinZ1fczXQkvtfXhmVv3dMUSyb/7XhOuJj0csNud3zjMCv6OfhjNzf/yu
g75HW8ZjvBqr+LluNoa38dOkLR1vgs/U2UzMGIbrzXV6jie6/1TM0Dl3jy0Y
R3CvUh/Pf9YR99rvHPhb7VjiX/v7f+PGleZi2DglHBsWDhuHWYnpFoYNo+Kl
QCN2LGNybzhmBXGNm41Tb+pMfZyPthHnIudzzg90YueJRjtdeSRW2vHKo9Cs
7JwSrYHaa4xmbK0ZjgyPZV8zJTwMq8HF4T/8s7TROe4ce5h8IuionU/6US52
HA4z6UorTpsc13mlG5vzPS/PnmLHqUthLqE9zXiNPfaxRuz3AniKzcYTF6NN
Ro9MYf6U37nDxrBhNELyEjcnEjt4KjdPxbXgLXBBl7Q2aS3beiV8jlbLts6d
hw7bvlrasOLg3jZdk+OynYltYX+C4zPD1qknvgZ7fl0fzJp9VvEbiP0Lg0Zb
Ja8hS5f0CfqruXjiOvRk86w5DN7lu/3MrtMcb0Y2/+Y41sGrtPfij9U4Kcef
0WUnHvYzYT63p9i+ikkvnnTiI3+FNXzX43FOeyfO+Io/f80HPR3rzysubk+v
l2hP9h+TB+zCEt//iRtb2IOAdurfd5gr2/g9b69CtGV+x82YHfvhHg2TGBUd
p2LKBWFWXcXtmPwV9iZ7vpP9sT3HziX9yHysKaacdd+VPgu/kg/FbZy8xpSu
591r7GPiKpj52IdrPWJi6k/bOn4wcYPjnU1hjAUTo5+a9ftZ5fmzRx2fAT4W
P7uOreI2uu6csz0V1ow7RwiMi56fJdoxbZ2YGE912jONedL21IGXAp9GjsEH
kn4jx3TuucdZHUMxfJncdMRIC5N+69O4CzbOZzTcsCpacdaFebM+3+FVa8f2
TbTPwrmiYdzsz3Y0amIUE9tix8Z83/kiVr4K4jok9jDcO5XevzVjYpnBxbBf
c3FK68W0Cy5OXei98HDHY3Nb+xrJQXfWy7vVi68MmesihjG+Zsdhhk+Zp9d6
8YVDr9vcd56n154U121vRceyo3+4//Rjf/f12HecPuS84a6wMMuUZov8foYf
w6BTbF7/NqPbNgu7sG88AvbDoulOHlmWZmPPA/OSz3gpmPeHr8Cxy16qGTsv
HzEuzMXhtvSpPQjZ1zxshmP+IJ4T+NjnTJ1hNMYlHp8QyzhMZB6Di83HHQvE
7Dvl20MvRm+eNOH0RY53bDg8EHAb29O2bGvtG3ab4jh7nOZ3GdZts+z+Zf3k
B+517aOwbkyMjZ5DuPJS7ArX0PMPJ3/wbts0Luqy8nS3R+EozkL7KazV2X/g
d7WdT+3dyuPg99wTY6L9NRN7X/yY97AxMWMnLsZfDFvR5qO+OeM1Nit2YR/n
XuCdOQzk9/BhoVU+POvinDPLcKbjtbmN/u7xC3wYLk6hTdTrWH3tm3AcODwd
5kJzJJ5d52yznyH7hPvCs/YH4Fd3XAr7bOwfYPyHnsxzzP54O+Bx9N3JK4FH
eMXGWdf3hL6zn9r3mnamzs57jp7tXHjMEaWPUgf8TX6P1o0ZM4UloxnDmmHT
MC8eiYtP4uqngDuJKRFGDhebezv/neO2OT6Fc0WnMK8v+2fbD33ye1/LA0KM
OHsqaEcKevEXv/Tjr/7qX/oLr37mp79w+fy53/+5W+G713/yB3/3pVw01g99
XPENPnnZ/sO/7VOvlWxjO+dL+dKfjjbw/1w+/8I/fnr+3/nbr778xT9xO1e+
//t/+68vhTayzH4UvtM2zvvhJ27P0u3Kfl7n66Xkun7VR56et2/5DafKr/g1
v+WyzLFp3x//iZ++XBvXme+s43qzzPcf/PQP3/qC/d0/LjmGNuY79eY79WeZ
+5F1H/v4j1yuIyX98tav++Dt+G97+7su5/Z18z19RD/Tt7l/3Otb3U/9FBb+
B9fytXf+1qX85Bd/7NVnPvWJVx97epZT/o+f+pmn8/+uV3/g87/31YeexrJZ
pvzID33fE5t/4vI5+3/m6W/zV33bb7qUb/6WXz8Wtv36j//wZZl685k6U/7U
0zPm4vUs06YvPTFSCtv/2tPfeNqbdmU7bew62f/PPvVNlj/+hZ+8tOtbP/KZ
V//jr/mtt2vId1/Pal3Omzqy5DP75HPOk37NtrQry7Q767769D+Pfqfvs512
5Xw5T9q16tOpf/nMNafO//Rvf/FZ4b7TbtqWkrbQv+zj7VyD702uk8I5U3JN
2cfL7JMl96e38znncL+mLfQ158p+ud5v+uYP3I5zn/+7f/b3LsXHpPha6Hc+
p11um7/nOec8WUd7qYPr63P0+WgnhXW7/ujP3t/P+9l6Uv7g53/PrfzUF/74
q59+GsdnmeL1vZ/3T/ns9/2mVz/09FuV9V/4yT93WWb9X/+L/9+l/Nf/8h+f
lf/w7ldf/bmn30Xq/JHPfuq2pOR76s3yO95661Yn5069P/Gl968hn3/xvZ9/
9c9+/m9e6u7zrUqOS3sptDn1u32pN/VnG+fvftmtZ1valnpo61S4/viC0oYc
96nP/O5XP/qX/sWlfPIP/vlLfdlG/2b/fJ+u0X3CvaBNqddt/KN/8qdv/dn1
0Pd8z/2e9kvh+rLkvOz70e/5oVcf+LbvffXNv/Kjl/LLnv52s8y6j/2G77n1
d/bPNeVzzsUz9vbTb2GKn52sTz20ib6kr7mftCPb/Bzl2sIx7PN3/v57t3an
TSnpGz7T/vSfC+u5JvZx3+Q6aAftpu08P1x7Pnffpt0femKAnCt1p138zaX8
g6/9m0vhHPmcvxP6JteZ601df+Uv/4VXP/r5z7/65A/8L68++r0//Orjv/0P
X5bf/Cu/+xmvZ3vKz73z1Ut59x//w0vJ8V/8M//3ZfnBX/v25VjGk0cl582x
Web4f/VP33n6n/THLt/zP7GvO+f77o99z+U82YcSZmafX/jq157xcHPxtC58
FCaCi83GzaBTCW+FpSYuzvgj7eFc+Q4XZ7uZ0Vwcfs5x4boU2vGDn/yNt/pY
l2NzTb6u/h6GPMvElBzDNcGoKe9Fc8q7p6d2mm8pcGb2yXWYiV1fCuMDvpuF
UxfrUmeWuU8we9iY6+Ocuebczx4fePxB//la6aPc++/+zT96+Z2HP/I7GfaF
q/I55TOX91dvXbgT3jBDsS6MCz/CdCt+M8PlOPi4ORkm92e4GAYJD6RtsJoZ
2Cw8cXKOSb202+dvFnSBF3N8WI0+hItTDyzW7Mm+3Ze5Hq4h13OWh1f9mnuX
a5642Pct1zJx78TFrGfsQT/Cw7AqfA//wY2c0+ub5brkXHn+UvI94wmOS11h
4pR8h4/pd8YeXNfExG7bZYz3VHhWYOKU/B2kuO3mzeZ+87G/+1lsBvd1uX72
W/XXipfN4NTlfs/vLgxqFtyxMfvD0OZVfqNhy/CHWZjP/Oaba+DBcEOK+Tgl
7AAzuB3hRzgRdj3LxbAPfA+TcU7zCd/NxhP/Hm1rdnSBy7KN/WHG8HA4iO0w
L32VfacxQda5T8zGjCvMxKzP7/ZR32W/icNTOD79Gs5MyXWYHSlZF9ajj821
LHk2Mucgx2SZc2T/jJtSP9fKMfnOZxgb5nYJ6/LZ/Hxhradz0Lb0f7jeDAyf
5nO2Nev3s5br8LW5vTk33OyxAX8zPHv0Izye++D2cr4wcfZPu3INcDL7hCu/
9ek3IzybJaW5ON/DzB//337mxqhwccqP/cRPXpbhVhh7Ks3FX/7T/9elhIf/
6Tt/81ZfzhFOdt+FeeH4H//yFy6Fz2lLtmc/s4/5uFmZdfBQl7CWtVqKmTTL
1AHjopnCxmHDLOGz7Ge9GE0ZLjbHpcDrN/3ziYthZ/br63I7s459dgwcrRXG
zhLOnzRe2k2bfb0p6MW5Rq6/6zD7mn8pvS79wH26cXHdK187182107Z8z/bs
z7XneOvF4e3wV1gOzkHHRU9EJ77w8RMvoL999RKf7v19zJbWLdFgm99Yx9I8
F55MXWmXeZj6U1qjbG1vx8YwR/McdZt5sw0OhMPRemFEWCN9CF/lGqxpcxwM
DYOFT9OPZtG0xeOTqYT90tb0Ee1mbJF+YlzCfWwmznlSf9rAPTQXo9XyTJiL
m8d8nyYWbi3WY5msg0P7GOrj+aJN6T/6jrrTH7n2HA8782zkWW0utp5sZnd7
4N/mYpZm4BWfmou9X7NwH+vvPsfExM3lvb7Z3VyMXgwDw8V8hhNXmnGzbT6H
b8PFYSzYrZnJx1Fgu15Sd9g3v/2wcTMz+8EzZ5jOfAobp/4eG9CesBf81Ncw
fV6xMfzOuV1Sf66Va4N9ohPDjP/8///Cja1oi79PbNzjBfhoxe7N8LvivoY7
rW3CruGyiYdzzflsTvVYwWyMZpy6ohmznjZYi/e4g8+wZfZPSfty/vQx3Oj3
HOjGKdkvfJlnO0vuT66Jz1kPG8PJvgc8F9PzCRcz9vP9zTqOz/2l3TC6x2y5
r9QJv8Pzvh8ZV4RVw7FhYZY7Ns4+YWDYONpxvqP5ZkmdYWRYuLmYzxxnNm4m
zvZowuHebM++aMawcdalLXBx64Wtn3o9WuqKjfFLoC1Tt30W1n1hvXwO86aw
H0wMF8PO7bcwJ+MFQDf29dkfkLaGm9tPgVZqFmyttLXrFRPDxejeXJ+14HjC
Ww9fcfGkIU8FPRd25X6xzDaPA+BhxkftnbBXJMuU1EP9MFQK3onwh9n37W/7
4IU9vvPDbz9778977U/95h+9FPsM8EqEfVM4B/tlmX04NvXwm57P/k7J/jnW
bNm84/15nw/7mt28LdfLtbte9GTaY65laZ04nGFmNhNzXeiXOa+5mHbQzrSl
xxKU9G84FZ6lb9KPeFOsfU9cDHNOPgl8FK0f2+NBQafdaZVmQO5F1uXYXGe+
f+ziQfvsbcm9grvRat0uPvNOA13VnhTGceZgPCztq+j2m4dZBxu3BrzSjlf6
rnm7v7Oun2l7T3Y8vOPiZuyVN4Lf5kknXumiaFn+jYZT+C22Dt3eCWvE3ic8
ag4OD6Fz2nPAds51ho3ZFx1vpZPTvjBZs/GOg3sdbXTfoGtmiV8E70A04rAZ
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
ZeKyZX/HmLvE/qu5cf6OhuzSbMw8PHOxtWf7kMO98QObi1kPG2d7Cn6KFPwU
9krg2cC3kf1y3IW1r1rpymM7FdgWXbfZ2rrsxMVhspwjWqpjjIUP4dLUZS6G
o/FRdJsccwLetJ7smMdwMcdaJ7aui7eZ9kxz6hxDmHlv8ebiUyCmm/m4vR+5
ntaJsz9z9egD+D/9xrk6hlra7RghcK/blHNwLOtYv+Liaf7dJS7FRz675GI4
17ox3Mf7ab/bp46w9FTPI2wMX+OZsL+CdjF/a/JPoE1ObIQ+6ZwbsDfXZl8x
jExsNMYAtK39FPglmpG7nfChPQutF7O916P97vovTMn4htghsKXjUfS7gRS0
a18fXmbOjWeE+9M8NsXKCwNz37weJk6b8aqjG6cdxNBmf+Zlmk/xTTQnd+wJ
c7F5cWLWI09Ex7NY7TN5kydebq/GxLddpnl23tbfaW8zXnOK2bi9EBMPT3rx
zj/R524mzn6OW5DP4a28i2fdFN8NHrYXAuaA2+Fie0XcrvY1t0/an+1/bTY+
6zXumBLhPcqOg7vfev4j92rls7aGfsTFjqPAOfKd2Gk9hw1OQw/tNpvdJx62
D2J6Nq3L+hnEn9JsjIei+XfHxO05Jj63Cxpy+iHtgllhX8Ztjr9hrRe/uzVj
PMiMk3J+6vN7EPYnxkbO4evB28E5iUeXe+L5dVMMCevIk58CNs5x0WrTxxf9
9mn/MGr8D8Rvg2l73p3PyT7/82e/73Jc/l/B23gnUsLBt2dSvoqLZlw87DJ5
Kaw3WpOFJ9E88SK3pwIuzn4TF2ed9eKel5Zt5Mlw+3jvT/yGjjnGsrmUbbS9
/RTWjOFfx2+AeXMdYU18I8QiJuYbvl/2nzg7BY+JPdWOX4e3BB3ZcY/pCxjZ
3uTkustn4uJlG2zs2HYcv+Jgr+fz5Ad2QRdtnwDsaL0YPu76yN3mYn/EkZ/C
eejMxXg4aKO9E+YVcyjaMOznz6krHJb9iCcH/9JOYhPDlPBh68Yw2kqvdBw3
+LHZd1XsAYFv6UuYHSbGX+x4evThKk4b9XvMgF7sHCbwVbjYYwSzsLka9k27
iDNMnAmOce4Mj0vwTNwYWjkZzY/0r1nQ93/i4vZQTJ6KZuOO+8bYoMuk796j
RfvYFROv+LevffJaWLebtMb+jZ/Y1jwCK1sfbT5rjdla7TQ/j5wE+b33u3nz
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
+5kdN4Q40Ywz3I/tnXmUi1maVx0TDXa0Vtw+4ebknndnXdN52fBROK+0928G
RTM2g7LeLIUGyT6wq/VEuBXGNhdbsyUX2y4mmjm8GQUezJLzOi9xtrVvogus
CO+SI27KMUj+D7i/Wb3jF096se839xCfNWMGYkW07ybcS13k7SCfs/Vi+obv
5PQwM9+Y+KrJ+h6bAf3dDGsPLmy4ytXRbLzjXMdu2+37Eka2xs39aw9x+0Sm
+BPNxuiWaI0sp3fc8OvKdzvFpmjN1vt7v+by1hidr3fKnQYXT/pz+yHM5Std
3PXkHXTYBs3P7+4n3Zv+OWLjqY2tPdvn0Npxa4Zwnj3XWRLngHtI7N5mJzTe
ZjHmlE25Orgfjpm78kasdGPGAB5P7HwU7TFBD24+9r6Th6K14YmNzdFmYT6n
8FwQQ5j3I+ScQzOm9NjEORcdt7hzUFPijaBNmQNI3OQs8301ZxJPeupGf47W
6jgUO+8EDIounGMTM3hiY5iVPBwuOa9zeXTeD2JSdGxjuBg2hrOJV5ESDoeJ
zMWOTbDiYvuM0WUnJp5K+Av9dcXF8eaS2wMuxifRejHeCLzFcLFjNIRbifuA
18BsbL3YXIxma5b/3HVenecF5nM4dBfTjLmK9hcTm856bTj5pkdffRhowPQ7
Y4wUtGXrx861Qts5Dh8GbG+93P6Pe7h4FcPY886s0065nD2fbuLi1jA7Xwdx
LdAi7aOYcrhxrH0BeBRg24u+ec13DA87xpsZMWwHOxJPt+dnwdu7OYL4j2Ha
1i5zPPGN8WjA4M5FBxtPMTHCl7SZ/NV4nd3XtJWxA30Dz3bOveZg+48Zb3Bv
+Y5mjDYchqW/04+ObZwl2rTn2rGvYxd7/h1aNOuyT8YPuzltrRevuJDYxGd4
dtKU8U+cYdvdfpMnwrEsWuemP3vdpAuzX5fsAwebiSftuOOlTlrwxMKON2w9
eWJV2LQZCg2udWO4jPXNm9atfb7wR0q22Xvh8/C9fSNeN2ne7fkk9trEwPZN
TGxMG8j13P5bewt4P06/EIsrXAZnpU7e6RP3lzl0cC453hyDzF7iyU+MLprz
r/zE0+eeM3jExl7nerovzcT0T67nDP+udGLnipsYeWJjnvVLPuar1yf7Odci
fIzm28/fzQt89T0wn47n3pp3PjMnsJk498ZcnHqIHdF68cTF+Hc5hvX5/AOX
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
PVfuiIntG/HScc88527iXxd0YOuk7J9t5uJsy3lgNLRjGNljBrRi9739vqsc
bNarV/PuUlZ6Mf5ux6vIOuYH2jPh8+Cp9nzD3bwyvA3OSwdjm7PdZr47zseK
i7tf+vO0X59r4tud17fPb2/GxLwrzbn323ksVvr7Sp81e9hbYcZY8euKaVf+
CfJ65Dw7r8UU3+LmkbjmqtixLhwNp6CbmaNav21fNOdpz/SUy4TiGMnNx2kX
44KJg3e6ccelMKfgq2C7238PF5M3pbXdR1j4rJeYmBOdz28aN/WzNr3zaC5G
q99pxJMuvFr2Z56zlPCrx1Pwr9vT15d94FaOazamtE9i8lJMvgp4m3jC8OyK
fY+Ymbl08UU4lhusjL8C3wTacbRieBdNOZwMC7dWDDOHgYlFASuv5t01M3Vp
r/DEVJNmfNOKv/LepZhV8VCknznu2z/wrc+4GC2ZGMI+H3qx41F4O/GQHees
Yz20TxiPwMTGraeajSePMSXatXOBOAYy6/0ZZjZvo/P22CT3LVxsDX+6L71t
4uve5rgd9CN9kCU81RwL/7afuDVgPBTmZGvCLmij6GnkdqCg+eaz38+v4o7B
ZeRrg4vDZj7ObWwvwJFW7GtvDwG6euJIWKOd9OIwCLGLw2hmXJjRbJxt/e48
S98rYlLYMzF5JZqdqM/xIqwXU6+14C74JXKMGd25BrMtfmnqdxw8rrnnuMHC
jCWcYwVtNv1Nn0++4taMWztunuy8HjvduhnTDAwn28u881PsvCPTtiMd+971
cPGKNXjf27rckW68Yu0V33acuPZe9Pec2zkkiA9BTKz2lMLwMK952nV3/ACz
pNsyMfPOI+KYcF136oqO6zb2vegxiP0BeFGnYjbG43o2hq/nd53Vhyc2PqMb
/zfizt/Xli27yjFyStC0nSBsDLjDbovHI0FtWZZM0EjkLSEHTi1hCTchjUAI
Wf5nLNTGIIEbnBDy/5g7dp9vv++MO+eq2ufdFsFS/dhVq1atqnvPt0aNNefm
K24vu58l78k0T9P1T3741M+3gCsmnsqm0VInS8dG47nyDNwe7sPPN8fhNcbz
wPgHpiUWX3ub89zsPfY6x+LzCZuGeeNnyDrxIj5SzL+pM///tT5sNuZ6eCio
J17jMK/jVDC3Dg9xfsdvwe+UiZs2TjYPb8dvMdqaa1srzlw582zrxfDuxMWd
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
B/siOgZeSr8fExd3MctumuqmC5sru77m4ol9Nw9w13mKNbH5iVuXPvk1sn3y
Nky57sw2zSfNKpM/0lx85a+YvByuv5kbNg43sE7+BLjXMSOacXNc+1PdB5N2
7bZM92+etScDzZj+MBubg+DPjY1P45X2wNibQOwL6odx7f+dNN87XOxzfW30
ap4/+rHZ12MGc/+mE/f7N72PzcLTe+V38xnLr3Irt39iiuN2ipNmJu6YKJ6H
l23/++N5eXzoMQUsjOf4VSaGc83FYVh8w3BxvMGemxcWDhM73zM+Co6P/gsT
w8M5lnhtcLLn16EFNxO7dDyK1ou3HHUnHrZGjG8CLjYTh+uc0y4FxsoxxEAL
Fyeer69hLoadza7m4vYtoMky787M55wc9kGkbjjWfGrNmOPs97Xv12yc483C
lPY62Efh86KZO4fHdC5xpdsrzBgAPfxd3A2xsXVfb3vZuT/gYo5v/p3Y9ir2
xFVx/F8ztn2+/rtvX4C/+/M3nbhfZuP2CpgD7XtAE7ZW3TEoJt3Uc82ahe3P
QPc2G6MXP9kYPv76G814YnHiTzAHr/P++d7Qiz3nkHX6M+MM1smfbX5Mf1uv
njRj3z9jDMY51oSdlyPbHMtcO3wbG7dzvvkyBQ+F/cXtF+75d+3dbW3VHH7S
gp3Hutmbd9F1NDP3vbR2TFupe+P1Ky6edOZNOzYX9rfnyVNhRiE3Rn9fb1Zs
34QZZPJP9L7tu3nrulsdnjfXXoj+pt56dG+3hjm1qfd1H8LH8DDFeT7IV51i
br3ivIkhzX14r/FrUK/9FJPe28+42bh52hrvNtbZvhF4uWnvG7f3u9LjBT/3
Pse5EU/x27a4xp6HB/uahTv2CfpuijVj/BCMEbKM19j96X+L9rp/tMC6eCPC
teFePMbkrYOb43+AiynWiPEQ57iwK34JfMvh4xwDE3e8CccmJjZFc/HGzRsT
t17M0rEi8AkwZ8C+Ac+zs3cCnsv+cHBYFzbOtq9nLo6vNsdO2m1zsfkR/0RY
7nuf2AAG9/kdA5htsyi83XHP7N0Nzzpvc2vq1LX5J1pv9jWc09px7PBNOH6a
PRDoxOjJz7hzCxdbB37uV2zl1pxTNn34ymt8N16buZHzHIMNJm2NleJ4CR0T
1hobrNx531InsYJdv/3AZmU80Tmm/bwu1ktZmvU99w9Preef+Zu7c5nYL8Gc
PrcTbm3N2vP57GfIvdiXgKY76cVoxvY359rMKzT/01+P3CficHuVeX7wbpZp
F21jrJDn1x4Eth/HvY0f8qyZhzfFpWjWtFbsd2XSajcfsWMD8tw2r4avtc3B
a741xzdzsw1j34lFMbGx97mtWYcH/J3W7GDNzdwF303MMmmW29y6k17sv/+0
oWMWb14M9GLqMEdNnuJN77Ze7Hl7E7OdvvGbY9wX+CgcxxgvhZnZ8wTdxydG
dqHd+U4PF6NDwt3NxhuLbsX6MdfrXIMTL/PeTeOljY1PXLyNS6b9Hjd4Dt3z
+ZRmPOnFXZwLr8+17zjXDnfFo5xzzMWP+G2fjs8xcDq5wnl2fncdo+KuRtwF
L0TWne/DOaLxDTs3h2Me21Mc1g4vh4PDxfiQw8Jwda6BR8MxJ6wJb3rxpiU3
q1knNrvBhfglKM3EHXcCnZg5a7AZTOxivbi5GM0TRjRLmoPhYuapEbuYWGnN
xZMnpLVZe4LtDe5rTrnmmnu7X/sYrp/+5Le+dtfPfZmNYWF05M/yNxcTn7j4
M04euPguD09z8Lq05wK2ypK/9cRTs7fXmnHzcbMbjNM8wjwra3RmVeoOv5kr
aUPrn/Ybo8eShxjW4xjXxbV67h+M6Lga5i/aOmnH1Em7Jm8veUJoF+00oyXe
A/m5Wy/u58K8P8cKMbPbF9586fl/PA90cec/NB86Llrrya4XzbXn1VkTbmbd
GLJZuPtr4mKuP8W3yLbjL59YmOPdbpdN4z35Jyb27/GCi30TmzfTHGFWnJhk
05gnLdB8NOm9rWOzNFe25sx5zdjNTWaK01zCje1pxzYemPi6fQHk54OJiZ9m
VkbjzZKYb1t/T/po68UZL6BlMv+Q483GzcdXngnrxHCxfSLNvs29Ewd3f9o/
PLVx2p6eY+9nvBDudD47+utOXIocG7aFZc3Tk+4cFoa9iL3G3Dl7Khh7OrdM
9uU35148sfEdJrafAs2YuBTmYnwSxCbGZ2Gdmd/wLONXjn8i2i9MnAITw8X2
EU/rd4o13qmEfa0JJ8ZECtt4Jnp+HUz8iOPwxnjss0YMp6bgbZ58FMT0JU5b
PAbWi+FUPBQwPvxuLuaaOS/14PWdGNg68cm/21ozujr30h6I5vqOGWH/hH0U
/G4N3/mjifWWvvI8OvTjR5w15hze5OArNn4lfvGJjeHfreR34jOQPwL+RG/0
nDmYK4wxxap1HK5pf5gr10NvpV58BHAj2irF/mE0bpiYNsPPXpqz2e+5ds0v
ZjC+0ePVtY/BbclvMCttzzb581h3rAfmiXVMDzTjiYuJV9f+a2vV9JfvpfNM
s44ezPy7ZkWzNX7fLMn57fEFXAxTmoE7xpn3NRP2czAf21exxSiGy/3uWbP2
+MznbHp28+yrbDz5iSdPcRczZ2uksJb1v2Yu57G40v0mHp40YpaTRrzFaGuN
efu9c200/2+8b33ZzD/xlnVo9ydts4Zs3ZhCXArHjENrtW6c59LjkNaQm6FT
J9/5s5/4HNzHHd/wFpvCfTa9A5N3onXvqzHG9n3izjFbfeFZdNo8k/QxMULS
Jtj4pB2nDuvLrMPEjh3oGMRdyKlo3djzQ3N+3g9zc9qHf554gR9hYvwPjtVm
LwX7WxumhHFT0IV//Vd/wcDoxWxTYOmcm3x35t/ws70UZuY7XGz91zpw+JcY
Z2z3nLr2SziHHXHarMHCxO2f8H70VHMxOdmiATdj2kcBF4cLcyw+iubiFMeb
2DwLqXvSdDe9F1btfHNbzDSzODp4+1c2TZnznJcaPdh5RPBVWC9+cPS34OKe
d/cqE09eislb0Wwc7iV+gL0BaLiwlb/LZ5/zOzSHwBedg5nYFOE4x0mjfq5P
nDR7EGA1WNTx0JjXZq9CmBROdF7ncGCuh/4Z34JzfPCNnNx3cG97NMymvrb1
8FwXrZgYwNasHYuC/cSWZn4j4xWPc6xTZ5nn6rbAfNyrWRjuwy/s7wXm3PZe
wKPm0/YHb98M2ls8abBmxikuccegaH42l085RqY8fBObThrvqb1m32bnk5ei
Pcw+Z5qD1Ox70nX7N7YnHbdLc3PrzHBjs/pWX+vSp2Iu3hiredj81hpz+y16
3mJ7oK3jwmAszVC+Z/LhObYxDHq6T98P+jMcBIvhaW7dNXXc1Yi3Mc+p/7e2
nsYoZvK7zHxibOa6wbc8C1iVccsUm/jKZ4E2Hz06cStOTIynIsfCxo92vT0b
/PGpL35j2Jj3y/f0JbzG8C+xic3GxJ1AI2YJT+MtDhOHhxO7OP4JfBfEfPN5
8Vx07AnKyU/cBQa2XxhNmIJmPHmHHX/NPmKY2B6MMGYY2BoxpXXj6MLtL04x
P04FLg4To3cTzyIcaC5GY0XPNW9zr+y3Jj3pw13Iu9cMb80Xzdv7zNXNz47P
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
3/zvJQUfr2NSkKuOHNDwLHwM/6YQ55i5es3EnM+xm3eCY71OTmg04t/+/T98
rm+eEevFKekT8miYcVvTtY/C69Z/o7+iGbdG2jEt0DKtAcPCaVPrxejb+CqI
U5FleBlPQbbjk7ji4o+W1GsenfI+27uAF9n3nSVjh2bWjgXna5iFKczZa3+G
c+YRG9ptQcvGC/IqG5+YFX+xNeOJh8McsCte4FfKlquOv93EroV90Yop8HKW
xPSiTB4Bc5V5yRyJ54F188TGZY95TPInd1wCcmlM/onJY/Hg6TdvLXE4HGfD
8TXM5fBRtt237TGYPBOtF7fumuOjX9vDkD63Jr4xWmvTbm97KaZ6Nub2s+xc
c1M+jWlOmv0ezZ6ThnvV1m7jKzrwHUY/+ZHtL75k8Qs/8UlPdiGvxF1duHl5
4nJvoxdaO2yGCleEWd3m/NZ57MIQzcXtSbam1u3i+zXzA9GN8W9uGnXfD9fH
S+GYFJ5zZ29x9w33Yi8IHotpDIO+evL1nhj55Pdt/f6jHHyHh1nHr5BnQH86
PrX1Y7RhCrqxn8mpTLox++ypyXuBp4LtnnvXxVzMfD7yvsDEtLH1/PzW4y7q
8xw8ClydY82n8fMy/w0+Zhu9uD3G0YvDxNGMO490juUc+yk2/0TzcY6JzyN6
cVgYn8eJiZl351hj+I2n2MVeb82ztUnHzG0vRZ9jLwQFLiZm8cTF8HDaaz7O
+X/5V//7sR0+35j423Ixvgbm4qEV2/+LNg6Hdj84xoW9D83HnIfXw75ml+5f
+40du45+ctw2+5c3Lp74+BRruOfe4aWYPBTw16tMTO6QiYuz397hiYutI+Oj
yHp0VjNG8zFMO3HTlMeXc3pu2eSzhVuacZ1/efvm7/Ng1vZET2xuHzPt6ngX
9lC4DRsXd74Ue57h2HB7tiffg7283ebNN4x2PPl6Yf3Jq+w+2HIuT+Oi5mOu
316VdzEqlvyHr5ZtHPGKh2LT5ifPzXQu/sor9p3YzjpozjFbblx8FefNmjPf
iP13vJm3eSkskr+NcOXG4/5ePl3D+vTkITG75Xpp9+bfmLzKxDeA7cKyD31P
+Z37+7fjULg/Uwdc7JhvxCFjv73QHNO6fsdoaC4kv8gVP76iR29jnal0rGJ0
WHwS+BvCvWZjfAyOjZYCgzr/xl29GC8xei5+42izHSO5/RMdp8KaMYV+Zps+
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
mLTijd1e0aadmw+9zvEkTnw8eTc8toDT+Hvv54H/lDZtTDxx4V0u7nPusvF0
r114vs3F5K5onTiFOXa0yZrxdM/tLfG9uE+Yh9d5PibPQtqzeSucCyTtb3ZF
6+7cHn5XfTzX6n6cfCeTL4V3rJnY73n7g13yW/J8vM8l97PPYhRz7KYHd2nt
2Npwa8UdHy568B0uhl0d9yE8Za2WWMQ9x85xJHwMx+FJDlvnOu3XDb86H3HO
sSb5JbgYb+zko4CPJ0ZGJ2ZOGkzM/Vkv3mI2WP/FO2zN2PEr3vGyNGOPF9B1
OwdLz7mz38X6vucnohvbE57S/hBilVhjbi6GaaNB4vnFU2y92OsTd6Se6JDE
E4Zjw02dN6NLuA3ecV7onAujUx9sbl2Ygu+CGAlhxTt8vPlQm4vbU3GHxaxX
b+dMzJrrRgNPQSN238LDWTL/MEvul+UVE3eMCHMxngvYq/k76/Z2THrlpFVO
fon+jaU5uH3Fpz7c7tnjFhfzo/VrF3hyYvsT/08x7LqOu3VNmnn/fuJo/04s
qcz54ns9+uOkb7b2O+VrNvf57zCl9WKW1OXvxNs39v6GPLGnmdjXJ/7aNifu
xLPE3UhxnAjaQ/vdTmulHDdpozBQ693ofs3+7vOJCydddWLcbR+8eZeHKe0B
8HvjMYi5eCrm4vgb+lpfv+UG3Lh4ansz8sTxV/MK23s8xTju48zJ8L252O+L
33XmyHneobm3Gbn9FFnP/cDE/saR3zuPhrk4vorkpwsbh3vhTubnRc/N75xP
7GK417rwpBnbR2z/sVkZJobHHVv5FKcNNk4JP+Gn8HyteBLCtB2bDR9xtsnZ
gQ6MJuz4C60Xk1fDdRIvjngUqRMWaw42G3Mv5LGbuLj9E5uXItv4dGFhdGK2
Hf+tmdi/TbEi7E9uLu48z/YS00dmaDiYfmack22eKc8IHmZupXVjlhkT+V4c
EyS/ecyUAj85fm84rP0TxKZoj3HH+cIbEVYidhuxKk78iIfVLJpt8nnk2s57
B7sTmw0vMrGWc27uI0vaurHSxqrW3u7okae4YBMv97neDmeSJzv3GCamLzqe
h3Oh+J5TR+5hi9GWOBJmdmvFPFOYGiZmHmO04s4nYgZk2+zbjDxxob3b3md2
9fL0XL3t99vH9Hbq5fjJH9P1T8/Oz9j34319f71v4uPJL3HlWZ74mPtMQRuD
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
ibGbZX0MOj2/hY/veicmbmccsHGxfTgbG1s7nr5tvKIbT8fg1UiZPJ3T999T
aTY+aWbTt9xe77/nmz7na3I+sSzaC93a9aSJN+e2x8FcfGc84TqmGLLNxtao
4WLa6z7CE55v58TePcVle1UH3vy7E5s2F7u0R6djuPnZt2YcJtza1Dx8xxvS
fhP8F/ZSEL8ifdvceuLSK924PRnZzpgmDMt10heMCU5j02Ze9jMfIOvRjruN
E9vjozBn+v80z417hYcnhnU9kwc5TGz/cbPxVPBc9Dy8ZlO2w5aw8TS/Leza
PgnPv5sKWrHzSds/EW9xczG6afjLsS9ayzYXh4NhNs9py/uDj+Khmb4xcTRw
a6etC08FPXjK7cF++LKZ2OswsHnZ+6w7W39GA29NeMq3ze8dR2LiYnuNGZek
T4kZh1fZ3utmU/+dh8vag4rHIeeFyeBZM9WdMuXNC6elfmJjTHPMosOa2aK1
Zr89r8n7xrww4iakEOvCHMhcQ/MRujMeAhgz7UIDPml9aNSMBWDR5mJinLHP
3/fxini+oXOdWKdNPYwb4GPPuzOj0dbOg5d79XOBu2Hv1uWt38PFza6Tv3iK
SzH5D8zSV3prrs07k2XiADNO8TH0tfs7bcdH4Ws6r+CkWdsfQnvxl2zasXP6
+VqTrk5+lisNefLLX+nLGxef9M87+vCr5cS+09/z1r2asdsjsWnWk+ej923t
2PRla8GbN+N0TsfxbX7H/+r1cEB8xo7TdsW7r5S7dU56dH8PwP968pH7/lsH
/4hOnONgYteX/rIvOktidoffacsUr23Sa7fjzLbxW6PnkrMw1/qLv/6/zzrb
p3PKS52Se2LOYObvpYSP851hisPc/76IIdysaq5tJp5YuvPW+beNqX29nvsX
Nm4+7tgW1N1eY8ejmNiY+VswaJgovBR2TSH+hPkYf/EUdyJs7G/8fc0s7feF
/TrXHfntmoudp4S8xsx9aw8FevEjPsMbK4f/rpjY+emy7Nhz8Cus69zTFHsf
Jg0W7/EU5xhvSa4Dm9J26u58dsQv9jzKyTvhHN5Zdg4P+pd2pDg/R+tfzMvy
N3Vrn7AILAcXm3daO55YwfPa8BhP/omHd/iH3+Q+M/cSF8H7puIYcNZ64SMz
KfeFLo5WTpyFic/sU/Ax5mXGGw9+e9Oyn3Ee3uI8w2nWaNHtnd8aLTf1WDPm
2eV+t1ggzoOHbtreb+LjNRe3lu9+2bRic2THR+j9kz936+8cz7cB+hT+pF7G
DR0P23Gge3wI63ZdW3sT34Nnufmq2XY+Ed5BrufYEj1PzrlMJl73v+PJh33l
o2gOts/gldJ67vQ3efIsbzy6zb+/+n3i99Yprxjfx23fzU96Mev2KVsvhhXd
L2Z0+3KJSQBH4e9+hWG/BBd7H1zZsYPtl3D+CmKFMd+xnzNs6Dgbd+OwdSEn
dHPxpnsTx9jPeBpn0f/W76fz/G8KFsZj4ryFxF8hR/P0XlMX1yHvH3US1yLL
9vhv/z62XMxbjrrWlU968ea9mNjaxTxsj/HExvidHWPZsYObjfEaEyuCXGmw
UraZF7fpwxT0Z7wWj3jGX73P59FcTPyL8N/ExZNenDaTM5qYEU8uPsSjyHLy
ED+14U/1wMQU2k1cNsdoI5+IdWDPmcOvgva6cbHjGz9147drcV89tnFeFb4F
TPzrHNGtOXNvecawMP3F/aQtaQcs039jzb6wEvPhfEzHAWsOcC6GjSWZSxZe
+bePOYlznhH7CMK/aMdolVPeBXIWoyWbpcwXzYmO5xBe4h7hrqmvWutsPZZ7
hb+co5r5gik+FmbLfucLRP82D9rPYG3/jicWvZGxDW2EzYlFsuVtsXbNGIp4
IN43cTPvBkzoPrxiwGZJ9PzWYq3Je/6mPTq5z3x78L+HrT3ehrvh4TDvNA6A
gTtnt9voONCM8cz7/n2KB9LlNKZIgRMnlnScsNZ273LxHb3YsaNOmvL2Xfhu
8X2c2Hdi6rv+4e2YzWfqMUHzkLkLFjPXcx551L4UF0/cOHkp2pvbfoa0yT5Z
4mvQfnvNu0/oqzDf5t+4651gbuJ0b+b57EfP7fHhpNuaj/3vZXpn0gfEjMDn
gP8lbAzT4Xn3c5/qSx095zL1oRmbjbd4MCknL6952Qw75a5rvr2KOeH6yNnR
1+xc0q0pZ/3Xf/U7D3ZOnYkbh15sPwP+hhTYzZrtlCt5805MsSbwSqSEl83h
FOpG7yW3RNgXvRnds7nYJXU5d9y7/M+Ddpxz4GCKuZht56SDf82r5mPm4aVf
ndc56+jmcPHooRjqtDfE/mTzbe9zXjsz8HTMdH7GNMSMyzZjj/Qb86qa69CT
WvdtFoSp2p/abIRfGP25/arthZ20STRJ51uDxyb9eNOKt/lUfGtmzhpxItIW
tuFHONuezZMe6/6BbeCc7CcOmjXrXNOxJjwOwEdBHWjHeCnwREz8fyrthXH8
uysuhi9bj5302a3wLni+35WfAibsMYG5NFouzMwYzDyMNyXbE3OaO2mHj0n9
eE/wcMDVLnAu+Z79vvL8XPDy46fv9sHV6M/2f2xc7Hex50adcte5bHpsb/vY
iW9bN9449sSyp2Ne4fMp1pvbNs2BmjRw8571OvqyvdTT/VCsQzZ3cf0vrRef
4lrc8TH7uPamuH/8LWLq0+w3778ac2LSijtfNrotbUbP7vGN349+RhNz9nuM
xxguTsk2rByObS/y9O8hv+PDSIlnIufTLznO8ZD93nTJfd7x8Z404+k3z6ub
vBPoxfYJh40nBp7WvZ381YmhnDx48LgZstm1WY24t/go7KfIOa0VM78uvzEn
jOuwj2uGa7Nu9ia2BVwMj+U3crMRqxhOhtvSTmIBJ25E+4spbLM86cPsa39D
+xw2T0UX9GJ7jokzh67unMzwsONewMXOV7hpwPSR9WLnA2kmhuXTts7rZ+Yn
d0T+Vk5czN92f7+d/saak+Fnxw0z9+LBdM4PCnw58VTzQOeVaE9FMzHaqdvM
N+y+D8/Xg9Fb9/WcqGbs7ovmOHOVj+V4vsf32AF92HMfYUi4jvFD9sHlPLse
v3gdjrSXgnqjV28+Ctr3Cv/eYWP48YrrYd9p/pmZNnXhCUJbJiaIfcd8D7Dn
2XzczPs7j/+bv/vOlwyvnnJE+3sJ9TQXu020kXXPjbQvo/8twMdTH8IoXk7x
1eDlKe6a4z10TOLO/9Zap7XDZsVtntvEUN9WR+72mEvMxn2NjaUnjc592OOC
jYsn5urjet7dR/n4yrNwh5W74BnwvdorMGn4PQ5p7/QVE1snpnQ7Oc7+CXwe
rbO6XdN7im48sbHn3sG0vo55t3OCTO9q/j2Fe9GZ0Z5TH/fka5HPcuLiSS+e
tNoTB9/xTbz/dva5Htx+iCnuxOm8xJKLbsxxsBSxHVojzpw05mdxrJnYS3uN
H/V89YNnQSMmrpoLXNuaNFzI/kfcsE/smjZNXAxrkusuXAevhu3e6cVvJfWS
H/rHb3PuzMCsk6MjHOh5c8QfRjeeONb6brwUMGkzcuflaG/xu/recpXYP2xP
Rud3Zt4d/YT2S6zj5mLP7ct6e6jfsf8nBgkbTDELyEHXTICG7PlbzVvklYZ7
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
7V2mPs3fg4vJOZ36U9CNzcr/+t/8+ycbdwzjrCc/X7gYVkInhn2zP+sbG6PR
kh+iPRWp03PwnNfDuZvh4vBz1l2PNU+4l/gXU64752fL+fb8fsbFb7qxYwoT
b8Jz2tCc2edcGvCk426Ylx07mfqt1+IT8fmto3fu6+ZmeypSovsyX45j0HzT
f2jj9lE8Y3e81cG2c6lsTAwX87e22Xbiju13f69l2xpj592Yyl1m2vKu4ZUm
lhvMAn9P97IxqfcRl6KPN0Pd6Z+Jizv33tYOtEe+2TvudJbh4Weci08sxbO0
ZmkPDOdNbIxW7LgZsPiUd7u9x46f7DwhjoXNtTxeouAX8bPN+ObExdZ/7Xf3
M4ET7TnoOuFU2JX+CWfbm5t9zJPrvCn+t+C5d615c545Nu+rPRiP63xqq+ME
ug77zDsG3jR+ap0dxmwdavq7Oum2rfH1N99mi5MW6rxykyZ78jDbY0Ees2Y4
jjPDwUj2QvNdHX6lXnNTl8lPjSaJlzTL5qFJp+/v9OZIWCuFa5yY9KNz6j7i
pdjakf3bu9UaufVz9wfPFe2YOWanknwZxDIjDkR/V/C2l9aIrVvjY2C8Nr3b
sLHL5jnn/nO+/z20TtzfbojrtvFwj2W33CPNslMuu/BouDSsGkbNMpx8xcYT
C09MnOPim0iBi1OiFbMk7sQpvjJ6sTkM/4F1YebdbV7j1ni3eXhmZOvHcBcc
6GtMPmL7LZqL24vx5OI3vTj38o6LPy1h4ujGYWK8E471gI4Kh9ozYc+BPRk+
B/Y1F7fO6xwqzCX0/Dn2OR5d1vF8OFaFmd7xJRg72Otsj4cZnbgVMP00945n
ipZrfzFxbE8cgq924+IpP4fZxxoxHOVv8vZKwF/ows5x4WP5HR+yC3rjlYfC
v03Mu3lNXmHiSRPefnPfRjcmPh28y2+wXn5HXzZfTX6SqdhbjEeDcQZ1tc+Y
+YOMQ3ws2jNL4sfZ7+x8Glm3zs82dbqvp3fQOY7x9tjDYz3VMRt87/6+QB32
ktuXYn5tlrZWyzbHouHTz3Ar8wStLdszY08F9cDTjgHtMZDb0v+mHVt3+1bf
35I3fc+/mRd6/n2zIXmP8U/03/TmX+/rWBjWJ11gqWh+jmUbVor2Nl1v8iRb
83Zhf/uSp/HANM4wHzUP+j77WHtFWjNGU707/w6uPcUw/mjpsVN7jM3Fk387
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
Dm0WHiW2MAwKF7eWDBfDoMwp9Fy8rNNO+5U9926Kn+zYcJOfgxhvtCm6MG2C
p+F+dG30Yv7Wsp5lvs9mHYbopb8l8/e4PRj+HTZ2XOPO2dGaMeycQmze5ni4
GA+BtWIYwJ7LSS9tJj0xquPcNrtO8+lYEu8NFuQ39tm36r7mWvZDdAxoe0na
NwITd27jyUNCHLXJ44BnAh7HU8G1PS6xz9ZMZ503ddIXzeD4MqxttuZvBpxY
3O+evcbN1XhSHAeiNXjep+bp6X1qTXvqc/jZ78+krZ+YGIbPv9O0D1/NxOK9
pA3+u+2/mzACc5fyfy3fkoltNjFb/z1v/pk01clvi4ZsXp1yQ09acs4L12Sd
uUYch/bLPH7Hmp1isXXeB3M944TpHq6KvcnuE9+7n8v0bZ05eVc+inAxfoCv
/uDPnn5j+gnGZH/6xFzM+5B28QzMxWlD3ok7XOyY1H6HPH5qvdhcTD3t++B4
ON/fGvAYw8O5Z94Prh9G5jtDSn7Hj4xe/Ihv8akOe2omft38vNMcvN7n8091
X3lQrtrCOrza8+vCwsy7Q79tNt48yK0bZ91MPJX8DhNHA6ZMbOzi6+Gr6FjB
7angN1g4XGQuho0d6xhutaaMfpxj8AE7tkHYDEZ1W5qLJ90UViT2BceYi83E
rOOtgIsdG6J9umiybjMs3fPrzLkwKTxMPmbqa5+DvRPfcOc3MeqYb8fvngdo
30fn28sy92sOns6B09Gx6eOcy309fBafeDn9mOOc06z5OMxjDoDbmgmtdVkn
duEY6s72lkOtczs49oQZeNOGJ93beiU6N8tJA2b/wzPwFg8Ytucbemt+4cYw
SrMyMWdT8rtzbqRkXwp92yXHhzmzjn/X44CtL/CGtFZubdPjgiwz9kjBZ26O
w7f9zDv86f8ts3Dr9e1t9jiF98T53vDbeO7exMXd9omDJ4/wFHfPuuvjnt40
aeY09nvFM8frwrb9E+bmyWfhdb9vzfbTvXXf0l73rcdhzePuf8+7m/5m/v3v
fvfpNch3eM+7Cjf039zNO9A+0dY97ZmYNLb2Nkw+Tuu6Zmn8D60pZ384iGs5
TjEMnvt3TAr4rDVvz5ubtOKJe71v2t+648TI2Z6801dcjD8YvRy+zH3iiYaR
YVp41EyIFyHlDhdbG+/nceJjYkzQV3hYmo0Zv/h585zhYrgWnwTXZx5jjs1v
5EfEo57xILE6Ou9KfyPo959rZN0xITrnx6YdN+du/qXe1/W7HRTzrWNOhItT
zL7oxvZNJI7xpCG3r7j16OZiYk6kmI0nPwW6MSW6cfwViV1sLna8YPsoOt5E
jouObBY2GzumxRajIsfDxebjH7/FQeh2dE4LtokPB4+Hi51Hw37hTSu2Txat
GO8wPPlOi5Vv1z4I660TH3s7x9JWa7P2ET/u96sfvNu2nyQldaSkffiDHecC
H/TUHrM/rGzG7hzX6PM5J3WG7dN36X/8uWiE1ov5202+53BP82uOzd/fyRvp
v/HMocqxqRs24Tv8VT4Px2SzNtos1vpee0VhubQh/gzra1uODbMMPIQ/1PvJ
6eaxA7l7nW8kbTD3wtPmYnMzHEw8tHAr2mCPA1hai2R+lmNU22/Lc0ETtg7N
vZ28t+b01AG/enyEfmzWgzOdM4WxE+3oeWybn7c9BD1G8HmOTdHHbvMF/Tss
355l++lbH3e8jyuPd79zcK/7c2J/jzGm/Cv2KqH9o4Who/F3PX9Tw4LM30dH
I86Dddb2UdgzfGLn1sg8J8+c3Nph82t7jTnXerU9yV0Px095OZzLOcfbTzJp
xRsfbV6K5mc8uM1VLN1faZPjF2/55/BR2PcbxsvfUPNv6rPW6jgh2cdvbNtH
ccXF1M29bjy8+SruzBekT3iOsC9t9DNG5zafT3k+yJvo/C8dy7qfud9vf6/w
WLLf/fZUNMtO4wj3mfOHtH+5dWniOmeM20zc7Ovf7K/oeMfNxmFXPBXoxlPM
iX/6z/7x4zeWzcXZt3kqXPAa53rwKl5S+NAc3BowMW07H16zccdva13ZXgp0
2bAfmmrnjG69OJyXeq0Xw4gP/664mHx3k8+YezcvOv6EORiW5xja7Zhr9gnD
2ngqaCM59NI+NOOeW9cxN7h/53WGdc21tMXe5Z4T6Fwjna+vNWXnNCEPNfWk
T4n9xN9ddGPybvE3PL/jY3DctfyNtRY8fdNOSZ3EWYWD0N2yf9ONzcV4is2C
5kFvm597Xhj3AR9MflrPd7OnFH2Y/WiFKcTNyDp8krrpK8dusPaOLk+dzi+N
Tps2E/+Buuw3wC9B/Ft7McygzZftl7CXnN9hc9oeJu/xSG+jf1rzZb/5btJM
8TKbZ7PM9d32ZsfN00yfuD1+T9v7m/UpR6DvgX8T1onb39HvFHXbYzLxsfX8
iX89HvC/UZ5bnkXew8R5oaz/thQ7gJwF+X8VDwV8gJYW3y45BSY/oxlv+s57
xc1mgvYQWyO29tXssJX2RHtpvbnzedivMWnFzcGtg28M7b5yPXAjfLrpqGnj
lO+6C0xrzZOCVm0vNveA36A9K1zf+mvejysu3vTiZryJjVsb3q7D+fgkaB/L
6ZlO/DmNkfp3+zo2Njan+t2b9OLp38vUtqsCE3NNmJhn+f79+N47XbhjFIdJ
vZ31P//Zz//mv/2P//qcs4c/eWJj5vOltJeC/dF5WbeHwmzM+WjFaYe5mPl4
cDH8Q4wCxzSGYx3XGI0WfRcW3ubhTXk/ON9czLd84u1OPgrzIuzMddBLYUC4
2HPn+P7vnHeMC1JfeBPPs2OdpW3wML/FD5IS1iVXCVzMNT2fzdzZuTGsGZup
rZW7oAGbY60XOy60OZYYbXA1mjL3meNTyAmSfbm3SUdOP+TeYTj7J2Au62L5
zZqT40RN34Dha+t/MLG9szl3i0vR8/Ecc23y11oj7u/fcE6YIYzpe4G3zBrO
m0Z7Oxauj/G8wtyz741+Io4HXAwPpn3m5I55kDbTR4wPHA8ajZ9xgbXotDHn
WCv2t/XOBY1/wXleeL5o9OHiFLN52gJPMsZy/riOy+Z1t43jUz++HLPqybvL
O8h2PAbWtzcduP23/buvxfGwa+vZnkM4MfEzx/antqXfpmdij3szv3Pu8E2A
8SXPnDHfFRc/9hcXm1n5ux99FM+lObQZpnlv+jt/Kq2lTfP22tPc15u4xt4J
F9c1netz+H7fTNwasDl7+t49cXB7lamDevpbOe0OF2/z7hx7gzmIqS9cjH78
4GppvvYhbBq3fR6O6RDd+oqLXafvj/uivyY+xgN9pRnTr+bir9/yd7SXgnHB
iT09XurfGFP0uK+/i/j5tabbOe1O3mDa6ZgXExN3ee+b6HHTe/8w29aN4eGw
b3j4L3/+1888Gs7rQRxi8zEaLnma+Z2Yxx2/whxtJs61N09Fxzb2nDJyrRFv
wF5jONfz6tCFrQNfzcMzOycWBHPY2msMFzvPHXzX+Sbg4jBa+DJsmTqIW4Ye
y/1ZL354jN+8FDkXPdfxi1sjnuK2wcX2GTsucLZzjPNL29fbHhHfM+MB+sXH
5De4NW3vmMjovNRPrAm8ybAv/cmYhDEC7aZfYHg8yGk7LMzfYHL5Om5Y/gY7
x5n1Yngvf49br8OjDD81X3quv7l78hnD4rBx+2x73tfkLYDtiKtgLRr/cHMx
HGQN1yzieXmOGWcmhDVzXfKMmIe83d/Q0U/p/7Q7fmvYJ/vp38mjkbZ1nu/J
R+H5iT0PLG155yt+yzfNNRnzEM/NngNrsr7+FL/Y/ZF6W4eFUSnbHDz7I/AJ
t/fDrNzvLXqutW+Pmczh7b8wL7vt+NQZ15AnxffW99ua++QX6Tmaed7OuXL6
BpPfO96sv933t1vmtJkp2/d68hZclYktm4nNUj0HbtKwm28c99fX9X02Q+ec
ySsMF5mNfM3mWvfLNv/QdTVbe4xAG09cTLGWmnPzNyS8ZA3UemquzbO2f4Nt
Yj+0n+OjXDyNe+C/zUdxYmTf06YTN5dPfnV7cLimn1t+87eT6Tnnd/sq/I6Z
k1vbfXVMyTmTbynLjIecZ+Wb/CzfeIdh4Wk+XXJxpA/y/044NXzsOBApeI07
f138FL/4/+qPHts59v/8r589udosTOyKMHQKuT2yTBtaJ54047Ab+ihxDPjm
3z5hxwuDga0HfyRGRY5lvlyzMdxrnRQGNh96H5orOTrI6Yx+DK9Oee/Imed4
GY7Z5nx18GIKcX/toSAuhWO2WZe1L4N1/A+5T1jZLExOE7iV3yl4f9F86Q+v
kwfb3PyTx/yon75jYuYJ9pxDe5eZb0icM+Z1tV4JG7a32H9zw6v+pty57Foj
NteQy86acfsinSsaLs65zb3toWjvLfET0HXRis3s8EZrcO2j6FzA2Z7mL3qM
kOuEHa1pwj4TI8K7+JZ7TOL82WjR6Pd+lql/42Kui78YLjYPEjtt8mw/uPOt
jdx32J8xCuOE1oknLmZslv3Ri/Eo24cxzWkzt07tmzzRfkd6jp/rsg49MbE1
8vYQ2a+//dsxvxKXG59Jc/+03v4LxkFXTDzpxSnW0FqLcq4JYm01rzXzbX+n
rX92mb6lt1ZsJnX8OPszzNfmkk2rbjZu/wDfzCee7bFEa8abvm292DHGOi4F
9Zvd0ItPOf3g4sm3knsj/po9xLCln5G/+Yc13Y93/cVXPorm0daLXaa5d2Zm
eN0+CDRk87HHAr5f+jtLe0Raz+9jKfAwjOL6O3ezuRjG3d7Tu4wcfw3fd/BO
zPkfv4mx5hgU1onDqbn3LMPD4diwKp5gszE+Ypd4f8kdEhYOE9OfqY/zzMU5
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
7YSJue7OhDAr0v+ZsurMuHhpplyKyUvh+4BnwrVjPH/ShPv9tG94nnvS/nMv
S/2czWM0cazH5KFpu3/gMYJkrUx1dO7oxd3CQdGzpufeaF1kZW3+4IlZm4eb
qyc+mvjypAee2MTTnQGx+Xw/w0PTttCKN2/ASSv2tU/fxDnFU4Nvm1G5jhv7
Zr89HY3Z+b9wcThuy0K2h3nShCcW7ns+eYzveGT6msK9nX/W07ZMiKvvxDb/
irOdG0Gex52/zfZRNA9nW6lh0vci08LKYWK42EzMODd7KKwPkw/Rfgnqg8Cq
zmFzDY/sL5yLpwLdmFp41MszD9tT4WZd2nqx+dj6IHXRwsvWjdFnYUrGprX+
26wcrbbHvplF2c7kdWC7PRYsmnGOjXW93RzPL377Z98z/i//y5eHY+JiszFc
zD7QmLN+PuMtsJ6eV/tvp5xgs23rx+Zc+5bNxuZg58U1r/cx0BfgvsDG1pDT
ODc0460fwDH9PfmJ29vrrN72KsBmcKfHg5Et0Tm+HltHRoD9EuZsnuv7uTna
GM+MwyBbHpY9rmlsBy6Dzez1QDPvbcGlnGtzmms6w1hkOXDenafANff+fCzs
F58qY9a4Zs6l65rM6OtmONfCyLE1FzPdHOoxY75mnTPNdqz7mzn7mjbrmVXx
XMB9zbvOxoP7eXbgfsfIrPL02v+Ll4Kxc+j6Wz4b05vHnXHsWjIwK9u1D6mz
SPo5RmeBcOzce2eJmI2dQdjPP2jchzuaVH5brRm3lsvz+olTpvcbM27P17ex
WHfZtBm532964BUDbcdwpS9O0/FwTMezZVGcfBQ0siC6sU1ru/YaM4/8sGke
7Byeu6oDTS1p+lKbx3gba/fOff/M96G5+VvpxVfHkVfy7fAG+5nNHV14m24v
sXkYJjYX2xvh3DXzcHuNWyvOezzDYVlzcPTicC+6MePtYOiwcRjXbJz55mLy
KFo3Ni+T0+baZ+jF6IFwGVqxx+dtXmP7iSf/cbbnbIjWab3OxK/Rr83F//Hf
+UevLN/2F2e7L+37lz/Uw5vyJ7qxDn6EbIvP9vf685SV1po81w92nXRf+ydc
19mc7ZrNrlnHet4v3hfGS6INd908jsc+5ymvzv5nex0Yd4du5vrHU2YwbMcz
fvPu9HzfDIcn1nlr+A/QIs155HPRckxXOck02Km14s5ThkXtCwlPkR2Qc7X+
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
LNw1Pbbxd+jFcLGzJZpvuYdeprnY+jH9l3wvotVyz8OzeAg6G7n9IVNWcZYP
x2abfB8f38Ev++F8GAvK8fp9X0vGs2WbJ0+Ea2gwJs61MiYPcHsf7A1uxp2Y
2Izb8+FwPBeTl5j7A5N7Oa4FXMxrrgNMT8v5wpPUlLvyTZAxPHmJt3bFxN2y
/Yy5g4nZH9tyzQ9ntcHKdzi4GzxlbTY8GdaLv4I8hrzPmDQ/i2/2hTdPGRXM
h82aje0tCOO25yPc9+d/8VcvDTfL5dhgW84F3rVPOP5gxhVSU6T5O/vGb03O
mXVVPL2us80y0Ysnz8M09s06sDkYb/ekaZ+Y2jo6+nWPVWyezvG6n5NlrTnB
cH5Oy2+suRTtePICo4mFXalT1/PsXf7a5ppu1qnNHubiNHiU44czef/yKTxb
a88Tj7M+XLVpy+bi5tVMR3vntfsSfQxma47VjOjtT4zeOmyuqbMqqM225bXZ
T4P/GY3T+QrOoJjyLJxJ4bF4eH45N3gWXZVxcM2f7lu5P8N303xLTRaePVhz
777FxMrtobD3mL8h+2qsH/uVY+A5C3+bJ/8Rf3+uk+Ljor+GB725mFp1NP9u
4h+Gwaz1WqNF/2O5yVewMeqUQXziWTPxNNauOXTi6PYsT/u+qrE2HTvLbX6O
5vcTO3OtrQufuDjcs3Fxa7fNvuS2MS/btpbsPArmoRfnO5PPMC3fJ2+vtfyJ
ixk/iLZJPy3b5T3czTHlM3qy7yH1GWFF+6EnTZnjDEO2Rstyk657Ggc3eR6u
2Bgmhn1he28PxkcTpgZ3zjfvndvi5aij5zzyXFP0YTOxa8c1E29ZE1/LwtaN
U2ck7Bse/r//7f/wYmMv1xnGzm77DBd3c100ctJgLvIrJq9xj8Pjef2WUcHy
sGHrxvCpx5RxfJ3R21yMvg3Lw8LxW/zVo9bUr18+kfaV+HxYjuOBi7uWsjMe
WMbZb5MvmetMv8DeEDKPmXflv/ijZ94FdUrSwrwwt8f8dctyj6zoZ50UWMs8
0exJzbRu+W19+H+/++ijsFZlFmA/34KHzcUwX2umnV3Qy05ac97bm9C6sJs5
M8yR9fDV4nO4k7vhY9+4u/0D5mPze+uZ5mlzNR7xtBwzfgIyKsyBeHztc5j0
3nBwtvEhH7eyx8zIWw5y1z3Bt2x+ZGwlnpVpfFyzb19Dxswx1vQPH5lAP/+R
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
9l9M2uvmdW4GnrzPV5q0z8t6YPNks77ZJse/bRsd0OOu6GNsx9fP5M1Q1jh7
GR8z1wN+y3bN0K1nohfHA0KGMWxm7Z3tk+UGyznfjvp86JtowTCZa11nPuui
j3tb3ZfCR2uvB14ItoV/tr3WPo/0+cipsz/F18xc7H5Q9+3aDz7lhvR4v/77
MUO/Mjf0N0Oecdc06WcamW+PCgxsPdpM7JqHfhbdPgk0S2dnNa/1NFjEz+Kt
/XmM2JQde6X3NgM3h07eiI1bTz6I1jLh4W3ZSd+etPHJ/5FlyKHAf9v3Y/JV
cF9YDo3e+cXZLmxkrdifWx82N08MHe7F+8tnmBJOs14cXnUNxImL8UG0notf
g5oz2a/vA+fmV3M1HoSrPGCyJbhu/v6y3bus2x5jN2rheRl7jKexec7EsN8C
TjYrt6a8eY3TwsXWi51LPPkcrA37tX2/dxte4jDxrx460h+PnuKrBjfjp2gd
9aQLT7kUrAN3wq6uA9Fs2GzsZ/3Nwn/03/24VjQMPNWKNhvj8XW9Y4/DC+81
48J65sWtTnNnRaAn/+kjn+qjpsy0u836OVzcXGuepybHXSY++Sz6Wl95MmBP
2A1OC/vAEc1q/D6/cnufPAIfm5VcnyEty4djrFvah8szZPtQs86kA+dzmA6u
yPZdK3dr5LzhibBWzHvOxdnMZtUrz4c1XPTKydfRbNxZX8wzq9mDATd3fu/U
B2BMHexrHwX+VXNxszf8Ss3pSSOF4fw9oO4y4/cyj/1N3mnnscGZ+Ionj4J9
G72MtdlmbrjR4zCt2/t5gb3rZt/OPvN886vvC89K+pkA2yeHG8+KM0Pcx3lx
8bOmOH83Hl/n/oO1f+4Rz+btVZ3Gdm0acfsouh6eNbX8nsNv3cJznRuwabtT
1sTVepPOe/JZnDwSvZ3NQ9HsN2VTTBr81KZ55D5YL4btXNejWxjV4+K4puZe
3me7zqZAD0a7zfRsC5Y0F5Ndkenw/+ZZ4V40Fztr98GIv/rlhzGBHJvZr729
TNt8DzCm95lzaC4+eSHuMLH14Wnc3eSjQP+1Ngzjw8X2bGQa+vHExs42zjQ8
xeQST/U3Jo0YL4UZ9rO+CTTiNGp6WA++y8Xf6ye/dzm27g4nmzfty4VZoy9O
PNa12JqNyXSY6uHBwPYEOL/M+W1pHqcGw4eNo7myLn4JcztszjGadZt5N/Zl
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
FfsoMp1tvDzTz33RNv6dmvOAnX0CI9PXI/uMPDrnP2xcTDNDb/owPGsNmeno
w2lox85iyzTylX08znCz34LP1PCzR7u52N5hc/HkN+5mDTfLkUsM81K/zrpv
8iiy/9//x//0Qz0Plr2TRTGNBdzyJcgxMxt7fvKNw8bhtYmLyaFAX3QNuDDl
lFEBG1szZhq5EPDuVg9vqhVtL4XXmfI2cj7WU83TPs6JMcPGZNeR72yu3XLu
YF74mc/UWmE7MPYdf8bWJv/EaXyd1+n3ZNi1tmrtEz7a2Nm6o9djPttFAzNf
8xmua7259WIzr2vi0qLzbpydZe3BJOsCDTctfJtXvA2nlv3k2lBLwTWNyZcL
m7zDxJ/1hZh53V+Y6n88asTJUw2jcl+ov8x9t36a7VjHNhM3U8K6vJq98WLA
pD52z2ea12t+7vGGPebQYzonfbqZGxa2z9j+CVjSmS2f4eIe33e1Dn250zbd
7OWwb2RqU56a9cdJD5uYhN9p9Esa48LMzCfvRft+7eXYtNd3PL5XGvDE1K13
m+s4lztsP3mLp3NozdjXbup3hBW5X1xvMhXMrfgtyALm84uZv7yfuNh6sf0X
rie8tTDT5Kfe/N4/qqch5uZcuQ75rmV7+CGcQTz5i53T4Ay0B3/LY2BOnsbJ
uSZea8SnnORedtJy+28CnzXXIPfA9Z69LlrwlHnhe+97Fy6FjVOHObxKzefT
OLyNi7NMtoUOHP9wPuMNJpMt79l3GmPtMn+q5TFlxW268Sl/zePuTlluUyO3
ONxkDRJvA7UhJnZrPwUcas59eA2ebH2Hja0Zw8bh2IlV0WW7lhxaM7nI6MRZ
Fv33xbHPhiZsLm4fBzXmeLXeDFez7VxX9vnZlvXfzVL2eD6uK32m/H6G9WDN
1nXNTZsv9cTO7ZEw48Bu5mx7mtunACPjB+DY4ICJX9Pw8IYt8BWbZWlhY2db
XDV8B+Zh5y5nmfZh+7P7Bxvr9rTJH9Eel/aopNl3y/Xqz+EnuJkxbNbM4WJn
Pm/eVfi4tXCYujMvOJf2DaBXW2vmu/GtMj4Yc2jenp5J9Hv/jbQ3JX2LiUtb
v0UX3vwfd1mbDAp7J6yDZznXiYbvzUmdFcvv6p3n01c+TzgCpkJjZgweuiV6
HfzkLGXnw3WeGWza3DV5HfqZPno422udedO48QBMxzHp0VuGhr3QUw4G2jy5
bL5mcCPeAvdH8jvH5+iemZZX66/2IjRbd2Nf5qwPzL1wcY6DMZWb54Xz/hHr
Dtu3R9p1xq3DupljYUezvTOC4WJ8FFv2xMa5k3fiLhuz/5wLeRz0DduzwnHb
/8yxd31p9yec/0YdaHIh4m2AjZuF79S0o+6cvcTZLvovTJyM4tTgyPLNxlsO
W+vC7bG44uKt1t3WsrwbXBeWNN+aczOPcXjteWV8Heui15pP4V10Y1i5vcbO
LJvYmIyKD2z8hWc5LmvNXZ85YxPhVtazbo43uPsTnYtBnjKv1ohZL1yMjm/G
vfIbw8Hb2Er84F3fbqvpl23l1f0lGA7fKw0+4XPz5sSJZoVm4I3zWis1I+Jz
bU8H+4G7+M0P18KlvId58/4/+Tv/9Y/4leluaMduzoPj2kzbcpt8oc19E9NO
vm33GdpH3X0S+hBottwvrpN1dPou3OvTeDH2Zb41C7Nf9Oq+v+bjie3bV4t3
o8dAmrG/BRfj67ZG3tfRfblvsS9yUdrP7r+t9r7zOnmXp1wMriEcDAt7G/g0
YavWjqcxTO88u+7tXS2T33I8oBObmQnb0+HGM3H0ZnM1/gLYCBbrsXmTj6Eb
mRqui9Kei0nPbu24xzkyXo3MCfOqzxMG9jKMwWNfzobLvsKbjDvjczee14ej
ci3RKH0vwtdbLZc06n5kH/Fd+PzbP8O555ycgcF9MuN234r18ZD4+wTv5lhg
R2/jpXmLSc3FaLX0Fb3d5lu4FA6HS/nbarb+UK/k+d45bGZYvlto9n5W4L8D
XyuztjNDvN2wqrk478PG+XzFwd16fJ21YbzD4eFMd+aw2bg9xO2RaBae+Hgb
U/cOF2/byFgt+xbMtWiuzqgIA4f9OhvBbDz5AvBZWDeexuG1p4JtTl6RcKL1
7K6v8WByZVg8tN3yldhDbPZu7RjmnRrjG70uy7N+xvFdcTHLT30eT3u3TwQX
XzXroZM22l4Cchf4bW++Ih8ZP4L9Eh4j1yyMXsiYtSyb9bdjmprZ2Vzc7zeG
fqfl3NsPbc8tbHrSXHvsVY+d6mVZ3rU2uM7wUGfzoQnTt+n9cozWaO077uMw
70668PasgT5A16PwsTDdnLllcnxGN7Ynw/UEzfjfYl+wau7lneWz31wXn6v5
3fei+1xo1K498kP7Qbeltm97Icxent/Pqa0V32XjXufEzxOrt9eT42z99KWJ
P/VHcwU6Ippx679hulwfc/nE6dO61rG3sWdd09q1PzgXztG6Ol4CPCxZJvcQ
3zecjMYOj9r34bF8PcbSPhiuWRgZboahyUvgfcaI4Y/lfMhqsy/FnprW+rlG
9nTk3PA1w+P2CPuZB99P+y88r3mYRg0N+3lhyP7OdW4aXIwnGT6GSd3vs27N
350z91q39ns0cr6bzk3kfr00/WdOiOt002fMtGi04dEwsdmY1rlsU8v4up89
6jV97yVGI4aFYV17I2DZad6mF2+c3FqyefXP/+KvHvqjNUjrgh4j5qwKNFN4
Gt04umJ7EczFsOYvfvtnL02XmhvWejc2Zjusa83YtaLNxtad7Y1wX4DjJ1fD
DG4vhf0hLzb+sh3Yks/wrbXfZvD2prx04y/rodWiP8PSHtt3GpOXfsbX9nNO
zwm+lv1OzRprc2Z7eqest86wgPfy2+55P+U5vMPHE19PfQnqY9vD0ly7NfTr
1zPzZ4MZvX5rv94vLXxFLe1tPfsoYDB05j7miXfpBzQDT0w/5YrA7ewPzfod
jfYOp3Ic27hH5/fd4eOTrs053eVs+ixXejXZgT5Wa8g5Py9vrc5M5GfV5jBP
h8n4/UWva03RbLr5LZp5r55D/000s6b7CX61xxqGhd2Y7pxms5e1afTcvPf1
Mn93FgXL2DdhbZlxcp3/y/YYb3nS9bd+i33kaLednxEeI+fP52+dnOnhrVwD
Hx/Hzncqn7NsrpP9JuZDGJVzZ1tdK+Plo3jyMzX2Xr6Fp4cbtvXzDWvDWQYP
s/PzvOxD05fv28cxeR1aLyZbMefEe/oLHCP75ti9H7N2OBgWbiYO34ZzTxkU
YdFkEoeJkz3Bus5Tm7zC+C66jt2mCZ804+biMPDErjQzXHgs7HxaHu2V5/Sw
WbOocxDCl8ljI6sCNnZGhbOLPf4LTnVGhZkZlnZGhbmc48l1mHTyaMLOJusa
1ZwT9aQZLwer4jvguuAjph/Be/c9/Dnr4XNAm861oX/i6Z3xYWa/U8/7s+2n
ZMrwG76EjYvzHs14Y2KeLbevI6yV15/yHLa26c6T3uxlzcjU20MTd97B1szB
eKbNpHhM8r75lpyMSdvt7LBJu+5aLJNebX0XPZxX9nWqXbHpyBy38zauxis6
287H3bUWPUbU4wS9Hq2vHes3+7qPMrEv63nc6Yl3+V58C63ajRwtfuvyvuvf
+vm72YWsAOcSWCN96XTKA7PnAQZpvmvf64nN/qZZ+cTPk8Ztr6t1WOeBcC24
NvbMtl+Evom9FDBjWKk9Fx7D5n4Pz+ebsU/34A4zsz0/T/D3Y6rv1/o173M+
WR8G5Nrx/bQ2bC8Hfmr8uTChffX2F2dauDjfd2fQdc2QZl3uWT9r8XznxHE8
9HH4W4HJOTby9siS833rvupLJy+md14M1yD8HfZNLgQ+442Np/y2zIOJWT55
bPiJm4m37OGtPsfkLd60Yrcrzg0XmoFOy6ZRB8T1lsNlvVx02Oyb5yhhOryz
WYf10I3NfWZjf95qRTMOz4zdOROw8cR9sKfr97H/l9b+5RycWwzPUgObcWp5
DSvnunKOeY8no9/b40umMdcTL4p18fZ80B9w32aqa3JXG249+w4Xm+nMfe9q
qb0NZzm49rSZ2GPnWjPNK7Wq/ya4+Fs1fArw4pTf3JkSk1YMf5ktnReR6YzP
ar0YvdTbaiamH4L+a8b1+Mm8oj/Djc3WGxubeZuJfQ0mfqZl311P8a6HAxbu
5xabhj1lS3vcKa9oxq1bk8eCb+TKR+F8j9aIr3RrtOuJiz/TqA2c/2H5zeU5
OHXSXC8t76nhhYZKnbtt+2iG/Magn2Yb9g6jQztjoTXcidk2fj2x9k/B4Sf2
fLeRheAxavRZWvOf2Ix5PteNgadaG6frynHxXWkutzd7ekbBdwYmNhf3+Ea0
VGvnaZMvwQ292Br+q3/31H193mbd9h5xTbkPcO90bvaMc2yvPoz8FGyvr589
0e0f6Xvt5cLFYVrqz5mHm409Fi9MnOnNxPESxz+cfGJq2LVWfPJLNBNf8e/W
rjiXesFomKdl4ydG7z1xcXgu86IR45MIJ1PzItyILmofhH3C5r7OqOgxcuzT
+jMatjOO8RxMnAiPwrhsY/Idp8HFOR6zLevn3MnkyGtappl/2WdvC93c19Pn
2x7qnJPrsDTjnlj4Fjf/Rz8es+YWD4T1zXxGBw6jeDnmZ57Xu9PgYzQ5ppNT
FQbGS8wx4wn4Wjb19pxDTM7xt2zOBUhzPZHOqGsuzmezMFoxPN2sZo/Dlk/W
Oqi37ww8L48vgm3C39Y0vQ/qyWW7sGGOj5ofrgvCucKCHn8IH6NV87zAXpvO
VGEbXJtws2uowLGdG91cbTa2F9rcfBpHOTE23l8438fUNVy4Xix31yfifgmM
fsXFzlyAf68Y2Rx8p4VtP8vk8a/CEXh7t+2Z01964nN8FTUTHv7LZw0Ja7bt
rb7ST7+Gde+ue1rGz9B5Vm+2ar14eq6e1szL+64hgefi6twzvce7XbXOHzHP
hXGTuZ338LBr2LE+fQJyOOwfIYfNYxP9jMTz2XfOozXh5s3W4H3drcv3de9r
4xoq7SXxtfB4T5aH01tL9vXluwLTwsWtF5uN8RIzvi46s5che5jWmnF7K8zA
VzkUbNs1o13Lw69XXIxHAD9xz0OnDcvm+/Snj9+UX7942gzp9VJPLw1/BLz3
4MVnLeWuueb8ttZEWzfubGMfr/cHV3bWxcbGaLjwbecBm2OtFX/QfZ8cnHnN
27yyDOuwTXi66+Rx7u4zpKWv8shVrrqEnSFCO82bckce3o8nC5I59k5D87UO
jIaceTDgHU6kPgaM5hyJtBwfrA3D53Xj+TsNf7P3Qf4rddV+Kp24+wTZr7M9
4NGJsdBvnQGCbmufgL0HGxd3m+oGW0c2L1rHb906LdfQ55iWvg2ZyGjQE9PC
ptbQPdbMerO5vduWP901R+w/sQ8DDp507C1TxdOatVuntiekteapTct7nxNb
e7k7XNx5uhufhiXIY+B39w5Hox2n2cPxbjMT3VmeHIowxzv76WfRPd81iz1m
ymP/0bPN1+8wdGvW03znHdhL4X22F8DT0Ngn1qfPgEfcemamexvtoUDLtsa7
abYv7fZ57J0Hgg/azOz8D2/XnJhjY7yevRTOxbBnw99/vmftn7bebg+IubW1
ei9vDbjHN/b6vR90dfffeD5wxcQsn/tKZjA+Y/uNadGAw6NZltrN0YQznXwJ
anL4f2Mz8aQbp6Ezu5mxWZ5j2XRtjuPkowhT5e914uLMy3Tn3GYa3OgMYdeC
Zjqc11ycZg+FWa/z28x/zcb2Ils3RiNuX0Zrr51RQZ4ZHNvMb59018szG4dp
s5w5mPcs7+nm42bnztdoXzXn8tD7f0IuDrM4zxeGMe86x605uBnvyluxzUc3
NWuh28JcZCpkOjWVo/99DRubv7O9R4bvr36ou5B53yKb4k478Zyz1exrsNYL
C6HHdi6cNdaNJds/wbXnvpjb0LNfNTG+LGtPLTm9Psfoxt6+WRifeWf1TbzZ
dQl51mC/dr4bnCc5v9Tzg7Nd75rzOfUbej7Xw9eWzIe851p1dgQZhBtHTz7o
zTPtjL4TU3sfHHPn6KK70aZpnuecMsZUXfGwmcC5ZCxDg73xVEyNMVd4on+q
hofjxNzhEfJiP3s8nDv7g+E8Zg+2QfODYTt32L7u17g71Q6+4m9Yl/XaT25N
F+Zl7Jl9DOyf4zoxm5u9D2ZOr2eedV0+a8awphnzqs62M/Z8PFwnji3bDqdP
WrezQyaN3sv7np2WTfMxcT3JIHFmW2vPHAfvs2504mZiM2n4l9dMp1ZHPsdL
bC4+MfHJQwHvsi2yjT2WDn5Gh2ael2P75uJtDN4jC+FZo8LZFWnhYWpchMvI
TsD74Hxh+DPLZ5nsr2sre2yZx5Hhd5jq4U3j8FxLGg5P7kVnSJDxNvUJomdv
+Wnti7jT4Fyui+e5b9C6cnMx7z1usGv6+dwZCwjzvsO+d1rrtq5zAftOOWiM
p5ta5wF3NvC0DJ5hns931kE4AH0vXMNrfuffyWkzp4WDw2l4JsiKhQWzj15n
ug7tuf6WHO2aZ86u4PhgOrKI7RGwvmh2e0cz7rF7zi2zhmlPNF6KrOsM6G1/
1m45J3wU1r2tDd+pSYjP2fW5yUZDg0aTvuLhydfdje27Tofrz50Yu8eZbnzb
fR/f4/aH2Ivh6fZdkGFL7taUIzaNw3Mzi2y13qy9mQdgSDzIZmLr0tO8TG8/
6sTQrM85sO8T516x64mffypGpw/gc6SPknl57h8G6rwJa5xmWXiM8XnmMfIV
4KhXtsNQd878af41t7EvttcZvFP+HHzn5xGn5vMyb3r/5uJmzK4HQ8t15fy3
731nb3he19f2PPPtHX4+TWcMZtdk9/VDd+Y+RQNOO/mLJ53Wui5MbDbujLZm
YXRqPBJsL9PNxTBvPBuZZxbO99/szGdzcf4uyByGDdGFw7HWi8NmYeH4gdEu
s2yW63Fi9ijA32QsOKu4WRM9GYaF9czRJ68x7JiGt8L1o9Ftzcau+ZHr0WPU
8Nt6TFw0YjTqTfv1NPNt1kUb9nLUyoaPvZy91j3GcGLlXMdvzcITF1sbNhdb
TzUfnrj4M811kyftzOOH8JdG103b/BQTL+ccXLsE/bJ5kfFQV8zd9T64Lt9S
R84xcxw5Xmuu9ko0G5lbr7hv00On9exnwMfsum9o170eOml7J9zMhn/2eNb1
43ozU13Gbpx7+k74ncPL2SaNc7CP+8412voS5H2gFfv+bP2MU+uc6+k6de09
Z+CdxgfSYCo0Sjd7NmFXdN2NobttNeLMIq5H13XQulbdVCPDz9QzvzkajiXT
Ci0vy086OPzc/up+Tj7xsceA3fV3vNs2LzfaOrzXtUNyvJPm361rrDUDt87r
jDd7HLwOfGqt0h7g+IXTsn5eO/dtas2Q0zi+ZtWptnZPb29FlkMjJme6v8fT
dnrfXBumh0/dH2im9vMCdF/6gfZSmIvb88z2+97R94CLe+yctVmY17qwPcTN
wcz3uu0ljh8jjQxjWBt/hnVguDjj/NgP0/nu22+M9gsDt24abyoZC+HYLBsO
I0sCf0R4ONPw4NqTa+6GqaMHZ52Ji83V1HqGOWHAzWvcftus75w2tgM7ThkV
1lzTOpeZHGeOGx3YfNv6b7/aJzFpzt6W/cj2UnD+rbl37nOutf0gnUHt/Omp
XXkprHFaH+520oAnPdgt+7ji4uiJ/u12XpbH38N7cCuapLfl4968E9YQp9oj
2Ta6310ubv/zpC2f9GaPKTxp3a515vwErlMzq5u57OTLneqGmG9bm+7MBvtZ
W+s8NZaln8L9wTvjPsA0Fs7HwPbag8A4Nn+fptbb3HKX7ROGwVmHuoBT/8PN
Xplmf7PwVmdy0svtP2fb3X9gfFG3iXG7HhocBTNPy9pLiV/CrDbVuzgx8sQt
NBggx2/edu0564Xm127wNAzqfCz0N/Nplp3q6p205TvearPrlb7NveA8fW7v
+rjxjp90SvMenJv3uef0idAnm6O7JjbeYHMgunP7AnxMsLY9HtaIzaHdP+O7
7u/MxLmcV3id7yDfNa9jxu26JRuD9zau9GH3e6Z1Jm19uv60ZlG4c/ILp9nr
kNZc3P4JloVlmY7+25zdnmLYOHVDwsVkI3d2m/Ms0IjxEsOu8DK6Lj4KWIqa
wB7blXWcQ4G2am8x+mXWD/fif9jYmPFreCGsD081P+xnZjkyKrr2x5TfNo3D
e4xbEx+ST8z4QPbduRDtfbau3Xy8jc9zfsXExV0bcGrWu3Mevh+532jjuY+d
q0E2CM8BqCMCT3vc3VX7Gi6+oy2He/ysF7ZwvpQzA5xp21zcTH7SkbvOhduJ
h6dMZm/7HW9HGn7paMHh3a6JAnO39gjDodGaVRnfho4IZ76jXW55yq07TnkM
nraxa/Mt7JbnAO1vMU9OTO3vh6d1cwaF64RYX+1jNvu7v2Efif29vZ7HxZnb
OabJG7xlxDXbNvuarzvrpH3csAHPiyfPZU9v/crLsSzP8z0WLBpg83Bztmup
NZejh1o7to+i/RtT6/FVzUv93uvZM0pNNnjZz9Vd/+5rxhXC42aibXt4t62J
c5z2b7/TfE7d0GrhWXPqdn/cN7pi8knL7v4Rmn97GyauZB2OFX639wC+tn+D
zIvuhzXLTvlyXsd1Xtge/TN8+n3M9BE4R66tv5PtjTabb43vZ96jA1sjtr94
YmNzMcyLPtz5bN62uTi+De53lolvmeUm30W4mOWdR/G7v/j5Q3e2h9k5aVOO
xCtn+EuDU13HDY8DnNU5DvkMM6fBgx4DZzZtvZh99hi3/M+bxuGZjc2mWRcm
hoc9Xs35bXCxPRWPsWvFxtTl6PGB9jZs8/p8OV5nsHFt0Lqtd+c9/Y/2X1hH
Zjnfk84G8XhI/DN8D7gHHBe/QdbV8zzZv7v5nN9N64lodWnNyzCgdVrev+Oj
yLZ7bNKkMfZ8uJi2cXn7P5plw6PU0guTMcZw4t/O3ji1qU9hf/VLd9ZYv0lT
JjcDvdb1lWFe14uAufz/zCy85Qfffb7fGQswsJ//4wHoNvke4D3YveuKOzcF
fZ86457WXDnpwD5X19U4ZU74uzh9P7NcjuM//9IH5jnEf/q3f/7yG9t3TMtn
X8NJX+/9Nu8zDT+2/1Zyr7MPro/9JZwXupk1NGtp5l0av9Xm4kkHcw1jGhmt
/s33tnjtfXoMVOvZ7V2wds15XU2zttrvJxZhmeZomMusPnk/praNe/Q27BGx
5sy5TJ6BO2MopzZxcXsX2lNAPbbW/1vv/gyntzY+eVU4z6lP1Pd08gE1b5IF
aP2auuAnv2/7pSct2X2FqU/mewlHd59u0qTbw9LruU9hbrV3Iu8Zc+f/hWZn
M3VnUqD52jOMnpxlzMV5nzF8WW4bmxd92Z4J+5TJUGbdx3P6Zy2J8Kc1YfOo
c8mYxvN4arrBjs3FjMODv/D44sM46cX24ZpB0Xu97qTJ5jMZEOjBnVHRGclm
Zvg4rOg6z3AxucLWhNlma8f9GX41/05Za1xz+zPwq5DdZibOcicudi0Q+0W4
H49r9mXb+KjRqX1M6MxpjDu6qotlbTCfw89+Rk2NDVjFnDoxsqfBQM0DzR5o
fWaV7O/ExNMYv8ljwdg2xk4xv7Xu6fOJkadzn9bBMxw+3vT5THdNbP+/Ct/Z
R8F7j2G0R2LySbTH9jQezWzlTOHWmZuRJx+xNelTXqBZOffbHgtqIDIWk+8k
nz2d7yjMyLbs03XdcY8FtR7OuXPscO/ma7cHhulmcermTf4h++vtlTFHc1/4
+4HPyUzkXNhG1jUzOevX7OBnzfxON7NOzbXd4OLWwvzcPM3ZZl5u4oFpO1v+
lzVu2sSrk1964mezKp/NZCf22trmX+nWuqw1U1+bPoY7TOxl0Cg754HPnKfv
CdeBMZGTd/uKi7+WmbtP4XGX9CW6+fpwzaZ5bHPzXEzT3Kxpt6+jx/BZ3+V1
0q03r8akD7eGbv+Dx8+FY8Ob0WOtDZNDYT050+xRpu4d3JxtpFl7znTuR9YN
93Y+m5tr7tm7ge84bM05NOP6M3yc1/ARnPjy/qo2G14Lr0ujDjI6Ma/Wd61T
b+PwyG/rsWadUTH5Fzqjout+tAfZtfKcp4E/hHFseBOa2U968VSb7sTQvhb4
Qj54sL+0zUMBF7ePItc752u+pZ/BeEp8Gq3Vu2V9fo/fqR271RXw8/v+PGl2
rUfjsZzYeNPPrBe/w8QTG+NlmLwjd5i7/Rl3/CNmY+vxGxfTj+CcYSm0YXtm
/ewfPdZcN42x81iu5lfn/drjy/6YB4P22LpmYfbHffT5OQe7/Sv4blwzsXVk
joHjodF387rsx+vyvfQ2Jx3cHt/m4PaK+zPz0YzZZ3/fp1rU/v53Ll76VWyL
PgZ8nEb/ie/MxBDNCPyuttezecv6nbfZepx/tzffxom3Nz/mt2zm69535p28
2F2fz5kfvsb2PaCvpx9B34BaxO3rnjjZHPzZ1t4F+M8eBPoTvv/W01uz9/jN
jZHNsx4b6PXs9/4sN7/raTE3cz4cF98LP0egTzR5c1yjzjr79Hfh5x+ebv41
Y088bM62bt3fc3Noand47B1abF7/q3/0Bw/2pIVH0XjTYGXX/HDGhTVlpuUa
xwvB+r965HzOXJz9m4vRprOf3/29//axDXgbn7BzJHjffuIwElwLJ5mjw4pZ
zjyJTzmchR/XY+iaiScubk+FudE+CHshpowKcimaP+2X4JymcXiZH93Y49ho
9Cs6M3mqhTdNa052nQ6OyWPteizf5jNuLub64Zthf9wDZ34wj3uw5UWHS95h
Yp7X8ltuv6J1ys+0iQGsgbWfgjFOGxe/45NGG+7l7nhA7vqsT+vaM3A35w6W
g3FaV/R1m2p9wFR+nbLDYFz0YZi2OQ0udp3o7JM6bV1rzu9hVV+DbXwi500/
hlzi5krOw74g68vZT7iUOo3up3k828T57e3Ncnh5zeFu0/i4aYycte2tmftd
88Z9s85e9LXj+2Fvo7VPs03Yj9ws2Jis4o2NJ/0VDRGG4LVZrDVLtxMrb8+X
f1MsPemEG/v7+X6eyzsv2C3Lmonx/dLwFdvbAWN2tkjrlq2BT9d769Ncae3T
WMZJt+7cvXf9Hl6v25S/cdejccd7zXn2/TTz+jtgrbczWMzUnu7P3Lcei9l9
mKn/iMenv4dmXXRbeJbPcC5j5ajvAR/nNZ+ZzrJsh/XsdbB3mfF3Xs6ejSwf
rm69mG2njnW4mW16/JU5jDxiP7NH52XMHJlrYcUHF//O76++VWpiZDlyksk9
PvknpjaxLce6ZRt3RkXXh3MGBdxpNnZ2XZaBM51RgW476catZU9eZDNxczV9
A2vjtImJ8VGQDWK9GJ+3vS3sw95tNGVz8aR146GwxnuHi6fx8HDPZ7mY9dv7
6jq61i5zHGEY666wozO52ufx8Ct84Qj7Pdzskz75P9pTvX3GP32Hp++Ma2zu
vtOH6Wf/zbVejuu+ZUxsvl3mwXe59jkGaqXk2p9qF8PG2/Ux15GLR0PXdQbb
VDMbJub+8x0go4Rlwpp4W/guWQvv65bvY7TYz3zv+W46C9n7au+zuX8aW3o1
5pO6g99rzB9rHken5Df/z/76/338prqWGnXb4OMr7+z0223NjOfV/ay6Oc1c
Z4bPNv7Dv/mTMefCPNT63Mat7zDvVc22u7p0PLv5vc+1zbGlPrW9JCft3Hql
9Voamcfpx5CDRpZXX1/r3VM/pbf/rh7dTN48+RnObl154+Gv0ZlPbOy+nbMi
Jt3X98zf0T5ne8nZvrdxuh7999JcbG0/06c6zJ09HB0Zlu2Gh4I6eP1qRsZP
gbaM7yHT8GewPPp1Wo4JhvbYvXwOE/cxwUPwDjzM+w+12p4sjG+C7OOwItw7
1c/LdvBZ4Mvwc3l7Ya0Zn9g4xzLpse3ZvZNtPLGxPctTRkX6Bs3FsPEdXfjk
ufAYwh6nt/HvNJ17ay7Otf9e4/31j/JHTsdMP8H9D441362uq3XFtrAlz/Pt
7fxaLk6Di6/qj5Gl1s+rwzxwi3MI8FR2LVxrrM4sMPc0C7runHkbHZLlzOVp
OTbY74qB72rH8OfExD2W2PzbnorOHOO70QzobWU+ub2+LtY0XU/D/R/fB/vS
3a/gXHPd6Gc4L5q+Ed8/5xPDjtREMR/3eFI8xvAw4+RYJtvI+0nL5Xpc+fT7
b4tnK/6OOHuDZyJ+bjJdL/4GYeTNJ2QdHvZ3nV/Xcsgz/PyGUhe4dUxqDee3
1SxNmzwGqZn2qhXxrJ+GL8Oa5JQvwbNrxvnzOunLzXNmkdbpvF/mt5e0/QXN
cFs2wKYV9/ysH87KZ2qCeJk7/uleFj8KPOTnAv0s3+Mt+5p3m3Ktcx+7ZjR8
zX2xbs12zGh9LzZWPmnZW7+svw8+n/ZMvDv2r9nen/1daa3d32+2xbIs52nw
sPsVfW7Tcxr3l9inmT18iZ+hGwzaWRIwtH9XOuON+ngey4dPY6oZQp5xvMJp
YWq3LJNjsl+ZeiR/+q/+xaNOH/o0mmL7hanrDIfmuTtcjL8CX0VeGQM2cXF8
GnAx4/LMj1Mt6GOm8XNf7Xnt/LbN4xsuZJ9os8wzIzYbuzE27cHD8hqTD3Hy
GU/zzMGtz9pnwvvsB/09jL75i1svpmahebjzpX2cXCde3cfg+KyxwXGn33b0
wGYKeGMaL/Suj2IaC7Y1j/E3H/v5/pTVlXWnY5iW3dh6mheWD29M+/b85pbO
d3snG6+Zyddz82pPGcCuC3HShM3M3K9mRLafbYYzOS885D1uMExovb1zPzyP
7xveB+cww63wJJkMmW4fsmuJoxU788L+Y1jc27c/xdeXv59M93safYL2utB/
8JhC/jbbT5T1c86+Hu6T0a/oz2k5D2cTPjj1WRuY92n5/QwbZ1qaNWNrx3nN
8nhuzcVmlXyGi7tlOmyd326OwcwdDTWfvQ41l73f5hEzU7PWxBXwN+OUrO35
PbzcY++iXadZr940zkkbnbTY1ocnNm7ubo929hmtmOOjvzDlftxtrOMa0rz6
+O2Lbu/1xrK+xn09tpoy03KdtX2ls95ha99D68Fm422f0/3s78rE/H2P+Y5z
H7v/Nj0jofGdab/IxMV5hXs7I2JaftKfO194Wg7fRvLY4hfO9L/4P/7PF3/D
2GZv+5Xh4jQ/ozcXp4WLGX9lH0UY94+eORRwFOzb3uIPXPzUVMk54Dl951HY
LzvxMOvnvT2y1oPbT2EvQ39uTzD6sLVRM7MbuXX2GlM7w9rvxMAbF5vfzcU5
jqk2dY6htWLOLfzsPAr04omLp+vn++JzsY+D397Wi08aZPsQrMHx2/1ZzTht
0zInX0VnXznb4pRrC99nWycOnvh2y8fFY0uNkonNfY1gHnRxGM+ZDK7hsTXG
bmX7rUky/cqvynFMY7x6GXO1tefOC4Ot4czcm5zzxOn2F085ds4t8b22JwKv
ML4HmBidl+8p/MkzD/wZzlKjxkr7de1BmJ4l+O/A15D77XOn35LXbNP1svv5
Q48t7GObrk2/drbi49o9+TMNxs37MHGaNcAwqhmaaWnhI3ilfa38FrPO5KNl
nJnZGT7O9Mz3+n6fZWA0WAB2nJivP5tnvH/X1J004sm30M/0rWGbp2Bn3sM4
5la/Z/3+fOI6sxrbcmuWm65Nt2by3Bf6TLymtkbn8XUeyKZz07+aNOOJg1t/
puU7422fPBbTWD8/Ozhx9PS92LRp3xPrxv3dmcbjTd7l7k/1tTG72ztBQx+n
hvLGxq5t116LvI8ObI5uvbm3Oe0n07IPciVamz+t+2P+/uH/DxqhWQndMmwW
XbLH3bEeNUAmdsx6MDHaZfjODNweiubiLM+4MXiwx+E18155jZ1RYTb2OLv2
Gve5pe/gbDpnVHQ/w+d30o3xsFBvpbmY7fMa9rXHuLm4xwe2v5h7yLQpC8Tb
9fH/y6dfFy5uPrYP1BoXz5R5nu36EP7Nf9dvDIvDGf/2//u/fvQMumt8ZN/W
w+CXiVGajV2PYWPf1k3NNdM62SY1rSd+9ji5yc/BfJ6zdy2KjVfxW6P5dj+m
88WmLN5uPn6P22uds+ts9Lr2UoT7zN8sgw+g/dfNfs42do4JbJ3GscLKaT1O
jyw+tsFyJw8C2Q7uy7S+zvOAjZs3DwZZaui/XKtpLB2s/CH/WnVg8LMznrD9
FfQ/HuvKQ2ENOB6JsEXrw821+I3xAPBbazbO73P03g9ejSd/5zMcjiZsLdjP
m1vbbs3a2ct4oDlmcpe3+n5k0HmbvHcGh7OUm8U3njt5N5plWj+cxqL5PXzd
r96eOXvahpl7YqzmZ9eGg5WpizHx7ub5uKqjd9efbZ7mWJwNSD6gdeY7+nFz
N/d76pf0c4CJi1vHtbbc19nzJs+yp03PGdpHMV27zP/f//3/dqn7eoycc908
Zm+qd+d6HpO+bNalOS/u5GHpdb09vLbWDNMyNo46H+imcHE+w1d+/h5teeLi
rOu6wnCtn8tvvln4zHyH/klu2+QVZrprfLSfwV7jExt7TFqzcebnWnVG8N1m
vu15Yer0N7rfgEaNn2XLaYv3pbkYjZ9rH+7uPgPX3fX1TlxsvRieNcs2VzIN
LvY4obSJq++yMZwAu/3P/8+/e7DxqWU5ezrgBOtvW70z81yz4OTL7deJk7PN
7HPiYrZ75e/Y9OhJr7b2jZZonyvX01zsvAl/bh3TPOzsiL5203uzX2cnsC/G
UeZ9j0ucctrMtHiBe4waWnE+k0dtPzHXiL4d85yHTLYE+w6LknmRlvmcY39H
sl+yMVjGuR4bL1NHBu7l/FwThGcDU8Yz+vad/GReH9wsfdTMyivcbF6FGXs+
v/udLZbp0RUnH4Z9FCxjHRodOa+MC5z8GPzWZ3/WCq05wwxmYfMtXDwdn4/z
xNZTflvz8/R8G56L1upjZf1Jk+z3zXRwsDVsT+M9PI22bb8Iy3g9M7mns57P
37y6eaS33N13+ZhX3z+4mGcSk+ekNfPW3f3chLqNkz9h0pP7eYF5tdebvA/W
in3sfh9/jHXn/o61/51t5jU5Dl2jbvMRu6Yc2m7GvVGP49/9r3/58viSuca2
PW7OngrzbRgd/zBMfYeH2Q6f20ORrAY8DtSsgMeo9UFeb9dJgx/JbTPHpZlr
08LRExPjrwjXpcHAri1NrbfH8T+PmSzeHEdqXWQb+EBcK9paLbwb/usciCmj
YhuHl+nOQ/sWjXqC5mLYNNdl8xQ7r26qdUfms/X+9hTbX926e4+ZzG/yNDYI
BnI+KqzE2PnWik8+VxjLDNzLNhdfMTHNflH7i5k+8WWzpfnY/Hvls50a/uLJ
f7zVMPa+e/p0zF2bLftEJ8x98DV1jbkps3j7bH+EGXnico4x9QJ7G85tmzR8
sh5gY8YmNvc5h9dc/Pg+ftkvmRBM6zF1zl2DjTM905KX4ZqDD6/Ql8/WkVl+
+o63Pk9d87v9wTTr19l3zsl8jJ584l407fYXdXvNr3p0PA+3Nss8NDg/M89r
lgvTRe+1RkyGFmPKYNT2QNDYb3uP0ZZ5bTZ3s3/S3gs0aXtOPYas9eI+XntM
zELWEZtl3bJvc3hzFezlc28Gh2Ue2qy8I2YottUMPrXNd9EcZ51500o3L8fE
95u/o/211kNbL21vB2MNufdhVz/7iJbN/NMYRueAuG/Fd4n5rOu+SXvRt2t+
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
nlht8sLijdi04omL6UvgrY7WzrQXF5N99sz0MuOZ/zYuhufwZuQ6kwGHd5n8
C/i8vR3tfz5N7wzeK0Zur8pn2Hhj20nzbw/DxsTcT+vUd4/jxMt8h099Pxr+
CY9VpE3+y85gnXTjrd3h4kx3ZissjG5GBpU1ULRL8665Ef6JxtqcFJ0VL8J0
HnAxGVt5n22Hn8yTrZX72fyWEYzuybEwLg6fA+P/mr3wYVjnzrJ+7p/tkdVl
3oWp2wts3Z1+CIwIg3Gd0Yl7jBnbhdFyHNmm9dFcx/YTbJnJaMV8dn9n8gBf
cbGb/db+fuKvNR97zB6M6XNsJieXwn03dPZm464t6D5T9od2Sx/AXJ5zgGfR
lLuODZkWMLbb4/mF/obgca5FamSkkQMcjwNZEbCy69a1XgubhnnhXtcCIU+C
eWbhTCNz2GPzXEfPngy2ZV+Fa+3B9+EvarHhW3A2m9n38f4LZzJWrP2pfm/O
7Nwx+3DzGhaGic3FeQ8XoktTx4Nj4rhcLzktnOjPcLEZlNof5uCpFnLO9xe/
/bMP4wXxPfQ4PJ9jszEsnen2RaAbkwENP1ND0PzcbIwPwz4K9gsb4wHhPvi4
6Mv0OMLu1zjr2Iz/V888rt+El2JqaMVh4+SK4U2NDwBvALXX7nBxtsWYvYkj
2kNAoz4ufgP0NWrqMs2sDQuZTxgvBhefxv1NXlHzdC9vnpq4GB7lGsLEZAD/
4WP87vfj1pqL2b7zJZqLabm2MCweCudeoFtPdeveac6wtj+i8319vPbXfqZN
foqJj0+sPGnF3scdLu5lrrh46995XGb7snk1150ajNPjmTb/6Glb2Qb5qWYd
uBj+9Xtn1Obz5GcO55iR4Itwsdmo+wI9/sz1PvpZudl4yiqGA62LTx5W/Bb2
Kpi70CQ9zrB9Fx90xSfnOVtiy++Ao6eM3qmRY+F8D7NjczFsbEbk3rvGn7k4
783xXe8O/Te5dnwH069K47tkloUv2yeDXso1++45VtL8z/MKnjtsLO5ai/as
eAwj5+1rg36ML8Ue4c6dyPlxPXi2wDUn7439Mt/LWdfulm2EgWFfcoTJkeCV
2nT2VNDQesO4zdKM1eMzDOz6HuQlsy7Ma+0YP4YzK1ynzz7jbNc+XnLBXO+O
5/H4b3lvb4CfxXdrLrYHt/Vi17oj09gZxXmN7tn6KNlvsHC/ws7Wwa0bb9lt
nse2YGjXgbNuDCtzntZmnd2G79meCvif+trcm86pMxuTwbFxMV5ieyWsCXcd
a9fDc25zprMNM/PfJBeHicPDabAx+QnUrPNz3zuaMYyIj+Lkk0CTxdeazxwb
fGEfSHNs+DAtxz3VLLmjM09eiXe4GI0aXdYs+qpNDBc/dWLyHDYupu+AFtvj
73LOMKszkpuLuaef5WK20ePK/n/u3l/nti87y4yRSVrqoCislhAyahqydln1
01En2OrEEVdggRw4JegEwu6AoGX5CnwFnVqoqg0SVLmQEBfFeXftZ/N87xlj
rrXPOT+ECKb22uv/mmt9337mu94xhs+7+fhrcqdN/HnFxVub1mtO3ri4/eVX
XOx3CptWzLsPjykYE1GT74pjzY7WvaZax72vTS9mH/z2d60F1zIjrt6MZi7w
ca3twZXWfDcubiaG6aifZxZuT4Zrlk3jg8yf9EzHTH1SjFkztHPJbdyKN9g5
uMyYU068u1zscwkneh/OUe06KR5b2Msw6cWbzwAN1/0SJm6+vGr2aaMVoxOb
fbcYvCsvs2uFoP3678L5jLd3LPQnejMsjB/ilePkyd+cP+Mg59tzDT/GXXAz
z4d9NO3Nzf8KT4d7402AWe2loAada9O57hzaMFqxvcxwMOu6Dgj7pO4z7Oy8
FHgnoi17WfZtLm7dmNpsjolzrl7qBaM3etrMCH+hlXZ8nbnYvJzv1LPDh2v9
Gu5kmnohrRunOS8F+vEVG3edt85b7Dg+c7T9FBMbM56gtnZrxvYnZ9spf3Gz
8ZSPwoxs34T90/ZHOJ7Omj8cTGuOxof4Y/kktha+ClfBlvkkd0I+yYGb6Xe4
mN/9K8+DOQJNbWqtucKF+R4WjGdhqn2ycfnJu+x4uo4DNPO1Xow+i48k33Ou
xFfhSUjfuE6GuRivhHMZ27Przxyjebi5mJwgk5fibkvfOufEiUG/1jvR19d6
cfsaNq/FO8t7ven7pGNPevGkMzOOY0zHPibPidl3mm692Pyy+Su8Ht5GvKfN
xdbeHD+G5texVrDipBeHvfD5wpMwInF6eC5OWjHv9R37x/G6xsWml5ODC+4l
n5p519qdeaynvV7XpIDtPj3reHx65qBwLojt/NorMR0fLpuYz6zdfdhc3OfQ
8Wlop86z12z6NVwM/zJOoq9yPLT8b2nN0/mcxl6TN4mG35yxZM6TT/qe/m9/
OF5h2Jh5r9x+ysnm2FU43B4G17Xjf479EfgZ7GGAd8O5Ydzsw54Ic3F4Fu7O
+mxLXjdywhG7x/Jwcfbp/eCn8DlEL848Yr1g0OZia8Wdy9ZshN/UvNx5fltz
Nhe3hwIuppayfR2bX4Jpaku7ph553MKTxNKhtRKP1jF4ExvTuKbsu3lyYmM0
9u474vDsq6A2Sc4pfWD+nfzfeIybje3l6HocUy65ZmSzMzU/uE6/D3BeAue0
Ig7OeikszLTZ+B1G5rfa/Ilvwflv4eQsv+Oj4LeffA5bsyZsLka7drPvNRwf
VqOmHPkY3B+TJtysu623xQWiZ8MzXi/3DC4O+1o7dh1gt/bomos3HwV9hG84
fRV/Mf1gJoaLqfPRsXle70ozzvbtz514s7XXza9y4uKNT0+su/kupu3Mrr1/
/+31NU3X6THS9Mnfrf9+W2/PepuGOsXgtaZ38h3zG897785NkXXy2w37og86
Lr/rI/vdNbFHXY/Nvlp0XmLWplwUaHkwGu+l8WuaX82YpxxkaHfkjnXuYfS8
bOd36Vs+XbwSXJP74uVvffpIremii9ovYJ+Bc2CQB3fz6rofnJvO7/95DvBU
dJxm1/GAse2/yDo8e/YwvMvFPH9wMTFo1lrhdvf7FQOzr+i5eZZd+84tx5ny
HNpj4mn/feUaidskh4R9H/hkeF8yxYaaof1OAt3YYxXn/f2jT7//+l+TWs0s
g53Dp3h/Hevmmh1Zj89e3j4Lvod3ne8N7ZjYPM6DWD5qejj/cbbnXJuHJy6e
4rm2nBOTftr5HczEZmD7KGjk76WGRT5h3OZhGB+N2NowXBnG9n7RWk9cbK6E
M+1JzrE6R4PzbzhHhZkY3Rgd+EOeiicbZ5uc8xT7aE42F/uTY9qfYj144uSe
x3Q8LGlo9oxRYGLes6Iz/quHZ/z/fr1v3fRUeDIt66M/5zcXHRrtylyNPhzO
zGfX7OJdL3x3Vy/m937jTXPTlN/A/GIvLVzMOcPHcLFzkV1x8ZWnovXizknh
ffr9uDkTTnbOXzwUzcaueTfVs4Pb8FYT22iN2CxrLs62jDc6L4JjLM3Kblk+
+QqaE0+5GU4+78nH0Pr0iY0nP4efocnncdKOJ84+sfzGxfzNTc+6+8A87Onm
4o1907qGF8snHrbHgvfFaJLkyoXT4GLryWZjfvPN8/Cjczi0J3jj4nyi7aLh
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
OtYxjXzTGx+/oxe3HjytM+VT4fvGxZNuvPHviZ03Xp+uJ9zrcZ2fY4/xfvnL
X3/BwLDxVItj8iH7/fKWd6KbdWh+s6kfRkMjdA2PrL/FgjnXLrVBsj5+B3Ox
+eEuF+OLgP+m+DHnbYMbr1h44+OJezuWyppxc3Hn24CNm4vtp8g1du4z8hyg
c2Ydxz7CY47F8/t97gu1DTcu5l7bg83zxViJ+oH2snB/pxY2ZjnPU+5Lzsv3
g3EM7x3gTK75xMVc83ZvT1w85ft2DbvWh6359liw/TXN1eQu4f7gR6YGh9k4
15a4O/JRZL69xdaL4WA+2V/XwfN3lqMzE89Hs78CLrbvAs5Og7vtYzYPh1dh
4HyGidP8Lv8OF6exT7PulMfYde6aKa0Vo1mjUVKLDw8DPgozsDXkSU82F3dz
zeg0vMb8b2/d2PU+uA7XROlcdvYSw6odh8c66LPhYvwT4VbrxtaHpxqFWx6K
XmZutr7tHBvdh84xTP4Iezidn6xzD8C6zttmFva035FPuS2os+fcE3eZ2B5j
OMUeA/sDrBXDxM47hhfX9YuzzJ4G14HOftpHQX6F5pjOJTfx4sTFjvfLMVN/
GTZsr4SZG48CGjcc2WyceYwZrBP7/K0dZ930Dzq+NWl8HJOmOeVr5p1+579j
rNWaZ+eSjkfmrgbM8nc484q7zf+9321c5PmMSZqjm4nZ33Rv3LKcOo15TtLw
yDOuhePTzL/tJe76tJOXor3EGxd7fRiXaXTm5hz8udH0/Ls/1XoO9yRfGznb
8L82GzYXm48efsvnu3Xr1WnkByD3mJkZvdh51agJcuJh9NzJF9HzmN88POWh
O+nT03z6xLnQPHaxlwDvCo37kfnos9Q1gctgvSmekrGExxRmXvttGeugEbvW
eLMq54/Xm3EL8XX0B3kd4Hz0Yp5RM+2Uuw0uph6ix2e9PVxs/m7d2M/19tka
smM48ZabiYnJ5Jjcm1x3199oPTeN3BBoxuSDIH5uYuHWiLP/MKxr49l/MXGx
NWC8Ej2fT/adadiUfLhmYtgHPk67y8VhWnOW4+loLNtqQFsnfeWh+NzsebUv
OIwII9s3vLHvxsxsS4wffA8bw4nNsPZNw5TkNXaND+vG5s3Wk10r+nV/nppx
+6LpA+cY5npcm+TEyL18iod0nCTX6t/XSaMkt1O/r7evlWWZpj5H5ydwTN6U
D9lsFwZO4xz4fsXFcARsa724vQXmYngh+pl13syjxhs8l/6wXpx1zMXmvuZe
z29/hP3C2z6smdrj2z4J9Fhrs65BR2xXczEeZc7LuSrMxY96Ic9xEOecee0X
h/2b7z0v54de7Ouzb8LXTMxf7gk5Fk46sNnT+ZBbq7UXAU6d+LQ15c0b7PVO
GvHE2W7T+XKu7bfxc05/0XeP3NPPv0v3mZmYePj8Znr+yUcB38IHLM+7bDMx
XJL5zt+waX3kWIBx+V2fNDG4DEbgfNpfbL0Y/jET4wdwfQ3nRvN5WCvGa/zi
kCfPOadyMzHn5ry96IsT35qrTlw8cXLXuu794iU2F+e+TSyI76Df41Pjzf4J
x3gxVti42O8GOieJa17jU8GzzHPCcab8H+bIbOv7To5AxjiwPbxPvzuHnXO4
wbm8U+CZ5XymeMf2TzQb97NtXZhxxuQVTsu4kGfUfxfcF+eyyHR41hxKLgnr
uHAxcXBwcT5h1c5PzHeY2d4MakS7DgjH7Ri7LDdjtz5sLZpp9FxyDaTBwGZi
WPkuFxMjZzaedOIsm7gYb63reLzaMy8F+RmaafFA4I/gmGjK5uEt9xx5KWBM
e43xZFszdp2+ZmOux2xs3fitOLxnrTvnMsYTTI1m52bOst/7Oz/5Ykwyab/W
lq3bT/5v+2P4TTWzNJdN+cdavzI/tUcZPm6fRLTF1pu75nOmr2rdWY/1e22O
Y+8E046vsz6ZY3WONrNq9t968ZRvonXgzklslvH8zPM6Zu30o/XRTDvXMNeP
7tzb5tqdn7i5mP2iGZuLc17hV/IXU6sbH0fnF2mdc2Jiri/jCo81aNaP7QeA
m9GNp7Fdc6bHTROXsm2um320V8LX1p/bPpt7J++E/3ZaI55Ym7HINJbNPbMP
2/4J15NkX+Zc+xrMxfkth4HDtXCnOdlacabhG/YL41D37IN/+FkHDt3N74Dh
0vYST++VzWl4JKbGO3LzEdvCDOi+5i2OmXO05xgmds409rP5gLd38++2Lc9E
z3OOC+p2cI6wYHNx5jcXT75X+tu1o83EaJQ9ljDrOm6x/Syn5prgZkszp/3k
nDPzci+dk8I1pf3cu+ZJ5yeEt8mlxzuELLvrMW4vRXTfMC4+lvZVmI89BuB+
WLdnv3y3jpz/A9FuOw9bN/JDRB/G40AtDxjVsXpMw8b+f8f85De2BgyLw8Ms
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
tm+ia8T1++nWi2G3fFo7fdSjfjKF923d0Vzc79DRnZ1vmHNyLNy7GrD9FHy/
8ljApWZP8nx0veus531PXJhrh7Htv7Ve7Lxwk4+Cuh/4TeBJ+BS+m9iYMdbm
tXAdPceX8UzyvJBrOecO35qLYdo7XJx9kAOC57fHQW45B3TozUeBV7m93P2d
2oN4ZOyZYD/8ffW7kGjm1F5GG2badTfCw1lmj4Xj86h9l/9JrhFi3vW0NeXW
lbsmnj3LXs/sbe7GRxHOdX1m8pGh6cLAcPCr3tvTw+S6FWxD7l5zmHOfZTvy
4MK7rlsBg8OnroHMPHjc883o5JOAl3N9cDTXy3ZouvZY4CeBaXMd1NGDNdsP
0T5hxgNwfcetsQ11mOn3UxweOZTb5wH7t2afuLs056eYuLiZ2Kz/qhf9+Z71
Ps0C1tPsaTQ3TPoY21MDOCxMY5+OLeu8DfxWwwJ4I+yVmLjYmvFdvfiKicNY
4QrPy3lwvuEyczF67cT9d30UHdvYeQaYzrnlXHxuPn77KLg/+Z7zzviE+9Ha
qbnYPgrrxeQScZ4D9FrGVc3FzvPQXOzWOXe5p66z+Mhf8nn/4W/ywTHviosn
D0O/7+i/hSud1xzcjLsx7KZJe7urWD7iA/k+1Yg+PevEwuY571i35mTmhW83
zZfcsmZi73fTiXsfE8O6ti3LJl8FOQC2WKbmYuvFsKPr1JmN0eb4NOdZJ4Yt
+T75mMkT8TV6cfwq73J0fms4JzOwa237nlwx96dnjYxwp+MWYTXnXOD+NLu6
ngaxlZ+UV4LlJ5/x5kPmmvI8PmqKP/fJcwl3+t2IuRGfyV292J4UvOl+tzHl
AYHFp3zg+J7pg37Op/mOD3XeCbRi6+Hk8sBDYq04/Et9DbwT0YrxUISJibuL
Rgwf4wdGK+Z/lrmVZVO83OQfdrNGbB26edr+YrgYvTh6ZPr733z+DQybwsTN
xq7/lvWpm5x9kOuhuRgvbPYdhtt8zGlmY1iU7/bDdj4K69bUxYCL0aDJ+wYX
NxOzftaFwamJTT4IclRsLAnXwsXxSWc756hgXEHsXdhz4uuJjTN/8lPkGF4X
f3CYnhoonTtj80+g6zM24rzd9xPvbhrX9g6YFl5JbQjznN+bT/FpWY/3u3DB
xsLtozAXT+/dzcTk/Z04wfPhuOwbXjdzZb7zB6PXNudy/ZuX2Fy0sWJzJcxu
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
F++n3283F3+SX3PTJ11TxPFaW24K647Wiq/8xe/kY9vWbx8F3Nf8ZA7taWvB
NB+DfoBv4WLYmHwmvheOEUPffOi2z2P6/FgHToeL+Qyrp2Xa+VFg4vYYky/E
GrLrUE8+CnJ395jHOTb4zidjBl+nNWNi8ThO19PBU2/N2GPS9kL0uJP7DA9b
j/cznv3DlHiGw7fE3YWN8z0MHN5EF850+DSfWca0dWAYFp61bmw92c1eCnga
LuYTrrZ/GT7OZ86PXL9hukyjJ4Yp0YvbX/vXv/rNBy62VwA+xithhsKP4fwS
E2cSb2cfRXL/co7ovfYx84km7JwY7YsI58Z7kW3Qdx9s/PnT54HOuuW2ME8z
tsh5etvWhKdcwb0ObOvv7TW+YuPXWOfpz+Y606fkpXCNaOermFgdJobPGTtl
nek3e/JIMo939fbc4oNgXvgov8fUnNh+24mzir8XPoleeOJhc/GV/8Ee4e/N
xbBx16pr7pk4d3tXTr61SReeuBgGpdYcWqrX5TPrUDuF/cHEzOOc0HadQy8c
nHuc+5r7m2nyDTseLq1rj2z9183bNBNn2j4Q5jfnv6PVTiy8ac5XrHv3uHe3
vXrPcuLm/A1xL5xDjzGUt4eBzcXWwro2h2teuCaXudjMSW0J+yJch8M1bcM4
YTx4Dl5xfQb7LJwjFjbOse2tgG3aDzvpxbnGzZ9pXRpWaxa2xnfSi69qerzL
xVsLzxHraG8Iebxaw29NHK0U/kyzlp3rtBc202jM5MBjn5+e+UbsnYCJ0Ymn
GEbnZDi11ovNw2jGHYe3cTPrd+t827A5Oe1y3fRXj7PMxY5V5J0G4wU/sx/e
nSgPCPqwfR/2/XffMYYjtx7nnmvBM+G8E9GFw8NoxLAx64aP8VS4Dl6m/6//
57fM2nmMp7wR7Rf2Ou0jto6c/aNLt48ifG+/bDjSsVnU7CC/hPMYm5t4P2AP
bNc9Znu8sBznHS7G+2stF32YODn4uPVecmPYM2y9+cWOT9alT5qJ7SWmPjRe
ZZY55o2cFvQPXHvKkcb0pBvficODja1f+9qsncPGbOd4yylHhbmYdeEJt9aL
rZuhUeIr7ZoaWRd+QgumtjTs5N/38Fd0Xzjsqp6H81GcuNjz7UF+px70Vct1
4aNoLm6Omep6NM9MPopJY28PCnrtpAeynwcXqf9PXIwWDO+6Vl6Y2DmFyZ/m
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
lfmZR6051/rbzr91cDzDPg6s6nVYTq5puNgt7GPWJiebubg1TOucztOGH8Se
CrwZrOs4S3ReuLI9DPbs2ndjPdjr9TsIntP2Ebfnoet1Ny/zvKIhTxzd+2Xc
B1P72WYMQZ+Rx5t56OqcB9955n2vsz2+dfbhWMFJMzYnE3vnMQk+ijT7pFw7
A/bt97Gux7xxMT7GZmTe47omsnPbtiZjD8epxrLPe+Lcnp44uJvZY+NIuJi4
KrgSfkFrzZgA1rNfoLl1O6eOueq8clc8PfG1z4c80uiir3ob1RzryKe91hMb
v/jrOSZqX47Px/Ur+vysGae/r7g4zxNcTF649mW0V6Hvq/V+xnbZD3F1sC+f
aLa57uZi10NJLmR7KdDZuZ94k3m24GT7jh0z+MqV+ORyj1c+PWt8sK3zpXTs
on0Q+CjQi9GK+TQ/w8S09h2nfQ+9eGvhYurlpQYIdUDiPSa2LXzkPF/mYvsn
0JWtF7u1XuycX2HAvJeHi9tDfIeLX60YmNzGxL7Zg2xuhXnhVHRhezLMlWwD
g9sfYU+yuRiNeOJivM3kb/N559Oar/3GuQ/UEmHelKPCDH3FxlOOClqui+WT
jwaNPdP5PSWmCtZFE3R8fhp6YPs90Xrz240vlXitR34GxW7Bxs4NYd5xHq1N
u8XXaw07n+GP1nU7bsn8Z22u33+3djdxsdkS/RX9vb2cfR59DGvKjgmctGJ8
FIwfzDxoxz4f9sU9sGd54mKzsbk8+3Z+CZaZizeWdSzbNM1z1Py6cfE0DQe3
75x53qfHdpzfFLNntkZLdhxge0QYU/Idpm3fstclFtDPHnyLbx1+3sZbfk7Q
jIm545nI90zjAc+1OC4nDIBe3Ll8vV7zcLPwtCw6ZPZtryx8jE7slt/vSSue
6vaGTdpXPPHmFRfjpd3ygFkrhi/QwrM9eZnJgwvzmMmad3udbhPXeZu7jGzu
ZDu8xp+edetc75lGvTc8A4x9XvVBPn/fakvAbekr5wdrNkU7bd9Ity1X8KQZ
cz+5P/YkdGyeGbKPzTsPGLd168zftGyeEdg63zvmLtu65rO52MwMx8LD3ItX
PcjnfYCBWd/X07GK+Cjsm5jyUPDpdczHHYN3x0dx5Sm+YuPkRg4H/9t///8/
dON82l8ctgkLwVb+3wIXh9mce835xry+mc1ap7kYXwXNPuKTh+JVP64a/gqY
FaaEDXMNJ98xnznPKd6O68dvACtbV37kAf68nnnbfg1/Oj4PjkcDtneCXBtw
MX2SPuQa8ThQI89eZPspmO/aH9kmcYr2GlPj2h4KxgfWiM3H5BNwXoApTg7m
sUbceWLRzfgdt8bY+QbCBc53xvKci2PMJr8tXor2dTRfTtww8e/Gxadz8Prk
CnatOXK4TfzdvigvO8XlmYupdYdmnvEHWiD96Zos2dYaZnOxrxl/cXsEyIlB
nTx0Y79faO9vs3HrsJuea/14ehabe7eahxM7t8bM/M5f0frx5KM336M7O76v
uZhjWj+27kxfE/voMSDjyay3vefo591cDBtnH/w9m1/zWxldLJ/NtRPvTty8
6cmu4QHLOEdFs3Fz5taIi5o8xu9qqs7VZvabmJi8Y673R/wWvN77y3fnBPO7
bvOvj2nd1NzYnEzOryvd2d+9b9c8pnVd5Y7nemn25ce23yLsTd2UHm9wHvSR
fQcdc5c+2rwT23SeI+rVwd/5zrjFnGjvMTX2YFrGODyXeIfxVDCvW+a7XnqO
4Rwdjk2ccrDB6TxvzqUBa1sTP+UW6X7neh1H11oxjEt+iYmL25ds3/E7GvG7
GnKmow3nmDA7tUfwIKAXw7rowa0XU0fDDM2n63jAgeY6dOYwmePamoE3Ln54
lA9cjMfCzAgTmn/tNfZ67YuAqZnnPHHWnt3at9zL0lqbDYcydrBWDxejG5tf
6f9exzkszMaO53Ou4tw3e43TuAf2zUSrJi80uTUyL+uY48y7sJW1446rYj7v
leFfNEX2nd9n1rHeCOuEDbKOc4i1Rtst67RefOLiiSPa3ztpuX0O0/YwJlxs
rbj3b++Ctdo7XOxzCbOGb8htl/g7eMc+X5grnEVuuYmL/b6eBhdbb85+7Efu
9wB4KfJ9isU0TzZbmhMn3fmUZ3rjYuZP+rX9GBuP9/JmY+vP1rvpA2IIp7GA
+4G8JrBr+pd3L9bTfU/528o92Zi4uZj6iFybuZffaDQo2LN599RaS7aua93T
LOGcw83GsNSkG5uLsy7vqs3F/f7e2jHHg9VhJq6h6z5QXwJOgbXgcriK2nHs
z7WGT4w/1RXpHGich+uNcPztOifvBTkpsi3+YTjYzGs29vnB0cRWwsb5zjma
g8mlS4yamdQ+ctbBC8C2OdaWjwItuWPjGOtQq8P317VaHCvqsYu5OI14PvuL
yUXtvjUvk3ci66XPrRdbV08fOP+f87jke1idvrPPhfFoa+DTtHkYP3VzcHso
Ni+x81V4mu2i577jIX7HQ2HNGCZmOp94GcI6rQMnr1dzsd/jO6cbXAyrWZel
ZptzK7B/chWnwbibf4J1wpFfaMfyVdgXbE+v/RXkkvM65txeBlPjY9641+tO
DW3eMW/UIOm+tWZM3RLnj0BbznHNwp2jItuT88L1nmHjzJu8xvme45DrAy7m
WcDXAbt2vlnHR5E/jWk4wHF1aJFde5e4IbwVsJfriTjW7pT7wS377jodvH8+
5UZz3FtryN1OerXXs6eA77m2Safe9OLWhE96MfF+HhN0vZKOe3PerhMXo8M7
j9l2vTw79o1bv92Y2N5w+9Qdq+nlzaDex4mVp3XgwY7N4xPOz3L7MjY+bz27
fc091ux98L1roOAxJkZuiml1nCp/Y27EVKLtk3Oa8ctjDOMaYU+v7sbB9gyf
2JjlrpsAh1gDtLa7+YzRZeHUztuGtzMNvjYXOy+DG0xMnuMch9xwZnB4ytcB
szh/c3iDnADZbqth1/nVwmzZlk/uhT0L3BtzdU9PPEwze6blesNZvk58NHBx
lrmeSOZ5Hz2egh+dXzrz6Gu08+bpvq/b+GerYcJ7hs3HMO2X6dxLGNzc7PEG
3oVJ5/a9dEyec5yQowPt3OtzrzKe47nCS9H1oKn7Z18996prZLd3ur/b0+O8
E1MM3lS/ozVjtoedM+3aHt+bh2mpu4fHAy5OI48Yn65hh8fULYzUeRCmGhSu
EUG+MOah38KrzcEnH8UXPuNuFZNHfY7wXM7dOSbyaX8FdUDsh/AyluPXYL1J
O/Zx0FY7rxv6M+fK+bpP4WL6DjbP9Vgjzrgj60y5ja2Js479FOj5nJO1Y7Th
7hfq3sWHAfc41xgaJPnG4Cq0L7gFTzFM7Dpz1rLgK+YTm5Rp55DKPnl/fKce
BzmP+Y1HW8v8U26JK73YTNw8OrEuOXydj47zMHNuno6JibfzoeGjaC6e8kKQ
PyLL0t+Tds1xGKvkOlovJo5vY2nn9pt40jqtx1Yek72esz/8+evZ2OLw8Baw
fdqk68KU1m2n3G4eT7QWbP25uZZt4GIY2/uyR2nKN9fvaxjj5e+Evzvry46R
zbKsz3e/z7F/gmnucY7bjAvjwD2wjFn5iou9LqyEBkd+gPDAHS4mHs4M6Jyt
YQ321/kumg+bHclLh14MK+KhyDFc74F37I6JgvP9rj7nueVJcGyY58HM7Gfy
dVuTba9Ea8K+3pyzGRNO8jwYGF0499j1QjZm7dojsBrnTJ42mNNjJmL5Poxz
yr/u40x52jy+mfTiSaf3uwDXcWHck/lhVep9sJ7j6nwvzcLMsxeIWEw05255
hhgDwsXtd4HfyclmXwr+5/aETB4g51TJ+TnnmX0QjsHreDq+t4fC+Y7//u/+
r1/4J95h3jst+zQPw8fhITTh5lzy63bNuMynlgZ1NdzMceRp6zxk1mXtLT55
jF+eiYOX4rX8qek6Lxpci/7JcnJMTPnfvIz60a7PYR3YWjH8SJ0ROJpcaPm0
RxktNtPUSvEYw31KzTnGHPTz7/2dn3xRe/AqR0XX5TYTm41hantLuEY4FW0K
xnH+CetevGNnuesuZ528z8/vbntZydcKa+Uz7MNvNb/1xO6dmt/hm4vxcYYH
tlxr9mGcNOPm4U0zzqfzGXS8ln0LvZ3nkW+r98/4IrmCGRNw/lNtanOx4ym5
Pz4fa8ZmXPpw6g9YmhguOKvzlpgt20fcrJxj5bnJ8wDL8WzAi9T2M4f6ulqb
Nbv6mOZPc/aVd7n9HvZEoy2zTefBMItPmjf7dq6L1zjl8333M+56I2yDd2U6
f/6WuVfpV/9dm1XMYPgY73qLt2Yuxkc7eYHhYHspYDu0sjR0PbgYVnRuNNf0
eKd9Uh6sbs63MNUhs48i133KmWAObj5Gt24GpT/RMu2PyHZTrmTm0X9mwbCW
azij4bq94rOe45wt3tL1+BzDyXgBvdjPmOu2+Bls/86Ji6PJuw+nPBAZ9+CZ
bz7m+okLTev4yOyPWojM4zl163NgXGbfMjkrYGH7KThvx97xHgNud007nnvG
UaxnBp5qp7TmbaZ1XWVzr7XizWPceSu2OLtTDN7mRT6tz/HiK+Z8Jk0x/oap
pRawv8Ne/T3cZL42F7euDHtO/oiNgVmv153yHDvGrT83TRq+pU+6zh3xaJ27
znF2MK9152jG6ON4FMzFbO+8INba7alwzgrW2XJU0NpzPbFxeHtiY/K2OT8y
de/gGsfOZ14YrPki+l34hfgf63T4I/3dOW6dk+KXD4/Pb7kY/kFvu+JiuNFc
bB8FnL95IJqLp/ohm4di03L9Tr71SvTZLQawdeLtGOQ29vlPXOwcH9aKs376
uvm/4+7o05x3n6fHEryT7/tLbhI+ed9vH223bOsxEufBfsn5wPNojRiNt7nX
2rXj1tjOOdImTp34mGNbt73jfZ629/HgdPsp7I0wF0/7vOspGffzP3+Za83v
783FExdN3mK/Z/dv9+SfmGLu2hMMq6IPw6mdA5bf+1NOtlP+BmoMm4UdU2bu
6LwQjpfLtqccuxtTNRezv/Zpx7vRuYwnLraXGE3StfKai8lHQr5q4u28XjP7
5K/hXX94PI0+Sr/hBdj8Ep5vdoYdWyu2Xmud2PmGYcYpLzPHMRf7fuYZYF3X
G+Q5PeWNw8/rujH2GlPrA/7mvYW5mHvIc4VGnOXUajR3d9wez6tr07h+uX3F
cDGaMfOcx23iZGvGLPteevDVOniZ4eJoxry3x0vxYs1nHjFaeA4GdmzYw2Nc
vNx5d81tMB3aMnptGj7jU2O90WM88XTxMZpy69BeP3p4Grkj2t/hPBIdq4eG
DA+HhdGMXQs62+OtQE82W3cdjvZCOM+x+Rdu9djjFIc35aggDm/Lacx4Bt0Y
nqGWMWyb32T0Yd5tE9uVTzQ+ewaoJQDnoP/x3f4Kcn7BPHAxyzcetpfBPJ3f
fGrg3uXa9vduXt8rHwb5POAtfM94TfDi3mHjPkZrx+SAgHM3vbjHKfS1vcGb
Xmz9nfnpW8Yinb+YundpyR3HeIhjm4+dUy7boWPigXVDk+bZ4XrsgTdrWy/m
3YW9GVNjTNg54058DIs7tnBazxy6+Tbse0D/Jj8e73B4xv2s+36be7c2MfLv
DHFg9i/aw3iXi5txeMcbDsCr4Jii9jVMcXLwiXXb9kvCBngqvra5JjCfrvtg
/jZrcw54MTqX7VWDVcMszsHVvl76wMcmnqu9xSzP+mFdakRzrGxn3de59qb4
P3KETVzs54bcI2Z4cqWdYig3RsZv0fF2PC+ZhovNwx6PeV8853gnsowaNj3O
ccykx1X2S5jR3dB78SzAsx5D8bfA+NGxd657Qn/aG91xgX534jolzcnOZWLN
t+tkWD+2T6Lre0xa8o/hm9jY2efx58pjhnf3lEvY+Yhp6Kpdk6LZrXPy4r+w
9gvnnriY5ZNm/L0anmPqiHSujM5hjL6Mj9jeCjRj+4o5bxjZHuX0j2Pk3Nf2
QVgnnvKzOZ9xf3YcntmYHBV97+Fk9HFr2OaQ8A+869ys5Fp1/gl8xdYFW+Mz
C+e3Hn0RloSl4Vv42jXYyFU1MSMsxW89PoOuj7HF3rWnYapBN/Fq55qAz/BC
dL3pPubEvTlu1yLxMbgm7wd/NoxjFjV/ksPNecA2vTj3FZ0b3Z1z4D0CPmPq
hTh38j/8PI5szvV8c7V52ufX+RPQkhlL5ZiOUfNzOcWQmpvNym7OjXKl+7JP
anuYde2HnnzIjov0Nmzne0TMapqZ+sTF5MFwnCx/nz6f5uIp/sn1Pa704Y1p
yHPgeDIYwLkpJp0TVnYtXDc0t64l/C1c/MU762IN15loHRqmPunFjh9zbB6s
Sp6zzHOutBzD2/i6sw39Ru4Cx5BxD+Bi2DjbtCfCz8Gkr05eXe6za645f1jn
K76KsevlHDPX131G/9tH0HF3cLWnX36EJVc19xkWzXa5d/A2LMzxrVsz35zt
WnbE8pFjwjmYuYfmYs4JBua+2hNNXRY0epZ7DMl96Lg78zB8zLzkCHbuteZj
8hvDxfmeeLh3uPhbGDrb0nf/+W9+8Wjk5sX3emLjKdauvcXNx9aIPc13c+2k
G4fBmovvaMandhW7Zy/z1IiXg2vxRuDDpT/tIXZ8IV4O1wBxPoz8vXTuD6bb
a7yxcdZvzdheY+vGzcZsYx7GZ0zsncdI5hR8w/aYoh3DYPZ+ot/hqXAOYuuT
4Rh0Z7wUE898YOvPzNTar+vAoW06D7JZdMtlcfITX2nG0zr4KMhX3Bzdmm97
i7MO13uKuWvNmbxw2RbWC3tmHoxMg4tZv3NnNBfTui9gU59b1oFXP3gjPv38
oR2jMZP7+MW3YmLOyVq4t7PfhmvgWl/aszgZJuTaeW/BZ+fzZf32JbQXuMeG
jhd1rUf+VnJf0O6dZ4Ntyavn9yx4Xtz3vLtxrKF1aLO8/f6MGfm7ffRH+ZDR
I2nwA3oav+FX2vD2Lpx9EctHLJY1q46bg/GmOs3Wi7Nd/ANdN2Nj3skT3Awe
RvG4AA+zcwzDF7kuc1E8HvioOwaMFj79Z3/5nx585/ra7IPYKhjJedI6pozz
oBZ2WsfYwYIwPnztHAqO89s4mFxi5lTGOfa8vj6fedZcrwPd9DSemrjYHmP7
jO1l4P7lGCzL9N96jAv/t9f5+9xf7wQUywarOgaPhg/C3gjzLjqyzy/PGOMB
a8Y8S/xtoOt6fx57mYv7nP1u48M6T70YVmaMZ1aHhWFb4tfsqej8SfZNZN14
Jxz7lri7qQZ0z5tqe9zh585hwbnDxtRZa8/txMWdR8w5E8zIZmAzWvM0XMwx
m3k3vbg15omP7/DytM6Jme2hcB1n+i5cG924638Qzzbpr+jFzpGBlosejTbc
cXiuFT2xcby/d73Gzt0GG8dLMuWm8HbmYriU32G0XJrrepk9rE92/DvMwbTf
hU/8/EFvfnJT5xKGNamt69iyExdvXHonD4TZtP3ImQ/ztId5Oq73gbZs38iU
r4LtfM7U07Ae3PxrzdXzXa8DFvU8tP0+Zu5JeJRr5DrYbziL+Lmsy/n52Ob5
ZuDmZJ4Bcu76GlsTd003nslNG/YxTlzcejM8DF/DvbDvo6604gVhcd6b5O+I
beFivEn8HTB28P2Hi8lbkeUdu2jvi8egeKt93fYmN++6piy/v/ld7jipK6bp
PLvhGeeScOzPxMYTv1rv6roWbA9vnDThjbtdf7pzFrg96ok9Y8KoG5HfZHst
Nq04TAzr5pM8EDB2czHM3F5WX7evl3wYG9viubB2nO02JmYsw3t7WIz1HZv3
4uJBg+XefVJukavGmIRnk3HEyY9ijzq58xirOF7T57x5j7v/nPehxyjb+aD/
2u+T586+CLwnzilhj0U36sg8WFd1oPmeT+f9o+U6GN/x99Tca75tb8XW8BSz
XWqARDO+w8WnlvXdrtZNzbv0OVzczOZ4NTg5351vomuy2QtrZobtrBfjo8ix
O99E68bWjCd+3vj4xMxfqzM73wV6L8yMj8KacOei69asCRfTR9Tvg2Wt93bf
26cCGzsOr1vXw2s2zv8F56hA/8aLzrbwAV5RYuL4TfW76YktnHcVNuF3Gb5i
f/6tZp6ZJp+O5ep3/J0Tofn8xMSbX3jzEDebmoXNxFlGXNkd38XJrzGt23ox
3ycupj/CWl0DmBYN1/v2uIV5ZmKPDehzfC2ZT75qxk9myBwL7Zg+M+u2t5t1
2sc8sb6Zn2v2uKzznXhZtskzyrbURYY77XM3B5t57ROCxXkWzc32edtTzXx7
r1nm9yT0EVo0+q/9S+wLPscXjj6Ml8LvZciPAcN2vBm/5x37c2JhuMf61eM9
/pM9/O63teLJT5EWDiLXw6T5drNn9MozsfE3noKtDkfnU0ZHRKfjvTj7bK3Y
+c9o+HPhT2ug9MWmF8Naaa5l3T4E+h8/Bg2GhEVp8K3fxTsvB3nsWNd17hyj
aL3+07PuyaYJty8DtsO7POWl6LGHuRgNOA3t1LmgJ88I351HGr62hwIO394N
cJ/ybKefqEn4YDcxMfvPdVKDJMdvzZi/QfqX9xgw9uRh8f2zL4i/bbNv6sc9
4taen4ll49McnOXZhvX+7t/73Q/eiuQunmrYwbbNu2bebVmvx37D4H/wx3/2
ytmGXoxma55DQyb+7jH/8+dWq4LpcNOkJ5uVJy7uXG2t38KxZtO7forv5UOe
cl5MeS6I1dtYuBueZOvGsCrxfB3HaB9Ej0OmnB9owPZT3NGNsx5xeIwD4GK0
cNfz9fvs/EY7fq5zBljb9XzqB7cGONXcgnfMwtnW66JjmgtbY0QzPvmJp1xt
d3Ictx/YWi+N8cPp+P1ufOPiyaeR/cBK1uPRGT0PRmYfPl9Yr/Vixi6sz5jF
52HvdKb5/uDPZ0wZXoPwcNoXz8qTj1sr7nNlnazPs9VeCjcvcz/gtWjvhNcP
u6INOw9x5nt/HbtofdrjOvbr+SzDU8158ffDvnvc5T7CG9HeDOqPc26ct58f
8iMyP9/xO6P/Tb+Z/A7zbhetyV5U8wzvbTtGDh3VfgRzHexgTm0uhnnJbzBx
LjVAOCf7C9ysTd/lYk/7GC8t8amDhp3QE9kfnliYeGJj+1asDeMDbr2Y/oN5
zMUTb+Y84d2c38TF9luYp7ivsJV53J4JuDr7CQfCtK5VjaZsLu6YTnsD4FN0
0WjrnHPHNua74zpz3JyHr4fjmyE3Pn69O3lydK7N7xZOPOz7RKxdzo++8H3i
uaa+i+vgmIvx+fA3xTb8bcLHfufDfPRktuEeUj85jEuDef3dTOx1yANhH0ZY
NctO2u+pTdtFfw73Zr9/9YtfP9qv/t1/eLWweI4dzfjkm9i8FM6LYM3ReQ46
Xsy528h97Bxom5f3jv/hyg/MejD0XZ/FxsPvtjv9ah62DuxcwR3z2LnbWq+3
xwKtudm4c1R0PTyzcfqM3HToxWFjfq/hWcfHoe3ZD+H35uaGbdr8MDEyjATn
Ojbvih+9j/zWT56IiYvfYeNTvB2NGmKnffV2036szfbyh9b61AThH+K38Pyy
Xvqjj0+uDueeuOJi4itZl+fB+4DXyE8Hq00s7HsNq3t8YzbexlNmQGvBrSmb
hc2qxP/hw0XTdY3lfGe9zinX7Nvsb3bP2MD15mjZN/ryg5WfvqHuJ99TlmWf
PSaY/h7tzemGT+q31/q/v9jG/NOxP/4t5jeXnFv+LeaTOnDsy3yMdmdmMhf3
+3D8DdZnN93XOikM21zc3gvHUmVfeIwnvTjzw2bwlOfTF9aLc/xwHP6JSSsm
7y+1G7ZaeRMXE3toLs5+iNuj9bt+54/IeRHv52egmZjxjmPo+j19+0+4V669
92EsVTVgHhys55FzQk/1M4X2urX0I8zp60CfxaNx8k+0L8V1wz1W2RiZsaXH
ZFzDh/yIqkdtjduMj8/CXnePXxjj+t75b5PtnJ8iXOsG88K99hibl4nHYzvX
Yw4jh2NT2+OKjVmW9alfl33Avmk+l7/+9X98sG9aeDifmU99D7jYftcpD0HX
CHadj3BUGJcaH81uzqPg2DzmXXFxszEacevAp31wvtSc5vMOU091RX4MLiZm
b/Jwp08d73bFxo5rdI639lF0Dgv8LhMX55PnwF6KaN38BtOsfdGs8bWu7On+
/af+gxmZ796P9THm+b0+eqW50d4M3g9/YPrn7z6f9nVa+2vG8vgAVtw4m2n8
n5tPY/IHT/vxds5NwbXzvp/35+SCy3QzVY8Bso8sQ+81F3vMw3U7rxoMSW5p
x3Y9PLPKQeb7b17rZ8R87HNnPXsXOueffQhmV8fibe827A1ynhXH1fn5t0ei
NeDO4exmfnVfeF7HDnp7Py/uI/tBWgd3yz0+1cXhWvv9eHtC7f/1b7q9Ebz/
J8bedbVgZGvHPlb2HaZA84Q1yOVrLjBLNevCz9bh0nj33bqy2QJm+1Bjr/L2
Tt7png9v8a4/Wjfciad442LYmHO88tBaL3bOZufDMBd33B7rOVcyrNh56bpO
2lQjop8F13jLNuje1kqt679yA8qD0d6MTBOftuXBI69H+oh6Hh2flu9XPGxv
NeMdclJwj+7qxfz95O8A9rXnh/5iGQybe2a92PF6PUaY/o4ZW/CcsH1zcbgy
TBnWnfTi5uY0eJQYPTRj8lNEv41u3FwM/6L9hnPDvvlE+815sP+s214KNOMs
h51zzBwv8+7qxJtmHF7y965jDJMlh6+9yejFp+M0F7en4q6e2zktwsXWj83Z
J7ZlOT7nK+59R4enXx/1lav2INoxGm3HMG6acedrC1c3F0+68cbGWYcaH3gq
0tCpJl9ra7nMbx+ouZrfcBibaRgC/mqdkP3ib+1l8B11ouEa68W83++W9dE9
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
/R7F7zv8d8T9Z5pcIIxhuoaOGTpc7JrPzr/WjIxGDBuj/1LLo30U+SSfWrTe
sOvEvlMtEVryrp2eYfzIaTneH/4f/+erbpv5+IrdiMFjfbg4+4k3AjY2FzNt
Nmbdb2HiKy7+sdq7vHunpV/f4eJ4Itor3GzMPNeOnvK5wcXh3vYab2wcz3jO
IZwAL/KOveOg2j/s+daZ+x1wfydvQvtum7knD7J9vXe0Y3MxTGy91F4J+IV+
cM1itNfm4ImVT/zcfdH8wzw4zizFucLGxJ05L0IzT/uLySdH31jLh+nIOw33
0m/mYNe98CfPACzpmDKel1e83JOB/TxNeukW03bKAUh/2HPxGDeJmdGDWW5/
t7n9UYvm00f/cueKsx+I/fD8cN/M+u27txfb48nOBbjlLen8LNG98aK73nTm
wcbexnFB/LZOv/d+V/7Q4NCMnxxBfecPbCM92f5J//7z+2Y9jfgz3kvDvmFj
tEo4wj4BdFF0zGY5GNvv9NtLbb243zlPDTZEB8T72fkqrEXab2HPgWs88Gm+
nnRo8tySIzfMdeVPdkwYXGyWtg+gvQv9bNhH41g77n/rzt6W+uBTnzIeQfuE
iSfGxodLfGO+m/fbX4vu77EIPpnOqzzF513l0G4u9riT2tJ+bnlv4meSdxp+
x+F3Ah67OmfM5CX23zdMzN9RWNZ6MdzbPuPOVcG6aMDOXwyfZto5KYiVax42
F+dczMjU6jAHk4eifRnxVOS4xE69NGPVvRs9FJ8ZNPyWdWEk3tlH/yW/rfMq
wGnNxVl/4vA73on/Ebn4HS8FfgrH6LmWnTVjs7H9FFOOiqlWNDneOg4v6+ZZ
cJ2AaEv97riZY4r139imOdCx/s3OHbPnXBbwMLnAYLaJj12HpGuS2G/cNRVc
c6zjuPB5TrXpzMQTP5uLp/wEzneBzun6EeTh7TrI7SdmP+35YJp+JmYPRrKX
Bb2YvkKTf3Dls2+pjeyaaTw31sSb/9sn0X4dlm287Oeyn7mphgleBn/3up1L
YvJCt7btOtJm524vLv708w/Pep+3n3/un+8HvvCO5ZyY+eGLf3pP+Jtpj33v
K806q3/vu+4cfMjvM3UO7BG1voeOzLtn51Gd9h+GQXfNOj4v17aw/9LcDBOz
3AzFevYOwwhdZ88cvrGw30dnW67THk8Yyz5ex5jBZ8SFUYsMloQDeWeexnJz
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
aE+Faxx6uXmwcz81j8JC1tLynU94xRqgeRju6/fq5m/HollfdHMuCXya6Lqd
77UZmRi1Kd7ONe/gY+vp/Wm9mJwd5Fh+xdY9xwmTd5UxBt7kbvbZdg49szH8
lfN1HmnXpsa3nf3dicej76xZ20PBueTaPP7pOoFmfPRe3x8Yrd/925PbeufE
/MyzH8Ieis6Rh5fdz2X7WDpHH16gfJ882af63bxv8d9Qe3fyPYxLfGnnFbSO
b6+H8+w5J/frntS1eZzSudisB8PFHXuHr5dro74HOSmsF+cTH0Wa6+TZf2HN
+Eobbk+0uTnzXdMZz288EGjIeEvjjSB/hD3J5LKYmC77cexX59sl7m7yRpx0
42l+c/DGxV03j/WmGnoTB2+1Pb7Vh9z1trf4O7Mx/ck8akVbk/fySTfGT8G+
YeacR+5rngf8FtxX7nHGPnAxbAwLNxtbh2391h5UeNafzaEb11rb3ebf2X7b
1qzMvtzgvq6fNul9HR94Rw+eeHjSpH1sM1tznHMcEFdn/nW9kWa1cCE5nLle
NEdrpcQmOkebNVby+MLJ/c6g9Wmzsc/Z/dlacvstvC+zZvt7urYi3OjzMQu3
tu173uOhjWe7rzvW0PvcuLj14x4DdKyej+e+6dbPgvNRmAvNYJN3ARbNb7S1
q9Y9J9bp1jla0UM7X5s1a3s3u65HxyF52dRca8Q10ty6Bl4zcR8TBu0aeVPd
CLMy+RzYR/rxlUfscz+6/gPTXKP5i+3s9eaY7lfnEIOp7Tt27Tj6ZhoXcN4c
DwbtfM3Oy9yaP+zssY6Z2GOCXB++iBwrPEheC9+/fg9hlnb+FDNwP5/ta2HM
Qc4P+mjSh6+4mGcOvnZuCvKzmY05P7wUac7fgid5+ns0C/sdysTFHWPX/glr
xtSvg3Odk4IYuObieB0m38SmFW8MPPkoolvn+OGa8G4YFfaNzou/4k+etTtO
LbXPwkr5TIOnu54xfGUubpaFiTc23rh48ly4VslUJ++Ki5tpNybubd5l54mT
0zedW631YXNv56g45W+bakyjG5PXOPuAjTkHNOksY0z017/6zQcuzu/k5Kew
D8G1geElx2Y1N5949F0ufpeFp/bI3/vMy+v5jsmbtFtivmBHPjtmbGtX7Nya
cXtrp7gytObcO++7c3lZk7V2CcfijfY865R4vx2/hg+Zc0nfhZNZ197nPhf7
J/hsX8jE0q2Lmpl7O7TcaR9uPqbvg/Vga78nnXfi4/bZ9LmdmNh5RKa4vYmP
u+V+MgbCa+HWzAePtPfAmqsZmXft/g1u1uBdrjnZvE2Mm/nHuuHki5yOw/7Q
bu1JNfv7mmhmPzOxt5tyY5gRwyWdtxhu6TxrEx/Dh2jwaMrOrTH5UdoDYS7K
99wfmLrzb3Av3S/m/h6jtLfbvhdr1ZM+joekj8H15fw8pvH99zOAZ9g1tzlH
YvjIXwxbw8P2GeNDcCyj9fl+3rgnaX4+TlzMdPJmsE98FJluzdjPsLmYvx98
E2mMRfj7a98273E65s77hyvtIabhOe54PMfdmUv/8FHb6SMXO+4OLp44t2Pv
Mh0PRh/TyyeGzmc0v7BwdEFyCsPF8O2JiYmhQ4sMz4WboidGu4TXsl6eA+uU
XdMDPj0xb9azvwIte9K9m7NP7Ypjr5j4Di+/oymHOYl9Sz+nz/jsOhzMwz/h
HBWua2fdeMtR8ahn98PPPox3ci/RoOnzLENP7jrH+e00D/cn7Ni5HZo9rRc3
g07ta3TgKf7O2rT328dyPJ+Zv72yzbt4bbvd1Ymbg9/VnFtnzvrkwoCVnN+r
9URi6/h0PoyJqTif1q6nc7EnHT5v5ptY3dzpMcGk3fr4Gzv394mJJ043m6Np
Owdf+1NOTHz3O7r+3bzXzddm5JMObR8F08TdNSOage1bMCu3rmYfsfWpSYfr
mLiNfe+01vomtvYyTzunMp4O4p+I/be+2qzcOrZ1Sft8zWLNi93sRX7pgUNO
M1+j/Q+dv5YxAg2v8EkDd+v8IH63jz5J3pGuHdfXD6f1e4jT+wTGVXzv/BGO
ryNnG3U/eLYfTCkvC+cEo27vNPw+gvPgvvgaWhf2GOWHP/2L13phWe4vTD/l
QvHfhbm4+991YFwzfNK/0eO7nmHH2Vkv7hxtjs3LtLk4Hgb8EPZSJNbO/mJy
Ukx5JJp148Po/G4nLiZnHKxKHonwZbjYXuETF4d9qZ/mmncP3fKHn33gYrcc
g3wUd3JQWOf9x488qP/09R7f+XvJrWtNuht+ZXswzM/fwsDfqhO7OS9E2JVr
tSeFsUf6mhzR5JiApd0n9mG0n8L1oInD4x2AOTz7dm6/MF2zMYxjbqSOFl5T
e0+zfudFc87hd7j4a3Rke4mbi0+6sc/LOrjz3sLDzpPBWMBt8uF+r3aKA6Sm
h5kJljMLdfxb5jkuDQ52jQt4a8p75nPrWE3XFGwdtP0RZr7JC9AsuY0x0ELt
t4UZzY5mSLPmyc/R53+HjVs33pbzN7fVhJl07NNYyrF5jGs8LmovEL/7nWO1
49SaXzeW3VjYOSA2br3DwCeGmvZ79zhcJ1zsPBtZDmeZhaccz+1nhRPbX9Df
21dBbFhY0rGB8Lx91HCY8zd7XAMbh4nhXHJ+pFE7eWowZNaPFttcnOZczV1T
2dOuCd1cPOUxy7rJ3eBaelMt7bAnXIynIp9cV/YXBm0u5v2F9fjTc5d+v+Ji
aovg9+Xc6L+u64J+3/lPuL/2VfieZ5pj8Om/vylu038PeMbtI2baMXbtnbBu
7BzC+X9iHkY37pwUmZ7i5v7o0++/tm0u3lh6arkHYcv/wtz7/Vy3neV5p4H+
kCK1CeyNK4ExgTotAskYvNMexPzYrqVW6hkHLRBFCmoOWmpKwDQHJXZTiUZq
z1pVRG1PK1WpVArGNRLehKCUSEUkqMo/s7vuude1fL33fsaYc73ftsnB0Fxr
/hhzzDHX973XvOf9PA/v3tGKeU9+hYvRJTunbhr10Fx7DQ7LecK2z9TkaD3Z
+Xo710LGkevh2Gbeq3kwuCbnaua68znzFy+BGRwfdq7PuvVx7vhTKkZwxcWw
MKwKFzuXRPYJwyZvNFyc/3eph0d8nGt++F75nrTXJf16bs3G+CiypBaW2Tg8
RS6znQ8X3sjxqxwSrd1e5ePWcyefsfXo1Tmv8PGKmeHfXY6LK405e62+3H4O
syg50sxFUxzY5FGwjyKN9+3Ni+Yux58xLmIqrRebiWE+dG17ncnn1/w41dk2
T1of5fpWHGsWd2vtdfIOn3l9m+snzfrMR9xc7O07382znvapjx1f8jd7eqfc
muXEFrCZt3X/3Z7l4SssvTu+dWveZduPai5eNRjJOvFZHWhvh9vg5X6maF/0
imPtcbBfwfnKaOnbPl+Oc34wH5P9p/NNjI9P4R3lSHhHeRI6NpLfBlzo/B4c
k8/NxfkOezrujrkzO05jnHJP28/iRkwlzyyr+tzm8rR4KXhm4lh041xz56Vo
Xbjvd2v1fm7ofy9oxPY1c98zx2beqZZH56qY/BSOozMbO/bOerE9yT7e+nP2
Q2uGq69wcTzGeT9O3gi4GF/FVR+Fva955w4XWz92DmO4+EqtO+csJs+EudgM
hwaaz2m5DhgUjdjfOxeGWbk1X5837Gu9mueCaX6cfwOvAxo9fPk4jzzd+IjR
i63lWjNGv2WuM68ZF/VV2uPdfuR+XnEcHs8YsDDnzPjJP50Gf4aF+dtM/v8w
18qfy9/WMHEaevFVLu5cEV52Dgnzb5bRZlsrdp42jr2iU0++D+vj3v4sD08N
Tzaae/sznD/BeRTaxxDeMl/zGf3Y78vhRrjXmqq9p82LjuVrFsZbTF05a8Zw
8VQj29ydazLL7upotwdj8knsfLqTXu1rnfJA4C1uvl5x6aTbTiw66b4TQ9sr
cdbva5vfqzaf2k9hbmiN1Z5e+187V9qUU6HfVb+WcXfr24fQXg9zA3nIzF35
jvZ4VoOPY1f82/FoZmLriPQDY634d1rvuhPEqq28G64D3Yyc87YnYnU++xTY
d7o3+Ft7/DA38wn38ZsjnrC1YnspOqaO7ysuNh/z+8357K2w9up5DNNSa3CX
hwJvMfUcOTZ94eNBL84Y8rtiP3soPFfUYXfdHObL7xT63wvr+DeYfjtvsfNO
dByevRWTrzd9ffITb73wGDcXux60Y+q6dkd8FWmHN+Ve3/mKbvxBP//gUXsD
rkIbDaeGLXdc7Py38DB5bvM56/FTNBfbX2zuhFPNsvCs9wv/WT9tTs/Y4U5y
vJmLpzwY7OM4u473Qwd2vrOud9FzlN8qPMpcH3GHQ20U6geyn9m4a2u0p5q8
eMx3+NhxeDSzt3X3zh/i+D6zda6HdwN4B8K2/C02H8OIZrvwI1wH40X3c6yd
uXjFpysGtiejNVxa2HylUbfWvNOGr/DyFQ3aTP5M/+baVbzewcX3GtXwbe4X
84/eDy/Dw47vmrwKcLG9CNaHWy/umheOB6SeNvpv8zA5lGF8mNg+3mea+z3j
6R0bdyzbdJ409G0z6S4vyVV+bTbuMa304Wd96O3fZn0z8UrXnfwRkx+5tSp7
iae28mK8Vh9esXTn/e3zTVzc+iNsvMpXAYtNTNyegvYXNC+Ho8jjAAv5fbrf
q3cOZvtSOXblZyanmdkbPuO9v9nY/gsavoH2UqyeVSYuzmfXmeYeOD7RnhTu
jfOxwb+0jAudfIpz/NA8qM7INPZwZfp4pjYgvu8cbyb279DPA5kHxttc7PtJ
fg+8NjB95/Br/7R9xvYXw5XNw1M9D7fWjru2BzwbHk78XdaFcycvhRvHZt+0
9hOvjo3mHPYK26AZw8Xot+Zi13sw8z10y3u8nfk4y09853c8dEuYuLl4ygts
vbhr0oVPiUMzF9tHkcb+h2fjxqB4YvFwtI+CddapnR8Dds7x9iEQH7fS1K3T
Zp7xXDCWjhv0PnBx+oGf0YKtFWeZ+c52/BTcC8ZKP533rfO3WZ+e6uHxf3qe
exxrhl415aiYmK4ZmDzHXr/LE+HvExezT59r51tuPu66xdP6VYP5u/7xjotX
TD419FX42PrvxEaus4KfFt7Ee5tnGTOo/cWTPjnlKGsupq/Ok4FeTA7kXEs+
f/y73ho9s4wjNTQcI/YaLn5tW3mUifNjTrvh3fAxfr644vmddGNv77mfGHfX
z9Q6dzPPM+Sw69i3lX7c/Lti3t5v2rc16YnJz7Tg3n/Ss1d8bP3Yx2VbuJg4
LXMxGuQUs+ZcZs57sNKM4eDJf8C50Goz1kkvbhbe6cjZd+fnaN71e/pJW2Ue
3OC+zsnGvPa9aW8AvExtanub0/ANp9mzYAbms8/juoMrrdgacP/meB50P342
usLFPE/52sm3178p6viRx8TPQK3PM9fJR0Gd7+nfxupdDPkoOtauudh17+Bm
c6nZOPqwvcbxQPzI53/+Q3px52Yj9zD9oilPrXO3NTOjKaJj0tAxXb8BT4CZ
jzwFHBc2Cweb0/BUOObO/D3Vv5ji7tpjnPPv6hyvODV+YHsZOqcFerBb569g
vuDM1s89P+ZP8gw/9OI7Y5uL/Zlz4A0O8/Kc4fmloTnnOOLm0g/+Y/ic3NJT
buMpDm/Fxh/EbH4jTgxOwVMBX4XBzH7O1xaNECZ27Jlrdew01ObmFRf7vPCj
WRR2JQeb88hN3LzyOGQJC3M9Pn+PecXk3VYs7e+Zw0mD5P5EL861m6PgNWLm
nIeCezr1ab24edlsZq9C8xWNXMbejg7sODXGFG6m74lbv5ms3H7p1lOZM2vF
ZuLOj7HzHD/DwM/ozK1bT/t3/b/VmKzrrjy/bJt0NG8/04YnT8WUh+usrcZp
9moOa9144rQsydkLd/gdfZgrjNM5jmm8Lz/zFbfnwM21KmDBsPHOTzyxsvXF
iW+nlvPZZ9xxYm7tgaX2Nc8d7dHt3LnOn8cYXXMk85nz4MMlH1s3x9c53o1m
bfns+qfcH3AnPJ798Aw/y8WT3yjN+Sh470BsZHMx98Y1+t6puiTNxq6nAg/z
b6Y9ElP9u671YY9x+43Ri+OlwE/huLtoxq49bTY+q//cGvEq53EYDHaynwJG
xUNLc44D5zmwPyDxdvgn8PraR/EsF3ddZXRctFjizTyG9g3AdP6+amd+arTY
zrHRbA478h32NPtaL3a+DHscnFs4TOy6KSsu5v/Z7Jv9Mmbi6DKG9OM4vCl/
W8fakb/Nnops65wArRnDxuRiCwO5/h1cDIeas3f+iRUXm43NxfTZOSGaM/FX
wMlw7c5L0eN3rjFY+SoXr3zWzcjRVu0VcX/WUfH+UnPNWi0xcJ1/d/IINPuS
17a3T1yMz5bzMj+MBX+H13XOYVrX12svxCreDQZ3zmQ/G3S82korbo6duJj9
7PWd9PJnvBIr/p1yREx685U++z5OzzQ97pUWPMXD2Usx6b0r7m1Nejr2Khev
zg/ndpxfH7fiYhr5KMIy1N7DY9weAvso8jn7+D3/zl+8e59v3ZhxRQ+8wsaT
l2LyO7cnN0xonzFcjHY5+SnQseHi1ZyzDe/rSi9m/uFia+fMf8e7TRqxdWTn
zLsy94yXcbamnCU16a5ycRg610j+OK7X3p2ue0dOu/bMMIfWtvl9TPGwrc93
XjzX8HD8HetWsXg+xhpyx93hMZ5ytWX/VS3o9mfs6uF1/B4158ys+A/CbO2b
nXy05ipyhsHDMLGZq/n7Khe3Fxm9uDVWfMfOwdD5zSZWvto6xi6/U5g68wMv
OubO48D7fMQFFhfzvMB8+vgsD6347p3IcWZi1x3kXuEhsUcDzwseDebwjI3z
nVrT9iObXcxC1oxh4zAJPGx9uGvfnXHxjpOn9VN8GTow47Fm3DVHYGx0bbbD
+RxDHejOv8axZ3VE7NF4Rjtu5k4fGbvj5roGXu7TLsdBWvZtXuq4sdaLp9+C
c1dQAw8vsetAo1O2P8Jcln3jozDP2i/cDZZ2nN/KKzv5g6f+JiZ2rbzOT+Fn
xxWnrrY9s69Z/+r+q/x907ETQ/tvqDVda8H+W9oxeZPuu/JS7PTeSee62lon
dlzfLmfcpEPDZOZimvNCwBnWiuEo52mb2HiXq4J34/Tj/GhXmdj5btFMO1at
z4mn2XnArBd3XmL4sLl4ep9g3oX7pjHjL2Y/5oB8DlwLOi7eBnIywOvEorEt
9+YsP4jzZvh3Mh2Tc8C37SNe1YCGSe0jxuub7yzhbefSs1bMsc3vzL3ZmDou
6PPTvy3XeW59uHl4qofXLf1RDxq9OHklrBnne/PuTjd2XF/rxt6X9cRlmVcf
8Wo3zmq9eGp+D0/esHCWY+4mLu66HpO3ePoO68Hk8CGfM2Z80OG3aKbRsNG6
nY/BPO+l8zB0s69459ewxmwd2n3hyTAX4y/OEl0aFnVOaNfi5n7xXADLss19
co3ZZmb3tTcbE2fnnHvcU8e+++9la8b4jWFK+yeoFdz5e3dcfCXvGb6IsLBr
iPAdb7Q5vXOsMQ77LTjOujd81zXc4O9m2p1efJWLHdc3xQ5myf1x7QvruM3F
zZdoyat8urt6F11/IvF9zJmvo2tnT3zK74s5tlfhTNu1Vux75M+7c69Yu7nY
9x7Ofg2D+h5NzHuFlVm2Z+JMN2bcu/cFXt88OelMrFvlQ20OhhvbY7HyPzzL
wStdcmLrVazg1EfWoxebr8hzCxt3jTX4GF5Dy7Q3Ar9o51FoXuM48ifDRtRu
a03YWmxrkllOenHHsvE553NsV+vFk8/YXmTq6nleqZPcdaabi/FQeD/mh9pu
PWbG8OJeydeM79i1ufs64OschweEa5h0Zu5XWJ1rc07rzAU+i2Zjaj/bW5wl
eac9Z3z2/fB8wbr8pls/to+F+DvWsW/mfMXFOyae8raZi1s3houpexf92P7h
sC2+C9eHto+4WXgXs8e7+LAOudrQMY/38e/9wZb50BHtEzB3UvfD3lS4mPi2
VQ7f3tZ1PSY/BzpqrgUGRS+Fi82HjBGPtRvcDR/6us5YuPXkKbcd+fDMxdQL
5DytVR9a8Z2Nm4unGLvj2UT9ce25ljwvdP62qVZ09o/XxjnxrGE3I/lva2vG
sHHeg0fzi0+Ud+rOU9D+hqt6sfOkNSeajduv4dhBszJsawbmGLRh65jtm4WD
zvieZ4WJtSf+PfMi+5khc3KWA3eX54xnnCkH2+69vpkLRoaLPc6uccdvp8fC
GNCLV3koXFum70Vrxjlvr+e4MzZuJu7z+PfwLBN/s1vXO2xubvbecfWkmbaG
vGLX1nnNwCtteDrHFU6e8kms/MLN8jtu7vXhE9dUs35I/Bi1LGAn64euk2eG
xIsB79pnYV5DK8YzkO/hLL9nz7lYmsn6HTmt6zKvOBc/gut3WDM20zcX57ph
U1rmq7XTlV5szRXNtHPZoU8758RxD+7+WmvEzCO1qZ2/gj59L+Bi7rOZ2Bxu
LwVjneo/Tzkp/AyRlpolxHpSS8a1PtpT3HPm37F//7wnyD2hznXmx/ed3/VV
Lp7yUxCLRx9TrF7npKBNWnHrxpNfYtKMu1FzGB7OZ3I3xKt6lqMt7+rhKDRH
9FEYyn6AK1w8xd3Bxc6VBreid+ec4dswXNahDeMZgJXRl7Mvy/ZicB1wZueK
aA/FTitG880Sn4X763p85lj7iw8uvudcW3Fx7lmun2cAcuX5fGjS1oV3taLh
4nC0/RRcn/PbJpeB2XjyU/BuP2zDe+eJHc5YGG3X+urkzcUDMfkkrAebg8Nv
6MroyCyzT8fo93eYKOtXvof0TZ5nx2ehrXZeD+eIWNVMWXkz0rgXKy7eeWs7
L9mOj3dcDBuT19peafIYZznlomAM2Z7r53szsfXcKb6v2bi14zR812f52yat
uFm7+XnFyFe9xmftNX08491YcbE52N8nzl0x785TMXFwn2fF3c22Kx+Ec2lM
WvFOL2Y9up31N2uI5KpwXF7XSW7+4jtMstIizZ/kR3B97en6r+S0a813la/M
GqXbaoz2I6PZ0j8+AHOj2dgs335tOJL5yxy7dkW2EeNIHCTH8NmcCf/a+81z
h+8xrLjKRWItlri7lXdi4uLcq7Aw7xa4p+QG5Lxp5HBuLvZ85ffKuI/f5b1u
CrkpYGLuh+tY53vqH17l4sk37Ob9WYd/OFpxvqMXTzkppsbxZuBJS+4WjiLH
QtjTec3OuNg6qr2zXYOimz3Mu3pv7aWYuDgtPE/f6N8/c8/7C6ujhRPrlgZP
4kFwXQ36sD+DeDfOt/Jbow+7Hgd+Y9djNvvC4PgVYPWey4yBeit4iu0vTkMH
znH2XdhDkXnpZ5ZmY+4pnovMYfwonaMCVkOPRdez37TZ2O/1/W7fftYzvwBs
bI01yys+BHs2rBXbFxyu8X4w06S9sb75GL6nVgU50JpPV56ESefF05B+0p/P
sfOT5BrDpD73M3kczvwTk48ic9Csn/XkUmZ85JsLF3PMxMX4KPI74fvE8L4v
3ZwvmXWwbJZ5XmO/s9zIzd/ux/1OjPyt1IfPOHe1/Qqrn+nAKw3S+9rTu/NS
TCw86cTNt2+Sz3jH290y5jCKa0Cj/bpOmOtL2BPsGLL2Q7DOWrR9u/ZfZF08
CWnOdzs9A1xtzcLWP3N+uGni4hXDZz36OV4HXxvPCzu9mN8K15vPeHB5tpi0
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
dJ6rXHzGrGbkZtMp5m5iUcfR7c5zlYlhHnsneixXro2G99Xv8GEnPKZowa0V
w1L4jLv2nb2s2SeMmdZzi4ci21zvjiU8ShzX1eeKh5Z792dM2jM5df2+3low
3Otjuh5212HLnOGlgIvNwyytUacv1xtBQ+VZw5x5XNNda/Z2M6afQ3w/2iM+
xUvS+vkv/XZ+NrwOq3ofXGfXEec9hZ8r4FzmxZqxm70RsC4xeHAzvzE+k7Mt
nycmNvtm3dvf/V0PDkbn/drvffVYvve7Xz8+u5lz09IXXGwfxRR79yZcDJuj
p5LjFn9tltET08JMibeCkZ2f2H5eNEx7COCn1ovDgs5XfMVHwXp7jB2D53oT
6KqOrcMv0PkWmmfdT7MgOjHe5ikXRWurExcTI3d4Ie61oD0OuL3riVC7rv0f
aM9p2R6dOWPNfeMe4ZlJCyOTY4I4P5gbNraHvJ9xXPMDtsrfU+t26I5sX7Ex
7Nw5YdPg4q4DYS8w7NFsjKbcunHnOsvSLE5fnUt5x8XWXMOPzcStDVsDpuHz
IG8GtffMwa7Vl+Z1KzZGTw3bmo3JiTF5J5h3+BzvA9fK/ZxqEbsGXprrpnHf
rNGbGV0Lw9quz8k94hye+1WsHb+L5uLMCyzN2KIZm2mvcDFM7uvp3G9nvLpj
z9aF35SFPwq/M+0qM05sOmm1Xk6173b97LjYml+fm/f5Exdf0arZ5jxo4SvX
Dw6nwCidDxgmJl8uzOK4OpjL8VHWceGYHhueBfOoucixiavPrv/rOs2TZg4X
T/FhzdDMG/ub3c3zcB/sZz8By8ybGRKtGC7Gv53+nD/ade+4BueecI08bzur
ceJnInRk/5bye5j4N+s6t3E+U/Ou3zfwLoD5yfzay53no36WcEOz5tq4r7t/
wzyPpbVHwkxs5gz/pkUPTvujf/iVg4HzmX3yOevMxLBqODgxea4Hnf6u+Ch2
dT1WXMx7dTRFeBg2hofDTtaO7T8lT3E4rLm4+fKZmLuu9UEO466b3HqxY+xg
PI/JjRy/zZx4JrIuLI9HGf8EMWk77zUMbS+0WZZrsMe4vSlwcb7jfYCRaXzP
djwgOT86ML6J9Ec9QLMw18v+9oGs8rdxfdZGo4PZUwEb25+6isPDl5y/tdGE
4VvyBKPjdZ3lbIN9YGfyqXXdOfMwHEweDfsvfJ7OR+F343Af1zR5JpqHW9+F
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
7/9P73/i7beO7//8//tn7/+TP/jto2Ub29O+lLoSt+M//eP/4fvf/hd+aNn+
9Y//2KPl+7/xg59/0f6dn/6vjvapf+8/OVr65rx/8JX//XFNb338rcf6LLMu
52Z71n3unXeP75zrz33bdz4+d8v4c0xazpP2td/77fe//rvvHY3rpGV7zu3r
T9+MwXOffug7x2Rf+jiOvc1bxsZ4s6T95dvf8azLfukvx2T/z9x+6+mbY5gn
Ws6RbVnf9yrHpq9cV/bl+vgtZJnz/MPf+T8+eE7Ib//2+f/9g//r+Pxzf/1n
js+r7Wlf+tUvHMt/+sd/9GjZnmXWf9u/+tbtOeX2e/6hTx3t+2788pPvvnO0
9O/GujD9bnu39MtxWebZ44t/55eOJcf4nB882/3So/3abQ5/9cahblwf7b3b
/2m/+fXfPHzkWaYxF27Z95O356Xv+IGfPJafvOdeyXnTR45ZNZ+Pucy1ffxj
nzyOzzgfsaP3/TKOzPGf/9hfvf2f8+5jHOkv33MsfXz2r/zocb+O50nd00fe
ktu2tMxJ1uf49P3tx7Pmpx/LXJvXsy3r0nLNvgY+55zpP+PxuT1m7tXhjfqh
D57v+D3wPUvfz/SZa8u2/L44hn19jist+5/95p5pGd/qt3y1/yv7cf9o/Pvk
/vY+HPezP/cfvWhfuv1NWi3dvG7avmvud9f+27/7y6f9Z59uvX+Ptdt/+Wv/
xbHMv9E//Mr/dnz+3o/9m+//5F/5yRfzQv//69//H47tf/HjP/L+v/QXfvD9
T97+/84+P/W5d46+0gfN586x2afP/xM/9unH2NL3Tx25lH7hWNLcT/ZhHIw9
6/OZxvzxmT5+7Cd+9P3v/O6PHWP/9n/lrWP8+Zz2n/2t//oY85/+o988GufI
cbnGjDNzwpi4xuyb/X717/z6+9/9b//Uo798/syP//vv//N/+k9eNMbP/eUz
29PnJw995IP5TUtffPZ6f/Y6N8Y0bd99d/9e5zHlWr72e195cX35npZtbl97
7w+PZeYkc0/LtdIPv4msy1z/zU9//mgf6uu2L79B+smYjt/C3/7S0XJ8zpX9
0nL/6JffxGc++86NMW7PRDfm/l9+438cG9t+//Z/dPZN+5mf+9nj+xd/7ReP
z1mm/frt/5rsz3e2p+VcWX7Hbcxp3/vDnz/6yP5uHMd5372NN+1r7/3jw0ea
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
znt4eG4sCBfDm/h0D88DzJq5VE28Mx/Fio37uQJ+zzkeOnCxsT0VOYbaIfiv
OwcFfpjj2ShMffejcJy9JG6tZZuL0RGbjdPCSo4l43PY+OCt+7tzNNjszztu
e1b9vj/Hpd4Ef6PtEYUlWzPGI2FmMTN7X84VxoMl8SZQuw5tMevtlTjy9lYO
MOfTNVugi7afwtpx2Lpzm+2amd6xeCs/RXsj/AzRNe/QjVf+YubI+niONw/D
+LmufDZfrnKcMU8Tn+F7fjaHRLPxFL/n+M9+bvG9fY0+fKbXTvuu2Nv+69aR
z/h79fls/xXbnnl4z7y+V3l3l8NidfwV1n22wZn2O3T+BXwDxN2hoVITI43c
v86F7LpwcA/H9Rha+/U8rfI2MO5VHQ9zr5m492eb58E5NzrmzmNr5u9xML94
A/DUUnvP2usUN5fPOSb6KxqstVbrvuHMFbNOXPyaeLuPmoutMfc8ohe33u4Y
UDOx85xM/0acpy086boe1nnh4skzEf5sLrY+3Fybddk354mXYpWTYuJi1rnf
1ec0c5fj7jr+Dv6a/BVhJHTMbzUXk0M44zBPomNbK7ZPA95l3/gkXP/Z+ugj
z8OdG4m/c846x8W1NvwsF7duzNw5RnLyF7uGHtcE26Ilc7/wv2Qfck7kGsnJ
4XszsXH6RROHJ1wrzX+X4TFqR/hdPyyc7dS2m+p3mNtgLs5p/s2xcBZcCh/C
mZ1bYsU01nCb9+yfQKc88lDcY/JybrRlx8NNTA5bNWOaa9jn6O+e720Vs2ZN
1lou92Hlp2hd/siNd69ZZ28D+zZPto8i6+gfLubeeJzW0p0rpPXMI+/b/b2C
7xPHOX/IVc33SnO9xubFznvS9/U1jLzj4hW3nnmOV9tWYznr322lC+8Y8orn
4qrOazY+4+k+v9dPORd2rNxMmH7wDoSzsg7dMsvOwRYWcW0GfLeui2Eutic4
+3Ec/cKkHYfH3LQHePJTeI6mPG05xxSHlX3Z1lwMG3PtjLF9Hr2vz4tWzDNB
e4fNo+3PtS+COtXMf/onhg1/cuu/5uU39Us84zeeYvGe5WJatF3num5/sZe7
f1u5F5n/9Md9Qi9ubXhXR6Nrzp3lFUY/dk6K6MRp3/av/eDhMe4+Widu9l3F
3WWJTxSWwhfA+/dJM4Qnm3mdK619AM3FxMM5r8Mqn3F7jMmRNvmLzePsR54G
clEQd5drP54F7tca5nT8Xa6V7/0cAGM6ZwQ+haueiTMuDk87Nx5cTGsu5rnl
YOi7jk9NEtcZJDdFGnMEF/fziO+71zEPGSu1juFEuMtMCYe5bgM6MQyEHxWm
M7Pxbt050+xZJn4qWjH8ldZ1oyfPbudvaybOuLq2na8XLTHXTT6K9hDDxVNd
ari5fQntIWEM2XfFxMyvdWU0+NaMHR9HM9Oyj3MoNze1j2Li4owBdsVTkr64
19QYbN1z8saYnadtE5ue5bBYsbDzC0597jztzzLxiodXnLpi1azjHYu9Fau+
nun3zF/8LNue6cnTvq/xVUx94UHYacdn/spuZszDD3qvNwZrhXfCcvZEhCXN
Q/nb2noxbMznjKf5jNzHk2+jr709pq635ri7wzN8z3tmPdhcbD7u2h5w9qQR
w1/mLt7RowfDtPlsLs5xZtjJq7uKrwsXH3WW7/podGPy++Zz7s+qpp39y98K
Lp7yt015KV54k2/XwvWhEfs+cb/NxZ6Pfm6yZoxnHt8yNaP/3L/81sOfe8VP
HG03XJw21fFAR2abPcvwa/TisDD1oMPJ3UfXkbZ/Yoq18xIGRu+EgXb1LbIu
rNj+VOqzXeVisy68uuJix9DZG9FcDJ/nHLm29Akj2x9BPrXO25DPjr/Lcez7
om7f3TeBn5frJ/fbszF3Oy8Ffu5JK7aHwnk58D/DxXiM7YPxswU5nidteLr/
1MXOWMM41DvmHb3f1aP/ksfMOi485Xp2eBCoMdFsTL/NxjAmrIuOHFY276Lv
Ud/Y7/G9n/0TMGlrxc1RrgvB51wTWi+19fgMJ+aanUu4vcbopfD2ylc81Y+D
OTuv8eSl6Bi8LK0Tu5b15ENuHziauf3O+T1YY805YWX4u3Vj58nzb6Lzh3Ru
a9ewM7Ou8llwL527YsXCu7bj4FU+ipWv4irPsp4x5Ld9VW++yu8Tyz+jB08+
i5334hkuvsrEq7FcYd+dboxeTA1idE17JcghCxuHNcxD6MXWiNtL4XxnaMZZ
tufXem+zjpnHudvyf4OfCbr1OagjQf0SM5jzqbVfwrk3YHX0THLvwv65vnyf
uHjFlau4Ocem2beRZo1/VcPjW8XFE/N+iIHvudxgej/nEHsXXRf/CjU7eCbD
W2wu9jMS26wV452Ai48c2t//9sGlU5zdipPh0fZXuH6HP3dcX+ekSOvYu6nt
NGPH3qEHh4sSd3WFi2jhIuctCGuZ6VwH+hF3d+fiVSzdlIOiubh5Di7OOY+6
x3dGzLVlPTmNHYNm3zT+YmIQm4vRW31tXWeD/MHWUd+EidHxnb+jPSytF6NX
m4v9XMNc0bg25tb7nvla0OEzZ2GZ9gDkbydxV8nP4Ppu5lfH5h3r77l+YUkf
A5eRH63rL1Pv2OzRPOTaDbADzGe9Ea4/81CYo+A6c3GzUOeI4zrRdbvORuvG
9hhfbdQqsZcC3wdauMdkLs6+7Wvhfky5HJrrqR/CPctx8YMzVzy7cF28S+A3
0ufm/JMPpp+HVvmKfT/wgxBHh3+4mfsK++627eJCGYfjCc/Y2Bq21/VzQY/t
NSw8jeGqXnxVP36Gg8/2bda96se4On5ryNaSzcVH7oh7DV64MWySpXMwEHuH
Vsx7/omHyUfB/nAauWmty05zDuuu6tzl3/rBQaURNweTA83rw/xel+ti/PZn
mI2ne3Gsv8fowaX4RDI+uHiXA8L5fTuGLuvhP2L2ruad+FZysTXujJmcbF3v
Y/JM8DvEJxKGJT8FXMyzG3Nx/BZu8+5+7Tmmb55dHH/nuLsdB69ys9n/0BxM
CwfDwmmf+ew77//wuz8/cvEVb8YuP0U+h8PiKYBvwzrh4+QbSMu6bP/Cl3/j
WJpJw0dwqDVLcoXBnM3FYamJi/0e3/Wf21/sMVgvdqwZXgI4MZ6EKd8vtftc
x48+8BVnaX8EvlozK88F1MPr+DbnfKCtuPjIL/wr36jJx3nwcHfcHd7ig9/v
+rW1/x0XT/6VzkU3eSu4D1+652iAV8JaxJ2RT4y8Zc73yzv35iq/rw8f87fX
ngo4Y8ojQJ6K5hWYA15ifce/wXvOwUXutpWHgpg7vBu7PLWstw7qGERzJZqu
16204l0j3wY+AnjXtT48vsy1mTfv5bkn1JrL9Tu2cmJj983949rxURCLRz63
jidsHZ/7w7LZz/qwn3+mdebF3rdZ2vlDJsZ8RjeedN+r+SD6+KnPidFXvPwm
jGwufpYxV3z6DMNO+3Ru4jPPRfe5ykmxWu/8DTm3eRYuse/WtducX4JacNQs
o68PcfGdtY937fd8C/D2VKe586eZg3uOrDWagX298FnrxY7/w8fM+B1vZ43Y
jM6x2Z9cx2bSHI9PBR1+lRvCnzuXRI7DPwEXT2zs4z/quLpnuTiNZ4Ysr3Kx
n0f6+Y08f2lw8dS34/T878C/Z7g4rT0RaLfm5M434dYcvGrxTzhXW1pyGHf8
XsfdNRevPMZwMQwcvnpG24TBeMcfBsVD4NwID634rmmaw9pD3J+bizvHBFyb
c1J7g3OTe4w6GdZZ0YmblWFMcjngpyYncZatFcPHGduqUW/PNfdW8XaZz64T
uMpdjC/ctZ7Ri1vfX3Hx5Cle+Wgce5dlmCfcQH4I9GFqvKWhGcLPMCV/Y+Go
fEYj5P17/32G0eBs+1vhVfIpmKO7zodj8Jz/wd5i17pDm4aLrRWb51Z1Q5rr
YRSux/Ow8ifYf73yF0/+ipyjcw7bSzF5q533i7Hak+L+Vjms0fTD4NZ4YWI8
M4zVcYrOqzHN3fS8saqH0pzb92jH0F52n7t7vOLknYdhp83uYut25/a63Xlf
w8hw8Y59z/j4Ga33zIexO+9u352Xw2zcxzqWrX0UcHEfb+8CXEjeKxgXRnTj
nXb7XidWdw2TzilgLmLJtq+994cPrRBmnObS69HCfY3N33hRnVvOHm/7XbON
HBZcI1o6c9pekmbhKccaWvIqnzHNsXy72nYfBSNf7cPvAqaYyv69mot5/sJf
jMclc2mvy8TFbM/SvyPf54NjP/0jBxfjA7aP1/6H1mazLR4M83CW8Q6zdHP9
Z7zFzcU08rrZa7zjYfN7WAx9GA57movvnoVDV737a9M+8fZbL3zInYtil7t4
yh8BC4fjzcVovfhxw4vRt8N+XFd7nhknHBxmdAwgudmsP9OokWE2hUXxSe+4
2LF/ExdT785cTHzgjouJmUwfZmXXsu5cIjsunjzF0/bwabgrecvCLI+abndP
gb0VcDF6o//W2rcQZnK+ihUbt8/Y3NpsvOMDmKf9C87PtuLirLOnF43WMXBo
347J83nhvUkDN4PguTD3osc77o78Z+QGTuM9e/qhXsrKS2HmCv/CWNTWcCzb
zktB3619460mps8+ZOpec539bDTVMZw4sPdbeSpaY24vzKS9XmHP3q/rkuzY
dBWDtztut99rfRRXzrliy+lz61avbWesvVquxnWlNRe3D9exYfDEKhewuRjO
a/bpGtCwMXpxGp5YmmvPtZZtrRamn8YVNnYO5qPW2l2Xzt+UzhcBG+Mvdr45
fBH4W4mr43PzsWPw0p/rgBB/l/Ht9OKpll1zsuPUpvi8ibGbY6/mLH4tP7eH
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
t+bcaR1Mi5bs/GvePnksmpXJ1XYWY+dcxb0+zTnZXPuMfAXkqG3NuPkYvdhc
bAadYrx2bLzKV9Fxd+Rpg43RXjsHW48Pns31NafDgNnWsWqOwyMXG9eIj2Ly
T6y42LX+7FFg/MQTsh4mRqvG6wwDozFTy671Yp4Vus7J7hmltWL4nP/L8Yri
a0UzJheY2YnmWmv5e27N2H/fYbKJBaa/12Eo5x6e2BhfhfnEvo9sTwwhXJxr
o1/7KODiHH+Fi/HLwn2wCOdtT4WfFVw3DxZ2P7T4Jx7asGLkDn1e6/BM4//G
L9LPCniInRvD7GteXunF+JfxauP/yPipVWK29H3hOYDfiHNadD3vHStOnLzz
Q0ycfXae3bPIVS/FxKydq/nK9e44tvuf8l7s8sT1PpMevOJVf7/KtivdeBWL
732m874JG0+xd1mSk2F6Lx/GofZG9nFdD84f/iGebcpfbP0uDDNx1KQJM88w
sbVG1oepwrb5vxwuhnGpGZElbEy+M/jYuZk9hsmT6vuW6+VdPIzssU3z77xq
U36IVaxdPz9YW4ZBzaHZhof5zypXW3N8xsU7iclj47zYExcTh9d1TYjnhIvx
G+c3S/3FVa1wfBRpcG8zceePIF4uS8fWvdZD4XM4JwV5MVa1ns3BXQsPLsZH
AeeFm+BGNONVSx94cF33wj6AKQfFLi/b5J+Y8lHAxZwbdmWd8/+GJ/3dXNz6
KOfNEv7tXMXUt0O33eWh6EYOZjO5n0fwf6AHf+Ltt15oxWj6+GBgVOYc/XvF
xWkrz8S0PixsDzPPB2l+t5+GrwEfBJpwGAzdkHX5uwoDreo+w1urv/WT1omP
YxUPhheCY5yfobk42527GJ3VnEj+tJ1/AmY2+5H/zVqvuc/5jWFi9OZm2PSb
bfQBA3N/4GLyB6dRv3rFxeQI9nMAc+k8bczNjou5h+jmnG+aD7ZRFxDPxeTf
uMKqK3a9wrpXt3eM3nTeXn+Vj3f8u/KRNP+u+Nga8cS9zcsTF5uHzT4rTfhM
L15x7uQf3nH5xMDT8Su/xJSvdRo/tZnhxomhyDcW/kMz9nWjM3ce5Obi8MvE
TR6fcxe3PkyzXsxx7YtgHePjXIyVRt4I52rueiS5bmrZZbtj+pqJ0we+ADzO
1A5pfj1j1s4nsbpPsDDbc85vNROvfje0zNOqTjiaLnzbPOvag83HzivIvviX
2zef45NTkOeo1ognz8NK330tC4epw+LJYRzOhbm7FnTXfWbZ3grnk8t3NOLH
e/jb3y/qfISjeHeOdtye1jAXsWL57vrFbl1D4oqXYhd3R10J9G304nA6ngPX
E6HGiP0dOy7mnPiLp9ob9k8TP3fGw76OngfYFW+3606Hi1/kX1btaucqpo6J
uZhcFMTdWS/e6cM8GzCfRw3qMPmt8T16+qFFJtfBPZ6MvAcwDAxsdoKTeA8e
XkBThYfsG+Y44vPcrD2bjcmPsfNUUL8ZPjQbM84wtrm4GRFvxhkXk0uYPBvW
g13DufOSuUYKxzdL2kfcjMR68xLPL7k/xMo1F8NM1PJAS5+04/ZatHfC/mLX
quZaj/wZd48JOTTYhracfdpz7eeqK/y48wSvWPps/4m5pzohO5bd+R2ueOyv
9LPa94pe3M0xgROTTuy4Y9lm6JW2u9J6r2i/PYaueTHlJ76iIYcxYMZVzi98
CmixeDrtMTb/r+rdZV1Y0Rqx80Q0F9s3wTWbP1vPdT62493gnQ/jW/B5ci25
Dhg5zAq3unYJ+iYcHK6LZ4LPnsMs7bWgvgdzy7nRra/mkpj8EjnX5JfgHGjl
z3iOP0oWnjwb/K7Mv/37sNdmpRevuPjwGN+2kauNeTcrE0/KPf+Ld/+DteBn
mHfSlR1HhxYdHTjtT//kj9//o9//nSPXhOPqOC+c7Pp5KzbuvMZm47CP69nh
16WmBbqmc3q1zpsltc/Qitt/bL/AyivR2x2PNnFxGjr15Gu25xkvh7XssG3+
3aV/16A2i+OZ6JzNrrfB88GZX6Kb5zDnCQ8TD9jPFbmObO/nEs7P8wsszXMO
XOx8FOi9Z75ixsVvIccR7wcf57P1MrRJ11gzF8ObZlE4uLnRDb5yPeEzNs73
yVPRjbFYh3SehnAx4+46dwc33mtTr5jYMXnUsWCMXcPC+5Pf18f7uQN/MlxM
n46fah7kM5ozzweTXgz/cEw+T1zszytP8YqLMxfh/Z6fR165+/XbPwInrt73
r7h1x7YTx+6Y8iz+b6fh2kNzNRcbx+x8ya/h4J1nYorFO+PinT9hxc3PeIFb
N94xtb+v8iavmPgK67vBip3LwOucr4G8AQ9/6Bd/4YWWNzExzEP/9gJ3nrTm
X/Nx+ymsH7dmbG9Ea8h4KczmrRd3HgP8E9EbnXuifcfmb+cwTiN/8RkXT35d
+4jTfO/QpeFuPNQ7n/FHycRnXGwvhT0Q/U7BuUu64bGY2Dh/83iHQN6TnDdz
3lyM1p/xkGdil2t4p/tSu478w2HfxM+xTHNeCcfWkVOC82fZvuGJi7vBxXzG
R+v3+uTvogY0OrFziTXTwo9dP4N2Jcau95lqQJuLw5z4h31u9Ey4zR5nckfA
upM27XW5ZvLAdc5jOJHYPeLuVvWqJyammYtbc4f1yakxsTE+cNfzxnNsLs4+
6M59H13fmfcD6M5dQ9pzbMZzPQ7zLD5VM6fftR/H3xgIVnIeL7MxXmP6M3+4
pt6zbEyjb+vFztsw6cXRU6njQTu48x6L6DrCWdqDnfOtclm4tkUaenF7cB2f
x3xmTMwP3mLzWcaYewQXo/GuuJi5d+u587oc01ycBueahZkz8nTAwOjHxBj6
ulfMdlUr9Vxc9Vfs8sLtWNx54qb+/fzy7DVM7Lvj3d6nmfqKVvyhtvERrzRd
M9AZJ69ytT3rDbY2OTFxeyauaMfZt2PsrEk2v2YdOmz4w/4BX+/ExGlH3rKf
/vJDe15do9nYXgovXXcvzbkr8A0T49b6aV9bXyPar+ML20NhLmb/LLM+c2Qm
pOFznuZ856Fo3ZdnFBjYvO91k8f4o+Bh/OZTrriza8i4+t51rfBcS9fogJn9
b8q/A3JS5Hdw+CVunycu5l4yN9F1nTfCPuPWfsO/0X3h3rRov/keHXiVWw3+
nXKuUTMEzl75h113b8XI7AM7ogOiDzoXF7kPVhpj2IqYr9aLw2A59iwn2MTF
Zz4KdOyM2/F09nuQq9hcjK/CXNwsbv6HgVmSh/lxjrv3BC6GjbOMjowWz7OF
dXh7OJq//VxBHKPzxTU/46Egp9uKi2HjHoPHZiZ2Tjj7KFjH33RYBoZxnQ77
GLr2GV6FBw/dtcLp7z78xbt9byOHwsTGk9+4x+VzmIv5PuVogyl490/DE0vt
NnsC7A9urbh1Y1jYPozOX8aYnTN4p1Wakzl2pRenZV+zsHnXPmvnpOj94OL2
YTNX/u24/p35mHcQcPGO+Zo3r3DxlLOjudh5lJ1Do5l55ad41l/s811h9NUc
TNv7vcLuWWO17tj/gv57Zf2k0ba3eJWTYqf5nnHxxMATdzc/sz7/TzbPhHXC
k2GYbIcz8VOQI5i4s/Y2oP+NXHzX8ZqLd5p3e7snv7Fj8ZxTOcuM13F35NeA
8cyW5A4jngtNHC6mkc/Y9xg2XnmDOcdOK550VntaYF9fH4w86eLttXitJgwD
p1/7fadcyismntjY+aPd17Nc7Pp4HMPzQ/eV+4eWbo0Y3y/cCvfCwOZgdN+J
g9sn3LU4aOi70ZphcNfvWNWjnrRk9klzHNbjHfmNqb7/+95+xKmhyXrfztHg
WndwsePUXsPFKx9FeJN1zgXHeTNuchYTj5f1uSZyF7devOPjnQfXjTGxD5xq
DZjWeZTNwvaEeC5p6MbOhQGro4XzDNNcDM/zvMLzD/P9goHvzwH2UNg/YS52
zQh4sOv/4kuYdFrireBb9MyJE87YGD72ejRf4ubwEru5L/ZzXQ84z5opTAzj
5bv5tRmvGSefj213rfxq6zpw7rN9v1M+A7RJ5xg+42I4Ptcx1d/2swZ9O84y
94CcHPZMwPxdC5q5y2c81TwPXPEBTDy58xNPzw/s13No3u0YyFW/HOdxrPjW
7wLO2Hni3r6Hr/EQT94JP3s9GHrDv2ea6xXf8UozPuPbFTNOx3ae351G3OvR
/ppdXCcu+8RzQB0G2ND1MDrXwBRblUZ9ZPRTciNPdZ1d466vd/KYwsT4CPCR
5hjyUjR3wpqwv58/0mf6QwNOf2bjx5zeNc4sXbODGLj2Nk/cu2LkiaE5b2vc
XcvPGvlruTjPFK45jX8Df0lz95XGvGR+V/vkvFP+4RUXH7U97vcBvZh80Z3f
In8b+X0430T4FM0XD3B7IczBKx24mbjj5fw9zVyc87KtdWHH1qVFu/Y+cLE1
zBfv5u+5DuylTXNsGrkJYCUYr+Pu0tfVXMXtWb7CxbDgo77IPYeZuRIdtbn4
Sp64FQd33Qt4mrHht3abvNf4JMzAjJM5nbgYls7c+36g+XMNrt199FF6N+Pn
N+BYzDQ4OPskzs51RbINrdR1hmFMa7KOx0JbdJwb+Srg244/89965yLunMgr
3dj16iaeYxtsyRjpp+tAUwPOsWJ8RjP350kfZN0zXGzPQXNY54igwXbdzDwr
Lk6/0capoUfMHnPQOYzJOW12xkORfh/+6dt3+ymsH6Mhw8U8I3WuhRXvrbTS
qe3i7Ha8u+Pf3X7W+qca5ZP+vBqvx9w8vGLklWd48g/39/HYE4/vlfXtqSB2
q7XiK16KrHtGO15prbscFXxGr2tOxL8KY8HExKehvTqmLByyYmFryD6f2c96
ZOvCzk/B+taKYVjrqPBoxst+sCljtwbLcfTPOHgGgI1ZRjPOZ45t/0Rzcdeq
W+VSM7u3Fts5N7ze94Ox9zme5eI8T+DJ8O+i679c0YlbM+b46bw5x/Rb4nff
XEzLdrwzeGl4viKHG1ryB/fyk0eLVwKP8K7BwjDtGRd7/46PYx+4OJo1udrM
0exvzTiejow765qdnb/XNRvQI12rLs1eCjjJfgV4rtlv4s9VjrbJZ2zPrnkZ
tkNjhYthSPMxvOl8dGf5MCY+Xn1nfByDr6S1X8byopbdvUY12/2Z63JOY9cr
Sb441yjMOrzC1ouPfHpw8X1pXdmxluQ/Ricm90Sac7TlO3ofeqn5Ct21udjM
1nUgcpxZaGrOnQvHejv6rsdCzN7ko/B3M7u52DXv8FIcTKtYQ9dldnzcKiYL
r/Eq7/GZZkzet1UMXPMMc2Xe4fsq7o7P4WK4v/M99/lzzPd811sPb3LuBfVP
JhY271tbd32+5r8znnuGjSfevMLQ071dadJnde/czMW7GL7VOZ/Rf69w8cqv
MnFx68BnXLxqk5bsumirPndcPHE1DA7zPlPjjlwUzSTE2dmDS96rsEYYmHfR
ZjLXGpvYOOOEi6dm/ps042YiM3GW1mWdlzjfw3fwkpmpa0CjvxJbaC6e+M55
DybfBForzTkj0sy/kz6802I7Xxscjk7c7PxavZh+4WLOAde+pm941dzmWMnM
eT9TEXfn+2+vMlwMy3vOeQ4kfu8Rm/jZdx4t9e5W3ogpj7D5uBnZ6123btJ9
w7joxa7z7H3aX+xj8tnbmzXxAeDRbc04LNXcCEfDnOQYe7zbv+vFZ22l11ov
7tg2fLtmYnP9Yyx3fnS+hzMu3vHxxMWMy37ryRPhcTUXM7bWluH/5uIsP/H2
W8e1pXFM5sBcTHvwtDRj+yg6bx8Njdg+dPbj3TfvxM2o7ZuAi9tjYa/xM2xs
lp5yta3YmBzFk5eiec/+jnwON+OjyD7HWJUHDf9vvzP3Z7hnlYsCfiRObVdn
2jwO93auA9ahcaPz2msxcbEZGq04LB9Gnp4pnMPYGnbuQ661mfhD13K7Xmp5
8GzR/NfstuPAqxz6Gm6eeHf3DLTi3j7Hlf1W7YyFp30mLdjPFKu5fGy/4IU4
48szjp36aj/EFZ5tnbk9w+RTcF98nq6t/bDd0IepZUf9DjzHWYd+Cnc0E5Pn
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
9XrZ555yXKzY+iob25NAfmLHrjXbu04zfGqfAdvhGNbvaj84No7tsJN1Vo+j
nwscm5cxOPdc67Ywsd+loyWS69jzc8zR3/7So5a0uY3+7TE2f9lLkZZzeOzh
viss3AxsbTmf8QFPXJw5ce7mZ/3Fybnh3MCOI8RLcUX7X3F458fj30C2H5rx
F3/h4c+xJ956MWNDu+a3M9W/xl/x8F9/9p0H5045KbI+Ht6z2neuI/2mXExO
ivYUk3vCnuX2LmdJ3Jp1QvRA1/wgFwE8RZ0PGrU/8CngtQg3wYtX2HjlY2Bp
Lk7fYT3XoYPbGTtaK419ycf8TP64s4ZezHXBxVM+iikWD661FmsuHpn41rh3
5OXAR0FOZfJR9FzAxeSVMAebh3nOcM42bzcXE3+H3xUu5m98c/HkM3ZuYfaf
dOOub8d5cgzvoNs7YS5uNt7V/siy/cnZnz7J2zwxE2OBJ+w19b5nsXWT1jrp
xmj11mxhHnLh5Xp2PgqeWZyvgjnJWMjZZn23awu2l+Ko/6eahjTmlH7St/my
fQk7/XL3zr/X72LkruSl8HLF8lOfEyefacqrbSv+nzh3lWtt9Qy1m98VF0/s
u2LeXjd9X3G2NV5zMV7XVQydebRj9iZ237Ex/aCLuo9mFR8Dg9jz7GNhF/Q9
c6N5CR6Fi1myftKNJw6GhT0mjmuPb/oPI+KT6NrRaOOcq/3F7IsGCauakVkP
O3MviVeEj7O0v2TyIaBHdz6IZmXOx9jMx77G9hPjB4Fls0/mZlVTo+twHNri
3Qsy+ZXN4v1MhJ5vDbm38ZtgDO0tNxf3c5VjBM3K9nNnXuDhtNS4C2eaU82t
P/zuzx/tjI/fhInzGd3XOdhgd3uNV95n636u6dAeUucphovts3B9DcfAPRtj
xzH4iK2/Tnox53Ot50dNt/JOTFx8pd5I69arbYytuXhqUy5je7Px9kaHz/yH
cZ2Dwv7ibA/7kseCHBXMHbkoHlwsf0vf446zW/0m/C6h46TIPea6bujFcFiz
Mbql9UvrsuE52GFiY5jO+S/MZN7POnSzLpp2zunafNT48HlzrRz/ov5z+QAm
z6b1wjS8KM/kaVtxMVr99J4810Ku6VwT96Pz6DL/9sHQGDv3wd4Tx+E1F6O5
o3PbP0EOCnsRwsdmRuukk9Y5cfGkHbf+vOPQlV9ievYx20653DpGr4+/wuNT
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
g2PhPXum4edJO2TeeIaAd/FlmAnRi10zZJUTrP0A5DTOddgL3N5ij73zIqDt
omOiHeO3sP8b7RjteeLiw8tyO9Y6sXMZ536b93dxd62dXo1NuxJb13N51qbx
rvrY5aVolp+ufcXG3n7FJ7HKz3YlJ0VzzsTIU77cKf+Bc0GYB1ZMPOnHratN
tW9fG6Pnc5h/vV++U7+sa1fYm7DiYnstrBk3o7CEu818vJ93XjMz9HRP3Dxn
sPELvfyuDXtOrfH2d7ywjr+jL3Jy9G9mmhefz7kszLRmYLZ7HjI35PA1I3su
yZtnHzJzar/2xMW+p44ZpP/8v8jvZPXcR+M9yvS79dJsvOJie4Rh4/zNz/xz
LO8Hcl28X6D+HX06Xwc+Cup5fOaz7zy4+E1zUqz4F/7OefFKJMbuT//kj4/l
H/3+77z/3u++98Iz3Jpw56mwFzlLOMiMl7kiL5dzs+GXNauiL5tNw1Cu43xV
L17psF3Xg3PDdc5zxrv+iYvNePEvOEbuTbmYZ4Xm+PZyTFxM7mfnk8sYcz3R
4dNnGNdc/PBW3LmYa6fOx5KLxcHto3BMnWsekq84/gzyU6AZZ7z+220+dv01
ajk0O4RjrRfDxbyPx4OcfcNg7TVetYn1VnXv4Dk8xF377YjLu/sZaGxr7bp9
ut7OPhPfZQ7sqXXLPvAiMVvNxpNftT9nXlL32XrxFHMXZiVGj/V4SThv2B3d
mOcbrtE+mK7tYS7Ovh7jxPrTtex4baUb08eUc5jfrWMMJw5/1kex0oRXLOt/
Q2es3sfutu9i7674jHfzCxdP3oiJg3dxeV3L2X7iHRf7HbXZeuLuHsfqHLsG
tzJ+9D3H0aHxWg9FgzQHTXF+7RuhT8fOueaEc8DBefme7cRrwXqwzapGtfX6
rvtg7dbcbC3dmrrXW+NsP8qkD0+cTDxe15cmBqzzUnRsXTN0P2PsdHTmf8pJ
kecf58vANwN7omunNlx02LTm4qmONM9eZl7/Vjs3S1r6bg/FlJOCOSJvNDVa
/PvjmjN++7SzntzSx2/uxsJhVLjY9T3e1EOcPqL9poV5v/bePz54lxYG7pi5
KR9xt6neHevD0OTkIi9XluEg2LhzFpNXwTzYcXdhJvIiP+ujuMrF+Q4H2oML
w5mLiWOzV/pNudj+4omLWe64+FH3+X4NxM6FYfE0hGth3OZiYiHbL8y9W3Jx
+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
bS6Gpd/l4rt6d9cE5jV9AKlV9KDvnr3d5l3rxRlo8q9+ddULJNvGtGFlmB0N
uP0ecHxYOYP9cdpG5pWBdyNM/fIyfLAqrItmnOfonAxzcZ7DBZPH2Hlt+AvC
lD2/jY07owIm9GfhZzTjiV/xPcDH9n2Y38LG+COoq+P9rvVj/s7J6HvlXZ8G
41o7RqPP8uBzrku6nm/ySLDvc7y2z/u+/cZQExObizsXzxqyB71H2k9+RzO+
w8WdVbxdY2z7avM83OXp/qzntU1/4tttn2xcPGn/frzDzowTS3V9lrnN78Mr
Jy5Gu+r5nPzEvu/emrHZsbVi+3Y3LwWc0nV3YZAwcb6TfFjzR/d+g0dZdvfO
Y1DLZk3XjGJvhf0FU2+M6XqlfS2bP8WPU21XBsvPvrBHGD6Gv+BMs5qzmfGG
wJ9dU2jdN5+hUaNz5nXq/jKc+8C6MT8+Y17WszsvuJnc+8briJ5+xcVkUmRa
3yvwtaC1Y7i4r0e41oBdWy+2l8Ia+jTweeMB8bTt1cFHES6GMf08n4VD4U33
hoaN7fP9xbOvdHIrogW3XmwvxOSJyPOHDv3BxAzy4q7ykE96Mff1m9vMxfZI
hLeot2PAT2FCNM67mvHkL2aEszcuhinRnFsvzvvdx4L5Ms3GxXfWGw3dmXLZ
D+REkJ/mfUk9Hp/Dx49Mj2duXt6nvnHjYurfOms6wznTLD/rlOdc38C8Zmxv
N3oy/gzmTZ9w+3lhY3t24V9zrD3B7n0b1mwuJu8sn0VjRYs9MbG9FfAverb1
YTRl1mPKqsjyqZGDja13klWR98zG5E5kPt1Xutkb7bi5qHVfRqbnmiPrji8F
7zb7O94IfNwbo+GhyHI2ltzu39uz0X4Jf2Yudm+KzTeCX+XE6hsP/6gx+Yi7
Lm7yA78z71N9as/T+937deNiH5ONc7/iofjm9dAnrX9rm4+btbiH3P0t7nDx
Kaet/cKtH0/MN/mMJy7O+jinzbVR3IsmvwvtzfofbA1rZTnowlMvE/TyzlMz
B/e1BtvUve023RjG7p4ePo5wfPOwdUm2depJbM8EHlf31+hj0L2gvQ28FwZ2
nWCWnWsS6gG5nvB56LxmfAHd64Xp2h/e1yDed30srrgYBp2Ouz3m1uAnNuYa
DS72NN7nvlbsvydfCzgjb/IEsY0TW+JpiC8CL0W0YJg108Tf4D7Q9AHJgIvR
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
eP8301P3RQYynNf+B/Y19Yr2/k6cy/Fx5gcasa+j0MG9bmxrZ2y8w8X0+DAX
+1xlfU4Zz9Q9sj1cZ0zXBSePjbMp6I3HfYAe8frCxvBxHsOg8VFEu40mDAfn
EVY1J1/195hGa9Xo1ejQLK+/c+LjPG+9kLyu1/35Z65tPos2ix8Bndg6LdnA
1H3BxrBo90y7y8cMsyfLQ6OOholfA/5zRpp9HkzX+i4+C487OXMwOxorOqr7
clgbnrgYDwX9AsO9WX80342LOU7sDzws9Npz7SM1gD2cH2c2hnvd99mszDTN
FM0Z1HOFR9yrjtfdJ8+ZFOYpsijsl3XdGfy76Yf4K9CLneWGz9k6MQOtF0+G
fRmwMb4E6vfyHtpptGN6R3em8aYdk2HhzAs41H6SrHu2nf7RzmXLdBsTbyPz
hZGbJ+HkZmK4ne1tLwUMbA625/iKjZthT8e4uZmRfeTzhhrRqyy39j7czZg4
DXPx5HPIPjltn7nc7N4Mf+U73kb7RE5eCnwUEwv7/U0/njS8KZdi64N8pRO7
jqo1X3TY9hzf4WJnerUnonVjb5/5iewy67eZT/52Wy8mi5fvux7OvAXD5L3c
B0eDtDfjq1yc9WrOoyeE+6ZlmdarYUpfd9ATm2ncb7qzNvAu4E9gGTCxdVCO
B/kUmR4fDPN23z78CVwj4SmxZ4VpzMmMZskpn+0uF2c/4leZuPjl2f/zX47e
Yt7LenDtMDFvv35o8s9s5zzHYw7/m4uzjvb+/LNnfoS9xebj6MVTfw/z8MS/
3Y9u+ry1YzN1/MoMluWauylrOf1FJn9xBvfdXZuVfZF782QTh/nc0wOt+aHb
fvCSe0aYi9F73/EqNBeTHZF54aN45P1+rE+4L+/DvRMTm6O3nLYe2/rlM/ZP
MzhatvX4PI+/uH0fmS7zwXNhLwXH4NXzWUz8qM97MjTXLdaL2f/WhP18G/Cu
tWszsbXkB38/Na72P/DbT2atmca9PhgwdPe9gyfzfpit85DpdeF5myvglbAd
3+tsY/Ip0EPpN9e+W3suMuynaD8JfIF2jO5p/8XUKy/vNy8615d+1C/fyHNd
OrMi06ItT1rxVKPn5/FQZL+a5fM4cTHrOHmQzVxo//YjbLV36N/UoW1cfMW2
aMRwsTNIOGb4eq/md8W+d7Xj9izzN8T5znVj9j+e/Tyn9/mkIZtfv1Kb1+Ou
r6LZd7r/3BlW/l3uXIhJL+7ao4mP2/9g/4Lr56h343HTiTcuDjP4PnJrfGap
SVN0tgD3veG0sFzOefe7y/PcO+979rnnndfk7DavZkTPnfblu1zc62wfcXRF
9rPr6GCszr01E/t6yH3d+A7XNeE99iV1YfZg2O8Lo8Juvp5yfvGLCXWetk+5
+0NPPqE84ss9MfEVF4fhrVf3PQiWS23n5C1Ht+/axKkeszVz6hGdZ0eeno83
52v7i+HbMDH+3ujFcHGzcHNx8+3GwxM3Nxc3G/tz+Df1edG6k11BdlzWNevc
dXfUXFFjl2H+xH/w6uX2wU14i/ku2mczWPdcuzPMpjBx3kdbdY898irwEuOx
mLiY7bjLxduA3c3FHvh+YWD0YudIZD25FoGLsx/JdvN1xstfrN597P/mYo7p
u1xs3dhMbC52L+utJssDrZF+eK0Vk5+LdwDdrHtAmIudDbfpa3BDvocPon0U
7h2NNopuTNYa09iL4cxj6uvyCB/Ck9THoeH+g//odz718ph4qX26XXuHbmzu
69o8BlyefTCx8cbMk0c5y3IPQtYFvdJeick/CxezrXC3v+dMCo5p2LgzKa40
Y3PxluHHvpt81ie23TwSPh6c5+3f8L0Q2NTzsw9+ylHhnPd8TrrvHc7tv993
/MabXszr7qMw3b+2Brd5KdB3p+9u9XZ9P97ZwfYKX7GxubjXY9KK7aVoj4fZ
y/fPzWUPFv6/PmdQhL3sIUUTtpe17+Hn/c2XcuUr9vZmtBZqD6p70bVGjvY4
HTtryr0P2XZnKrRXlusq+I1jBQ9nHVg+y/Cjh9/zNY6zVexD7lyQzVN8l4sz
undLczHrdeLijMk/PO33ie/ZPq4/nNuW1+btfAfdFf6Ei5MrgV7cfe/ueCRO
ujHfp4/01E+aPtNZN/rr9QgTZxoy47Ke2Q5zsfsCO4/YOcHUs7mvmv0M8B73
6Ju3vsrFZK3Bo+Zi+JDl05OPzyYfxY/kYjN4D3rXwavsP+/DsDKMjB5MZnH4
ONPCuOZiXlMT6esa68Ued7nYfGx92GwMFzcDm+l4Hb50bVu0SPMNHEEmRXOx
ecrcYJZlftbTGGTHMS1+h2ZsPARwLlzc+W7Ot7Dui38ivMJ7cA/7wz3ypl7R
6KRw9JQBYU8xfUesLTcfw5mZPtt98lI0Lzc7s5/YlvbJethDAQOai72v0U/N
xeRRPPLLygM9+Sms+fKcc2XrG96cPPEu90KagfuRcwqPuzO9sx6t9Vo3533O
K1+7tQeE8455+D7N5j++k0ex+ZM9v36+Mc+WGTb5KOAc9LuNi096cXNZa8fm
Ute4OeuhvZPm4mbpjYutg7cnAB5Be7X/gWWGR9zTGH5BE+URrm5ORT9m5G/+
xMWdy7aN3GufuG+6tvG2si1d/2fmNK/6eiDLjA8CnwZcDPv6fLKG6X4UcDHT
bf2WOS/s77DPuFkSFoeJv8rC1ot7feyjYLlXejHenD6Hfc9i+pvNvs59iZwv
Xp7rC+FiH3Prxc4XZoSLpx52E+feZWN8D9Z+yWeDgfOYkffJSw73khtHPkWv
V3TtZqDOVaCnGeyFdzb7KjVh8VfAmw/t9smr+AW69u4dJm4uhi2pQ+t+d6wb
y0NL7kwyc/G7nL6Nhy9YXlz0XF9zMFznl8e853340OE/Rtg4+37Mo3jOi6w8
NGmuVewnzrHgeEw5cfa6nPh4+wymMcvhQ2CEfdCLqbez38EeY7h64mKYqnmG
+ZKZbE6Bp6zfmVtaz2OwPDjFGnGmxTthljIf209MBjJ+ELYR7bi5kSwKa8OT
Hm/N9qp+zT6MEx9vudAMfAgv3Vw66Ekr5jn821zM9D6XrItbL3Z94EnrfUyz
cPHEyZ3tvGnF7TX2urjPjbVez9+1dp0/4Ws+fB8TF3PuNltvfuCJhd8Z3tbP
+vY//UaX2mp7ptE+imbQvp+/+XZPXuP2WbAMljNpxt3jwX5P/MVhieZiMrHI
IWtOZDp6HsPFPCeHy75lczE1hFl29D1yAprDmKe17o2F77Dx5C+G55w93NcF
+EDMu5O3ePIw5Pudh5b5ZpnxY1Bb6GsQ+1PgYvyzPgb25ljfdx2kfc/wKut+
4uG7LOwcCefhTf5ir9/Ug3ti486bYLv6b5X5w8Qcq/gq8L303xvzt183Hl64
+B/93k+/9in87j/+JnvtpBGj8+bRz+Ffena07pvPMm3mH+5lhHPJgrOXA54n
B855cNYE0QPbU5vjDwOZl8PFeWwuhq++ysVedueyObPYWWd4KWDmfOb1MRdn
vbLek4f5q5wMazu72OtCfhw5zubiTIe+nHXGt811ANcl9EjxNqE9ozlTJ8kx
gIddc9f68VaH53o8j36vuRh9mGEGy295mNh6npnYPIrX0pkUYTt025FrxLZk
wTXb2N/sHiReHzLj4GL3AWk27rq5ExuTdWx2xSPgvnqwsb281lR977u9Fc3G
XZNnNs5wX5BTD8F8Zk+2jwPMhs/C3pdmM655zILNxb3dcHH7JvDHWIe1jux7
Ane4eNOLt2zib/wPzzzCTz6fep31Ip+655ftMPc2F9sXb814mlfXyJnH+9rl
3QwK/x25J5YzB7bf0v6d9nf5nT71hG6/6kk/9vPmb7RptGhzsRksDJzPOjfN
vuPuSebsskwTzrBPl3mYofhOfm+5n91aa19zZGwcRr3UyUfxzsg607eZZZJD
3Pm9eILDVI/teOqQbE/3frEPuf04znNju1sLJRvDWcn5TnjYvgfXAdora++u
Wdg6spnd5/qPYmP63W16sdez+0FPo//W2LeTtp/PYXKOUefcMT2aevK48/6U
cxYeph80fgq8FFf5Er//iz9+sa/7RbtXXvg380veBH1BnHXRozVh95ju549H
1dzRy8zegTyPJkxNHZ+Fv/J+Bl4K+lNEw4TDvkcv7j4Z7VUICz9yL6QJ5zkc
in+ivRSs54/QiVnPeDw84uOIZyL7wcztvnhsX7iX9UQvhotbx20uJi+PHn6d
n5d1yPeyHpOG39cvZmH2GZ/DzD0P+BEd1EycQc8y9/tobzE8a6YzU8LFmd/E
GuYbtOBwMTlt/JY/dGvlEDjDou/Fw70sLxkWL235qZPmeeY59ambstg8YEAG
2nF7KJxLASd2BjAe4o2PJ3+F+Tifw8fm/62Ht+/xT4P90h5qGMzvZ3+376J1
bo7Hy2vwvA+QdZ58MBl3WLg9FV7G5iGecpDJJXQvGfvWJ53X82C+rg/cBuuc
+Wc+V7nMvf/tq7jDxBMfe3t9H7+1S3sSm2FhC2d74R21z2Hj4u5ne7qf33qx
NW7q77sGDz3S3g7nu6G9NRejA9tngBboWrpM15qhfRLttbXm6Xvhqb878dZJ
f39nZFvRSFunzPt4YfA7mDvJ3IW5zJ2uVWzNOO/nuqSP83TcXR/G/gwrw3v2
AWSg6dP7zhkV7Q3PuZD9D5Nz7lzV2vU1z4mX0Wo3v3VfL3Tfu42L7TMhA9vz
Yt4s3+ebl0dmC/uDPApnF5OBlto1MzJ979CD0X7jc8CDnIH/obVf9wD5t3/1
F9/w7sS+/V73B/nf/8f/4TXa52EuJtcB3iObwtm4eQ1/daYt/YypE/vRXIyH
lpF1JRsjr82SMLJZz701vJxs552e0J7efU/YJ5MHJBzsaZwP5+3D38E+RIvP
cti+lx/jzz7nweHpzvMwdve7w1uBn2LSiSd/BAzM51PmsbkYrbj5OOyVR2ti
rRXDqvYITD6KZJ7BbK1VmovJLt74wP6HiYlhdDjFffHQi2G/rFPYDZ9v+4Xt
oWh2tu6b/UcfYPblxLadg+Z5wMdm6P6+cyQ2Pm6Gay0Z5iPbI2PizfamZEw1
h9bQs/32UOfRmcpZn1zz9HE325pF73CxPb13GXPSi82u7anofcp5sX1/4uFp
mztXz+fyI8+iWH/yH19x8fY3lOX3bz987N/81vvgC/sHum/YpHP+yc//6PVb
zf10c4r1w4mDp9wK85X7jDAf32e21mvPhz8Pe5h/zN7NxfYY5ztkxrovRvuM
u48KmW+d2cU1SZ53Rt1Xh1mwl9d9kdl/+Fbt1dh00SzDGXTu1cwxRvu0p8F1
Yu3X5ZxMjaK94z5nye5wXzgY39q42fqkF/uY3uXi7KP2dXTd3cvfoaw251Dg
T+d8a20+Gi/XXHhm8n+/WTznp7PbfG3ZfpmpDzSD9+l7Fz4m+wHtl5o3Zw6H
fVv/3bIs8tnkE558G/CxvcuwvHXj1iHDV7kn77otvLJ4Yx8sai/tn/06z5Yc
3s6jyPt5/pWed+Zi/BJT3nKWD0s+atbU15gsDTRm+mi8O5xd58F6Tp4MZ1bA
yK0XtybOPqQWz5quufj1KJ8x2wwnMzyf7usRVubY0wMkng/0Zb7TerJ9FO0n
bi4OA4Sr+ne7a6fMiOiH6I7UtGVe9oy+9M3nPew835iY90/cQ1ZapjGrOH8C
bzH1Z11zuGnH+Aeane0FzjziNQmPTGxsvu374e0tvuLjzV+RacKesNcdn8XJ
f4EOvXFx68j2TpuLYeLTekwsPL1HfvWm5V7pxH4v6+5si6mmz1kovu/g5Zz0
4ZPO7Ws8+znM6F5Oa8R9Hl1dA7jHe2ue0+8/uql1zp7G2jH6VmcioN3S0wF2
gSXRKjMfOO2UUdFsTN6Y+claMfpm2BdOMRdz79m8Dz+YB8McUw8IXz/4nnZr
rPa7mlNZLrlm9ht8r2YMz4cv+9jmsf0O1nTzPfuXpwwP58dl//Bd+n209ume
JSzPXJztzvLYJ2R3ONuu97/3o4+h3yMb5Eovnv4uTrq++ddarlnZ+d55bK94
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
Fc7h97g1O2qR4D9ridaAp7q8zp7o/AlG98rr2sC8n3M1rJQBl7Eu5g6uEzrj
LMuGW64043yGj9j7gvnAqTANffX8/el9fw5Xot27H5q3yzl4zkTz/JqLyQBx
Hxcv19vjfccyOI74ODhHGN732Yb4i/FXtL+46xZP9zE4L30ufZWDe/7ZvxtX
46VwzdzVcG2ir5dyndPHI38/Pm/pRe7cY75rLo5eTN9n8oCbMzOSOwEXX3mI
N1+w/RpT349mYpaffIt4OZjWXDz5jDuDgKw26754E/I5Oip9PczFeIytK97h
YnLOTmzMejFvZ7I5h831aHBxM6izJ1w7133+YFSyODLfzJNaQrwhjLze+gQ6
b7n11+jX2fY85v1Mi+eX+X7yF8vzYt8KXMwxMwN3j4/OpfCxz/b6+sjrmu9l
Pe0JyW+jGQ9Gtg5KXzZ+b/v33NybeTmnrP3F6KfhPuu9rr/vrInuReDPNq8F
33H2wcuv8WSnDOe6oZH3Omddec38nfHbfohpkCGR59GOk9vwDh+z3Cnbjd4r
GejB5iRyqKcavVwPkAPdGvKmDW+DPDw4zoxm5vVymg/f4crWXJ01crfPtPuT
wIv0DveyzMDeXvdOvLMN0+cbV8P83aux891YX/uFTp4ntjPj9Dv/Tj3+xNfh
FfNN37tH20JLhjOpE6KOLo+uBWtOhovzvPs+bH5O10Dx2eR7bu8GHMe2whdT
X95Xfu7TS+Je0ewfNPEwjfViz2fiX/sJwozNxV13BreZqTtX+aQ/T1zMNUDW
hXovtFiYc/KieJvs6WAac7rn4WODjn7FxX0O+z5A1/p975jWI8siz8PXEM3G
7aXwedr5bmjPPhbhXXtN3IfF11rhc18/2i9hPdY+43/49396ZFLQZ+NKI/4m
N02eiSkDGR6epqEPXgYZcc3Fm4+C0bm++BfI/c2INsk9C3ys1iwn1sYPO/kR
PjHWoifjHbZenPmxbp/49alV4yOYauVaM+7e0vk+fmnm++Lx5/xdm+jRfJz1
Ji8i+m58w9QKcg2CxuzvozO77u7lJXlyMX7wvo7JMNN23VzrxdTt2fOReZin
PT3HPNPmtxSWNReTw+ss484xQ8PqPDbrmM2Zrskz9540YtdK8bqn614LvIdW
CZPgPW62ht/g/wzWGS3xwe1Pr4BZtv0Q5mPu45uP83nm+eDjwXvs7LaNj9GF
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
MT4K+4vRittrHL2Y/h6dPeyM4VMexam+zt9vj0WWN3Hx5jNudnUegznP9W5h
4eSI+X6+cxAmfzEct/kkpowIc3M4DS5ur4e52H3b8D5vfeq8rEyLh9p9SpzF
4Poz8i94n7o/WDPrEdb3mK4V0GbhZvTizIN1MF+bi5uX3ZvbXm7mTQ2f9WKe
c4yyn2F2jj1c7Pw673+8iPZRTF4K1+DZj7pxsTMqzMZ4B6xlbkzMCNPAcf2+
9TD//rNc65B8h0d6wlkP9X10XqMHdiYAHpHOauteZPZWsO/yWVjIy0ffy4i3
IuuYZZilzcbWkadrjCnDgnzlzRsNF7MPw8TuWUIW8h0NuUem9TVIfzfHw7pv
Xj904fJW4DmAnckttm/ctZp9Tk11nIzWfu0p57H9Hs5S8fk29eOzjzrHn+sy
+qjTi+aTjiydmHV0hrZ1ZvjYNXq+/+L7Ko9tufASu49C8wS/0/6Os7DMxkzj
+n/rx3ByGJN75WSNtY7YPcW6Z4FzfLvuzrpy9zT2erKu5g/Yiv0R5iSTDQ90
97SDuZxdwX7p/Z5hjvPyvK/gKdefZdqsi68V0JRbM86wXjytB9kgrj/MsXhw
8ZPh8GtY77YeSyYxbMd65jm+AN5j/3MNZL8xfOlasvZO89j9rO1z7vOXfZZH
esqwr/t85vz39YG9vfbo5NF5ap1HzGP37OjXeIhgYraNfixoz53Xxr7u60Bn
U3B+tRcBNkZH/ke/99MjryJcnMdw8Ukv3ph4ymZrv0QzM5/lu3Bx8jAmJp70
YnMxnolXTkGxmHs8k5/g7zdDupfeFRNvWcEwW0ZYEl0Y/2zy0nivs9I2LjYf
w8VoxRmdVcdrttfXDH6fXAxzJDkW1qTRleFitgU91/tv42J49sGuT+2eOj9n
bWQZ9lA4pyKfUXP3uMfy1P3xV8DKExeT05bf0PzG5rcWfTCjPcawJr/J3Md9
l4vNYqfetfzmZxl4JvIdc03fN+f3n9/+T37LYgV4w4xHv+vO3YBLXNOE5pd9
Zd/1xsbtPc53vWw8Eey7rD+M6H3cmu/V/jSbm48nbwfDrJX9a93Z/aanfiF3
+Ng1fa6bgxOdad1+XngVHsZHbU3Y+mhzsj+buNhs+9Ljn9lv7q/BvrG3fdKH
ff6xrtxz8Lmb44Y3yeer+ZvrBa6hyKQ2d3Nu22/df5ucY3ATY9Ip8RRYawvz
wHqddQVLwnhmSjLD+v4195A7j9h8iHZs3ylsYP8w95Wd0ebavMl3DIu4ns2s
51o9+D3Pc3+bvAyzOQMdGOZin+HJaM2YLAe4yPf+O9vB98OtRXt/wVFdU4ke
3Hox/MVxMmNSM2Zt034DmNJaONxuBvb68D222TzcHgDyyNDCnXtiP0nvF5/L
zc1cf2X5HAM03KlHSuu+aL/useL32z/8qsdUf2fzcNdv2mdhv0X2H5pw57Wx
bb0Pp+tKWNh1d3BmfL0ZYeT4KPAYw8aTn3hi4ymPePIXbz6KvB8enuY3eSom
DXMb3fPBeV7O2N2+d6ffHdqq7//DYpsHYsq1cO0Y8+hhL0b4jyy15uJpm7h2
INe5NfZJB3ZtHixtfzHeXriYXLpvuPh5DMLFZnb6D+bz//rpuYf56fPXo/Oo
PfBFs37u4Wdt3/oSv7XRipuNyfPi99fabXsl0JXtBfZvMjpm16T5/q4ZxUzA
MmFlGAfuaZ/F5PO0vte81vfPYTZ0SubJ++ZiPL0Td568x/Ady8k8+SyPLz7+
WB97sycN2aP5+KqHHvNhGzuP2F4Lby9ec/ec5vtTTz00YB8b+DJ+kPY1tOYK
W7rXnnmY7c5r+1q6t7fPF3/GMrnuMhtveRfmZt9rsOfCucowsT0R3cu5+6HD
u9SBsg1e7iffx/OccTa3PUkZ5kC4GOYzY5HH1dwMI6M9+nv8BnMPnFxf8y6/
8+YXtFGzcuaDdmy2hdecMzbVGfE93282qzDMxOhy7cllW6jth2XM7HhzW093
hgW6KcyDzgeben5cL7RHl888rf3H5j/32e5rDnuEuS4xe3Ks4S+4uK8j8DWz
/1rzbka3Ps02wKT0WuGef35TrIO3f7j16vbymM/ZTjIB0e8zv6l/YOf8ebj/
nD3t7Yc3F9v/09qxuZhzhHMRf3Fe26fBIIMbj/rExR7Wh6295jVacXNxfA2u
c7uTQ7F5KJxp7FzjzWMxeS2ufBRXTEzPDNfXOae32djfu+rtAQe3TwKOPfku
TvV0U7/l7s1M5ga+EOdcTB7iq5HvdY2aryHQ49G3YXj42dnPzmRujzNcjPeX
HnlMa129PRTowNknPi54vafriJGh/8N/8un+a35zzcWw8ZRHld918tnMXHBx
a8XNxa1Xwh6uQWqtsbOnNv8k/aDNZe1h3XTMvs9P/Rc+APMyupt12BNzbjVw
9gp3NjIMDCuhH9tj0f7j9mx0BnJryNaxuQbyvsv25rzoWj3nMuO7yGPYN/ur
93+GNWH2KVqvfdKMvrbpHOrONJn6oWSb4MPu7915gMzb5xeP1o6tRXteWb9s
P+z6ysv+2DZnDOIZyWdZNzieaayXMx1eDvZBzr98156Sl+f6ycTWi32PIcM+
CftDfb8VLoaNW7uEjfmtDWeYSX2f3JovHmKyEFx7x/foWzv5hjuXePIRm3+t
5fHeJ5Z+am3WiuFV+iS0vmx9rzmc9W99FI+BedX+Cfe6sA7sOjU/97VB86F7
ZFjXh0XN1s1M7a/Iew+t+Fd//c11k/2+zqJr/uUc8/vZTvM+PIrvluXSeyXr
ynxcj8h5ZM/GxMM+rnBxjoe5uNn3xMXmZ9d8budhPzYXW0vGS8H5YI9xtm/S
tMPEff2Hx9jXvZk//t3OLM5z94gOH4eN4WJY9irHuPs4b3pxfzZN3/Oe6u6a
i91veOJisg/gYuq+2kdw0pm7V9rExc205uKJf089ls10U29nmJUc5OZi5za/
O+jXQW6D+wjy2FzMcuFir0/7KMjQy+vw8M9++p1Xfgga8qQRM3/q7dDL2Z/0
WJn2lT3Lr+uRZ408XMxja8b5fc176duQgR7l3GIP94KeuNh+A/KMfY+4Mwpc
c98MjGbtejZ7h5uJWyf2e83Ek8b88hjo3n/7FLqHhrnEbHrq5bFlSDQf22/s
73XvwuZjeyw4Zl5flsN+su7IdFPem/cFmSDetzAj+86P5kw8AD4Wr552H4yJ
p5jvtNbMfu78NWuqHFPq3tg+9GOu+dhv9j34ubV2av/g16znxOywr3VkGNZs
bN3YvG7ONRs7J8N529PI7yNMHGaAf81b0ergJh43nwPf7/u1cICZzlqev4uu
zHzas2vmsHbcvRKme+D93dbu2A5vZ9Yv04bN0AMznDOx1QPC+e01sWe3+831
/f7WhydPyZQBx/ExM6NFb/Oxn7u9uzlHHv7aDy5+1cN9PGc926M8ZZZw3YH/
AWZnGzOv7GM4GL0YfRqturVhatN8vcY1hq8PPG2fx1wPhSu7x8Z2/WVfBVzs
fjEbF3Me9/2KjYs5TmQZZ7vi38lvc3sp2iPk87vv5bg/s7n4kVv88z98ZBeH
j8kw7vq4yUPRz09eCjNxP046s7MtvtdHYe2SfhmdO3bFxXDeXS6+oxdf6cH2
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
b7Nt9mh8LxdHqzZvZ37UDfbw9UqGvRxMYz9GZ2WQ7cL5D5PCyHB1jmc4tefR
425N4ua1Zh7OFoGl+fsh2wy2DB+HP8PIv/rgCvrgub6ODIpm3ol7T3rxSUcO
F1P7F07P8jbm7vq9W3VVz8F9ejMnPIynwvVrGxdnhL3uLBNPhrXpHhOvtu8X
Zn30HEn/BmrVnn3jPHIOwoUvD0T1Yp48xBM797o6x80eFPYbjPuzn37nkRHt
Zbp+Lzo6TJvluN6uh1nYbIwXxvN5eTWePO56PnLgGHx2lW/W/St4tA/YPGBP
sWu08pl1WWu2eC7wCODdyPecgWHf6CmLq5nM/Zth27Bk5suyrCl7e10PaI63
NtweBfjR7+f5KW/h5et49jZzlvOrV8PHZ+5phq6YfZf1xP/R+8c+4ylrrPXK
rUbv5EPu/T/ltfk55w3XQdak7St3Pok9xWw/62yteTpH7Mmenp/Oo4mTt7Fl
3r1bZ5j9kWO+acJhZgY9STLs3Th5apztFkbre79oTn4NC5sPpx4GV7kEJwY4
sTlaF4xCjZ7vVU/DXM1j+6Q37TnTs7zwTLj1yvN8h73f/f6Jp3t96UcHe021
ixsTb5kdf5f4uccpC8QeZ/uhzbe9rVeaM9/39KfzGlam33dr4VfLvXNd2X0R
m+1zPuR6oHP06Nnx6CH37LFMPzp62aXGzlkTzp84+SUmnbgzJzbtuL0dd3Rm
BnV3jImT0XDbcwsL22d8l4s3L0UPlsVyT7Vs/oznre02q/Zr8soybdh0Y80e
mZaRczeP6KvN19M2sO/CmeHhfDePntZ6NJ4Lvpf3pvXq45nXZB3jaW42JhMa
zf8b3Vt+kujLzuqFBf3bb40Y/2Wec38ZPsnvinVihrXgbcDE7tPlfrtm8ta7
mjcmvdJZcM5V6Ixi66OTXsy8OnMW7pp4DE3SPAjXTTwMA+N7dV8VZ+rRcxAO
9nwfvuwPTu4cNph3q82Dlcxnm4bM41UuRF8DNF9aK8YvY0bvLDg4GY8O9yN8
n4LrsTssam/L5HfgWs/bw3I6x/kuO584+tO++Tj+2T6yKfCKZKCVo52/Mpef
+nI+n3waraFzX9cMfMcncBpb7+Ir5sg0zpOaBl5f1/n/pkY08kkTbC/2XWbt
fWTdL7z9IzVvr1uzuNfT1wb2fWxM3Yz8vfWLV/P8Edx8lz/vDHMxj83Wp5yT
r+yX5uPpuiDHa7o+gIG93uZiejeHiZNNwXP3eA4X21fc3mDX3tln3LV4jOjP
3avO2RIZnYsR7bhZmtfp+WENGeal3o7n7belho176OE1tM7OojAXu26tWfCq
x3DXjmV6ZxlbK8ZrQb/qSUPOI1pn694wtzk0bGut9SsjDJn5kAPdGRjk2cHE
2Qb4Gn9z69+Znhxk9r2z27YBp+O16Nq79lTgdc409k7AxeRYdM2ZfRLWUJsf
4QX6beS3G03P9fN4M+1d8MAf2nlxGXgHpj5yk1550mPNcXxuLbp91Z7O/onm
4SmPzVqkWWryKrBvs+3RAfGNep90jzNrxqy7fdocB+fTOUcaXt70xEf/t4/v
mp8mH/h07WBG9r6YGNnbj4fa11J9jZHn9H7+xMrPvnB8H1b+yvB1jtcdpnR/
Qvub8/o038lTMp2rjIeH/GO7wsJf8WFMy5jGFRt2Hd5Wn8fr7KPJHzrdA0bD
wx/A6+a8SbduPbvX60dxcdbdnmr6mk0ej6t9yP7ydYPv8f8IHt48HX5vY+TW
pSfe7/oyPLX2UTu/904/lne9H3+XxlcyS3qYse2vbqa9Yn/0cOZphmYe/fcH
B4cv4eC8dq9netx5NBNvtXjtqZgyKab6uawDg8zkPKJl0+fDjEyum3ViHsPA
6emRrAbyHcLI5EJQe2e26z4a1jc3vRiNc+JiD3MxPHyVgTaxcdbvexj3K4Os
iWxr69M8Z1+GO2F7+mxzPdEZcOxra/bUxE08jG+avAk8Ec3F7CfnMOMpZjs8
Mp+Tb6KZMnox75FFbK0UP0TnSmXAPZlXeJf6/4n38BCggTk/94prukbrlLnQ
jwxY0izYjMaAlail47V52Hr5xITowuQLeF/0a3MyLOj8u0mLR4fOctguc+CU
i5t94Bqz3vZNE+3zpznZXN7XNfnOxHS8dg4JIzrqq3eb+pc7n2GqN0NjvsPK
vZ7W9X1Mmqe3MXlYpuWyP74yyPjY9OjXUE+tjNxv7ef08LgacCCs+8k7+6u/
/qTvOufBHs/8VuPVcJ0/DPwjcuLM02RUTHyd9Uh9Etld3Tfsq4PcOGvp3Ud4
G17vq/y67b2veEDouexs3Y2zGa1X9/zgac6F9txe+ai/R+/dePWr8+vvd/7G
9/q/4di7bOz9N203n4d9f/8Xf/ypzzM8bC7ONJuPYvJUNPMmT4L84s1jARPD
5tuwls16elgjhpHhYgZZvvG0khEWzdD+AzjYvHbyUfDZFRe7B164mHv9U6YD
67jpxX8bXAyrhkHNw76m4DN8CmFi6gybh7nOeOTgRb//OA7MC00X5oWBXefH
fkM3n/RiBvuNrGMP+yrMMfhwzTzNjta34EXq7exRsLcYDZN7vtbZrA9nmIed
6XV1T9z81Oxpvsd3YG/ExqyT/gnDwMFwHCyMvwQm9v6zFvjKXXt6hpuxGLzf
+4n+3OZ49q+9KK29o7N2rVrWu/m4a/fah8zjyWcx7UtfZ1iHzXtZhyuPbvtm
OE/cSwSfAflkziljsE+mnLfmYS8b7699C3gXrrTo030G12ZuXhf0cl+vRVN2
P5J38pbfZTr62rrHbQaeVvfi+gqzhpXCRxtz39W3m29b2/4ev0j2rzn1Xa06
+4taLLynqYf6ERp3Z4NM4+p6YmJYWN7eihyX79W4Jy/KVdZfez6coXfi6ZPO
+1UvyPb5V70m3+O5gHfz98Pzq+/AvYzwMcOsGR4Ns9JXbtKDTzpw972bRuZr
Nr/DxdNAJw77OsMYHsZTkedkJTQXh6HCbNaRT3rxi5efWWAbFzsfjtewpPnO
XEwt4FSH99vmYniYTAcYF45FLw5b8toe5KlXiPvnsb+ZJ5kV1BQ2D/MZ/Ewv
69bXrRVbM2Yefsw46pjP0b3oXEvH77t52B7PfO4+yWh63X8azmtuybStE2/6
2uZT8Hp7mmbnzh+YvLMs27kOcDKauDXKjGZiMsng04mHJzbuYdYlP23yXvQ1
B9vcPVPaN8B2nuq2eH2lI29acvPxlpOx1bBlX9qL4zxfstxyDMyK+Y6vvfC1
8/g675/Hs/3FPHduSE+3Mfa7NXjUq+Z5tHFyFf03Qn8P37voPA4ztzm7/QjN
LWiTff8fDtn4LL/NX+ViMzZj6o079cqdxjuMPXkjzJqtK39Fe335uJ/ZEz/S
+/GjB+uFTsxzjonZ9cqDMY3M7w6bT5/1cq7ysOFpzi+yIjy+l2uvuPm3wci5
1sq23fH0WyeeuJj38VbgXzjlULRG7OfWjM3RmW8zupd/pRFHz24udj/oaeRz
PK0P3+sHF9sTED7Ci+z+wlMOr9nYXgp4cuNi8ilYXmvFcDH6tVkvTJnv3mXa
7/UVw8Vk/eaxc9dgYa4lzPJT3oWzoFnHl1/6qRvjBYaF2/vQWcdwdWvsXbPY
XOz5Up9l/nD2FzwDG3taeBDes9+h/QOMeCc2ZpvYj7qmLQPhxLpmsYmrt++0
5xM+RFNt30Qe4RV6BTYbTx6QaV9csTHTTFr76fvTPkdfRV+mlx8MxXXNVVZv
exvQlidOnvqJT56LSUu1v+BV+/bU2/Fk8+jn2c7OyZt03Az88bCxszF64Gtu
f7Q9LGbld33PnDtcy3AN4G0ml41p3sm84FpkyqFoNsl97qmOrns/32GhTa90
rgT31fP7HoZpzfru+B7GNmt/Rb9u1m0/xGk/WePuY9Qa9eT/+JGczfamF4R7
WUya9KZVt7fC/WI2ht5049P0myadY+h1mLbDfV+636XrEaOdM8g3/irX/iZZ
+cp3ARebjc3FZtTwK5+3t3fLoZj04uSt4Q9OBkaz8FeGPdEZ9irgL+56uDAx
uRSwLLxLLVme893H66cWvPmLrRmffBQTF4fVwpgTF3u94HbY829DL2Z70I7x
Rzj3baohnLIr3Csv8yWbmWWFWbkmQEtvJvZrtOPJQ+HB+oS50ar5bjwfm7ZH
Hw24kN9/7oO7xizTNAPCVK63o7Zt4rjNL5D36Unt33xnLVx5Xc1CcOykDVvH
cz8Hc7HrsqLRwTvhpF5383DzSjgKjXdi294/7AtYbdKH74yNodln1JBl/bzO
9jlceVubk3n9rpbcx4T5wcX096BeEVbskW2yF2fyV/dznzforkzj9cYbjt7s
4XPb9Xmu2bP22zowPg1zL8uDifPo78DhzlBuz7OzU64YCg4MIzpDl0frqM1p
E2tf8TIMOPlvo6+2JtjLam68w3un7X75RRYt+g5Tv8vW03rjXyCXzp6I5sXM
2/uC983Ym9dkWnav84/StzOPzPPkp77Dwp6m+zT6nsdJf75Ts8h6Mz3Pp3OY
/Zxp8FB3v5Cv1CR+r8+idWxzcA+Yk9fRZGHjMC2eirBuRnIrOl+4tWXPu9n7
R43mYjRfvyaX4sVDzzwC556hF2da9GJywMKjvl9vJoafT5qxn6MX05fN/eI8
zMT0pM7jb5uL0YutGdNLjxo78ijsP159FOQwf8wjXmrYG63cDDt5gnmMB7n1
4is2Zt7MA216YpP2Euf30708GPQf6NFacfeVo9eZNU/zRab9xmfx8X7fz558
E/a3tp8T70NnyWV6/JkwhZ93j4TpPnqzbB4zTevErG+4c2Li1s95nX1Gjw80
9JNe/I6O3OzNNmWZ9ln09QjXPpMPtoc1aPbtO5lm9mXDi3yW3N6txwVszHnJ
eei8tc277OuZ5vx+j+2ZagPtE4kXuP0XnA85png/3MvD/Z7ZJr+efNOd20ZP
dcZrvz41MHRVcy7P6VEHD7tW7sRyVxzKMiZNtPPRHtr0M8vsxNjOYzYr+bOJ
eTy9+cp8c3f77MGGh9/Rqpupo0faP5rfjSumNrtOGjPb5T7GZkqe55zAB01/
CDTYO0x9NeiL/JsY07XB5Ptge678H5nnHZ/HyRNivdp1pb5uOfmn6Y93R28+
eTl4/w4Xm2E3ZmZEB3aeGh4J9OFJi27t1/6J7b0eMHtzsb3GrrvLgIsfuuQH
k7nfWrgJPk1+BXox/gB6Qo968VN/bL3YnuLmYnpxtMbtXtXtC8C/8LfFxe1B
+tlPv85hQ0c+cXH39bAXg2VxPMytXMdE052yJMha+woXe36tl+YxWrHrx8zJ
1K2hu/Z9Y+qe6G9nzoaL0Z6/qSV7vp/fc/wIMALLMKuYt5uhfD/fPNwZy3nu
mjk/n+qXohHjzcWfChd7hNWo/3JeB+uLr/iKjeGcPNKDhPv2nm7yFm/5bnc8
FmQkc3zRqHNudI2jrzs2H3L3Fpk8Ep2fMPFx1oN1NjtOfZFdb9demqmWD/bO
8N/D9Njfm1janhT08mnbuf/CfZlXpob0Y/wgaMXWwr3N9mz03+WLk+Whdn+u
/E5e9Q9wH2P3naPXLI/0gL5klqfH9vHI84/hbAIenWHxFW1y0pU3NmyNGyYy
T3o67sHzedY/tXRXPuyTNosPhPm479odnm6dt69L7nAsvShgcral+e7OmJab
9Xxnf5xyUN6t0TydJxMbs91T/sZdRp48IdwD6eyOyT+9Lat5muvc7j2OhxrN
evJPtMf4xM3T+85OO3H3b0ov7r4eZLM1F4eVqc2jlsz9k9GKM9wDOp5kXm8+
CudSmItZN/sqMj+W30xsHg2/ueccPPnb5GKyIVoLn/pE26eN7+NTrztdQ9iH
8dKcn/sXjwX5G5sn+B2t2H1RnGfMvGEBelzgn2C4xzC6KlzcmuukFfNd+wmy
LHsI0CX9Ot+z/9X9mqe+eV6W641gW2rdWEcyCKg9QiM2R/PI/xw81H2PHP5y
3Rf3t/FIdy8PrgvaQwz7oAmbvWFj9gW6e6bxvPAUTL6JEyNvbM4jxznL9Xlh
Nj5lWuDD6F4imzfZmnKGmdFs6G1oD8WLkT++697MDF8Lcc5lP3fW35SRsWVl
bLxs/m9d+sXFQ99n6769XfaP5DXHyPPtmjvva/8Ow6sTv6Jbwb70lG1GRs/a
GNrs3f2czdjWpN1Xmu/Cxp3/9g73XXFWT3vy9FqTDev9N0/dJOM//ul3H/vv
nRwMzxfWwWtNX5MMZ4Ow7vl88n+8Xbv4zM3ovINs27usybWE2XPzKE/79B0t
uq8FvjKm+U0Mv/mor3h54t27Y9K7+3nPs5kaFk+/jIy/+vh/kEd6P+cxvaCT
B0yvjVffj4/fJkZ04Gbd9NmgT/QVF/8mmBm+dUYb+RPwcR7zXqbrfAj3yION
qYmjJxs5Fs3FfsRLceLifIYfOctguS+fwFNHJqdh6stsf7SnR9f9TXOxtezw
Lh5g+nPAoOFNPBSut2ut9+X7fe5HlhsGJrvNvuL2V/A9lvsOF8PZYb3c24Wt
6InceqB/x82IZj2yFuh9gMYchrLGiO5n9sMjYC0LJoSL6bfXGjEeD37r7YOY
dOI8UrNPxpW/45q6DLQ3rgGaieGWTa+1N8FMzz3yT/N7bm+2NfOlTg393Psi
r/MY7dgebRjJjDxpyne4uHVnX7dwfPGZcIynnDG8B3fq9TZOzrZaG+baY+Lj
iZ19DfdiYOVHW1+efCPNtCcmPmnL/b7P08k3Ye/ExP1+nnPBnN2P7HOOSTNK
2KgZBB7gt9TTuX5p4gE0LDMemq85u3UtGNo85tzV9ljwHWuqZmx4suv4uFcN
g52Yut/bmCr7K9Mmv2FirStdtTXr9o3Ep+p9QfYHxwAPsrly48dtex775cnS
7tGR5+Hiu5kgm1a9rUPvC86fzDvb7XNxYtLJO32Xqyc29jH1Yz/f9udJk/bf
xebBPzHuu/zd7AwX00/OY3qP98PQcLSf9/f4LGz9v/75//wa4etfPGoW/+AT
Y1OHd0eTPrG0dd/2Gbfn2Jlq5tb2Org/SNiM3OMTF6Nz2ltMrZ9fcx+f3sd4
ibdBHZpz0egThw/aeQzdj24a8LW9IDA2A3/E5K2IhwIGjscB7zM9BNnGk5fC
XOtsj8w7mjrXIjkOeR8vhfvW4THujLY7bAwT0wc6v5fc1w+bhmO5j+2M2s0/
Yd5rrdj+Wvdlg/NgYjiP+iIzs3l48k2QE4E+7Hq4ZmLYzCzcPMxzMnC9rebf
9nZu7Am/Ufvl/T3V1bFP3F+QjBD37aY3Ctc0Xn58HBkwU56/W5NHbZjvx8NY
sPDUO7o9Fc5z60eeTzzc3Mz+33y2zYwnHfn0Gds81fx5G1t/vRrtyZlG1+6d
OPlUY9jz3XIq+jfbjANX0m8jTERfi84qO/1mw9P5Dv0geG/T2+g1d/J0eJ3x
bpw427lVPS/XQnVOL6+9jJNHJIP6N2u3ZrONoSaWarbr64Sss3Xo7Dtfl9y5
p8/xfGQvfPAeWQt5fCcP5F0f9YmnGfZy4AHYeHPizqthT8iJmfvxtA/uaNLN
1e+OaVv4m8rn/N1yjZh7K60vT+zbHGzW7f7MfBb+nT7bpvf3ejmeNrr1X/7q
37zGv/6Lv/p3f/rLf/Xi6wz6gWREz24unnozt9cXRp7yK5qV0UNPPor2ym5c
jD+AOjW4GF11yxjrPnOM8Lq1422417I13Z7fHaZ2Pw90cniYjDn80BMXw8zt
p4DP4f08cn1OTV6m6Wzj9lI0G/t9T2fWD4vCstRYca/evgdYqLViHqmJemTA
P/Xb9j44xxidF66zRmzmbf8yPfLCiGZY+Gri4QxYAWa2ntzPzcMM6qKck5tH
9yk5+RUyfbaB95vNYGJY13ox+8rP8Rp3z8D2E588FXhYm3nbA9EcCAtOtXU+
Dl3zeKc2b6vX47iYi2F/8+JWg9feg42RfTw49zYfxVUWsXPu7jCza+W2mrqt
vtAj6819EK8PXh77jNur2z1o7V1Am4SXv6f3W3PixH9b72gG674xOa9ZlvUy
a8Mv/8PTq2Admxwua9gZ1D75Ec9BnsdjEr042ir6qj0o3u8bG22sZr08y85y
fSz6uJyYkM9h43hS7J2Au/O+WXrLjJuOMz5X9hO67918j+w/rmvQq+k/uHmq
rzTb7Zw7jc5c8TnWfH0136/6O0769Ov4f+yHznPhb7fXDU130n3vMu6733ln
mKFbi26Gjy6daZzp0H3vnEdhboal6alx4mJ8DltfD7+PR7i5mPfyt2X9lywL
68Puc0EvZedm8H04r3Ms0HlhR3LVnG9hFp4Y2Vo1DOx+2Zkn65F15Pt+dI7b
iYtfbPzcl3A325GBvht9GL2YbXROm30U9IK2VxxdP8tzzkYYyT2a8VHgE85n
/G6HP/lt3TIo2ofRfgf3WIb/6A3t+9swetdcme3yXjgX/bc9E83DYQWmpRdC
+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
XrgY/wSffayyPWRSwLD2QsCHMNUJE6MFm4Xhq1U2ldeJduzeF4/s4icTw5H5
zswH/8K55kr8x+Z75qXPQRiz9WFn2prpV/5gtFznrLF+Mja6N7A9FGRueD73
AyQfAb53FvCKheG07Ef7ovN+pf86l++zjItvYvJPrHwZ9DzhfsfHxJrxCe9+
duAx5vr47LHY3YtYz17p4rzvnDrnZ5/UFDYXm23RjHdc3HkO9vvufJ+TTrYc
zxq4nY/inWF9MbzgnghZb3TRrisjv9leYTjx1GM9sdSOr+4uc8c/XZO4evbe
83R2gdcB75HP0T7q7qtmvXqVYQ1L8+x/4uZd7pyP5dX03Dtl37Lu7t1hjzT7
3j4a6/h4PnimgP/Z2zv5HFa831lwdzOod1zd69t5JO74IcK5p3V4rxzkp86b
nInJR5z17/iZbUQzZkyZbN0/buo913pxNGX6e0xcbC/FVHeXfwfwtb0U8O6j
z943loN728NrDyya6pTX1vVxaLaP/hQ/+9j7jay0lbeY7YItPa+52T3uws3M
Z7537rK5uPvcmYuvNGOYOLo1x3H6Hcc85y/nIBqw71demv6Tzcmk47jZA7zS
ibvOzlz88Lo+vRHm4X42b4140pBZD/O5rxzsid7bWijzw1HmYrKZ4Rs4yywL
98DC9iyz7dlX91pzT7L2fFAfiA7M68TFMH/3xUYT3nHvlNswZYLRNxCvKlkL
E6OtzuGUR0Eu3tVgWZMXwfPh686xoNax68gyHZ9D+4lXeQ2f4WLXRPbzhFNW
vpqHXjHeF28/eSa7fbnjp/CyzbjxD1Mb1ZoxXLniZPzGE+/iYVix8O5v/Il2
7ddVDhsDX22YwPVp4WGy2cJ45jC4GDZmhPGyjKvn/DsOfUcr3TH1uzw9aa8r
T+9Un5hX/Bvw7ZSLATsyVjzNeziaOkVztDVqnhHs9qvzJMLB8LG5ePKse9l9
Dnmf/i1Tv25fB65NJEPvxJt/wtQfOPqZP331b+1f/bM/ePXtoE9dD773uOJp
c7X5Or9rnTe5a/QRySs1dPndynec18yf3LawdXzGP/29f/p4nXKLWzOevBHN
xvgtmq3NxR/0xno2T54YflgGDAyHwZzOd4BZH/VmT99sPAlm4q6Jaw2Y+jeY
0zkU1o6nGj+yK7K93/UR+bZNMG+4mLo49iGaNfkRj37OTz7fjVMuNufjJabW
Lr9HL8e/0nkgrvHjd74HgO/xEITpXGPH3+seMDFcaw+xs47pF0zNVT9HhoVh
Y97n9/k/ImwKJ2YbJzbEF4COah8qngfXy5HztcqCgLsyrBebX8IS1q+dpcax
wQ/c+cusY+VRzvw5F5Puu8ov81j5gvFvs350enL34FXn8Pn+YMqrox8GxzAc
b02cfOoM9pHP7univtZ5tYYOK9oDzDk45b8dE/6Xz0yzyXPcjM20d/TgXY5b
Xh/7rgxsZ0981j98NcyQ9kbspk/cmXnClit+s8f3ajQX73TruyMc5XV0Tz33
0/vAGwsf8xWL+pm+e0Zf9WXwdyca6cS1PXb1Z1fehJN9nLLB8OiY6/C/+ret
y8Ko8CxsuuJpczQMnRFW7ZpE+5zpmez1+H4Iho0G21pxM7S5OGN3rK7G1JO8
x8o77Ot78rL4XJ/W01GPx3CfDsbEzwzmCYeHj8Pb6YeX14mxYegrjTrzhoth
4oxJJ0b7hXXpAb3SgfktenFrx3B1c7G1WWc/2EuBzol2O+U7wLlovGFa5581
B7fmixaa34RdYdhHXZ/qzdpLAW/C0flNa9Sv5T/vA6irYxvyW/TiSy5WLd2K
i/FLW282F5tz8VO0p5vP9mO4Zq89J2HF/F0+YWLq2/h7jlaKxsurNejOnbA2
nFeWYU0R5sXj0EzYvXvhN2rumntfmmxlqrUn0x6GLA99EN+FGZtaxc6OMOvB
e66l6/XD6ydZZq0Hn2iV1mTha3LqzL2vvIenbg2j9nGBh52rx7WBV7t7ofSY
vnemGPzaPS4edWKluZ96Kfwbr8O9T3Yas7VberT0ce5jPfmNJ12/2dz+ic9q
3qdcPLHuyku88jXcqWPrXmhTxkF4ZdfXY5dTsfJJd53htL880//A8Qv97cgT
Mjy/vuLqU36amGj3/V3t+I5GvfKnh0+nfeXzyu8x3TdM37EsZyubc/Hk8Er/
lrAx2cju6ec8Pfd6cZ8TLxNve99rOQNx5aW+8tP4+9aom9NZR9/T5n7V/fR8
TNFe6T8Xxgyrott6fFX9HcwbRm7W3n2esjKiNbePYvJMNM+iHU9ZxfCv2Xla
Hh6J7nPHCIfl94/n9t94jt5wcDH+g10Omvm4PRMsx4xrf8Xk77De2tnHPeBO
L7O16taazfoPn8gzc679xc6ksIaLx3hZd1d6sevt7D2Gh/FToF2jDzOvjy21
en/09EGEkdwHecXE9hTDs/YUwwf2FndvuuZja8TwA7zrWjlnSDgfIKxJFrHz
0CbuzSs+gs6EaN3YvlJnBaD/dl9q+vXZV2Hmc87wyiMx6cL2LJzokO6Dwf+F
3ENw3/BisCcDe9/Nt3Az9z48VzjJIbOfxH6R9o+s+pH0OXI/FX83acBXtWks
J6/oz3f4k2sGL4oZmXu2HvRHX/W9ay9xb8vKG9Le49bXV/0BX/cexb/NlXwX
j8WUIWwWDTesWLdH2MLzotuZWcMV7zDxlLns+bKOMM9uf9ASYV50Vm//Xe37
dExMPW3DxKsrL8GKqSbGssf4tH8H695p9Z2fe+LNvtre9kxPnmh7gyeu7l4v
9s5wf0RWhBm5s6jJfXYGdZ5P2D9tnm6NujXgKUPj6t8W93q+nrPtrTEzwsXh
z/RPxtcQPg4bd985vAy8/2wW8VdkXcSrbCZecXHnsE3ZE5P3ouvuJn8yfNVc
HP6C+fAnZODBpT9ydFkPas/wPfB5YkozLfVxsOzU93jqn9c97lyjt/Mx9zLs
ic77aM14RdgXOJjt/KAXL3j4A1PrGMOxGc24ZEvgqcAbwvKmekTnWfC83Ezc
PS2m3h3wER4J87A9E3DxxFPwsNkNzoA17CN2/gLbbO5c1cWZZ8w1L/+CGNGe
4WxDMx0sbC+JtWL2jWOUV7wD2cbu/TZlq3E8rIvv9GC8v/bz5lxRv9b6tc9l
r7952zliUzbvLtfXfmyO4Y5Zp2zn5uWvHu1VOPEscJ24T/Nq+NhzH+lcEK5f
e1DwUFxtAxr6xO3T55z35uwpo5icYrIc8hn/LX9r+d7svMuYgun6b3veh0En
rXeXFffuYFut63kdzudAW2x+62fpO2Y5Yec7PL3KNuA9NVdXuvWpXnzFpeRb
wHccQ+dWuH9ztoF5s61XGvWpd/pKC5+83TsfizPz7KvmGvZvvMzsG9mFeJ5h
avuirUnj83BeXn4Tpv7Qw2TIIW7OzbQsw/eqWdbqfgbNNVwcpvyFX/zJg4l/
63d/e/QJ8x79GEbGH3ySZzH1s8uwVziD3DVq9DIt29pcjLc48+R1VWu3qr9b
acorX3HnGoef4Ts0TLMb3lt8ue6b3HV2MJ37YpiN4eYsJ+87G4JpeCDwcXjA
qOZN8pLxRcDR1p4nr0d7ozPwF2eZec+wn+KVZ/xcZ+risg/ouN/x8PMewB5g
tgnd3XV5sHaWCw/jm2jPBPcTZOHlPTqse2FMPNz97OyVsH/YWqa9w/gNmAd9
Go6Dh8laMxs3H8PFrme70gj7WbqZa+qPvFomeWqwsHOcyZ8gT41hL8hdTXjF
wr4/eHm6y/ubzzmezIMHxudqqmP0983AE/9O01dZz9N5+KFY96vWRX1mT5+e
Mdgr0r4Se0devZgrZ2KnXbNvnftnVt6xPdr4h98Mmiv1dc3MzTnwsz25aGGt
NfI3u5/98re61zX5Ir6Sj92fhM/TcWCeU448HVes12zt9+TFjX6PBV+faNcn
/o/J7+Lt7nyHhw778794DLYX5sxv+xqZahj7XuTEE3L1vOLOvYC3ofXoqe/4
qi6R+wgPM3de4V9r1DAyHmqu0fZMo08znO9B1nZ7OsKiDBgZ9sQ/MWWtvav1
7nLh8j1MDBf3sI94NZpnJ9adBplezNu1erBx87Pz2mAsa5Hot2Q5wHOdxebf
tCbbTJj1dKYb49/+/H978B25ZPZRmLGnftHwtd8z8CN4HmvgcHH4Ez4Om/OK
dsyA4fF3oPl+yLCoPGgzMpkUsCweCXrfNQ+3d8I8zPIyLccPXrrDxHBu64VT
Jtv0vN91Xkxz/rB7a7R/Ah00I9P6+frEQqscCOc/OGftxcAD24Vz4RvzMHVt
LCvv0bdX/TV2GRKtBzcLkzPHfQFc5uf5vOd+pDP00PmnfI8rLXjHxa3dm+lO
PA6fGe6J8dXDy7Um7P6GvqZOt7e9Ibt5c69jvbmv+R0XOwd5xcXWVBnW/py9
5ewKZ7WRTRHf5amvddKIT0fnFE/LudKP7Ydtfr7T89pc9g4vt6bZA23dvnDn
Z3g7d1x4qlnveJrsCY/Od2g+frDfs2d1H6Odb/aqLvGO3+Odc7I6R3f4uhnZ
Xg9z8srnYYZ+3Xc+jykeJPok2sNh33f7qKMT46H4pV/56cNDwSt+Y0a02+iz
GfFewLphZ7gaDdmeZPN1ZxybufN7MzDblvfOr7hi4yv+3XFx+yg8puw33sNV
GeRIwG1wMT3p0I0f2u83ZnPfNvd+c89kONJcR30c85u/sw1kyKHTmrebpa1b
w5psP6xtPfuhyz63lR7QrSWHhT28rVnGg4nV5xnNPOvKe3Mw751JEe5nGfCt
j2WP1omZlvXBw+yn2XdiYvjUNXaus5v6FXQ+Be/7Wb+9md1fwzV2rYtap4Oz
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
0iXpP2EOhFPpUewauO7HYQ8ETJzf0O+Y94z0s7Duijbq7GHyiN2/2RkOXcv3
Xf/mYm7nVFxpx/QNITM4r+jWnUu80titwTu3ecXCExP3d/y2+xbDxGZj9+PI
cPbw1Od58hO7rsyasrnLrJhB9kRnFHd/sOY562juQ+ft6u3NPPQ+pmevuTj7
jP5rbdi1c60Ncy9hndR8bK3U+9mcM/UChn25n4Axe3SeLeuypjllc0xc/Him
8Dv/8OUz79w39q11VN7jA/c9yeTL5TmAfS/mXLMw90TNy74O3tVtV1xsb3rv
s/fDfek4FldMzD2LdeLpmuU7Z3O8s4+Tjsp7dEjYOM//zcNmt0yjv5cHy0N/
fuizz9wH8tk6IwJuNqf+kNwcxszfh2YUdHF8sH2c0GabVU6fu9u3OtWGvcvX
XsZDQ5RGjTY9adR4yTNyrqmr41jkc/eRgM3h9a7vmryx7XntWrAp42OqgVvp
taceCev3O3aEM09YeupfY472Z+4N8N1c3b/5el3u04aJp2vQmRHkRvhzfBD/
6p/9weM1n+MBzrjySZz09DBf/9nP//I7Ln53vKsXr/LaTpjZuRTdF9qaJjqp
MxncRy/+ickz69wH+HbFxIzuF0eWXJbJerMc83pzcdfMmZF7mrOWJ0+D+1W7
N7W/z7TcQzgvovMj8AiPvoiffc+6V8O+DPpFd59m68J4NOE/eDgMtGJMs2YG
umtnS7Rf1qzjnAlYjb/jzu9tfdGaseuueh/hU7RxPrePFz9CbyO5GjkW7bMw
C6MDo5Na16T2zzzleSa+NQ87u62ZuFl64mrXLaLlehusWZqLnYMMG/ueyazr
TGm2vX0Rq+wGe4U5d+SEwIqdPTH54j+b17AaLHvie/b35XWXH36n43P8uV9k
f7qnOvWG9le866XY/R3O/5l+Ph8PsT/bOzExXp6Ltx+hM4H99941R7D0V7Nw
rxct3HWCzAMHwpF934Bu3vwRbwN88o4XlfuLd2vEPqNNs177PJy1170jco4z
6L3m2kv3NO6Bf/qx3dXb2D6LVa9Eczfs3TnFXaNobrVem/O1494ck7u+jVNN
Ou93mc8Z8WVT50iONto8dXyrGrurbJOJX828HnCxXyeunoaZ2lzt9U4ZEz8W
F5PH9hV+4xfDDs/6nTcGF4el8UI4u9iacMavPzJx/vBDJlk4l8HyszyWNdXO
RVc1A5pZzcXUusG6rRV3r+ruu+HaOdfx+Th84NmJawdtmt9/0HuH+U4YOcvK
cjheLLf7GMN17s3hejqel+9YOJwJD8MO1ohhYz/3zzzNdfztDr/x3kzYOl7z
sPnXXIG22XkZ9ue2J8G+XVi5tWHzHuv28357Q9u/YR6ddF841tvGscpv8BNP
XMx3Pl6ZBq+7Rozte2QSD7kj5mFenXVh3rcGTr+1riXsewPmw/+Q0XWDHC/f
ezhPxPdCbM8VH97NPPY9Q/vSJ294389M+rLv/XzcuT+1Dt4+6523+x0uth6K
HgzzoIfCVua4Zi77lqd+Ie6vMeUGdybEV/Ixr81yaMSwH/vTuirHIvs/aXZ3
2fZv/dJPH8M+4XeWc/V83Zq2Nf7w4dTD7q5GjRb70luly2Ye3/+0TkpdIsO9
jtm2lz6/4Onm6u84++d/8eoPR8ayuRo/BJ7qdzI+Tgfn48R3wn649137xr2v
1uqn/tOZvqutc40d70/04YmpzcQ9+D59PujhMfWAbr/xKrftrl+CMfXwsB58
xcZovuHS9hdPTJwRRoWNGbBxXsO7fu5vbiYvGS7GU5tXfLbWWOmTHI8FvZZd
p9d68Xf1cM+R38D01qzxKzOcD/FdZoSOT/f569GsS6893r88ERccbA0fDR4e
7mXCOp3x1X3p8A/v/BIe7Xd1fziGWa55tzXU5mI8xOZM8zBcai6GhV33Z0a1
L9fb5Tw4czH3EJNXw3kZvX0e5ng4fbX+lY6MJ6K1ZbZ14iH4k3sKH99mYEYz
MBnI3D9RS2etv1ndvoL2Un/wEfzmx57L9tFOOdX2236nGWtZrnfkOrfWf8qT
WQ7n3dvTTGz9GK3cXNy+YPbV1wf3U1xbzclc41/NxWjD7teBpxatD2Y2E5mT
TvKGdxnEd/KI3+Vm9OH2CMDE8Fz7QzIe2nCYT8zZLOv3q2faYb7Okfa9xm0W
fmq9q9+aL9mn/F3LsWgfRgbn+8O2P4/LpFV7uz2d+w77t933kNes0xp1ez5Y
Rl5zLwFP+73ntYc6y83y/IziwZPfeJm/e9m3Kfej9Wg02/ZWW6ve1flxfE+8
2Z5nxdk+ZyuN2uNOzlpG+yG67m7lP15lWXiEizuLeKUf7zKM382e+AwX4znO
a+ZBM24vgTMU6D0Br9Ing4EGPHkqYNoMczEeW+cwmIthwe6Jtxv2YcCNMDFc
DBuPeq1y0+x1nu4TTrehfc1X+rCPfziY/W/f8evz8zk43ll7h62ldk3dioen
HFtYBP8EHlbzkjMkmp1YbpYVHs4gv3XShq0Z+r3zIqKB46FYMbG51KN9DByr
bBP9Qnq4Z0jzjPVYdPRm8dX2MWBKfuNjy+/bf9oeYD7DuWHFaMbm387p416K
ew04tBkNNuysseZi6+fmw5We6/umXHewt+9DXj7kb6+dKeLM6TtcbJ87Xo1m
3ebh5uL2HHu7X96ep8+Y0X4R7vmcZ/hVXAxbdNaBWcq83Fz4GS7eZQp/NRc7
l8IM5/rCHIswVd7DsDk24eIHOw/cyXdoszsubj06HLXSY1d+iV6mGTv7me3O
dPulfU/g44c2O9UWevtbJ0cDxXsAq7HN9mejubPuHONVPgjfc07sx8DzYf3Y
PE1mB9y/yhsxp7NdHFt81K09w6pTvrC9HGbkVS8Qc+9079Ga+Jip99xGH//d
OPUGf8ZDvBv0x8NH8U7d3Vf4KCYubo9x+yzsK26v8SqbwfpoRrRkeyUemutz
HrItzMcwHrV5ZlNy4vDk5nfOKya3Fx4nB3ji0KkXddf9ZWSdf/jH//MrE82e
htaBr9j2Sjdur8ZLOz7QiLn3INMOXwg9AbnHyLQcF9igWXji4a4NQ3Pz73YM
4R4dU00ZdWRZTutmMAh+hLBBa61wQpYBB8MX7Id7hZiHnW02+Sb8vX0A9kw/
NEt5fr3t1qzNw65ZY3v7mfuOh60Nm6fbQ+G6LuvuU41ctgX/TLOwMziY5ky6
lZ/Xx8XPE5p3zZT4Ylw71/4Zey6YB8a0p8NcTO0k++g6yjtMybXYnOwsFPtn
2G+un/434OVk2KthXwj3e/ZSTPc907/BbIPvW1ecyIATzEnmMnsoYMCXVvgv
/+jlo3hXL24Pxgknv8PF7ZmAU7k/IJeY5/r09bOXBE6EOZyzABtRW9ZMwzGD
9/o444FtDXrSaBmtiefY+X7F9x32lqx06x7cI5kh21PS9wHdP3HKzOZ1moft
t6envR8cw+4zw3XMNd0eH/g3w/4evBac+2wL/Rx93eU75rUGjh8bb7D9EFwb
1qUfevXq3ufbv6nmbXwf5mL+XVorbs34HS7+53/0rz/0dI7Gm8+Z3vV4PXbL
zW+pu/uMt/izXEzP6IwrD8bOT2EvhbPKWi/2M30Y2D4F67pMDy+bpe3hYF4Y
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
xMOAzsu24AeGO/v6ZF5YneupGZ56OObxfuLJYZuvOLi17omL4Xw/++C36Lpw
cffg+Nvf/q+ODvwLv/iTx2t8F60dT5wLa7sXHj4NdGSPMDe1d2Re/Ng+itaL
7/a/m/wVYSx7KdznzT0u3A/anmA4D89t/BOtE3/IBf7ZX/kYwtPou+Qbh7+b
C+FBtsfehqwv78l/c13aiouZv3ud3BnZ/vZ4r5aFrs++orVbF75i5D6H8VOj
HzmfzUzM93AkbGGvb6Y/uPfJfB/8l09Ogg+o3+8aNbLVYKOp/oz5nYPc3gzz
48Sgrt/PNPatn4n7WXfX7O1q2ppLJw9xM/EpG19xs+9T2hsDk/X7zEPegz2z
jMxDjUYYK9ooejE+C4/J59BeWN//sDw0V3/H9n+Fhur1ZxvD8vZ/wMUwfl7N
+9bKvb/O3sN/Yhb2+762vF1fxcSPZwXfzltzsTXx7NfExdPfXvKrnGPbz+WZ
jp7G9/n8rofilIvDKWYyZ6Dl9ZSLzWRZpn3E9o/w3j2wYWT7SfAXUIuWVzza
zZGttZIl5j7KU53fh/yLZ1bCtPxThr7D3iv9uXVr+DvHBEamRs3H3pl4eA/I
WWs+9f1I97PmPoJ1P7Ijn8voOjVrufb7ommzPfaPZ7jfzVTfx/njt96fV0bE
k4vxVmS5+LLznucg5GjA8T4erKtzO1o/zqt7dzN/xi/9yk8fDLrqT5fvw8Dw
LhxsNs4r/gs4d+Ji2DjTybJgWfZhTKO/2/XDm7wTfvX3jNaLr7h45Snu78Nd
4dH2F6NV4nugxs096/gdA06F8/LqvItH7pg0YfuJu27PmW9kMbBeeiObm6fv
ViPr2XHx1CPQo33eHNOVXpz5OBawu1l44mKmTR6OjCl7Ah7OM2NzcT8L93Nj
P/umZgsm6J61rvMyh/NqhmiWNEfbK9DeChjDHglrmVN+gPtBw+8Z7qMMfzYX
73wQExObi6n9u/Ia79jZXL7Kn4Y7nSWHLmzvLr3jOM4wcffxcL4ujOn7iYnZ
sn3d+wT9GMZ0Ni/XylcxI88dsq9Zj1nRmnHmoQ82mRtde2g2XvVtmYZ1et9v
ftU+ZriH5bTtnJ/8bTR3TF5dnk9Pz+zRTvN7vJPmSXoznGZR3K276+f4zYPh
iztcjNbWvonWwWEjcxF1/xxP6uacZwHPTt6HUxZ1bR9ZFeShdQ4y2+YssO6r
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
t2ZAZ7KhV8GhP2RPDzSyiQOpw+oct1Vf3FevOWVptVeTQR4vPaKt29kzm+Oa
V+uKrx4RT724dVxrnTumPWHgU7a2TuzrwRqwc+h8rfS85mPuTdCI7RO2lmsd
1Xovr+bCPh6tC9un4GMw6c2wNB4R5kMrfjGsloPmz7MCc6w9JHgWeI/3A7+M
vcCce1gcHuZ4tZ+nmd/ad3vHJy95lh92TT+N9OGg9xy97+BifMWwsTXirsN7
MPHz+9/63d9+cDG+DPzGYebWmL/KQ3Hio3C/DmvD1HnBUydcfMLMeYWLo7fa
u2ttG6ald7Kz3fBP0Lvtkdv27BfNOryM9jmzbuu14Vz3vaCHSJYbhrQXAS4m
ixh9277pndfhq7h4xcfZn2yz/dC+f/BvnbmR31obZ3n4O61jwSVkabmmfqor
mmqOnJULX/I32/kP/P3uZ9qwRLQ+ft+ar7MV+LzyTDSHt37nadZVXWO30os/
MyaP8akHYzfwCXy4n1BOXmvj6MI+n54GX3Xf5+ZivC9mNB9fe1TQoJuNYfLP
egqmrAzr9ujG3It0bz/7KKwNT77q1T1e33P4esvvsv539GJ+18NZy2ji7HuG
e9+hF/NcHE+FexfDQnAcvEvP2Ylr4WIYuLn4K5nYtfbOe2BMvhBPmxgZVgk3
hGmoG6OOCs5xti6shHeAaejSee95zcPNxWZC89K7jDwx1IqLfYzMt83Dnm6t
eeJi7jNgYmue7Zuw7gunTkzn/bKf2PPge7b+zvXRfNgsbb7udTOPmbV5m1cY
1++9DraNbfD9UNfq+Rz2/va+TwzMNjnbGa0YBoaH6UUXH0U05fYDT3kU5mN6
QtP32f2f6SXyFTV2XgbrvtKKV5qxteKrurvWhHveXh/arHvR0V/ZOQ5hV7wK
GfEHM5gn772cTLNfGl62fhwOdD9mftvsTZ+7Hs5Udv88MuRgz5U3Yjo2n+Fi
jrc5n320HuztMs9z75H99fMV+yj4e23tlZooNDbz0WqYl9B07X/d/R2H5azb
fshjW2jM6G/hKuZ3fxDeu0/vlU5tjbX9u1/Nxe25WPHyu8vmXDpzLvvYNZFw
MExqVs40tNOuuzMX47mZ/A/2kZvFfaxZHufss1yMj4JtzrXcx5Lrzxpw8z+/
57UzDbnmrL23Zuxrjf2O/4Rz8663ONuSY45fmOuX/cyynd1i/4dr7MyH1g3h
ZvRiapNg3Yltw8T5+ws/m5F3WRTvDnrvmnvMd1M9Hn6R5mL2lWWFVcLF+JSn
7Fh8GWiIeCbckxkudha0cxw6A6852J+7JzH6cvurT3wUvmdwz+m+n1gxcn/P
MWwubm6zxoqngf0393K87B1mPs7T63nGk5FZPvcxec/1y3xdr2dPRXO6jxn7
i3aLpmvu5LfsV7O2p1nj9u/5nOG+3NbT+7zabzHda/S5z+cwarLY4GD3fw4v
k822qrFrXjYfh6mnPtD2aLjnB72kWQ95xJ/Ri1d5xM4BM2uhE9+tu1sxsbVp
OIyecvQOodYt7/EJ4w0mqw1/BTVz5r4MeN6eBnrdwbBZrr3D5lsykaMdu67P
tX32I9gXgq846/Ixa7148nqvctKuRrM1enGmkzvH6HsY59V5cE+SZcA9+Vsa
boCFnMEFI7vWDmYw08AM+Tttjbj/5pub7K148KDqv+Bja8H2iFrjdoYBjHzF
vWaUfr7OtO7bMfHnZ3h5pw/bg3HXR7HqO8IypnuDfhbgZwDO+TVbTRlgnDvz
G7V8nEP7bnxfxbnb9Vk8HfjTYfZwKPcf7sFCPz88E/awv7R2ZbH4Ho7j2Zrx
xMOv7Jdnf2s+d+3dO5q4+3Dbj+Nrm/NuT4j7T3SP4uaiqYYHznXdO9/Bww+N
+ff/+AfjYpabdZvR2LdJL+56QzwW6MWwBwyKbodnxP4R9t26JWyDR9mclmGe
NRt/8B0PbPyBm4uHnSe38y9PXDzpwBMLT8PHvI8/bAyLOgearDJ7U6JhUn/X
uWfWRWHgvr/g+84YgY3NnZPvYsqmbi9GGJPl0oPa59J8337gDNcXtg496dX2
fHibp+cAK87vebO9OTfot9aI6cmMVgyzXjGxP+OhYDQbp/8zXGyfsvvj+fed
4bbKL84wAzlfwqxq/uU7pvPdCRevspG9fj+7h3HhSzIg6HtHLtuHvh/Pnh5d
M+eaPfOimdDs69w1WLx7crTW+uDxJzN7WWjb5mp65bUWPGnGnsf+4BPPxGre
nK9X3oZ8zz5H5NpxHJ3Nwf1Kvm82CSemtq6n87fXtUf9XBldCibdeSdhiw9s
rGfs/ptuHyr6nPnWPUhYd/tCmpe/q68r34e5eNfn7ofkYn8+5eETTvY+dh+N
1pEZnO/uCzdxce6L+plABv3xuJ7Mwn5FS/2sxzjHjNwMtgu+ZZ6cY/zDGVy3
U89smD5eEXpC0//DeSt9f9X/jvyZ7MLuq/gO+2eYgdkOrk+Oq/e3+cY6oOun
8l3q29wbAI+x81H9txlN+av1Ymcdo11nfdS55X28nOjC5jpzsr0j1o9fmcDS
JeFaMrvYZ+r5yK9AS7TO52fu8BRssuLaiWE/fE9eMRqotOPo2+Zi78uLtZ/z
Tt6HiYun73ztTL/jWQMZzuQykLFAvjXXCzVsMGuOU44j2uwHPf1ffOxtR6/s
zIf/Ap2//THNis3C9lb0fHx2vw7r/+1VmZjU2i3b73833C+0Xt3bTq8ULzvH
F53a+RfN9XnNMWv/RHiYkfq7MCq5a2bj5uLwMwMuzvswbd53Blymw9xeBh4L
Z73BxVc8nJ4ezcXU0q08xf3dxMun2vD0nb83e1rTxN9rnZbMYvRi8h7cZ85+
CdZnHwHLdC8Q99ij/zSf+Y4aPLRmXtlu9uvBw0++hPfxJbNdObbm2Ml7fXWM
J0ae2Pnh4xYXh9Xd49r3Bn7v3DmGcwrs8QxDwELNwTwvt75njQ+OmNjIzGI9
1AzcWm8+s65mWnuO89m+S/OMdWH3EeGZvfW/FytLVzzh469g488u64qLrdWT
XbzTjVc9kzuzgc/0Tc454VxwjuynwCfD8sNrcHq+4/Nnubj7vuW5hzP+yGbO
dodz7ffgGiHPmWOCtyjT6BXY17drDH0sfX1P2Sp3uTjLz/a7H4nvoV7PCL7t
A7q4ubhzbLvOjl4C/L2GP63Rmm26r9adnh5XI8ujD5g5p2v8eJ9XmLd9FeZk
68bm5vZtuv/wlHnLcbBf9MUuz5pFuPjlC3hmU6x8ENaQ0a6tF5Mr1xq9e7v1
OszQnStxMk6Y2e9zzmBJziUs2Z4BGI57DJ/rnJvuheLzmt9lXo75VE85+Qs6
C9meiPYkmL19H9h+8NZvp/n43Od8WoY16Om3vu7Q3FtrZj/N/O4B3XkUYVNq
7SZfsUcYFi42z/o9PaDpfWcu9nz8jvk+w8XNwp1P3Lrw3fxi57yZhVlnONF8
3ZkI9GimT3OG8yoY1Mel3s6vrfE6XwLPsPkaXwS+4rzCx3zOfPFZ2NPhnIz0
vct+0HOZ167Vg4+n8zFxrrXgK/+xl9fZGa4h7BFWzmCf3P+PXOkHK4txzMKd
dxpOgRWsyWbwXRgBJmgu6+fP5gjqhOwVRvtlmIvNF/C1dWlnzsHAsJg1OzRq
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
Pb0Tv17N3+do8nK849nwb3Ps0H7RTycubt/EjovhwimzjPmn3tSuB/R9Gf3a
Jm/ElI9hVjRH22eb4bo3niNwbtJXhmOSkWuezDk43/2mP/QnV4b3h2cwulc0
K6+uc3id6x2PCP2tuU/o88V+ss+ezvLgSLRS65BovmayE6/DVGu3Yri7mWzZ
TvMA2XHtGzC3wQjtA8l+2TPCgCvgUXObNeJmJvuAYeeMTAvnNNN0DVlnErvu
8a53ooe5bOJijpf9JDsvxRUfT/NO/lqYbqpze/mff/4Xj/nsb5lGH89Jjz/l
4vY6oLOyvV1rutKy7b/w/Q/LwafMvnUvxKtt93WU7eNezTV3U1Yz9Xn2FcOu
rRebOfE5ODsCH4Q9Gc3DExdTe9e68KQz23dx5ac4YVnzb38+6XfXPokVH9tf
S/5F8+m7ozmV/LHWgam9o+7OWXHdc4/vzMXRX9Gq8RM3JzONWrtdn7ur+4bP
DI47vbBPmfi7caBHwQn5W+xntbx3vgCeB+u3sI55gMwDdGhntjlHDP/F7hk1
/mJ7OJqL73Ly6bwTb1JHd8KqV8vOsl7+7Wc+xorZd9t8tX68FNFZw03tIcZD
YU1yYlE8B7nn6fsVszE52M7DdqYxvMx5y3vrxCsu9vZONYPWis2Q0/XCMbG3
vfuauI4tx8S1oNaCXx4K9c354Cl6zptXZ2bkXqB1ct8f8Jx+OgZmf5geLzP7
C29ZdzI35m8+muypB3jHxZ9h4oxsD+wWFoC3XAeVaa7PCy/AvN6fznuDbcxx
rgubnvXz2Tpxtsu+46yffORmme98E1VrZw/F1fG98lJ0pjH6Y/tLmnu/ylMB
T9qDgl/YPd3QUl0necXFzq5bfX9XM0Zfbe7FR4EPJZ99fldsfLINXC/c8zkz
ZrqX6vsBNGeuTzRpMzLPOPIa1vzH/+A3P3BovA54jKMXNxfj+cVzYb0ZXwVs
3My94uIpk6K9yM6l2HmM7zyzb/Z174nT/OJ3/BZ4HuiRMfmL73h94Wz6d8QP
wWvnlMULMa3LmW2TNmx/8o6Lf0juvfJCsG5zcWvC0/uJi+HKFUNZT+y/vdTE
0U8aDgjLMsIC1oo7G3diKHtJ4aKr59ZTXtZn/RGn87QneOdrWOnGU+5EMzL3
Ep3pdrXNVx5ojnd4FH9E1hUOzPnK50w3D/uz9eK84i12Ni/PHfysAL3V14Vz
MXy/ZB68YuPVPOZY5sv6WUffZ3C/17qzl0kfG+4P7dN3nd3Ewt2TG85l9LpO
tPLJUw0Xf5ef+OQm/sbaH+Haursce8pud5eZbTFf0jOCrFyY+OVDfvJy96Ju
7RhN0honGRT97L+nw8WeJ8vg+X/mp7cgmu13z8iLiz2uPBRXXMx3OQZTJrL5
1vtvvbi/b/Y94WK4j+0Jq3Geut8H9Y8M53Gs1jV5Q3YseuWxsMaKB7/37V2f
xoftfp57X69wedeAXg3uPbjPyLT2g/i+jizhjH/1z/7gAxuHi8O9zaDOjwgH
rzReuBlWhrfNzHAxy8yymJ9lWEvunnt3ubj13uZi51Fc5Revsha8fDKRu2+x
+8ad1OB13V1/bz+we9VlOmxM7tqrn4WWEVbOd5lv8il7PdareWVdK532x+Ji
3ufcrdjXPQ77d5w/89yKqazZ9d/h9hX7771fw0k8dw5rvZj4d/7hBy6wN9k5
yD29mXjlMX5HDz7hYY+Vj3flDTab5rjns+vtdroumrF16Z2/2evbHRO84M6w
dh9ke22dfTDpxRnwIOfU58jn0nkm5mH8yD6XOy52lkZnxq142fOtni9k/c4v
zHuYvrOL/Zxjqi91vR3/TrrOtLMSV/y7es/+t0/cfu0POctPbuLvJP4Jc2Om
n+rFp1x89XvWTY/lcKu1w66rcm1d97iDE+D7KSfDDOfn3OYI2Kz14p4HxoFR
6J+RbXcObfevW+nF+ES67vE0q43p6IfWjCcu7h7PEwOf8PLExb7XynN8zhfH
M/vK8cETi16b33Q+WvOvsyp2fHzFs3m2EC+5r0ffP56OyTsD/9rzgKcnw3V9
fDct19dO+ym6V579HPY7w57NxNTIoQe7xq31YXzBLMvvec181n7zm3/+R//6
A+/6tTPaOh/utO5u8qn6c9dm0U/5ykdhf7J9CB4sy/OZv8zGzakTj1on7vlT
+2btlpH5/qtf/aVHZi85ai9mfnqYnUlhz/Fqe8LXYe3sB/ka+DOiJe/09h/K
O9HTWsP3vFOWxXeMXc/krzRZstucQ0DNlNm2OdmZBOZiBr3srBM3T/k5NNre
xMf2Ga8Y/64HeeLTZt4Tn0Svc+c3Xg3YeNrGK65uf3azsc9vzgf9W6Yedysu
dp5Z+2dZj3PVyGXDs7vyUqyYEYbPNuKBR1c3v5upezm+33ppxc/z4azhbIP7
oZOX4nPjvOzOevG/C+5F7CWyV2nFx+3tXk3r6fA//3Ye2zTUb/nV/eQmv8Qq
F8HZb/7c863Y15mzzhs2F3SmrlmZ33Zt3Wpbsn8rLsZPYc1y1cfXmmf2K3VQ
/JZaqlf/ticDw0lX3uIdF1+dD6Z3pq65+MQnsZu+YkMvL+sjxzjcme9dI5lj
1VoxI8y48lK0d3fLpAM39+DcUYvKddq1de8OeopTt8e/Bee78Nrbbxae+oG3
hwKvNp/toYGJ7QmGX9GLYeP0+EDbdc2dfQ490Hph5bB2fht+bT/xyl9sNt7l
FuPxmPwSKx9FM5KZju/MWJ1N7Czk9lZMfGhWnrTlKS+t+di1ceZVWJbcNLLT
Mh2vRWvJ7oHs6a6ja18FdRPRWcPQv/ft3ote1pl3p+P2fcUdz8p0X9L9C1kO
52XiaE9n2/qeJn+Pr3h4qgOi70L+1tKzl+fj5EigleEtNrP0eGlqz+XQ79lM
hUfVzDt5KeDD0/1512PBb69q507WCaferZc79Ur0dk/LglUfz6Z172K9kTyK
Ky6GF1f3LM6QzrwPv015kLv2LszYXg6uE3w8fv7B8iYepgYvy6AXs88NxwhN
21zqewT8Iu1HQTPnOLAt1on7+s5raumcIdce6UkLn+ogm4uzzfhFPpzzYilr
tWjH9M7wK9lf4YRJC37pzb//x6N3Iq9mHjwQZDdM/fjMB527Zj6m93P7DyYu
9ivPyq3potuG1+AS68atJcPE1Prld2Qec9zMQr7/WPUMOeFiH/+dpwIvhdlp
4tcpT2KnE+/mdb4FORPuBejeHZm24mKmn+qzKwY+9RrzjMHPTsID1qzf9VH4
GYA19Jwf7g/zb4t8iqvlObMi1x7e6O7jZzbO79CHrRPDr+jF8RjbZxwGDSOn
h4f725mP0ZGd48YynVtsfbiZmOy2XV+PfOfe1X/287+8pTPuuHilFzfPsQz3
8LCe3D4K+1utIbtHHjoyngayl/EQ43ewfsyyo+XSe859nLuXM9tBthm5FWHc
vGYavOs6POvL7gPNdq7q7e5qwNO9Rh9bjrtfPf8JF2d+jnlGPudv/ikXw8Nm
YP7moqGhCTN+9dd++TEmFiYj157MyYs5Paee6vd7vpP9OuFfOGv63ZUm+1Uc
vhpe5uRfPqnvax0Xv4LZ2H7jfn4/8Rhc2J7vzqCmntD3RGZq+2HRVa2tk88A
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
5xXP9AlX77g4uRT0lzYXJ4/CWW3ud+fj8ENovX08r+4rfiwuzljVEDUXh3Ga
L5yvZb5rr4KzDFxvxHLgSftQzcX+zR0G3nkuzMXdU3h6v+LiKfPiVFfu5Xhb
mv8YZIS03u77A7MgGiPLdCZCZ1JMtXdwsc9l+2kzyAD2tpmFp/f0ADk5Ppl/
0vXtMVj91tdt3vd1DhObhen5kWWHSZv5Wz/2Ne7zcbJv5mLXQ3o/uV/K8pv9
m81cRwQDrny5eCOsO1pDbj6De2FjdDeeS8O+4eH24LJt1OvBOO5xZ+ZYeaIn
Ppz2p9nEvefgeB+b/Kb5MJ7RXv+PycVXy7Pn4y4X3xlThlv0J/drMxdHL57y
i53nNmmqZkHfH9nbkPdcZ3f4NX4J7o8e79VzhUFexckyr/r2Xe1X53j3b+Dm
v/trP338O8vIv59sv//dOMdhx8UZYVA4OLxLrjA5xu2PMD9P/aLzvZez692x
4uI/+dM//5DTdsXFK824ObQ14+k71+ehA/d8XeNFPjG/nxjvDqPv9o1eyGbc
d5gxHOweeLw6z9j98dCn39GKW2Nmm65+c8rDV8v7obgY3creYnjVLOT+v+iX
8BOcaO5D92tdmO/xZbbv4vXcutjYXNH+iYk9TrjYebFmxNVz+omLux/3yh89
bYvXP2V00Q9u2o6exrHmfLUW3nrxlJ3rewK23R4K9/aw15aMhZV3Bl4Pb57k
U+R71w/2PQP5ZVejvRStHcPG1m3pGz15jKcaPO7rTv8Ncj3kmHBefF+GXgwX
9++v+jCbjdsvQeYXnt+M6IDhmomNXddvP64Z7qTHdJYBX3WWMRyD3tj+kB0b
s52rXIHs38SezrdtFvyb4OITTZx7lB+Di5uN4eK/9+w5kOPWevGKia94dpVj
kusEHwbnJJyYa+VqeeHhV4+vb78JY+Jz5prO+1zL2cZ3e32ccPI0PtQZPjVh
7jeyf77GuLZXXBwtd8XEGeHYMK5r6lx3175hplk3DkevctdW44qLU3uX93Dx
CU+d6sXNujy77752LKcz2jrXmN93vttdJm7Wa97vHOWJUafl93LIYkMTznbb
Y/yY/swxzkA7n7b5ipGn76/O58qzsVrO0X3BJ7i4/ZYwAT2EzcawlWvpXzX7
6s/gurqJb6Z8AljCdVqwcNgp2wRfTWx5pc2teDT7sOu5AJfAor0Ms7DH3fOQ
5XI822Pa06acXvu8M7INHFvOLctyhq/ZuId9FM358LZZkXPLQP/MswbYeWLK
k+PTXIxf2n6KSUuduDjzde8aszGfzcXcH0z5xd5/v79z7tHifX6mMflOduzp
58UM+yY84GLXoaFHmr9gibCzPbinTOy/7TBDeylY78rHO7Fos+XEJ+5Lxmje
bQ5szbp5+pSLv1InZqw8rTuuPWXgK63U58b3E/Rryzz0jeZ6YXuv2Bhtn8+Z
vxnxjr5LFrXv67jvMrOTNfwZLv6OeZ/+iu4dPnGwa+1g5XzmOQvXGP9m8mqd
NfwbjoWFzcjOMYaLnTvBsB7s+fguy+ystZ1GfOU1xnthvzM6Zuua1jun3AQz
68Ra+Fc7R80ZxdMym32bz3a69YnWutLB6T3XXtw7y8q09oHA+BzH9PSgr0f4
OXr4Tsd9Zx97+3Z68bSsVe3htB2f5eIe1MSTOcFwf7C8X9XOrd57GjlV1tY+
8DL1TN9e6Xfgeq53ch5Wo/mXXhjmLfIKfkguZlsmJu4R3nTuAlzMtqFX47eN
J6A1YPP2jovDhJwf31vYT+Deyd3z48XLz3PXXt2HP6GYfjVSe2Z/CecpI9t5
6lXOoAf6Sje2dsyx6uw57yv6cPsp7rCxr4E+5/YXn3KxGQ7N2K/m5fzNDiP4
73fnvHXdmpdzl4vzd74zCaircn6reeAuFzcrwmscjxWDtscj71fsesrFX+2f
eNdjfDpWXOjpPuc5T64FIy8689G7zb6VKbOh2ZK8h/Bs9N2+B+O+4MQPjD+I
vszUk3INOsftboYx3M1oFmbgi3CvOueg+H3n1PnfQd7jW1npxasM4+bi6L70
4vCYvBNm5kzbse6dgY6Nlp3xT/7Rb33oXcygR1tGPlNL1qxlvXdirKnvsHns
hPvMZSca6F0uZtnsl5fV3DtN7+V0Hz/6nuTz//v//N+Peru85rhe1b+9y8Sr
fd8dD6/zyk/zQTN/kwn7bzfeS/LaVprVpPFZ9/U0ezGtuTVDTbp1tgGfZ1hh
pdl+ZoS1pmysZtIfWi9mW+AiPKW9LdSBNVO9nsWrJo9z6qze9ors9GIyjLu+
0fl5rqOEe2HDl+6v5wPtxUG3PTk+ZP22xwAuvsqk8DHJ6+pZiUeWy7DH3L75
O56JKy7uTHH2E8162scdL7aXomvnzQP+G945Zsxvzc96610uzpj4C+2MbThZ
TnuMd5qxc3c7g86cmeMC5+XfYfs0figuPmXhH5qLT4bPfbiV2jt6TrBN1OB5
PzO/a+8mLsZTa1083+Hb4Jo+0crD6Swr24wHJOc57zmmd/zFzcPmYmvF5uAP
n6UVr+490M3pQY4HJNNzXeZ4n/qLYWWyh6f8Yt5TO9e83OxMbxCPR76bMi5O
h3Vl9OHf+t3/5qVp0qs4r3BxPLMTa5kBzVPNvu4hPbHZHW8E7Jltjd7aPTOY
zsi6s/2MbOvL61O1ZK7FyzR+c6o7e/v8Sr0h2xsuzqC3x4lv4bNcfOdeYcXS
0zyn2QtXnEB+QVgoPErvZ7NTXk+fE/u5svVBhpkkn+ktjT7s3tNMW/Wme3d0
vZn1SH+Hd6HHiovveJy9LRxj19nZRztti3l1pb1yPn1vc6UXZ332u0yZIK6L
dP9neJhX+8vJ1eCaOOVZclCmukTq0q6ucb+n7m9Xe9o+73d7hl8xsbPa7Plm
3zLQjPvaI1P41EuxyvBF47Ju3P3fqIUzX5rZPsPFncN1h4snBuV5s0f2zUzM
/K2xZ/+o+beX4ko3foeLe5uvRq8HNvyKfhJ3ejRTw5h7pQzyqLlecu3AyL2v
+dvvLAavn2WTOZz50UhzLtCPyQq+4mK8CejF3AtyPfT9RpZ7lWG80oSnf1d9
Lzr9GzTno5EzuLeFu9l+7tvizXXdGmzcmjFaMVqv+zdTN4dGbF61ZhwtFz2a
Xhy8Zhqf/+znf7nk5h6T94JM3TBb2PiRl/CPfuvRpy0jXAxrTqxkTXTiYjjO
3ok7vDZ5NFgvHB/m5P00XPMWb28+u+8c/hGGezY7Yy3fZV1kSbB8NF9qCtsL
zX0D0/LbLDtcnFdrxhN37rTjHSvf9VucrNvzr7h4p0etWMEsu3qWi24VHRcW
In8BHmtvBRoitXnhbvcPCx85RxkWRiN2HRR5yV/Jxa51Mxe3RmtPb3Mxx8E1
d+9sC9o1PDR5aBkTV+38CDneObZTBsVKM8bT3etpL0Vn6tk7gW7c/gnuc+5k
tXGdOS+DHnjsy6qvx8TFj3P37N/hHAi0WXtN8przM/UOf/d69HHMdeNjtOrt
4euQ6+6Ki/23t/3D/QzXrNLzNSPf5eAeYU33uOO96+9Ol7Vi0Gam1op33hOe
sbNdK8Y90YvvMPIVC0/7js/lK3RgGK9ZdcWbuS4yuHaSn8A08h845uY/L7v5
OL9Z1eglS4JxqpPDuc7DSNYIvgyf+52Pwrow+9Hn/s4127/t68DzoWVTO0it
KlzMaH144mL0XLIpyCymD17rt+ZXeurB4eZi3qd+jpyKHRP/9Pf+6cjJZj60
4rBw9GI+w4sTt5n/uobsqrZrxXBXGQi8h0ujwU487Mzgd8eKuemJ3dOzLTAw
87nfcwbT8Be3x+RKL24fd/+270vu+q6vztF3mvIXMSKjsws6HwE+bY3UmqEz
K7rWimfpsC8+4vA2DGxWQbfL+/zuK7nYtVT2jjSHrvTiaZCrcaqDMv7tz//D
h2MN9021d+Y8tNvdsnkGMNV0TVoxdZbuITI9k7BmbO+t+bgz3RjMe4cj4ccp
wzjbfFV31/cK2W7Xj/Yx4X4hy45mi6+kn1t89prMcegMufaZo/f3/e/ub3G+
W2lZK/+je2D0PGhV+DV3WvEVI6B5PXhjYBuyKD7DxdaM4S57i11315xiHTs6
ZefdTVx8wsZXuvGJXjzd/7zT26Of/VPndaIZ9zWFN4DeyvEVc52QHYhXgXVP
fS64/mBAnmXwGzLXsnzmOelRZx8Q597PJDj+ExdznHhOcsq/0/nzs4cdU9sn
4/s4jl/4/pEB8n/9ny8mzvuus+s8ipU3+DQ/wn2fW/Olfu6//sf/3YfvVlzs
+Zx77Cwxa6jUh01eiuZiBllnq9yIFd82e52wWWvGPxQXnw5vC/p7mBf2dT8T
H7Mdr05+BngcbXrK8Nh5t0+1+t3vJy7+SlbM6Pore3DDe5NOCvOGHfJ8Gj+o
R74LD+UVHvFzdevG+a5146z7q/fV+QmrLF88sCdacPYHT8od7mtGZTvsO849
RDP6yTbR98764y6XIhxob/DKq9M50w9OKzZGd7YvxjnHp74fuDjL5tpxv5I7
9y4sj2tx5S927w90ZHPxzrtyZ9j/bSY3q+dz9tG1pzkeyQrecSh+Wf6mT3wM
E8O+6HTNyfZYkE+8Wu9Kj2WEP8KbzWB8vsPFOw7p5Tq/uNnW3Gq9OIMeI9aU
3+HinR9jx8CThujtcSbE6WgPA96A1TzNxX7ej1491cqln4dr3pxhPPV/g7np
A4J+nO/sBV49F5gGvmTXAFJn5z4vYedsa/uEu+Zvdb6vrlHuG/rfIno691+Z
t3Mo2N9o3WjfYWGzsX0U5mL04ui4V8y7+85e5K6Zw5sMH19lt618FOHd+CfQ
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
GJOtYC2084vtob1T53VS9zXlLsDFWS/P9nc1d52zthvu+bfj4GkaOi41eNaK
7RO2bvsuFzs/rrmYfe358U80F1vjnu5B+G2YONeE803NAdaA4Ub0YE/vDATn
5zZj8By5/cXOobDH2MPc69fmYtfZ8fwY9jKfmYtXDNpMm30L45iRwzlo7Byb
3fKafZ0b4azh6RiueNkaNVxsrdF9AmE2Mi/aA+P6t7ymDzNeCo571uN95TPT
nDnSWWz2w2S5r/VXf+/epq+ol7SvGS5eHc+Ji1tPxl/UWRqTZxoNPGxsjwjM
fzWujgHLw5sOF0/7Yz8QvsmwgetxUrMEv+R7nmszyJ21z9H9F1xX1zrniVZ8
4oFwJkUzMuzyFXoxzNia+Op3sK99q/w/i6/11AfRjGyGeiezbTfQjE88Cbtx
5TF2T2nfa3AOnemXawztmH4a3K9N/TB2ejc1oNZwuY5OuBhfr30N/Vt7ISat
uLfN/05Ozudn9GJfQ9kXuHjnMW42hn3NofkcDbgzjZkO41ozpk9ec3HWwfzw
8arubuWtCP/EPxx+6uf44WRnU7j+rr2z1outNX7F2NXe2feKf4Kecu2fmNj4
HZ/ECRfneue+gp4maOnWlNG5+5itMoXbX2weNv/CsNP9gVl/ymdbafM+Vtm3
f//vfv4Y1hhdS2VOzsDHG52Q+cIGfh4NH624Lr/BRzFxsfvrdv4AzJvlT74J
dDprj+Zf+ydg5DDNKuO3xytj4akJ41do7XxirfZb+3uzMNrlxMadu8bzcXjU
v8Nf3LnA4TjP257nydPsfUOL5zz3vpiLYbXu2+E+LS+tWFnFr/7O4s07mvAV
F/u6wwONT2LHxfa44C9yb2XYt/3T5lruTdzrub3X7S+Gd6/y9Hw/Axv3vR3/
Bvs8o4PRiwLtFXbJ+/yfCEOQV2WvZueXoac512qVr/ru33vXXjUb8/kruBiN
D1Zz7VXvU2voaIccZ3sw7jDsKpftapwyMfOveHJiRWrZJoacGHjSjOmtwci1
hq+A+zGOJX51auXgz51e7On2+7ZOf8LF2YbcO6IvOxejmTjz4CfPwA/f2+jr
6eR8fRUXZ1gvNhfDpRMbTxpt+Dc9ofNdXjPIm3CPuzB1OJnprrkzF5uN4e3T
HLiMcE/8AnAx+i8+gvDP//Ef/s2Li/M+3+24mCyDO+zb/os7uWLd48Ma6TTw
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
tgfD9f5mYxiNe46v9FI0G2f5E/eancxbsJI1Xngu+4veOjHhxMYTF3Nd9Hxo
Xtz3kFOBnxj+9UB/XnE5jMky6Dedgc+B9dnvc5eNJy4mCy5jxcXOd2FwzXft
qJnYTMs9jLXk5uIdK+fzxMQZ5BBH311x8S/84k8+eH7xRGS6M5Bh5Cwv35mp
yXOjvo9avP+fubP5uWdLy/IUER0YSUOfbgYc+oMGIsTQDX0aBkB/IDEmJA5I
IAQYMmixheYIOECaDwFHJk6MIdGp0cRoQ9OYyGmggxJCiJj4z7TvXWdfda59
/55VVfv9nQYGK7V37dpVq1bV++5r3XU/z+P8ydasz5iYencdd2dui1+CfBTh
ILZ//3tf2TgJzrOn1bmIr+rFj/onVg1+pcGnj9RzfiROrzmZY4Ytw5BhSvRX
NHbrzejF7XMOh071Nq72jTjGvEYbDgM73m9i76ynv3lOkJY+5n9DWJh7IvMo
5hbkVbB2NnEROlO4mBis9lHAxXCXn2WTs3XFCEeeUddIm+rhwbdf/6537rqw
c7vZw+rmeL4VF9PMxe2fwDeCzs5+iYODO/HU9r7bC3GloUNnv/4ufT2qb7zn
kr7x6uQR6Npt+Giz3jnpnKutudh5JcxqbvhgYWLG77kxdzBs7hN43bGBXa/E
3nrnzXAeYjP8o61zTBzFmq7YenVPZpz5W2XcfTziTLumI9vnfPE1rvIftPbr
96vv8iy467qtPBSwZb43aVv+3fdzZHOJ9bNwXB8XT/Db0ZgvhLHan0FcGFzc
tYLRN7+cXNweiuYsWKmZC9byM35qYZiP4byj3MG9Hk8N4wG3kpPC94/zt2VM
PZbmZRjX3Onjsh/mMORD5h7m2YPzW1zRiFs/bx8FcYPUD+z+8Xl7h3P81byl
OTn7dB7tngf5Gnuf/rvKPlY+ik985GN7LmFypZmLw8Dm4q49t2nC7/6m3R9h
DwQ1oql9l89zDPuOYWO0Yj5/JO4uLNSaZdbhswgDOzdFuDjrXVPOjHXkBTbr
oTGfcfGV/BbZb7jYHNn+5yMP8cS8z6n9AYtnueXACxuLie197vX2WExeiivs
ns+ce8Kc7POfNOTdR6H6IOS/CwNT18X3guPozMHU8vCzaPRh6272I+Mv5vl6
P59vvdhsfMQDYQDrrnDnxLrmZJjVz+idE7m9FOaOvM4xeU8+3CnfcfNGjp39
bT6KW71h+sw2vOe8nDOjGW/Fxfvz/+L6iYPMx8yF7CdAQ4Vl0Y69DfvHp2q9
GDbOZ+Rr7jgwuM/XGj9CxgrfSfaLZ/eMf5kf0Ed7fTq2cPIFNRfbo8txVp6H
R9jY+TVW+djOmpmYvCt9fcnZwv3LfcI94dzS6RNaqtkApoVrp3xk8AS6WOvG
ft266sTFLK0Fm+Ng3uafjrWDmydWhCVeNjcs9SjISQG72WftfBXZ3no8z8iP
uHjlOVnl7ep4u+bd5q1mJX+GDunYwWbi9u4e5aaAUdFmrcuiI4dXmVdY52Wd
NWXfg61Ntw+6PfCe49EfPPCrWLbm4p4P9Dgwfunfioudw5v7IH2aeBbdt/Ny
O6dI68X9nbT0iWcu9GvKX2wuDouai2HlcC3L5tTwMiyMjwIuNhtTJ9q+Y8fv
4a0wF+d4Z3oxz8PDva7xAFPxPJ1YO16H5/IdvBR5Vr/i3rPWucpeRi+O52EV
s0ZDqz3yBz+nsT94MWM7xf/1urxnXTi65xnuu3NQHPWludh+asf82U/xnlfe
ubP63XW/HQuPOeeKr8YaMX4Ka4p8Zj3YmrLzUfA5vGS9GL109Tz5rKZZOCD8
M9WAhtE2Hr1p2bAx8WG9Pa/9mZkYTm0udt6GKbdXtsPj4Voc1pY9t6Cf6HfE
+ZnJmiHxQnMd6Dvbff6NP7yb53SDifEnpz8c3/U4VjzarG/WtveGcUVrto/C
vJhtuA/Q1H38bbtbLGX6zPl1rUHz+SoPdbMxz0K43istt8eDOV7XL3Fdc+u/
ey2Zm2f5OVzcfBzutV+Ye6HP0Vzs+dQ2njcWbr8szGDN2I1ax7CKG/H1/s2/
mguCHGtwsXVis7EZs/2V1mInPS79P+sHmq85buOPN7648U/8qN5mytOBb3by
F3R9jxUPH3Hwqu+TVtx6cbd+1t45NcjF3PFlnb/tSDPmfmBMqakMI4Z/M2Zo
0+SfwGdMbCha5xR311y8YnTuCcYdPp+04Ss5m5uLM47Of+HvMZb9bCbHn+Yu
0/XiuLkfm4v7+Uk/W6F/R3qxazG3Xkx+tfAt8XfkWoN7HUuHvtxe5M5hYZ+x
mdxcjMf4LB8FLBc2a97KOp71Ox4Nf7Fruj2Xi60JTyx8xVfM0jniVmxMbYvn
tMmLYb8vsX94EFY68cTL3j9jMTF9e4z79aQX93yHlt8kalYz38FPTD0PuDnn
xfwo54a/uGvdUUc4v6+ds8o5v+xH5vd3qglhTgp7nXHxER/bE0xDXzTfohnT
j10TVg5eb4v3wloceS/MxeZgc4e9vBkz55WbWHzqB6+J0XOtPrMX3Oxcc/lO
c3HnXTMXUiea72af1Ewxfx/pn67BMXExGj25zWDO5mLzshnSevGk8Xazh9rn
O2n7vIa/HJc5cXEzcNdT7Poxvl7sh6VzTTxXf4aN0197njoulnNsDxB6v+Ps
qLU71XIzJzqPsd+bC8MYcNvKP7FiOv+mNxNPdZ7bS8H5wFvo2uYBtDaeraOZ
o7/BGnBw81ia65z0fKHHpPuYPmSfzkkx5TCe2hUu3nNwLbj4KO6Oz1/IwXzT
j9tHa924Wbj5tJ872C/RdQLh3sTiZUyzbH9NH8f92rnxptP7M+vFnjPlerq/
+EeahVdc7M+Yf03fZyzNxYyNPcGT5+WOiW/5PJyXomuUOKcIc0bmnsTddewd
Ne/QcjsnBdpumJhcxuZSuNi5i+Mt9vqOtet60RyTuLscF335ap42mCcaML5R
WJln651PwbzVDHfGsqu6HV3j4sifPDX04qPt0F1flo17HDJW+BSsATcP08KW
fo/fuH3BPu/ORdE5mK0Xdx49+2M2zfeJb/M/BXYnJwnfNxMnH0X7aeIxDhu7
pkf/vjofm/2zbIN2bF3KXDzVlphi7uyHPMtBwPPjZlvrsJNXouPz+nMYuHmU
Y4bv4CrXxJg0YzO7j7l5sxP39rR0ngqed5MzwSyMv4AYPpiZPMp8tuLi5kRr
/WmruLIzLva4MU/wPMgt9w15dM2/1Kvg+rvetdnY+jDjPdUnnM7XzdeN/uJl
YU6w58yo+UjPTbgWnS+b73pfHk/04qu+DGvR5MRojzTnbD91szF+EZ6t8Dkc
6efLnXetNa1wip8Bt7bIM+7Jr3ym0YZLV7WcJyaGyfq5c+e3oqGThRUmL3M+
MztMzA0X2z8xMbK1Zp7Rm4ubFT3utPZIT94Leyj8LP7IWzw1x96Z2+BFuG6P
w1u0FRfnvuH5AzXYGMfm8IxPWNg53CYvzcSrYxzgrSYiOnTPM/BsMI8504rP
uHjLzTzoxbx2zgpfS+65/hvguvDZ9MwE70bfQ8xfuW6uTx4uPdKMO+7N+dbs
oWiPcdf2MPcSawfnbnkpbl7kfB4PB2zcdUKcl+LMR0FMnXM18Bn8Bg8Rp2f/
7hRPt+LhFSNPfuLe/oiJ4d0zLoYZX9Y3EV6cat1lfPIZtTDMyNT5gEXNxfh4
p1ofkwfEHocjHwVcHOa212Pn4idO5tp+33d+aD83c3G2Mxfjqcl7dD4/j/Vr
ezCJucvvKjkKjrh48rY6L8VU8w7mC+tNnkrrudZam4VdQ7rXewmzRn9lv2Ye
YuImJutn+LAZeq5r65nfM4bOj0cfXCtu18hv+jD9t1ZMrRL8uIxN+4ubHbm+
OdYZA7s5dsx+jikW0T4a1rdfBq8tjDjpr3lvv/DKG3H0vhvPSNLIz2ENGA+u
81tv94PqWsPBzE96jmVObh6e8lFwzq6POOVI7LmHfUqr+9Lvc684FtF6seOQ
4DA8B3ADOrGZl99Yc4zr2630Tq/jdXtxYVtYo1nEebac39W5aeFQ1jdnm5ld
86BzxnY+Z8aifaq8jmcWprR31Zq246bOajGsYhI9P3Cur6tcbP4yN3Fdch5T
vB2ctfJS8B3mW87BwD3llnsn9TvSXGcRfbU1UB/fzTze3ht43/fhFHe3Yu0j
LvY49HGvcrHv8dVrc63nSp0jvJ8pdHxAWlhzytWWda3dmovxVsDGzcf2T7gO
iOtD24O8xeI9/S9lPVq1Y+1cP+RML4aBwzrUL2Zdx9vxmbnYNT3O2Lg5tzk4
DEdetJ/9t390l2v3TD8mj9mZj4JtYdSuoey6eOZOODP7gBsn3y5cDE/Ssl8z
8qQ1sz9i5GBTcqiZvY/qizhGjzlA9kleOq5hczHHoP8+D/so2HfuCedcs8/Y
vtidIW46J6wHfzjGyb4J+2fhUGr8mosd65RtJv+o+ZzaC2FC10iz19iaNXyM
l8FMiq8BzTXnR/wXHmFYs/NRoD+2VgkTOzcGY+eYQM8j6BfeX2vDaIWu2+cc
ze2PboZqZuT6pj36/B5d1/qn/Rqd88/3kDVj9mXt1B4LszI51TzeK0Y+8hV7
PJgLEh/oe/CuXt/tGuxsfMv/zPe4V9CN7Sv3+KKxex5gJuaex7dETjWf76TF
9zlaE29PBfedP0MXbZ3T+iTeT+daWOnF1vemPBXEqa1iytAKO2/cSiu13to1
6sMmrttn/yWs0f5kni9PNRCsN7dHlOb6vK5vYn66kj9i8kH0ZxPj4nVo7mUc
rSdOsZJp4dKwmzXGXNeOtSN3X/brPH49b5pafpPILwHzMm/hHqD/eZ0+Wftd
+RpWejHr7WtmDjE9M1hpw7sXYtDGe27Qum6ze/vfnZ+wcyXi2e+/gUdiSImv
5TplGc6NTwE/hVu8D+/92lde4GJ0ZLgVjwR6L7F25JWwHkyzDtz1POyrcE09
uPgs9g7WgYvJyUbuAWLr0AbJzxUmmmLjrnDxpAezzlycJbkqrviUOx8G+8Mf
zXmQY7m1cXIYk7eYuh54G1jCr/l7bH7MsfNd9FpzMXot/hT4OO9dVwUG7lzG
1B5BJ560YtjcHmr0Yo7FfAcvBTF0XHfrxeZi7gX8xcwdzIn2h8LFPHvtWDV+
W5uLWytsf23WT3mM4axsYx6YnoWzX/JFWDvuNvGx+Rle7ebcyOS6Mpu5WSfN
klp31HPbPBPKb2cupm+sg9XwV2x8fNOM89r9sj8kfAzbW1udfNB5Dddd5WFr
m3de21sc10ov9nMH50KwXjz5yu0fyDF6vCf/iudiZsOeG3Cvehx8PuZaNF9z
sfMsu74i+TyYM7JfzrVzUThPHXld/PfUfwc95zzyUbPO8bNoxfZhbAz6xhf3
31/HzsF01vbgW/uL8/tKbJa1rNauYLJVTFnH+3VDzzY7kDsj37FXwbFIxMnB
QPYtm51WXGxe4vtwY/o15WvDu+y5Bv2ezi/X4GqM3FHMHD6QZmW4qucT9nps
Xuqnxnjgl8bva2+unwnYg976f6/veRTrclz4mnmMxwIWZuzN5taNm4cnJuVa
2kfeuZHNwK0LNw+n3+jX5uKV15fXfqbS7OtrdfS85SoTTzpy+n3ExanPEU/D
b376p17wGOf1Zz8XL/4f7/5hWNi52dB385n1Xi/RiDsXRZjadaIf4WIYGC5u
XjQbh4vDjeQDNhd3fY4r/uKpRSdOwztLXYpH8lKgPcOC9ohkPbWaj1rO2zFp
1pSdr2FqeHg7/x2M3vuCYaeag52nLTyNbtzeYnO717muSOeNs/6Lj3ylF3tb
WvMEMTn8BvOcdvJW+H1+g1uPZZ/sFy7uuH/7i7seQ+fh9X6dRy1M6BwP8PBU
k9r9sj8hPGsfsj+ftOvmMmIVXVsPJm4/dOt+Wcd+kocZP3Ge0U/6M+NsHTz7
IE7NYzhp7uS7fVQvnuY05jPmUWY4mI1cxpN/tn0UXt/zkomLORZsmnFr33x/
jzkI8yo0Yupsc1/wHKPnXzyvwEdhjwt83Fq7mdi1T8zFR95pj2k/q7Cnot9n
mfvKf79bn2+x/uh27ZVFq+X31dxM/ivioqbYO2uRzne8YidyA8BqsK81aOdK
Mxu0V8FeCNdaM1Pim3CNv5WngfVolowLTOxzwF9BfBc6br471eOz5+O5fGx/
tfdB3BUaaZ/HFF9HHFquK3mMnePjiMtWTJyl75Use9wYi3xm7wrc2XUL+e6U
O23FyK39rtbjd+A+tI7reE64uDXjjvnrtoq9uxp7+Uib5m25L6mlEc5tLg6b
holXXPy7v//ZLc8bNTvgX7OtPcW89jZh33zX2jEM3Hks4GLnwFhxMTohPoqp
wcS8to9i4uIzZp3q2qFrohXDxfZGXG3oqzBwXqff0YNhxiMmpvad+W9jZNqC
jdsj4XrS7A/vhnV4vuv8wnA0XGzWZV/mYuYB7Z3uPBRTTg14d8XF1IE2w6Nz
22/a/kX/5vLcGc8F33FdD2uyzcVwxSqHsZ+Z2yNqrnJ/YLr2HZPLDX0WtoQV
6T9c0LF5U0xe57WgwTPkdjCXo0Xjc2ivs8eIfad/jsdDmzSnw9Ssx0dCDZOc
r+OtJs7K5+ibV3Vi52To65b+mjX7XrKveVVDpfOd4Qvhc64ZHhq8Dmjp1nPR
fJ1/28822rO7a/I377C9K/Au19vXA73Y2jL3EPeBPcaTLk5fGZ/2B/N+GtOJ
l/2655Xh4j53NLP8fpNjAQ0QnnP+iVVesvZQwMWtU8FWK35yrFe/935ar8xn
Wy4JsRTMm3HNuaU57s2eCuvFZ15f4hSdw8NzBtehsM/jiIvDVme1OLqvR7px
a8jov+5Xv+4cGuQtg4sf4bSj7VbvPX8KA/d1om/Urmv/zVHM3xkL+ztwr59F
dHwjfXWcXnuduS7UCWxfRucjWXHxlK/kESZmH9N6c7HZOB5j54ToetBwcfTi
tPgk0oins2Z8xMswM3Xw2jfh3G/kvjjLR2EONE+1bhwmhoth1imvWrTdjheb
PMV818scP9+Hi5134QoHr7jYbEi+5TMuzrnCsJN/l/rNExfbtwxHum521mf/
4WEan5lZ8W2Yi+19XuXUcH0/cscd5XQm1s6acXMxY4fWTMtY8XuMtmauhYVh
HXMGbAYDmPusfZrpiPlvRqCuB1w81WPolmM537DbFKfn+sbWHlfMC7vCumi/
5sTOnxGNl775vNvDYU62ZowHo+v4tV/Cy2Zuc7GbvahwMT6Ko9x47Sc2F7Mu
XAfTTc/7OSYe4xUPs7+MY+cxxlvCceFYGNpzE1jWTN5eCu6DLOFenmM4Ds73
g+tVe07CaxjZ8xbnonb+jbv8FrdcJBnDyadjjxLPc+yHOJrT+nqEizsfh7VQ
PBBmO+cvXvEwDQ3Mv+/E+/i58Iqd4A/2R45k9unfeOeTozUXWwOGR2FNeMv5
4Ow/OOJi9Gj6GK3dtSOmHMbNm5NHpNn2Ua34KKYu/W59ndotNPfTee6Y76yu
26NcfGV7tGt7wrt/Xtd5jCdfBUw6ce/Ku9PMPvnbWy/2sRl/+7PR7/P56nhv
l2Z89h3Xzmi9OOuiFbvmnOtBO68wHAwf4zGGh+2TsM+YmDvqhZiH3Vxn+kpd
D3MxbIp/IXxqVrRePOVVw/MwNXuKVzkoclx7KJ7DxV3XOJyN1xfWnPzFzcWT
Z8BcTD3AroHh13B155nIZxlz+Lg1ePwW9hejfdMH1/fYavvUGKSPU/xhN3s+
0I6P4u5g4vQ9zxrgA3Nx/67msyzzmwxj8bvfngproc2bxPQn1qrrNsDF4ZsV
C7uF6yYuzn66LjIeZNdEsye6fQnNx45Tww/SfhFzGZzq/HHdmht5bQ52X8zP
cJjzIDNHiXbr3MKey7i2ofNeuA7bpONONeDcMrY9j+nzQ1enxscZF6Oj4mtg
jB3zln71/IdrniXxemZzL7mPrFGz3xUbNw/jp+i5Svad9X2OzcRmY57D8LcI
+xLL6HuPPBrtE+o5gP82w8X2Fufz5j1zcXPqqtlb7DoN/C7DIEe/+60FZ1/w
JVzWmp11ZPySYWMa58V76n1Zh3Su5MlHQdzetnzji9sSvwZejiln8arle1M9
j6w7qscxacSr+g8TV2/PalS7BU/0GRdzP/Sc5hEeey4X4zHmHByflyXXYdPa
b/VWjnwTeCCOOPcKm/Z2zmWx4mLnz9iauHilCb8dXHymF4dVw7iTxxjNGEaG
j83Grgttv/DKQ+y4u/YTm3vbT+z3Uy1os7S52Dkhwrc0tGNyGZjh2ks86cX2
+5qlp/rPsHhz8cqb0bnXprxt4c6ttvGNU+HSK3rx1Ig9Yyy6odXa2xy2pM/f
fKvxtNXUEEejTzsmr+PuJo14qhmN3mx/MjnXnOMiLR4J4gvh7ImLw8B4Jxyj
6d9J+I/f5c7dxm8pdZ559s9vr3NB8HvdPgVYB94xF+d1e0JXvAUXTxrnpBdn
PbU6XPt41exNDj/bZ4FHg5x1K+/FKk/clMOO8+w4wfZPwMitR8NkOT/yjjnX
B7UkrLWa/45ytXWdDef2Zb5zpBfjWcm4dy07YtaIyYOH0XC9jhwdzb++7r7+
+GeY11lHz7rNt33j3hWjm5cdb2c/hbnY2j9+b7we6NseP8415xaPSPJSMAew
V6T919QAJGdi30vOS8G8hHvFPvMp51fn5J38E2jLXua3v/0P6MVwyeRRhb3N
Zt/4vnfvrE2Mkvfd8W6wlHNXuO9Z7zom7U+AqWBo+ku/Wk/sOcQZD4ft7WdY
5aTgeNRyPuPiVV0OnxtLai27OdarnwGYvxhne8SP8iFcZTfPn/wd68XMW2BJ
ag1mO2JBM15n+ZO5ppMf4hEm7XuXmjCrmthcD/+dwMqP9uGRsT27Fu+4sWTY
doq7S6OuxuSl4D05h9F8u4adPRTw8VTnLp9NNULMxX5tNs5xw/HxO5uLw2vh
0WbGPebs9ft6eFOetl66Zd/kUrMObL4mH0UajDxx8ZSj2AxJQxcO83EebwcX
M1doJnZuNZb5DudJc/0PvBSuAwK/e3/0+woXp6GN44PofMbm8zS8IRMX5zNy
XB/F3cEPrg1tfRU2RncMt5mdyc3bPoSVphUWcCxSfvPDBcTwtXfDMYHhhkkX
Pmrkd7D3tHNdOd5viu3a9ToxsVszsWPjOgeF/dOwdzS97Cd+islvsfJ94EV2
njDYiqXnAxujirdW9T3gOtiReQxcB7s5Jq65mP52Porows6DbN0Wvu85FYzM
Ne8+m43tKbGv3LkqfF7Oq00/qSODBs95TRzsawsXO58IfXeOZDNzuNh5lPnc
17P/LrLe/gs/57EuzDpzMXnazMXk2zJXRg+1pwH9Nr/xYRR+66mZ0L/xWUdu
LOu+rQ/iPaC2dF7b2+E8b+ZkfuOb38nJZW3RcXn23uY8Vs/JV3kwVn6Sbt6G
403HSh+t3T6Xi5v5WaIXNxe3/8Oe8uYqM9wRF0868JXt/b27+EDlnfA95j7j
g55qjExc/DI83Jyaa2Yebx+H/RTk1rBH/svJxUcNpkQTXnGxfRPNxa4Zbe23
deHWh73O7GwmTowdOrN5uP3H8TXT53BjeA6vATkSmhObwzru7iznhN93zgr8
G+jNcLE14xUXn/kE8BFnmXN0XYuzuLsVF6OVdsu+8S50H+FgNFx7gR17N3Ev
WrPj7SYutk5vTdhcPDU8IejFrgFNy+fRhtGK0+JLztLPbfldb/2JZ4tmC/IO
ZGlddNPpbvkXYGVzszkZv6i9rbA5v/3WNqk/HF4IQ1xh4eZi4trsT1hx8cTH
sOkU++8aePY+tI+4WYr9Z136Z53Yc4zWpjsPMx5caqKcNcb9Sl0Px8u1DwI/
jWP9WhOHP9E5Wxt2rg04ED+F8z2gG0/PCKb50aSh2u/s70w6Onp27kVi7bh+
1o/xTpCjzeszV2Fewnzkzlt0a3i+mffh6XBsXz+DSJ98Tu2n5u/O9+IRF7eP
E14iJs952LKOz53Pl6UbTDJpxeiV5rGwMXUxzOPOvcp6769zXqRtz/ZuNfGm
uDW4GG+E2Rd+ii6Z/mRf1k/RK82/9lc3a3J8sxn97fi4SfdtXXjVmo/R3JuL
nAeh+8r1soeC7T3GHuuX5UzrwMxfYGHiAD2+nquc5WrrOcnb0Vf6yzMEx+A1
l3Mdk4uZueXkqflycfH0PfI+RGc9YuOJi/1+YmL7J9CRzb/UgGY5eSmyLuxr
T/JWA0Te42ybfrzxP97Y+ot+mIZeOHEx/lXz5sTFq9zF8DB1OlyjOCwMF1Pb
GCbm9VSb4wob57MwXc4tXMz5nnEx+X03L61qYNtH4fx1ztMwnXv7H9if66U4
dq9zF8O9rjFIy/7DrvYd+/p0PuRmYvJlpE/5bni3uTj7w0fh80jfXfvLcT3o
UfzO2/uKPgUfmtnQZO3XhZGyfpW3eOLiHLtr4bkW2aNcTN0OMxic0Qxs1mgu
tvZm9jcb22fa/oyJi1c5MszE0ZJhIXT5Fzzcw5he5eLpe2zjHGvtNwi32UfB
veTzvquPcaujnGuZ/YZ7XWMQ7/NeI/vGkTA/DNyeh+l68zyj53Ssh/ezrTVz
s3HrtfbDwL9mYc7dsXj2uezzAenIniOQf9D+aecmaW+SPcR+fsPfJvnZJi4m
bwNeWmp8WC+Op6H9Avldf/WVd++8gsdylWfKMWf2PIYL0KTzfed+g9Pw76Jb
w8tsc8YNYax8H5/txE7Ratl24gl4hbrFvZ15phnR7IluPXGxdVDq5HX93yv5
J5qNydXWOc5o1qidE8+5qz2u7VWdxv8qT/Y+/J7ahzxjYP7F3MHbb3rxQiNu
vfgKE58xJmPm/na9vBUX24PT87ozNp7G/2W4mNp0MPERF085KXhvbdgxda7b
0QzcXorWhNM357VwrrbwMHne4GLq9MHBrp0WLsMjQK0LsxYs2z4Kc2rru2Y5
XuOXtc5pFqa+B36Lqyzc9T3wNJspr3AxMWbEx2WcnD8inEgNbeLvOvcD/gQ0
due3oM4c+0Q7hmWt+aKrtxZsTdhM7PmOGbn9L8T4OX+GfcjmYs6Zuh6cs70R
5gd7Khxb59it9lnCxWGJsA583TlqO8+X9WL4Cr24udhs9RwuJgda+kmOiUk3
Nquuakg043obfBZw1PScvbVm5hpmLvtR6Kd9xc1JnSuC8e18eP2+a7DxPdej
aB8y2m/G1Oe/0ovtsbU/+s4XrRzAvO4aJM3Gm65c9wOsm+cKnuvAxXmdZefH
aE3ccXH4b3wNrRlP54rGnGZt3PX0OjeftWS8Isw1Jza25wku7hxtfmZDrruc
S/sXOoaM2s7OwcZ79GLndjtiSvRY/853vmTH8XGs5vH0MaxOX9u7YbagHkm2
6TrRWw6D2zPtMM2mH922b/aFy3K8iTn4fOJDczEa6FHcl/3Gk4fijIdXuSyy
n6nvK734aK6w4q7nMPHR/jIGuS6MI7zu+tHZlmcCR1wMq05zt6n/R/zJnM7r
cm9fqcNnTzvndpWNV3x7pU3ng2fBnDtxcXIMh0EnLsZj7JwRk1aMXgzrUgvP
PIwWbJ62D6PrhcTXnO8lVxyat2sfoz0e1asz53autel7zaRTHgpvTz4KakCT
F2PKL3aVi83k1otd77obenD4b19309Gbh2mTj8K+E3zD9ibfMXjVALFvmLGZ
PBR4iK0hT/wLA/MaHRydGP94+yfyd2cu9vnntfUzONgs3PlO+W22tmmWgUn4
rSdHLjxE3gaeJ7ePws+CwxudF8y+1ulZ9BkXE/tF/9qX0H6K5uLOe2afiD8n
/rC9ts3VHSPl2iJ53bk92sPsmDB8KebiHl/nRZhYd8XF/u7kMyaPSD/Lp20e
j5s+al8A14K4MHtc3PD6wsX26sLJaKzuZ45rT3F7jI/iN3sOAR9bE24/BV4Y
a9981l4R7kWfp+uJ4L8OE5O7bhofP2OxJm5fC3Ot9CP3Va7BxuILJnU8Hfxp
VjVPT75V/xYfxTjZO4E/Ga8yx+o6evSHY6Mfmxu6T9nGnJm2ecBuXIz/tnmr
OQ3t8oouZw8s3GS9sDmo9eNw6SN5is+4OOfffc15HvkoHuGwK+x7xsUe/7SM
gT3p9BH/iveJl+KIi6e52aO87vt64mL3Yaol7TZ5jt6uecXqvpy4OIzpfGyd
r42azysvhf0TqZO38ky0RgwLdx3oZuLJt0yDi1svdv26yRu84uL2UqBp+nv2
FZuNzdVmv1W9u0eZ2Fz8qF4MN8OB8PCKic3F7XuAie1tho/bm4wPg3kG2rDP
u7XczjHhetTkcLNuTZ/sDQkv4zPGxwwXk8ujuZi+w8Su1eHfV8fb4SV2XFF+
l9GI4WLnf4CLnfPKNSU67q7jhHje7G3IaWWevNKik+FPJc+VtdyOuVvV4rVv
s2P32kfhOLl+Bm9+5HvpE36JaM5hGOePa6+yY+2cfwI2NNuSC2/KF9bbTTUo
VswI7zKWExcTn5el2R5d3VyYRv1CGvcVfPxC/oohtwbH4/lHYjodN8ocLfs7
O083jt8+GfzdzF8co4fPmDkBdQynOYC35RxzfhkTj4t9zVNu7ilmtPOjdE4J
54DY4phu9c/6fbPx9Jt71cMZnuGYYV5Y1fF98LG5LawLA3f+DPRvjoFfleZa
eGl4QFzveuIK/CTm5taX2w/gPsJHxH81F5u5Om/GczwUExdPzN8eb1qfo6/r
c9isx80t+4w3h/mDcwcyt8hzAuc9cT6IMy52a758Dm+2pszzAPvIr3DxI17n
54z5FS4OfzqPcRgTzoR701ZeinAz7Gx9F63YWi+asJm481asYvOmGL7sC704
tUZWXHxVL+5cbZNmzDb4IZqRrYuGhc+4GGZ8xEfhPpLT+IyLYT9Y0DzopbnY
7Opcx1tM2+uf2vkYRjYrZzvOjb6ad9GB8x1rvdTEY3u+k3NMDjb8HCuepqUP
5GRje7Nz5gnUd0HjzuvWgycvpmPbzXl4XB1/BRO7Tkd7QHltVutcs2hd6Ix3
9XNvXOx+mWGbh63xwvHW9Bz7Zm9xvzc/h13DrK75bBaGfcgxCwPaXzH5i3PO
zulBXgrH3HUuY3TFriG44t1JB20GvsrFNHwpeLVbJ0cP7nOY/CDNi+jB9jaQ
5w9dlfdcW8fN5djMHVwPhFi3M714aq47glcaBrami9fC54W3or0ksG7PN+Fi
/D+tGXuO1fNZz3XtwTEXdzMfm38dOxZ2tY7r31y8l81P0+88OdRgiC3nwNO+
rRNPGra9mdQr5jt4LeyTzv9EGHiKu7OveuLb7v/ElhNPE7OX18wvjvRif3/y
FK/4eMpjvPJRdN+tGXc+CufB62v5iM/V/GtP+uYrudVcpFFXJdcqenHHMHJP
NlfDxI94jJ/L+px/7yP7J2+G6300G0/3wZebi6fWNZbh4jAmXExN6COPcVrX
3Wht195h+y1c9xmteaofPenNvE9/6fPExRNLtnZsHXb6rL+HTjt9z5xrLoaN
XVu6OfpMPzav5zVxZtQoWbUwJdvSiDM70os73/Ce3+7W4lee8kqgM7uvfV7o
8Wi9MCue5a6/1+cUrg/Ppq85/yydi9i1oGHj97zyzq0xB2j9PPuxXtz+CX82
cTF1JMwKzRQ8Aw9/rfgjn8OHZk90Pee0whNLXOCKZVvfTXMNsvQF1sz5tC68
2h/NPgbXxcO7STwZtajTwtLOiQEnb+/Fwt26fp7zQ9s3sPKcNB/DhZ03bRV7
5884HvosnGmWRbts/wjc7PNoJpxeh3thROLw0JTt17Uvw1zMufKcIteI3HXs
q33uk++k/e17fmHH0d3W23tvz3GzL+/ZNvMgzst57KxD+zXj2PnZssx5cj/y
fKPvLXuLo7/aX9z6LCzMbzwM6li6D//QZ3Yunn7PzVNZdj42+Ndam1ko/eO1
vc/maH/H54C31z5j18NLc43hVf/NsxNn5jPmBc4P3DkpphprPlZ006ta8RkT
2z9yxMWOu7NffGLIPn8vySkCo3J8+psxd7+Yr8C15Aqk1naOxbXPNSUXM7Gf
2e4nP/QDhzxsLnUu7OfqxZMWi+8DLu7a0M3n7feZ+vSXxcXRXR2/Zs0YD8UR
F8O+3mdavMnWiNGNo/9Go7Zf2L4LmnVk+5a9PVycdqQXH3mBr3w2eY1X34X7
moupCW1/hrkY7dl1SOxLdq7kIw5+wV8cfeiWU22veXHjx4mJiZuzBg6rum4e
HuNsT21o1+/osTIrT1y8eRxefytmjuuJF9peEPd992+8/lYNETRg2Jlt0IlX
fmzzL7FDU52Azke1a8a3GhIwyIqjzniLvMXWrelLuACWcS7eHK/zSHQ8m3Mk
WLMkH5qZduWjmDzHZgt7iYl9QmeHh6wXs454tcmzgr7d8Xfmyqy39tua8aRz
Zn3n0H1BB1UMHqzI95zLDB0TLdT96vsHjwiNvGfmQuYprq0MEzNmrgvjetE+
PvMe50Yhtxvaru8/xuGMi/tepj9o0Z4L+hwYg2zHufpzaoOkoYE7R0f23V6T
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
jiZspoV/Wbq19xi9GL150p3Zhn5ZL564d9J2p7g7+POKHxnuxXfRNaNX+Sjs
04BtWbfShCc2xqNhL8VKU3U+YPwOYdC8z2tqJpO3mOZazNSOs2eB3BRZ5nyy
TN/I1UYsIrp8+1wmHwVsbD8Ir8lf3OcZ78TkH2kNHY9FWl5P/mOex7u2B8/n
vc61yWDncAJM3DU7eKbfz6f9eddXWz6zv9W3c41ofJQ8m++6ZfnNd3xetrEW
SewcTHP0LHqqy/ZcnfiIh1snRpeEuewvdv/iFYEtpzwUU348PMV97aiVnKVb
5wOBB5s/4bOMFbFmvl5Zl3PpPBSOD8QT7thA+4jtEfc1bJ8E/Gxe7phA+BCf
AevSR/pgvoepeW1OnfKktXfF9bv5Lnp487lZHj2eeDr60/7hvmfZ3rF/+KXe
zH3x1u+6dS/rVbASy8kPueLi5o3WUu2H6Dp7ExMT22QmXeVr62P7GGZo+zfM
xWbflV/YHgp7FCYPr7XY5uKOA/P4H+nCrlOy0oxbNw6HnXmMzcWM99vNwLy2
DzeeAhr59KzxOo+f69bhRZl8FObIzh3HXKR9FPxd2INu/uVz68Y8d9l8Gjd+
/+h3fujumnf+OvpnHbr/friu1n2pjcJYtXe/ed1+KXvIqd1Bfjb04mZd171z
jY9p28TwoRVnafaFibMeroWl8UXAxV3To/Vkjm29OG3lI1416tah/zbfPtJa
kyamzkzc3G0mdr7iyV+x0ozbSzHlbiNGDt5FP+Z1zh1fr7nYem+2CRfDv3iL
ic2Dj7NEm0583lS/ZBV3h27r1vU5mom3Pt9yHlsvdg0QbxsepvU+nY/CHAy/
uQ40bMxneC86t9WkTU7rz2oMr7i4ORP/L3qxdevWePmMHLHOTXfm0/Szebj4
UTaeGPiIi10Twr5Ue0WZ05iLO9fHrsEqJ8XKd9z8OzW419yWhofC8xFzMbzX
dTXsObirH3djVnzAPpY1V/Mw96i3sbfY36NGed+71ARpz0Ifz+3Mo8318BzB
Po14oY9qHra/wjW3pzzd3CNdL8Zz3WyHjnvkoUBTg+2m2hBHerH9F3gbmis7
9wQswRKmNSN723CG4+DwOliDdn0JPBXt3Vjxe8cA2udsfoZPOseEx2PiVTRj
czH7sL/Y7JvzYVxz/is/heP8tmfpT6x5pBfnd6+5+qpWPDEZGqX5EOYl/4N5
mN+kfRvllSCWEp+Ccy7jEe+6y3zX68hJwX0LJzYb+76ear44z2HPe3KMcDF1
+LrenfO35TynvDAwbN8DWeexzrhxDfoZkK8DjTmI69mZi52Hws1a8qq2xzc8
/e+canRM9TrIRWHfBlzc+rUb27TH+FEudt5h2PSqXrzSnXu9tWTnruBz3nee
4omJvQ1+jKu17+DAKUcxzIy/1toy+eesD+/16T7+4Y1/s4SPu54zngrXk7aP
IuvbQ9zxdmi71npbAybPBufh+tDOX9zcn+2jT+Nlzradh4Lf0/ZTmOPMp1e4
9qW5+ImZrBW3Zkwt5dY+yR1G7lY8pPhjXTNjxcOwZzPLxMV+P3mEPYaPeCrY
L3pf1ndsIF6KVQ2VzsM71e5Ig5umeULPS8yNsJq391yKawWX33k6bvnfOIfW
ex1/1zkp2Df1PmBYvku/HC/JOjxA0xwOLg47T36NXse87Oye5nq3B7vrPK/y
MnMfuq7JkQcox+A7fi7EOE2//827cLHjnaZaBKtn8nCR/Qbm3NaOzZmwhHkY
rjCfrnTi9mqEJbMOj4PriUyeC+vT3a89p++tuWYF+m/HRTGWL2jGt2fpk2fV
tT3MvWF7s87KZ9He2vAQ+59qQqe1F4Fzt9bbvgfOvf291n7TNuZ9OqfWhWFh
9F1zMeceLobd0Yup0UidlvZLNBNzPe+4+Ok4Kw/FND7MGft9rmH6gIdhyv/t
PMqOj5vyKG/5MnT9PY/yfbXSiFd8nPPLPhx313rxxMX4KFZ1PchHgU7sOh2t
+zYzt5fCvoz0r/0S3safParxrnTboxwW5upVzopVbjfrr/gmnO+tcxhPWnEz
cVrnpWjv7Z1eLC7eNGPVl2tmJH8xtTs2v8XT0vXtnLti42T5KjhX5iDmYnh7
8j04fu6u38o/TLyc8xiHka01e5/4oWno3V1zzzkcyJMGh+X5eZZ5Tu/n69Tg
yHbtn7jCxeiaL8PFvN5qYNz8Bf29sI01PjTjtLCWPaaOJ2y2yP9r4t2oI+yc
Ele14yMObpYmhy/NuRasE9pzPXExvgpYGL6aNFtzcXtLXGcb5nUuZ+eAJueB
5y/O34v/2V4BnvWbeffcwaod4nMwI9qHC0d2TrPJF3zl3k0/zMTsz/VgVnpx
z//sGW8NuHVhzoGaJJ0Pzl6Svk7238PZXBPyK6bZp9m6GLzrODnyr17lYp7L
N2+2v3fld2iNDTa2Dow2bN0ZnjW7si9i6eyVyGfWiN2H9lXYn8n55Ls5V1hr
Yhx7jpuLyZFgn7dzLDQXtX7rehzEkTn3dI8jsXfNxrzPfqw3NwvnNfzbtbWt
8dKageFQ8vj6O3CzeRneT7/ID5XXPIvAi5H3jEHHu7Vmm+s2cbH5uMfIsX2u
c8d7nomg50cr7vH3a9jYnhD/PZGn7oyLz7TiVR0buNj6LLy54uKz2DvytE25
hvFFOP6udWRzufuDRhxGbha3l2LySbwMFx9pwWE9ewRcA5p1Zl703iyd/9i1
OiYuPorLW3kpuoX/YNe7+nCVc8LvibvDH2x+DP+i3+KZMBs79g5tuOPujrj4
ziPhfivnhGtAu360NeLOVdw5l830GcdfutU0MK+0nvhC/QbF2Ps59Jlv4mXa
iosdFzdxSfpBHYa0sLC5GMaFUcidzLHMdTCUPaewa/Mv68zLK42YZ/7Usdhz
g93GmX0w3vYrwMRp5KU4Gn/7FFaxdvZxT7r5pBfD6uZi8zotHEsfwsV4XfES
UOsN7qM+nX3V6Tu1AFf5fLsOM5zZXmTfv67B6DHMvYLfuNkaLTyfXb3n7aVY
5SU2KzMvYCz6c9bxd+FcbOjS+ICs+RNfyO+q68+Za/FW2qNgn0BzsfPKhsuc
q+ruOXbFT8HMcKzZNNvDvdb7OlaOvrGP1g35XvoFs8K7rTfbq+Fjwdzdx3zm
uDnye/QYMZbWvdELw1VTHCO52mir+nFwUWuG9NNsSG6zFRe3pg0n+hgb58rj
4KUbOrCX+S59COM2F1svJp4MTs/1y/eYt+TzjAlznVwLc/HqPsh38S7YW2Ov
btZZw+4Gw+MThvOJveNet+fZejF/Fysupm9TXKWvxaNcTCxs8he7th1L2LO5
mDxs1AFpLs566t0517Bj7eyhgJeJqyMvm33NzcJmeLMzbHyVgycunup0PNc/
QbN/wj6IcGFrxEee4iyjCT+Xi9FbzZdX6nrgPUZftUcCDt25+PU3PRXZpr3E
Hh+vy3fNwq3zwsbwL3mJ20fBOdkzMflI4ndGJyZ3Bsv8/WY9mht+YX7ryZNr
LRk9GSbK7y6xRuYJ+1mPchJfee6clmNNPgp+8+GblXbd+TLMxHzmmhXOlWwe
u6s58XRuYZKJi2E/WGriZDMyLIfPgfNB6+V74UM06lXejCnOzlx85C22XgxD
mbWsZ+e1mRjt2DrzC1xMDQvlKsY7zHzDGr4Z2d6IyYdrv65zrNnDYa8xOYtX
7Oqcbb5vmKOw7Pkhfu6z+7n1Yp8r+rhzQ6P5ti7eMXie15iLqcXD/GU/z3rO
3yyHHmc/7hRbBsuFT5ob0lqv5P0UcwfHsS2+XbTASWNuD7G14j3e6pYTmdp3
6S+6oz0crUNvx71914zpfuK/bv+J3zsvsvO1OdcAXgp/l7pzcOGVZ+WdYyT7
sLfWc5sp1pJjNhd7aS6+04jllbBW3DF12S/5h/c6c6UXs87+6Bw7fop4d3Mu
uZ7k0sMn3M8Y2lfBNec+cB0/31fZ987p//PFfMCui+ec1/nOdj/efMydk2Li
YvOt50adwzr7ZWn995H7IcuMfbh40oxXHmNi5Y64mHoeLL/iq965sy/xePEg
oyc7vo7Pp9xvU6NPXw4uvlLTo2t/NBNP9d3wTzh/78pPbO51jrdVCzfDmc2V
dyx8gYdprhWNr/hOb76xNmzMsutHT7nacv7knphi79x/2Ng5J+w/RuM2X+O1
QC+mTh95MGBk/BXk0LDe5FxXWUcOWXMtXgJrVxvT3HyhPJ93XbSX1YvDIM1Y
Excf7WPT/VRXGt20/aU5Z/OE48Vyns4hxjP9iYutwXuJHmzN2PowbOy8Enwf
Lnb/3PL5yp9i/fMsT3TXzu65yEovDqPxTL99FDnvjC1czHXwfZK++f5zvuD2
EPjY9Dnruf+Y7+AT3mP4LuakO7ufqGfTdVHOuBhve3O9WXelH9t7vNXUuWnn
5v/8neB5csxsPiMHhZ8NwQX+fTUbu+4F3IjG11yMn7jj5oml9zNguNK82XUw
4LEwD/1Dt0bPtYZ8pA22/8F6cedQbp+x64f4GM3ykzfbnNlc6ThAOMt5Kawd
UrOv+afzmXWdMzO2tegzv0eub3OlPaytC6/0YjMuejE1LfAuZH+bD0HaMp/D
o/YY93MG5ktm6ImLqSfNOKLRct+6jrW52PksqBme9W4eG/pCbY+Ox2suplnz
9f2T71ov5rVZ+oiB+zkG3uosYWLnpIB9m4nDodF74dxVTorwLlxMo8aH631k
P67bEVZGNz5j4Y7Rc3sOFzsPhf0QRw2/bMfRTbroVIPP/uIjnZg8Fkc87Oac
DO0vfpSJzcZosniK8VHYw5Dl9z3NV6O5co7UMGF8eiya4+Hk9gZ33jbXvE6D
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
uewPnoaFz7i4YzV5jb/Fem8a+UYm/rWv39/1Ne78bI6vay4Or/7u739249ff
e+OPdxZuLm5PhXViGBY29ued140+feLpvoF5zcfJi5Hv4utwnjaYk9dn3ohm
4is52q7w84qLu9bH5J84yj3RretHP+yjsE78+qfeqgHy9D77c1waXEzcWpr1
14mJV3px1lnfjgeCOnzWoJ0bLs1cTM4Ma8boxq7lcZd/+YndOy8FHgpz8eR5
IEbIvMtv9J0X+cYJzitgzfhleSW/4+bLzV8g3bbzKMPDNHLlNhtYjzXn2q/J
kjgn6+ToyGEY53e29xY2dv4C1tuTzLl1DCFzEY815wJXO7aKfM6ta/q4LOmT
t4GL4dZsk/NyPgdzMX2DUcNp9md7/oH2ToygNfK+76ypO79a15lDN5187I9o
uKv707VQpjGFaycunpjanmqeE+DP6ZzL5mNa14L2OO3PNJ7Gwvf5pBnzHXgj
vEUMkTXV5kAY8ogJiKFq3pvYC//lal88J8bLbB5GW7M3mHwT8ThQ+4F4q46n
av6xltq178g5h0brODrrjmiDNPoJb1s3Niu1b3TLF3TbNv33c3RY0+yLr5ox
dYwV+0OXt1/kaN5iJoZt8x3nGvFraidmrMK9jAF9w3tMLoUjBrZfnG3zmrjN
9qh3LrT2nq98O+RAJm/ZxMX2UVxh4p4fuobHERdz3TpWDt9L+yC4B5qLPUdq
L4Wva97jI55yPDgnBXF50YJh2HApXJzXU60PNGO0YGLvqBG9acjln7CPApbO
NvAx/uN4L1pzdr074r3OvA5HejExcv3a+rA/7/3CvF0Duj0U5uGuGX2FjduP
0V4K8pe5fgecHKakDvLUmCOYZV0bAx03r3Ns8h03A0cfnriYenMs03cz8K4J
q57HCzU/iu/Jq0xMHp4Px9fRfCzH3a10XedCcLyZWZpnv67RsHtl4Ugxi30V
8I/9kM7Xm9/4bEt+2DTXNSYeLd9d8U7npF21bAsbk1cBpuv8XuQ5YEzCetQB
JD+sGdTPxq2xw6ZoxlMMV/qGLxfNmLwUnYsLvTj9Qdc8q+mMV8S5NMiFAbeu
PCwZh69/11vaLronfercbq4jTo2Oyc8Cb2d/1OvOOTFP69pzxPSt+Ha1jvXM
ufpz5oI9L/F9z2t7m7k/+HvB3+tx537PPpw7Aw14ylc8xeD1HIG5qT3FU95v
npHwGw0rTvowuYiJu3fu29Uz5Nb+/L7Za7Uf+NfcSsv7rjENb3bNDtfSIAcx
PuMwb8f4ofG6ZrXzHDt/W8dbsQ+YuMex5xnT3AG9GI1w5f1t/7K/j1aJ99S5
ztrXMumIExfH60CtEHiShvYLC8K/8Ktzb3AdnC+ka69w3Mm7zLOGF/LwVe4z
8+/Ka0GeN7iYv4WVZnyVi51DhPMjN9+KiclJ8QgX079m3+bi9l+Yi/FHOFcb
OYMd7xbmhD3DqnDxlNOY1/Yak4MtDTYmB0Xe459Af87rsDDbNTfne+ZiNONm
1ak1K59xcfOxNV/WTRqzuXji3daIV59fYWFv116KsN9WH6M0Vd5PXBytNUv2
6/p/4UdYMxyb19QNcX625mPYOEte57v4XbI/9HoY1Ro145Hv5LhpsHQa2rHZ
3z7l9BG9eM/JpjzGHOvM7+DaHn6O7/wKMLDrMlC/14xhtoAFqKNBLQJzQ5bO
uQsTEyPF8oiLW/u+820qLss5b+0XtpeCZ9X5nPOlxgQ6XnjDtd3YLueZMYGX
4Ct7Lna978Zi5BVzvBp9QStGS/X8hmsJFxOfN9XrgJn2ete34xDnl3137e/2
i8BzzcXUCmzfS5bkvHPeaS/zOXMQrtPdfSkvA7U/ruRgg4U5R48d86583not
S+5lnjGYk3m2wTzP+epcBzBLxqVrSbdfwrWsp5wVzhNCThCumzXjvubkHCFv
AFxsNu5cVBMbr5jAenG+03qZPaNXvJrm1uZg+0XRusOt6MjksGDbzjNhhrZO
7jp/aJawsf3B+K3Nu/C535uds4RZJz7lcz8P72fkzBWofez9mKlXuj1+3ZVm
3FxMvKE1T8aP9T02WYant1zD0n6dv5n9ElfoeoXmYDy75mT2ByPjo7G/uP0U
Xsc5OB7xSDOeuNgeGrzXaOnwKR7rM72YvnSuta7zzX7IweycJPaHWy+efDLm
YvRZWLhzUrAuy+SYCMuai6caeDA0vmHXt0Mjdm3nT2z/f97kZ15bZ2ZJTT3n
vcCHYd59lIvtS5j2Ywa+4qOYuHilBzsf2yMxd6vYvdaL9xzGg5cCLibvGTnQ
wpz5fs6X13hwWRKHB1c2C1trDgvzntfWnftcp3wRZmdYmuZ9OfYSXRgeTt+p
4YFHDs8xerF/1yeGsNbbXGwtrbVkPyvf+Vp5f+HCzqlgfSvfsx/CdY7NlGc1
PZzLtjW49DM8gV5MfTD4zuxhfyf8ineBPlMbo2u5sf/9mfjt/QtcLBZmrBlT
9GWac7k5D0XGizqBjs3rGD20bfqe87LHg9i2zkccpsp5bnkmnr7j3Nfky2gf
hRt+FOejINcH+T7w7R75ftP3bI9f5cyvAwvbDz/ld8u94n163mi2xvuAdyXn
lnHxPK/nfPaEN+e2Dj15i83H+Kxdb9DPAjzn4T3b5l7CC2ruhWPSzMtmQvy5
K5bN7zQ6HDlW0TQ7h8DEGDBj+oduay3W8XH4JJw7wx4H3sdbgT4M74ZFfE72
GttvAPfZt4yOjEebc510YdbTf3J+EY81cXE+X+UUsJeCfk5asHlx4t8jn4vj
vMyUeLb9e2IdnvH09nBlXhPLiQbL/la1v8mBnH3wmrrZu35981GgBU+eCZb2
I3NsuNgabDe8yLsGX3nl0tCcuaa+1+H1Iy7GY9zN7Hs3V7np9tN17Nxs/Ywg
6+0vPuPiNPRe+BQOzrYTF1Pb2d7hrg0NJ6/yUjQbw8foxHBxXmf7cM3K+7Dy
C5uzplp31oPP9neFi9tDfKQjr7wXZ1wMx+I1iI+i80fAyK0Vd50NtGPyRMDC
LO3RnXLTTTnb0Iz9GrbG+2v/Mq/5rHPHuY5zGjq2NeRsk+P0flubPvIX9zNu
sy86qLnYNaVpbAtjkL8XLSy/zXDExMbZB8y35/F9avYthNGOdGK31owdS8fr
7BsuhutcR7hzatnjCQu6lh0MbTbGH+rzQGu2Ft3HwLNB7GDG0uPTmmrXce4c
EV2vgzmA66T1XMUtx/d8I/MLf4daFB1/x/0F3+JP9z2Grn7kE0b37ZqGZ2zs
e3rPkaGcKo4zdbzprhlLJ3Y+jNzn3M/Wh5uT07ifMmZTTWjndPFx2MZMbJ8L
x/FcredCHANtC+41H680VZpzC3dOiuwXVnTr57n5raeW71RjF05pxnQeCrgU
tkEfRnuzRmumnRgXNmb7vHauYjf7AMgF3Jqwedj+ZY6xaekDtxJX53oW1vnS
8hljnH1OXOuczvYhrHwtrSeTo4GYRPT/jLlzR8B7Hldrr/jE2RdjAhvTJo+v
PQNwMf3L3A0u3v0R8laYr53f2Ayd/doTvGJi+DljwnyMetO8N+OuaoxMvg/G
L+vtF3J+Zecw9r7w46w8xFO+kc5HYRam1sdU8w5PA/kl8Et07F1zMRowOrE9
E2jDMDfv09ozQU6LrhtiNl75H864GM/w5Etuf/JVNkb7nfTicJsZ+YyNV/xr
Xu4cFh13t9JhO/8E26eP5mG8vFsOiqp/x37Clngk4GTmFSvPMTWYO8cbHA0v
w89u3pfft3fCx4CJ0+Bx9ONHuLi9ECs9y5oxtZYnFuW76GvTbze6pPXQvCaP
r5/TX+Xi9myaieET/L7WZfEJONYurzkX5zQL67PdNFew1ufvWUPOEha3L8Oc
k37lWOZiszE+Co8tfojJR+EYN9gNvXjSHmF//MB4Z9g+2+Yc4GafJ9cSTdhz
FuvqKw24c1DDjs29R1x8V+NF3h44294he4udZ7nj7tJ355c2B3vs4GLPt6gB
3XU7pni8no+ZjVubnq43Pha0Ln7/m4ntq2jvAuzjGhZwMb/XjkcjV0OYsD0V
Hafn587mcngSvRedklhA82jzvHVMvreqKe1cFGyLzuh60Ty3n7gdJnffnLON
toq9y7Zotqvn4PYYT5/jp4Adrftbi3UeNs8x8CnnHPEvMDad23eaTxGzyDig
qfo6NRuzz87bAXvSZ19HdHH6Tp2O1p3TOoeb40ipObjSjMnHwfVH423G5fkC
x2v/xqrmnfViPz9By27uzTjwfGWVp9h+mN6m62XYU+w4PBq6MPpvczGN3BFo
ydk+nGv/hLVgM7D1ZDTlsHiO5ZzHExenXfVPrPTiR+qBTPv0uiMuvsLCz/VR
sM7+4imn8ErL7eYa0rCw4+Fc/w4Wxi/RdT1c7w+vMlotnHoUrzex8dTwTuCV
wD+RY1kndh1omvPJrnQ512Fz/M9RnS68tM3ErbfilV09489n9I9Yu7AX+cDg
vN2Xq75OfJxtnO8L7oCX7QfAD5ElWp051d5Txw2aj60pwtJZdm0P68twNsxM
njYYqHPMmYmdhxcfBb8HaMxTrjvrw67l7FwQk8eYXCD2PeT8uJZ57b7v10p6
rP3feLHtNen7sf3l07yufcQ9v+NeIDaUZxnOuXJ07/reaa+O53nNqL7HyXHi
48HneKZ9TOvD3ZxHb4qtbC7mGQa5tRyDZC+A+aV5Dn6Z9GL4Z1WftrU09E+Y
2LkLqEEMZ8FLsOrUT/sqvK1rR7uGtOt2uAa1v+Nn8Ky3H9na9OQnbh+Iub49
wGEvNODJN8p75zBAu5y0Q8dK0jhG99/+cvuTYU8zIvXAoyU7HhF/dO4vxsjz
KteMaSb2vcXS8XCue+frge5rL469FJ5rOcaPcz/Si33OGWeYGAZuJobh01fr
9c3ANJ+/tWLnp1hpws5J0XGT3dqvHm24Wdj68cTF5uOwKhxMs4/CXuSJe+0l
toZsfwUeC+fCWOnF5uIrujHr4WI8FHgxHmHkR/XiK1x8NXfxymNhf/ARE6/y
qNHwLaxqecDFztWW43vsfQz7kc3FeCd4byb2fh7h4jA8mjbeYx+P49ubzO9x
cnNd8WXCD+2VhftgmbTwBv5YP3c2U07P5vsZP/nUOD4ehMm7SYNp3cKEcKn7
AhtZI3Y+CvwKzAX8/Wbibubeldd2Yk3ncOBY4cVm2qxrLiYHR97bt2zPANdo
YmPHPoazknOCOEDHy3FPcI/ktbkYrqafjkl0vjLi5fxsgbi7rmE3+STQdHeP
g2ppv8DEN09Ptu26hT7+VFvDngd0XbY3G9tfPdUknPwMaM53dcmVJ7ufM+AR
7rx1rRdPmjHzr1wL4oNgBXsfnOu2ma+9AbRowniWs0/2xe8+76ffbOud1gTb
8wmXuM5dx+K5xsakA/u7Xt8eYvIm5D317RxvZ+brPBSst8d6mmP0GIRXcv6M
01STgWXGiGOyr3gLzM9Zl7xpZmJ7IvDLej7Sz/y5P6ytd44N8nq0bowHg3rb
9t/Az5N/Ak5sb4a9IOjtadRZwZfdY9vnRA086+Pdj9VccNKHp8Z9Yv8x52Wt
f8XCvM9YUb+jdWBz8eSH8d9W30vkX3PsXRpeiq57R/7gSR+Gld2yfTzD5C2m
XgcMbe3YPAwTe739xUdcDEOdxd65OZewfRQrT8XE2FM+iomL8U+c8fHVOh5H
DS/Fme/3rOXcwsXRg6kN5zzHZuJshy4LU2e8wrtZ5v8ADIov2e/NritWv8rF
nZ+YfqJNd8421h+x8IqLzQ/E05tdYQxqRYdDOq4fzRn91RpbcyI8CWPAvCvf
Zut0NNcMdnNeMPMrPIwuy/Y5V/h4xcMTGz+nOcdwxpEx41zwI7eXwjUKj9pR
LUH7HnzNHSeIXmwdljkLcxHy0XE+aMTO1+xaF1drJHJcs7B5m5xuZuC8d00a
zgcPdM95PFb2/vazEvsw8BfDoh2zaK/2NmeRjzx/M3dsLOb3s5qcDx5jrh8a
NLm0uxbixOUwqLm468qZjckjdZQ7Ap0X/6t/6x1T17/v/l5zMQyz4lpY0zH8
ZlI/bze3OPcErORtvb3ft7/WTEyeOM8dPJ8wp5s773zBt7zOOQ4M41wMmw6p
+sE837dPubXFfoZOPmDYba8bMtSa7pwR+Byc6455gnX6zj3N/Ig5F+MBGx95
GNLwE3N+zFm4Fowr9UZWTGz91hot8aFm+mZi/NXNxda10ZDR5H3/NwdfbdaE
3aacFD7fKUcbDe33L/78z+5qesDJU06KsHLnGcYv0bxMbQ/2ZSZme+eo8Geu
e4f/OHkviLsLbz/qozjj4s5D8YhePG076b32C6NPvx0MvGpvBxczHuRAdo7g
NGqATDWhqa1sDnVtkLxGI6bhc3gZLva+6JdZ2R4KOJw+oiueMYh/n1svhiVc
a8OvW/MyY+b3fMVsMAuMOulg0/PpFQfkWPm9dV/StzAI2iksbN0Ydsf/eZWH
V0x8RTfm+/C3Wc5xWIyt8w53fufmZZgzbIUunH35eXzH47WWaQ8v67NvxtK6
Pefr+2D3Udx8L64J2DkDd7/vjafxyzifhHOtudZg308eL+I+4WLHuNnX2zyc
hm7Mve/xcc7gbsyzHAMJk6cv3I+OR9zzwFDT4+YZwm/BnDHj7fwh09+F63xs
HP3EODxfpm6y62a0ZgzjHNX5grGztD7IPni+vKoXbQa0Xty+B/jUXAN3dG5d
+13R6sgva213yodgHdk83h6EKRcFMXGtJfs4Ky7OeDlWzTVDeJ3/4+jajrNz
LN8Ue4XWyrIZuBl5Z8Dbe/iQOQA1snkmwBzJfAnbcU5wbPuLV74K5iLmYu4N
PB95be/HWYPxff/Ys8E9bC7OuXhewtxk0pLDxc3Dj7Cx53nWhO2LIO/xlK8C
H/nE03BxOBR9GO5dcTHbhHnRgGHgVU4KONZeianBxe0vph/txYjnmJwUicWj
9l17A84aTNu17o5i66Z8xUc18tCem51dC7pzxdkbYY+E1622ccP78DJc7Fg2
PMTU2NiY2HWgP/7hbTtqaHSMX+d543U4GH6eGLjzWBw1vmdvRPoDo6N5oyX7
szQ/xz7jYupJtH4Fb8AXZuSjuDP8xR1ndZcz+bYf8pM5B5a1OLcp1sjMN3Gx
vbtwcTO09eIjDt74qljPOiv66ZGW7Gf0jAFjix/AnlJYEy/FWewZ7GVN2l5V
a5DNxXiBm5UdA2c2psGdNBiW88KP7vuRc3VNGeYI9JtnFXvuiKfvM/eyf8fX
YvIOO3aQ+3NadhwceZY5//TH/uq7ecDtb8L+cK4DLN9j7XwfeEv8GTUJeSbS
z1Oai83s4QLyP6C9dSx8+1KP8rPBQ87XhWZL3Hyan9fDrlkXjqA2BM+4YR/H
YbV/wvxp9qUf9AWNsz3U7W3ofBV+9o7OOPHvFH/XfeR8j7wkeW0viF/jI04f
8MF0DrcpBmvlO7U/12xsP/Gq3gV19NDYuWa5D5prJ0+C9WJvTz6T9lTg/zAX
R0POfuzfYXxYTjmMPe+x9719O3fj8gtv1i3IvUo8ouvieJ252H9Pj2jE5uKc
48on4ZwUzcVHMXmu5dE5KRyH55Z1Yd7UhE49aDi4/cUw7YqFOdYq1s6vzcXm
Y3LAhYfJU3GVhycubt8xWumKjc/yUkze2InZp+04Rnt/Vxrq1B/4/Yq/+EoL
Q+KdQCumXgh+CvstzJ9mUHuKrd2iG/ucmouv6MVsg/5rrdj9al6nj/ZlXvVS
NBvDFOhYZmE40N9xDVuzHZxAHTB0QfjHOteUC9b6ZnMxXtkjLnbuM7i4/R/m
4skPTG0+xsz1qD2WsOuKi81tPM/f5xzKkwDDZrw67m4Vr2Yuph52xt1zh6m2
3RUupmVc0SHzXD/H6LzEzgUBb9ob0XkjuK9WNS4YA44/zWW2fMu3+jPo8daS
m5e7tp5zRvB99GLGNe+57+B86/W+X7INejHacY8nHg7yV/C3gU8px7On+Uwv
XnExPGBPoz0TV7g4nzlXFg1fxNbe+OLumci25JdAB7UfAg40r/I6ft9mTvPX
lG/C+ddcj8zc7ZoTK1+q99d9WDFx8/dUhw1eyTjd6e+3PMvkjphq/DpvRXMQ
DOm8vsQ0mgPh4K7DTH5gXwdzrHNUpLUfwfp6v3fsnfmzeTyfw8X4QPC97F4Q
xcFN2v/KU+HrRG66yT/BfIh8ymbw9kMzf7E+/Bwu5nvpXzOx8/WRM9lzrPQj
bG5Ptu8R56K4kqvNtT3ivUiDhScutk+iPcR5bV/FxMN8F/+EGRpvMnWi8R9/
5Tu+bWx/99XXxvY1H/jYl779Ez+xtbzOur/zdd+zt6w7au//0D8aG/tyH9gn
r1d9zWfpD0ter7b/y2o5p8/8i1/c2n/8rfx+/ae95T0tn3/L3/v7e/uRzdv7
M0/X7MNby/tXvv6VrfE+2/E6y+/7ro9v677qb73jhZa+TOv9WcbeffC+v/9j
r+3v8zpLPks/P/qxj3zph3/sR7f2lfldO2nf9MEfeLN969M9+NF/vH0vr7Mu
7/Oa/f38L8Zv8Ovb63zG9q99z2v75zR/51d/9fVtG475f//8T9+scf30O069
673u9W3d9Bnradlv9s/xt74/9ftvPP2W/+RP/8pe8yXr95x9T9/L+8/87Kfu
zinttzYOfvN19s1x6LeZeNXcv24eF/chff7Ad/34tsy5ZPmO+CPChBeuodt/
+50/2I/1K7/wK9t5pGUs/vcffG77LNtkjNwYt3e955U3+/B03fOaz/k+1y77
557JMuOdc3nPE9twfv/gtU9s+0jLdvw2vPqu92/H4F7J++wj6zYdRfdiWr6f
ddzbWWZb3+vZT957jNMX7g225zsZE8a/7+/0J+ec8cwy77n/MqZcm6099Tff
5Rr3PZox2P+mbs3HpJ/0Lf3MWOa7GWuuGa+P/l7S/v3T79v/+bM/2Vpe//pP
f/JLH//I9z8x4g/qmcO3bu1N3/YP7u9X7Z//8m/s+/qD3/nPX/qTp35wjLzO
urz+4afftG/enqn84Pb6k09cwXezzPt8nvbKq1+3bZPPPvE0N/jAt35w+x4t
fct22eY3fi26xae3lvdpbJfv5fxYn31le1rev+ddH9g/p+Uzv/c+ctzs97Xv
/cjeOC8vvR3nnPNJ4/i8T8u2X/2+j92N/3/PvOY2pm6s82d5/WtPrJRxTH85
PmPAWLJM6/NOYxxZZn9uvW2ax4fGuXOcLPOebfnutF+Om33k3si5cV3z/V/b
8ju8+X2PZdZPY5uWffA6+8lYZ4w+/8YfLcch+8vxch28r6ynD5/cvNKf3rfP
vv/2E9O45VhHjW36O/Tb1/kLv/fGdowc1+fEa/62fY/QvvC7//VL/+G3/t3W
eP1LP/dPvvS/nriY9Wl5n8Y2/l7az//L3/jSp372M09s8SN7fHVa1vt9Ps/+
vfzNf/Uz29Lt4594bV/yulu4ieWHv+8fbv8r8/o5XNxL2hU2hoGn983FEx8f
sfFfNQd3y7mFecOO5uLMu/710xzHbBzODM+HfZs/4dJcr+36Pb3OdjA0/Jz3
Wf/qu963vc54wrwrLqZle46TJe/ZPywOM+ec8nmaf28f4alw0Vfe5r7b+xsb
w8z5vaaFWfLbDRs3O7sPsEp4g2N94fe+MHJut4mL4bMsfZ7wDnwXfoHj4OK8
zrE/+qFv35kofJS+mY9pWQfPrbi4mTnbn7ExTJaW9xsv3jiLMed9H4eW7+RY
Ky6G/833ZiiY746NbywMx8HHabCZWY2+cr+EH5tTzcX5nAYXcyzYFSZOC1Ny
f8GO3FMcx3zMHMB83Oy8bf+ht+5XroM5GS5mTLKecct9f8fFt2sGy/Z15m/G
/Wje9zo4mvso453lxMTT31B+Lz//+7+9tfxOwsXwU2v38N0RF/u3O/vz+7Qw
CiwE/8K2+e2/j5/8wTuONE81c6Vfve3UzIDpS/oI9370wx+8W/a2rDNvw5mw
evrB3MKcDJeG8c2NcBvcCbN+s2JJGVvYZ2rmYuYdzAfMxOwvx8h5wsXmUxiv
eXcaT87d45JzhoPZL0ycxr74vPft4+X6mIuzzP3KuWQJD3vpedbExV5vds37
1b0Dr0/79JjluLByvnOViycedmNOkMaxuAez5LP+G1zdM0csTOOzbJsWjs36
LH/+F//Z9npj4KfXzcVhZZg5y2yT/aWx/+zHbBxO+t6PfHDnXtbRmo//5ld/
y8bFvG9OhU+bhc3BYdAjvmWbK1x8dNyJh/868W/3d9rmRz/5qxsbWyv+0z/8
7V1DTvv0L/+bnTvNoa3Z5nqGecO+YVlYOevMxmk95zli4nxubdr6cO+X9Wja
2Zbf3/xOP8LFm04XHhOjsc78Cy/t+mxpe/AIWi4sEs6EL8OmR+w4sbHfhxHS
0OnoPy08A1PkWDl+luZk9Dn62UycZibuttKLs/3ZOcFv4a2MnxmLsTYXj9fr
xmO9/vNvfHE/RuYGfWw082biNFjN3MY1Nhdbd6cvzK3YHqaFdX2/wH7Wcln6
3jLXWoc277P0s4pJl8925uDsl/W+HmnWxTln7sHt7+DpPPua8xzF+8v2zAs4
L/6Oej7CvZbX3M/5G05f4PKjZi6Go7LMb2h+y+HM8BM8ZX0267/iq14ZuTi/
1WY12Ngswu85eqo1VRosEhYIA8Bdk5bIPiaNkvXNeXBN+ggfs03GAD5qDZL1
sC+vee/1cDoc3/3Mvr1PWJhzzOvwEGOb7/Y8o/VDrmf23WNqxs45houzzLXs
PjUb97jzHtY1F2cMPHfxd+HFaV8cn/swSxrjlyVczDyDvqbfnDdzChi1mZh+
5PNsb/acmBhN1mw87c96cV7nM7j3m777x7ZjnXHxio2zP+Y/0/MSc3Frw/6M
BpuGJ5uLzcx/8XQ/tbaclvVp1ouz3PXiJw5GM2bpfcDI4eL8LzMDWwv+hm97
c0nL+7Q77/YTH2dd+xlaA25eZV2uTZo5136KMy5e+Siey8V/nXjZLJprEn6c
uBjNGH0XLdjs6Zbt0HbxVeQ1XIyXgnUwMw12P/JZ0A/0Yhj5fe95Zedzs3PO
zcz36DN4OBjG4b19Ff59Nw9PLJNteUZOyz7NGW4cJ9wEY5m3w3lmPbabdO/o
pmHhHCvbmXHyXXPRxMVmvkmzPeJiPBn03efIvsNK/P1v35P2eIWLJ604zdw9
6cUrH0Wa9WG3jBWaZRpcnHOhf9wrPT9in/gD0IG9TT7Pa/MtjGym5t4zC3Ou
rQ9zjeFd3vMZx2OuZS3cXNzsuenFmiv5OUHGlT4xXvZkMGfrxr76ffaZ/WW8
eo644uL+zTQX57c2zIFua35dMXHWw260P9nmpG9ps6wPN+X3v5m4fQfTs/xJ
K4Yr+Q5aNN/z83t0SHwU+D4mH4WZGKZHI26m97qpn+ZGsxX79Rik783F2ceK
i5uN0ZwZHzMx+4JTzcUrDj76fPJhTF4K+w1aH+a1WdiNbXIuOT90UnRp5i/Z
Bv9JztnznKmxPSya/fMMo+cUXI98hhZtLvb5oFfHcwET01ZMnMbnKy7GG5I+
eH/p2+q+gIcZH+YtaL9h0PCteZX3MDMsTMt6WPYKF6MLTz6MNH7fwrbf+Ymf
uOPf5mBeNxunNaPmWf702u99bZpzV1ox6/D/uk0+5b+urHukHa/YOHqwuTg+
CrwV0ZOzHey64mI0W/iX7fIaPuZ7cDbr8nm2MwcfacjZFu61hm1vhdnYbPAy
XMw9CRfDJbAxr80teEy9rXVotoc5zLh572fI3fAW8JrWfEi/s89op2G4jAe8
AzdadzQP21eBljv5JVYt28Be7OsF/i+vxO7l1vI5/uIwFcyaY2c8s8w6nsOb
i9tLkffMZcyzXE/4knFkjPzMwP6Iae406cFmYXwQ3FftG7afnOsI/5p5rSfn
/Hk/+SfaI8JY+TVjt3tr6tpwz1lPz3fRxyffylGz/p7j5W9lpRO3Xty/nWhz
sF8azJPf0iOt2D5YWHLitayDi1vTRE8zG9vDYT3Z/g7rsfYTo1v6GT58gIeC
c+b8zcH92ixoRuzj+jhsi57cWjF8hqcYHy3eEo9vuGhinmbjvPb4TXMYc7E5
94yJrzazsb236KrTcSYm7vkF48XcLdc4Y81cIucHy/Y8DYa1f8fsiV6/8jKw
TXzInE/r3bA/XLzFDw9cvNo/17x9FZwL9xX741z77xnt2/M096O9EtaPzcWt
IbMtGi1eCnNxlvgn0ImtF1t3zutm4Kk1F0+tmTacGuYJr2Ud/BW2y2dZ7zFp
7mUZ7mouhq1p7CP7nFpv535O+vRfFROfHT88eYWL26dg/swSHm5OtnZsdjY/
Z32O+f/+4k+3ltzKtPQjn+GFfvP5w/2xJ05Hk+Y337zIb7i1qKNmjmUJD/vZ
OOwC+5iB/Jn9GObi9keEUfpvAg0Z7nYLc05egqwL+4WLsww3Oe7MXtIjHwV8
eiXe7k4zfvoOempzsf0Z7VG1Vjyx1xUudtydY+483tHRVzzmuQheYPg61x3e
C/uF1fY+37TQfexu1z/fz7XKNXAcHIyb1uutJZuRvd7vzcCe7zTP2ncN4xOb
2VzcrZ9v5Jz998R9DROn5Rh4q6d5yFHj/s/Ycf4TF+PFITbQeiXeX3Sv8IY9
smn57T1iYhrxYfYqmImJX2rNrH3MK02tfc9mG/Zj/Ro2RjeGSfGi8hoOM/96
HYw2eY2ZQ7TXdqWftrckYxKtmnOF8czFOR+zzxRLZj6edGLvK9yU1nqxY+zO
eNfvs1zFzDkurRmcz1daMXpxtssYxUdBbCKNPnP/4OlpXZe4TrTniYvz+RUu
xocBA/OMAuYmRu9RLs42kxc5+2TO2Yzb3v70hXka7OxY1jTYNDoufIrXFy5u
ZsY/8fnf/+z2vySMik9i4mJeoyFPHmb04skf4XVX+Bh/q1mU1/hf87w/vJR1
xIeZi8Oq7Z+YXjcXoz+zz1UzE+f10bZn+7HGfeTXaE3V77284qXI+WUc458I
F4dL7S1Ga17xsJkYjdaNPBVs0xov25mL0xdeu4WN8S7Th9aJzdrpNwzav9lo
oGi69gvjb3iBSW+sBg9PngkzsffVGqj9ysTdmTOyDp56lAVbK+6+4qOw9mef
QfMw3H2FTc+8FFPD+93+iTvvCprxwt98RS+GF2E/j/lVLnbcGKzJMcLF5tT+
LsvmYPqV+Dc8FPZCOFcFHg541h4K8mLwvo/hvvYczNo3TMx8zXrxpM3mu7mG
mYP4u3C1x9o8POnzvY77jbkRvo3cw5NmnL6QMyOfv/rud+3P1K0X5709rehq
Z1oxLTHyE6/x2s+74Vhet1589My52Zjj40XgObpZD2aFZch1Ae+2PtweiiyJ
VZy8At6/v8vcgm0mrvWz+7xHM5zmHJMnoHVknpfDq46lhM2ZAzlXx4pteX0U
2wgXsm801fQb/rXngO1XPMz9Yi7mfP0sg/HO53hEphg7uNg5V8yk5FQ54+Kc
D+dgL3XOLZ+Fm8lbwX18lYtXGnKaYxKbixn3LP0Z9xRzW/ZFnJw9DlmahVnv
hq8Y3y/cS+wbTHznqSh/cWvQV7RiXucYE0OnwWlp1oTT/stv/8HOc2GqZuL2
B7d+fIWLJ861VmyvRXubp9Z9gtmP8sX5+z5mzt/6qvNHeD7hOEe8ucTGkV8i
Y0iLXtxcDBvDt7AwHmH41v4GvMDkccvx0HDb+4DPOefiPHHte84cCM8Fx3Nz
v3b+H3yKYQ/Hndknah3VOSPuvMW35+RoemieYRYYFI5Eu9r15hvzOadVtiUf
mVs441EunhiZfjiOi/MkX9uUp806MYy68vce8THn6X22ZgzvTjkoPG7P9VE4
Jo1zNt8dPb+35u+cbewHjzZ+7/163u4VPNTsI609z/58Ylo8Ee2Rdlwb8xvr
xX6Nfmu/cI+NvcWdC43XHjszdTMxx6Bv2ca5LTzGaPH8vRCL13M8jxN5NPpZ
S64BfUIz4/fUmmh7W60zXtGL7S8mT5vzJoQfrA93XJIZcWLiiY0nP22WsAQ8
AVe6z2FDa8NmWmvIcDG8k8bzcmvQcFm2xWONb7i52f5U+0Sm3B/2UTQPd6xV
jkGuEZg41w9uzGfhSDzjE+dbE155p1f8bC5uDmY7c/HE9qyzjwIN2LlJOmdG
s/DkKzYjcm8d6cXeJvvINae1T6M9x28HFzNfgn25V+Bi7jHW+Xhcc58zjLl5
hJOr+KYdOwcFzGxPsLmY759xMevtn3jUR0ELY6/0YuuG4SRi68KLeQ8PhYOa
Ia29moHhWPMo2660XGvGk5eCPjW7dn/MvvY52H+xiv1rVs7xW0+1lgtfNmtO
Omw+J84O/sS/ABNnmeNmmXPLOmIh8VrY1+s8aq0b4xFm23BujolmPXEx94Bj
BrPsWDvWm4tf8BXcnvFOuZ5gZLTkPT/bTfeFf+1bXmnHbuY868/4H1j6dbiY
PjyXje3vgNvQFLN/fAbR35qJPTd4hIlXbOx9tma8a+w3PZ0xa1/1c30UExf7
+EfP8OmbY9+cPzgNHwX6t/P2wXH2V+DB6Puk80eYa/nsLea7zzHBdvQDrTmc
SS6N9kMwHvAwsZnOtUG+FP5G9vjA29+F4xDN3fZb4J+/8wvfGDh9zP0XzoV1
GSdzseei5JdzDF58QuZ0/MX2ucKFeE7tGV49i1/lMG5Nc+Kd5pIrbdLQOi7f
+nZa+1zDU1O/nUPMcXk09k3/nX85x4hODofCZWFVOBqfRVi0Y8HIdWvvSvY7
eYI7P8aKi90P9HH0TY6fvoSxzMudu+OMi9sbscrpxrhOnLzySzu/H/4EcrWh
f3auNntTVlycfXQOCN6nX1f1W/zIHIv8F/ZUcKyj+d3E39N6jw386/PwHJP3
jBHXDr38tz/3hd0rEW6d4uEmToaNw7nkSCNPW3Nx1mfJ73p7i9GlJx/xquUY
689+fH/OT4tOimeCvAlhIbjNTAyLmoGnXGzm4jONuJkYLl55I5ql2wPNOuva
7eWY9ON81nyLp4Qxswb7mZ/7p/vn6MvosHsNj6dteI/2at8FfuMc27ycZbiX
62JPg+t8vJWf5MfvNOxwbI5J7uTOnwzP46PolnHjNXkxzrjYOYOnXMBodDz3
xjsxMTD1B/Ao4M1on4b9E/zWwwCti9HP9ka8DBtvuuzg4XVM2+RlholXuYOv
8HFzcbMxMYb2TWxzgvKf0McrTJxGnjZ0RPR5xzjmtb8zeSnssYGNiX+Dw8zF
3C+5f5iHmPdyPvAqed/MwhyD73Y+jXzuc+AehbfDp2iwmRtYI2ZO0M9K4OK8
zndcs+YuZ6HuEf898MwBNqbfHJPxxy+MHwUudmMe6uvJPeljwsXM86hbYy7u
Bm8d6cFhKLejXG2OvTO/wcXWpdHinsPF/P53nFqzvT0i0zaO5fIzcnRVnuOT
D4x9plk3RGfO+doPC/OGuc1teQ1nZ7v3vu9dIxfnu62FrriYPHmeo5hR0ZGz
nn235mrvBM3P61cMPK1HF+51zKO4L1beG/TX9IFcbVw352pwLuMVF6MJT3nS
7O894lZ7f+wr5ho6Hq79Gmdxd6v1/tuyd3hifLbPfM157LiuMClcnPdwb9aR
mwK/sTXebAvvJn8E2zUbh4ujF8O7eCmsFWebiYsT15fW79mG927NpuEi68fE
h4WzVh6GrM93z2rdsR3cOnFu8y06svXd1om9fXwJ+EFoXufv2Fdtzjf3k6eX
fZBrOONkb0J4t+cY9hWzpDHX6Homjnm0Xsx54x22z9gaNp/DyeS5CMdmvmNG
t14MF1svXnmoO8fbxEy531ovbN8kv+Fora0RO8/ApPO1z3TXjMW9LB/VQR9p
O9/CuFWDwW3bXv7h5uEpN9sjfcEfas2YJfqq5xB3tVLk5TjjYjNtuNg+B/u6
zZtnuRAmLwpMZz00DcaHj/FCZB/O47bPf266axjZ+SZcfw692Np6vut51e5l
v82B8Ke3tyHrmS+4nzv/D95urhvPMHiNt4W/l2i47c/gff7miLljnkMORTOx
vRar+xkmNhd7jsV81rwUPZDn03DgFSaeuDgMkN/i6Vk/3oq8tociv+mdj+Kq
xnbm65i2PVrXvmXn7cqSGmL2NeNrtb7snBzhETMx7Mj45LW52b4Bj3uY/cxX
bC6mdocbngP3g3M68kgQW+h8wfaY9DOHKa9E55iw55j7wvcI+aXhcLg49xe+
AOdj67p3R5px83DPt65qxmctf1d9z51x8fQ58ZjOYWz/sP3o3MdZTz5rrjHN
3uEpJwWc3Fzc8XLRjK0X46uYuJhaINaN7Rdu5rXOMHHwERfDV2icYUC4OByI
Ztv6arTiIy72tnCfubgZefJRTB6OIy5u/Rkv78TL1pMnfzJLPCZ4DPA1tKaM
h9hjOXFx2BX+RRc2B1Orzp85v7C9yF2fDhZ2Cxfz3daL8x6N+0pcobl49du6
yhls/c3Pv1/wRShvFhzUz8OnfUxcfIX1XkovvuWvsIc5dZbd7N2FQ4/Ylxg5
OPQRNnb9PPIwW5tk6Vwb1o+vHqu5ONeJfBro11e4GM0424VdyQnBHCnngD4K
H/qegGfth+n5RzPfas61+zgqr7ZricCz7Le5mOcgfS9ybez77ho2bJ/Pwrm8
zxjl+nQ8Y3uXs43nGlPdO9cBnOYojBO5QWB0+s41yNLMQFxUfsOpG9ws3Fzc
n01c7LxnzccwzUrrmrS8I065ysZmh3497Ye6D/iXOZf2MaMlT3olHIhXAz40
p+T75BZjO9feZqwnxuu60DTy01HDLy3XmmsPP/K9I68wvOvjmoHNyc7v4Xwe
HHM6DtusmBoNOmOBR51rwHiZiY/0YnPxxKGPeCnO5m9n++rvTe+5L/N60ovx
GHs7zzHtv+EZQte1M/PCwnCx60Dbc/ENr3zL9v8Gfbi1Yhg5mnJa1ltzzhJu
bq0YD3G+9xwuho3DR8TaWftccbFj7lYxblfySBzlanO+i86p3N+xrks70pHb
Z9Earr3KMCFxb3Cxc02gH3/vh79jW/I5LdtlbKnVbO6lT17XTIr32Dnb7JnA
T9yN8cx+rWvj/+D9UhdetP5NRavieaufAfv3fGOfG1vsfsaqt2s9b6ortnFw
+YkfZWHXQXiuXmzWPNKLr7K557fP6Q99grfsh7W3w15jmPjRfBR4CPC07Fz8
jR/bddhHuNj1v3M/OIbPOSngYu4zxxbCr/iNew7j+w6dmG3x5TBGPU+ZNHXm
BvgkyB9H3r72RHN9zOz0q3NSZxycX9ixef08Bq2aMTX/mrnt2zALcz74YDL+
xDma46knniU8bM8lepz9BpNGPHGy17c21bomvgKeL9s/cZWBr2jFExM/R3P2
8Vx3w5oxdYo7Dxy6r2PE2t+AlwEuJk9G9tfXobX4Hltrrd7GeqpjA3k2by25
PcOtA7seSscprjjUn0257I7ytJmP4WI43vsyE6NDr/rjZxITy165d648zzja
1/T9I95On/M3Syyn4/hct8+xd3zGMwJqjXdOiOZi+yw6To7Xr20s8yN3XAwL
w8Us870p9s51PczFMHFaXj+Hi9OiDbtWMfkOVrFq8PJKL4ZnO1aufcKdJ671
YueD6/g4eyGmPBP2ZDQbN39bv3VO56nhLSZ+EU/C5rW48aa3gYuzHr6FjeFv
M/nExeSvcD6KrtsxcTHjmOPA0Fxjc/FRzeiJk6c8UNTi2hn1xhP81vMs27/T
5F11voDWA51XAC6zJ7M5+Ywtczz2+TKaMrnlXJfDOdG6lhz+CXirfRTOE/Ec
LnYdOHRhNOTOXXznb31m/mLXozMXZ59cS7ZfNftpXDMbLrafFj6GiV/9mq99
Ic+dPQrus58vkNuN98wNOkfIPrY1x8nSTJxGTrX2BnucXc/RsYLWu9OH7M/1
1dNfxsK+5R6jszlI56LwtWGMuBbMdezJITYwn+f3MfyanFLwUdd7PuLio2be
np6Nczy0reYG/8Y/yr+P8DAccrZvYqzMxVmi8dqX7FrA5CLg++R9gJ3DKfZa
+FhwKufE2LbnYPIYWzu257a5OOvTH7bvz61tw8D2f5xpsquccl0LejpWN+px
uO6fv0+cJP3Hb7xi41w/a7G+f/AfP3ofreZ1K1/EFQ+933NfcK0ce4cvmtfm
YuZb9lO0z9d5J6wfu06da3vggcAjbC52w0uB7st3zMZhmimO7ioP0+DT5lSe
9Yft0shH0XVAaOHLKU+b26QZT8ef/MVmus6V3FrvWZt0Z/o38Wc+txbrvGUZ
I5jX7ButGDaGi+3lRev18eDi9lZ0f1zTuXXsSettLrZXI/2w13gVd3fExkd5
t16IPXv1gzvb8Kzcz7bDCGZidCnnykrbnlEPDNd52M5YFz/rxmG3OP3naMcw
OVw2MXHz8VH9uiwnpuvm4+yvHdeneinmRpib9ejFkwcaZpqY2Fxs7raXAh35
zF9MXgo3186D/dC+d7/tzYPc2nBfd8Zjz4FCDm2NBdfRPp87/4S8097eXOz4
P/RnmDavYXH6BJdzP8Kt/E3YF5HlqkYNcX9nMY5n14FzZXzR4mHiXG+4ONvk
tzHaYxp1CdDQePb7XC42E9lna15yfTJ40BxwhYUf0YhX/HzW0HHRt9F9YSvi
7uwJ5tk1Nexo3ufEj645nNi7zC96fhK2WeVvsJ/C9VSmGn68J19HjsdzA+fl
cK66lUeB98QYdmM9nDrF36FPo0NPXmXuGfLVwdNdyxCt+CwnxcSfGWvf/ysG
PpuH+b72PO8KMx8913CuPnNx5/62X5++5Fozbs45QYxds7BzUrTGGzb++NO4
J2/aVvO5PMasg4vtj4gnmVrPaM7tJ161q1zM6/ASuYvxAISX2kPhvLur2s9u
q3wSk358xsVmyWzXOeHYH7zeOdzQkF2bb+WjzdI+XHJOwMbWgeMrzpi96T9+
552mbC7mvCZ/hLl46le4eNKRV7FxzcXWp/OanCOPcPGkF5uf9hprg4/Auq9/
v2ENYuddN5dn3fgq7BVoHynHQrM75GLFJtn3zPceiXuDk5qJp9p0Z+vctzMu
nt47lq51486VceeXldbq83Kuu27UvcZP27njwndmUeccMZu3TwZPjZm4a3nD
hOx3uibEoVk/9pwhLaxn7zWxb74X2qfjmsnUXibfGvfCnZ/lpkNvngYdG983
Y2U/cc9J8pq84M7V1jU+nsPErSc7xpF8Hu3ZSCOvMLmFJ0ZtPrzCydmGXFqP
cPEj3oi/zAYXw3DkbWifLDmw4Fq8KH7Wnfd4kdGKu+ZEvkfetKxrLuY5+JTH
uJnY17g9yCzTFzzHrtdsb4NZ+EgvPtOPj/Ri2Bitd2Jj52ojz0J0enwn6MWc
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
97FoLu4aOF9rXHEx54D5nAw5/x1kP/O36kyYvJfP2g97p8fdxMD2FOf32XkB
sEcYr3/j7d14KwPjV4Zjw7xhJWfOwRFosZkO3THTbbr2/r3OcLDWaib2/FgX
ejhT3+Tnzs/ytQZsDNO5bg/dedKLM33nFNu3sqq7W7Ex/aInTjUj38l4uMvE
z3DxlGFMT2T32DYXm4/tN+71ybwmlsX70Lx7xsFXGvBdNu7pzcU5h7LtPn7Z
9ubiaZ68n3l0/w33soOHeZ++d2Zp8zRsa49xuBi92Jlt9iAzD7j4vZqx/aNb
Htt+/z+8Ey5Ovq0Zc6rPu+Ji9NyJi63fXnkpmqX5zPzq9XMWmfnTurDXt1nY
20F/u2jEYeMwcV67z519uPix3e8OXs73Ol+CZbrXR9fcdW4GDJxjhF5sL0Rn
ZODzyHecMcf6+jxYcbDZGmaeWIjf+nCCuah9qR6+N269DWZwLpY9nuZn+wOa
AZzv62WajfEaZzRX2EfquqsHT3P17/hDcnHW/9W+KgaG4bxfe/9xLWJN8YEp
9/fg5bNs3a6xy+fJV6AnnPVi87F9yOZis/Hm3dG54OsidODoz+Zc92rm/oO1
5fadc+8j7zH9wdrKkjh0aNXt5TtHzsX+PhzdPmKe+5EawTO9uDOU75xXrIO3
Jcuwdk5WsfVyPqfPxNmY/AbooebKZklGponm6Xu9zAN/6ZXflxo0WGC1LNgP
3vG9ZNgZplhl/06ZZp5v19q1bxhWRoPvOjrnUbB9uZ5AL87o/T71WMGD3DnF
q7o768XeR+biTHPlMfY+WPmL/T6eCpbVHuOVf+Ks3x06PbkMXHdln7RGfMdP
YY9xc3H7IlYMe9c3fJej7TOemJzzhX2K52LSi83UzCuv7WPI/5EVF/v5lHGc
x+5tZy8FWnGYmX53fJ7v4sPIvPP5e7kYf4C1QZ7Dg2ix3WvOeRErLl7lUcDF
Z2xsfTecbr9C/B55LwwY/0AG+Qm8T2ZZmDE+Wjy5rLvr3VpDdl8P9gM+4zx+
/fK7iD/C2RPZf2FOGNRcnPeod6MfM8tiPVqvdhZF195lm+K9MD/nPfTp5mJ8
E6yvdd+8du/v9oN0b7x8lueTR4LffbQmfk/tLzUHt07c95idQeH6eX7TzZnt
k4WH0XLJZnM2sp933hec40yG5hAGObjm8c/BxXenz3rT45h7+PYJwHbde83j
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
UZiL8UmgIZLlMNXdvVUv5nuZF+tEDoO9AA8e3pf17Zze1SB3A99xBh5b8tWo
tTMXh4mpu3OGMT5t94l2Hlqmz3Z0HSB+kKwLHIx3hec9YHWOH/OZuHhVR+fr
hWy3fcxX/aAZU+8B95XFDwnLuf+ANURzsfPXmkXglKlX7zTaF9s5WubiJTPs
XDyxJ9sW1ts8l+/k4jsMQ53a5EUxr1M/CLPl0ZonfSysk/raw/vfWmdriBkw
58TFU27blFe84uLuA9LXJuE1PA18z/wOf7M89o05z9sPQ3O/IwM/LdNZa+c7
zKu5kn2IZkwGnf0WrDue787EeGDjH/34kYt1DZjMcPq1PMPF3L/gurH3J/uN
fTdx8VnvC78Xv3Brw+2laA6i/g4GMhfjl5i42P2jJ+b18pvD4SVzeJ6jr076
p+e32r7WR6mlwx+96omHF4JcNurmuPcPf6Jx8h1G9hPLmXKVJy5e8fDKj03d
Wvt80XbtL7YWvtKDzxjUmRTtx17VBjLQmfFeWy+2L8dZFIxpvdCSyWOx5vqp
uXjKirjLxe1Dpgd0Z8E1/9qvw72H7K/uo8HzzoTgc/KI7aMwI//z3lu6+3k0
I/s3PhycXnlkUqy4eMtG3r0XeYTf+V+OF8TcZH04bMnrMFf4zXox3Gsf6qrf
3afiYry+7UlGQw0jhtPMe1eD7aO20PlnMDB+iUyDHs138BvDxmjD9lK0hyM8
29kSMLKzNPBXoOHiaYaJm4vZfrh40oqnHGJ7rFlnrpOybO/b1ovh4lWfWfcE
zu9o9D18FNYO4R36gaBdwhXwgLUqfvfb12mNzt8zEz/oxoOfuEem794GvDaj
bb1AlNN25iW+YuIzRoaLmze9XzPoewZ/WcdsfdR+22M/KtPW+ucZz+bzZuIp
p4I8CnPfan7etuZi5s16dr6I/Tz2bXgfdM9DL7/7U5uJGdTowY4su89fZ277
Eb5GT3atn+flfeVau+1cFhPDt75enfwTUw6G/xY4F1iHrr/Ld1Z+CfOwH/Pb
SqZv67itI5s3PA2s60xgpu88idYpM1243PlvfBetMWyT3/8wEVkI7TuemNj8
xTpkOayrt3vqc7fKNvOy7IFFB7ZW7HXzOqFVd83epKdPfuyVj6L5EL5ebY+3
meFtpK/diombnWHtZvFm974ugnHxZec9jn2Yr30U7adYrV8+t2aMJnvGphP3
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
j17H+z1kZ7nmESZecTGcFzbJYF+QJWfuNiOusuWaq5uLmc9KJ856sm/5Tnto
ycllu53R633embVmRzjKXIl/eaqD9MDDccb//i5aZ3Ox59k5cmbi7hmC3tu6
LhlqbA/3MazXdt88lsM56fWyl8J+CJbZLM3IerHO7Gvn4YVdXYOIt2HiYXqi
wL+cz12vybrwN4yPwt7yrp+ERWDNlU6KL8AaLT4GtFPXkk11ZWZwBvNoHjWX
uncyXgYGy7EfNr//k6a60isnLj7jD7wU9lvAgmS2wShwaPZP1jHrj17LNuXz
fEbGmHVstE/zN/NnXcPF8Ozki171QzND+dijv6502+bi9/S8M6et9OKz4Z7e
1FRmXtmXPm9hauvC8DCPrDs+mNaLVxpwa8Hdw+GZPOGrz664uPnZPV/Y3z6W
1ovNvZN+7Of5nnk084juCwvf0YvNxfFmkF+89RFR/z1yMN7DxfATfd3QN7vf
HdltZtuJi+2vmDLbJi+y6+5YPr038FTAeO15YEy+Cn/e44qxWT66LswIU6Md
k2ERjuycD2e/2afdXm3Y2lkUXWsXVsULDBeTo4EXY8r3yHLDz9leavXsMban
+Ve/+Nnhi+b+gbcj38ej272+7BUNK4aNnbtrfyuc5Hm1VoZ3wBxsvbjvO5u/
YJ/OfON11+ZlOVkv83z7Ew7vyF7rlG31veoz3e5qZLneXw8ZGsobsA461aGZ
O+ntYV8rmqxr7ewJaB9Cs2b3xchzssicVzfxPR7YiYeZ1lm+7u0BF3McOKZ8
z5o569W1eeZb52v4/PHnfV5xLno+Pj+t+9qzjS7s3LPOkOv6vCk7LvuOHBe8
FLC+Bz6JKeeOz3ytwd8F+6nvyXQmNYzDvXS0Thg4HGcWjTaH3xad1rlj0S3t
Hchv8ZQ37Bo7NGnzKMul1zHLnpYL9zDy28/2wNfkOrSf1n0i8CVfcbE11vxf
pqYQ1u3vt0eadcCPEob7l1//5OAV5oVfmfnD3rATy7L27HWbRue8mZ+6B+AV
F6/G5D3281XOMXq6+3vc4WL2r7NOOF/dSxCPsbnYfOx1xG/urDbzL8yb95t/
WyduzfdK+30PF0/n6uo65I5e7AGj5nnYwTzqvs/oxWdcjL+Ynnfpf4deDJc4
TznfwV+88lLg7cj3t97He30dnAT3oM2i2TYbh7ecw9b9m639TpzWuW4rz0Uz
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
FpmywM3H7A/XoVJnBMuS/eqcB/Ov+a71XLjY9/Lh4u5v0X0wMi0e4tUyWoPm
veZi5p9lw8XoiavcXsYZb7R/1Hpx+NFe1B7sm6xXGHZif8aUjZDfT5aDj9l6
eObZvVamjLa7vMw6Zznwra9xfAzPvBQrvbi38Rm9ePIe57yhnyIebZ8vrKt5
eMqk8MDf7RrKZ7n4rf7iFRe714gfV3ox5769Ew/XpDsbw7zRgq3V5nn0W/p1
OI+iNWN8v/AqXoqJi8ma6No68iimXtBd/8d30Z157r6+MJ2zbvGT4kft+rk7
TEzd3V0ePpu2fRxTxrHr9MzNfr56z/NgPu3rdb89NGM0VjRhnlNvx748NFbp
xWZZtOCvXxjRuRNmYz8yjZ+zPvYP05/P3gyYu/Mr8FDgPXetHX1JzOSda8u9
WrOM791S/0Xdl+v0fT+7M1z5HfdyzBIwCh5Sszr33P3c+RDWGg+OG3rqdr5C
Z8B2nzd0vNaa26M5acWulXKOB/lmXQ/IOns98R+49hCtkONkL0nntZ3l5DnL
wl4U2NTXGp1rbcZ9xnMM205MvfIy53zjM7OenzPIPoZrO/OY6wb60MHIWxb0
kKPC9YR14CnDwpr75GHhuLTfAh9IjvF0PTZ5cuDi/G1YO19lI06eJrg4j+Rj
4aPgfj08YR+AGc/MAd+1ThZWgVvxCGTaZiTYL9zYejDs6+wJ+Maa9aQX5xG2
DdNN/Y/RkPFUWDdvr+5UV8W9dddosf2sC94KmDn5EZOO7HV3NoIzwzKvrDfX
H87Nm7Ti7g3tz1a9otGLs29ZZny8bJN7zeFBca1dZwPf8Rm3ZvwMG6MX45Xp
exT28jQTT9qx33M2xZT3cOf+wh1fhD3MnXfh86uzRjyvzlPh3KC/zJQTHa04
I/9DqJfbGHj3JeT197/9YePnDKaPXgzHwsSug0M3nrLa0Intf8j/fJZ/xsV3
xpT7Baf53nxYEB8xLEqt2IqHYbLOozjzDnc28RUXd9bCanT+cq93T+dlopV7
efaTtO/EWcHmYvwV1MqZrekzZw7u4zIdp4lpea81aXjdWvQ0D3O6fRSuL/S0
zQKM9niajfA5UP/U/Tl8X96/3c3fZg57TrMMmJvfe4azi/sefPPvNPw5/fsm
JoY/urbQ3l4ezc0rhsbDjLZoLoZ98Sn0MtG/OQ7tpbWezj4yD+HFJq83r+2P
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
fudbz4MTOjujvbgesA6+ZPqlTezo7benM+/nXngYLdvjXh/2i0w6cbjIXOv8
D+fkOfPDNY5HTeLOgs5+bp6299b7GX40U/r44beePMWvzptdh7feCcdyHPr6
xHWP/ox9wjkF3+JhcL6az0P4F982Wi+6MP3zrP+aH9mvPhaTho8GzvftCZq8
QezXaZ+trlNheF+Xss7kXuCV6PssUw0sA17Ib3n7JqYx8VF7EaYx9Yrze+5d
wXvhLvQ+c2PYl8d8Fj7Mc7+GldxHDaYOK3FP3xwC65LrwHu9D5o1mS/6+KQb
+5rBdWLwIZlnKx8FTGzv9FR711x61vPurl7sa532U8DHva7ZFmdwMPAnTz2Q
w5to//YPWGs2F/u6Ck7OscVvm+PONVJzscfk2zAX4+3Ak84xetB/X84lvOif
U+d9jz7MPnCODJkS9g53D7wpoxiPMXV3zcXkuoVvwqr+LrouvmLy2fycgYfY
uRb+HD5m/fO8MxLMpnCk/QBou90L7w4bTz040FTtp3Dfuqm385TNO/mSJxbv
bX0rZ6/6LGe+yS+OlyKZxXk+9VF29h3fb9ZFC4aZXZfnXh932PgtnonW6/PI
vn/Qi3e9b/JPmI37N9a/s2TBkn8FM5E327m0kw/VXM5r+MT8xm/+5L11DoD5
wDVurj/yfe3wE3qmvQaTbt3XBAzqCTc/7Ms2R3eeelj3I5+1LjzVgjWncxyY
h3VVvtu9Uc56d7cWjc7L9dHxOcd014Ptp7Av+SHjRPMkk2TSi9FX8VbYB5J5
w7nUcJpr4cXuYc4gX9i6eGeM+DwzR9tnP+0/fOq+PzDlqaF/38m38/CyMm/q
/dxLpM9rvCkTE5uL744V414xcfc3mNgRfoSXuj9HfsujD7d/I/wDM+Y5GrH1
Ylgm05EJgGci72c68jTQjOFi30Nv3wXXFOjB8DweCbaJ+jW8xVOfDLZ1YvCs
T9c08hmZH5l31m3iYuvbZ9rk1OPDWW19TQT3do8PehGuhuv43Beb3ou+JzEx
MbqzOZXaRLYbL7z3adfeXXko4OI+D8hg9r571kvxOYZrSt2/b7quzbGDcZ0p
YR72YDrryOHQ5uLwaR7ReTPIR2ZYN6aHc6an1537gYR9w8N5hH3h5LxuVu4s
4s7tgt8669b5a9ZiV0w89W/mdZZh5p56H0496qaedVfT9DZeadAT/155K7J/
UnuXHnfJAO5eylxnWHvPd1szRjeeGLl74DmXgn2Inrti3Wc0fnwh7S/OMsIs
9Fg781N0Zhjj0Ib3+9PcE0av69or+hic/f6zHuitZk9reJP31myMltsasXMg
4PfOI0Y7tkbYTOTlcx8bTTjvpXYqw/4MriN45PvwuPN2u9+22Qp9EB6C9Zy9
5mMG32WZ5D54m+FNMzHPu3buqKFT3ZvPHfex9mfkhOAPoCbRero92NaJyTfu
esrss9bB2V9o8OZiekibG62Rw+v2HDs7j+sxsqKt6ec5PD/9rTg7rX0no3a8
73euFzkHnFNhzzSD6xeu99DZXZt5xsVn/tZmoxXrmoV7Gjho8mRYX3R2MQxs
zzDcg14MC9g70fox2mq4x/eT4aosDz4M95gxWS+8rbB8eC7s5nXPdtlL7Lo7
vgNv8j36eljzdQ8MuDjzCj/SxyPv46UwF1srvpNl3GzMfGD6lZ8C/zcsynFx
fz+2n9fOtfD50j2SM322yV4KezPIAfaxzbToo+4f6Jq+5uKJk+218DHBT937
bcsJWXDxytvwVt/E2bUr14bdf9B9YDg/yVFr33DX2KErw6VhVHspmp/Rk8O7
8QIzDfV77vER/sl0+C5gdfTrSRPO8/Cwl8V6tc7Y/ER2F+wLE+fRHgjeX/Fp
s/A03A+6+dkZY/7MWRl+bY8vXmb04s4Zfov/YMXE+H/Dwxnpj9FcTE0ejOsa
u+ZimBhfhbPZ3AuPHGNnenRWhjMnusfKGSvjIyfXrXVkdGJ7GHxPF86xx9S6
H7zkXK88hzOc72XNlN/v8X4yHPWyXGrkzD/WUu1hgJn9GXwMa5qTD34r7jOH
9zLt6SDHAMbOtjlXDj3U9Vd5DltaW5/yy6xlsn1eP2//kW221zSyDB8HD7wH
nUPh49vHy15iZyT0PQDnXx/nz/5ddOtcI8CQrRXDxmi7B5tKc+ZaxNdLvi7i
HoZ919aeuyYRbbjrHvvaj2na7z35v31fwcev75csuXjPTPT1hz3qGQ8efn3n
uI+jaySYOMeA/iq+lzz5Bfq9O36JM124c37hoLyH1wBNtHPfusbPDOy+Inhv
0ZHNyLBTHuFKb1+WZSbOI5kM3ZeP+//Ws6f6OnjQORRmQjLqonWeXZOwf5wb
nHWlLo2cu8nv8cz9dh7tqbUO7uPr9YE5OSbObXa/bY4510PNwp4/+xc+7/pO
X1Pho8g6cGypzXRvjzON+IyLYW1r473/PqVezPKsd/t6qbOqzcUrT5TvUWTf
hUvJo2h9GCbmNdowPPzh/tnfj95jWBUOzmsYHF9FdGHmQ20d8zPvohN72O/B
dI+9737zkLnbPGu90EzafZXxKk8a7oqFV7pws/XE2uZdc7tZ3ttmhu8c4few
cWuwYddwavRi91S2XgwPs23o0jke9MZuNkYzbq249eJpuEfKpBmvvBMZzgiZ
rp0m5rGG6PqqvIeO+1Dfv/8Wd92X2Y5xzHPP/Gruci5GHsNP9HZu/XjiY9jD
PcnCV65D4n2zxMEUe44Y7GF9luVtWq3uYW/39Xf+gHsZ4Q/WkSyB7unGPnee
QXtHzPbm44Pxv/mYR8z+ZVupOYPDrS3bGwF/Nhv7+DxcF9kjUizcWRWu4eT7
ZJH1IFMaVkXztI+4zwHXw1nHt3fC1y/mYZ83fT0ES/f1Vh+fZuF+Dfdzjcm1
0HE96nOQafScc4Q8Qfe+O/LG5VnhfMvn3AeAhR895489wWCbFSP7d/U9Y8oq
I//KXOw6M3zFZuP2Evfn9lEwT7Ra627mC78Pmzg3wNkI1o7NG/YZTPkTns69
nOHLHu6Z7euKrLM/8/ef8RS3D5ntdj7z6pqH7cy+cbY1mSL5rLXgjPw2MT/6
JPd9Bu/DrrPz9YcfraXneViZc2FVc7d6PmVS0DPO+5n9+GyOsM+/qe8NHhnn
KPd9gEkvzrzxUXDdGA8S5xnDeq/zJJqP8xgehZ/h2VUfaAbzNBNvNXgvTEyf
6PDPT3765UMtnQcczPDraXr0RzJxp/7A8Gb7e/s+u3m5+3g4l83829+5qtU7
81D0smBff87rq1yLZzXj5sbsy/iLYeL2VHh/8l1q69jv4Wf7h6d+0NaLO+di
dR/Arztz7SyHYrm/htwJeGiqr2rN7mBqvYdGB4+htUV3o/bKTNtcfHg7dk2Z
ei/YqLNkzR7Nl+ErpseXDNeYOVzzxD1+3883a9l3GubgPvVDfxTrp2J/9uOD
vjv4Vjt3wDWCXBuYockl5lhw3UFtmq9v2E9evj0d5Ic592G6V+/stWka71Pu
G9jf4ePWmrGvp1wv5+uMaV/lHLN+zHVB+2B872DzQXz38TqiPfQsw76cqfau
7yng14H1M8ZzrnRhX2f0c+YXNsZf7f0NI+Nv975lHQ8/+ss03NOnZr9735qz
yKZ6Cxs370x8ld8W9Ee8vu5bZw+FOXmqs+O9sACeZE8X1jAPTjodI3oxeRnu
L2J/rfVQfxYNmPfNtH6EqclaW2n35mKOmf2k7Ed8F89kFzOv5i2e97q2rsu1
gevmwsnO5TMPM6/O7ms/hevyJi7G5+1rleyb8Clc6ew719ldsXBntXnwmWsD
Nx33pl5sz/eZJyIDf82kD0/P8ch/9eVPttFZ3isuhjfhYmvAeS+fwbiwbPzB
3esO30Smg4vxDDcXkyFBfR5szKN9G9aKzcw88h1nHDQX+7WZFG13ugdvTqWm
btJ58330XvRcHr1MeyzCk37t2jW/T56vdWQzsj3VnzrPzfxoDg4j8xpvcWvO
HAcfC3Ow6+zMy+0/pt4vI8957XXAy33GxHe3Fx0RBrbO1t6G1iNbS8QL67q1
h1owaZC+323tFB9luAvNuP0O9haYD7sesOvyzVCw9uQjsQ+WmjXYvrMg2K4V
D07M730Bx5nxPf9mR2fRmv3QB637h4vCTqx7ezasLVo7zjwf6gSHrD36baP5
m+se7kHI/9DXUGZxZ1KEH903w/uLc8w1kVzzcLys1cP53sd9PdVc633eOj21
dFxX9fmWga8879lT7muJI5+l71e8fPZn//o3rzRjszHMnXXJ/un7Hvw9tQ5v
H8XHzPDHPGL/zsN39nZS/wTXTH3cmnWaea7q8JxrRh9o30+2V8KcNDFyHsPP
zcvONGu/Aa9drxf+cm89emxYN8Y34Lq6TMPnvEcOhVkZTqamb8VIeJLRi7mn
Dhdnu/oe+1VGGznOaOX93XAW58eqb5/9FHhMOqfPrGuduM8Heiz7e96n1t/N
fM6k8HENv5IlN3kkplq8/ty1d51l7GOW56+8FXt9Xlg9z/OYkflO9yxaA861
Rtapc0L6PseUQTjpz9lfXIMl/yE1cXBt+4fNxei/edy8D3uPuswDb0T65+Fl
yHvJa9u4ePcCw8SdTwEHWTO2r7g14XzWrMyj9cD2TVjTNQfDxq3BUl+HFgqn
tgcCJm5/xOQ9hq2dE4fPAL6LVprBa94jD23yFbeH4Bnmvfocv4K9EPCoubfz
MZqP2y/RPQntK+azjCwLDo5OjVbNazIysh/bW3FnXzANx7nvhcNt7X9sv0Xr
yX0v3o+dLWxPRee3wcHcF8ZrefSJ2LnKNWj87sNE1EGhKVs7tieVOsHO4fD2
wGXu0dxsPGqqExfvHA7beJ+gZXeWrte97/fb9xD+av3eeqm1avdSce4Z8zW/
tW/V5wDv2ZPhXom+x/BQk6f9yPZYLyb/1+dUZ0Ucfdzq+mHy+dpr4u/Ym+7p
XJu2quPM++4Vae7lnDbPen895LMMbOzrKv4O2h/T2+XcQ67vnBPYmjHrmt9x
c7EzF+A2XtsvC9dNdXjNwysmnjyl+CjgzCzH95fxFLdv2I/WhzOd6/N4jo/C
2mpnEsNR6MXNYPQPYZ/wGbzme/9sU74DFzuzgb7GeBGaZ8zK+V64Bo03jAUP
5n3zlfMoVnltfAZfM8ircz7ZWT9rtqV9yD5HwgnNxz1PnzO+zvC+JqeC3nc+
V7MPsr/szyW/w1rvKn+C11wDZj87q43zkH1Cn8Wsu7Oc4V94mIHXAv/65IPA
n43ei4+ie5kzj37vKnOR9Y3eS90d7OvsttaCySXe+m3Qu/mLP99YNZ9lmny+
/f688C99Q8LeDKbr3DYPMtmouyN3IvN1JgVaMXpxpnHeQjjO/IOmaT3Y+Wm8
bq8qOi5c2zoy31t5ju+OVW2f3zvjO7PylJPRr1e+Dby77dXF35zHcGjYNPp8
+trlsXVs+ynMvl//6RevvC3U4fm9X/3iZwcXh4E7Hw4/Rwb6/DPc72sg69Pm
W7S9qSaotULzcZ7jmaCOq+uXfH+ZmijrxM3F+U6/PuoAdy5Go3M+gWujrKVO
97+di9G9KbI+k57oLOFmDF8nHD7bIacZvbbZjufWwJku79Pn4vBufPPt8RzN
1z4KdG+O64MPeH/Pxw2dv2sk2z/cejjzPnp+1DVBa8Wd/eE+FvHPtn/FvpXm
Xd8j6F4z6MRcGziToq89YOo+f1hO3juY+LuPnqDWdFcasD9nX1EXd5aRiCfC
f5d9H6Hv7ZAJ47+Tw1u9z2fSi6mBCl+gh8EgaJXmwkknXrHOmbfCz8kfQHd0
ri9+STzD5NLCKF2DNzGzvccwpbW3qY9yhnMPnIlAT2r3rHAvj0xnjzE8DB+j
PzPNlNXW98ldY8j99WwXfNbaYzPyVGOHVuxtw0eBZpnHq7rL1sDbI+McCvqC
wNuuZWx/NvPkvDIv4wNxfaO1b/aTvRTuCT1pxPal4H33MfA88SSwXhMXe/i+
RJiW/jRwsHub+++T43c2X0ZfS/Zz1hkfBPzb9WxTVht1d/xPT84a86FH3cbL
f/HXh4ZsDu7MNuZHHzv7I8hnm/p5ZGR6c3LWL1zMOOOh9klMPNzsTD7EFRfD
dejA9kjcHVOeW96/4uLkDFuL9rr0Otjb0Sy+ytqAi+kPHY6kJ541XnPplMfW
j9Tadd+PvEcOxn/+h787fBvOxQgX5/vZ12/JoXOv6nzfHITmRe6wGbjvgcNC
5o3WOK0Tw7B93xvNtrmYmiTrt3guYECWiVe3s4enOi30YrbB/JH7165xYp2d
edxaJMP6a+vf/Tzr1f7VVW6xvRrk0KJho6U6x4zjBEPaq2suhYvZr+wv7+vu
CfKKk3XcuVaA0Ua/8c7Qzp0781Kw7u7Zgg4+7Tt41tct5KrlvOh+Hu4vCHdz
Dk3ZeFyDWMftmrnLse9f/Otoy3eyKZyZ6OyU6f4O03HdwT5uTjfDOTfYXIzH
2B7P5uKpv/NbuDjPrbEywh9hh8lTjE8CPuZz19zBku4Hwn1sch1WtUx57Xoy
dGKY1ixp/7GZ1zox83LfauaBn7o1Y7g277MP4Kasf94nqy2P3pZJN24fReaX
x6xHfgtZH9iNzOer4zsxsc8r9/rwOeRzx/7rvAejth7Ne3Ckc+DwM3As6e9h
Hj7LoOhsOq5V7OdGew7LwpnmYvsorBnDsHl0j+s+77mHwHHmOgVt3/PiOMLI
vh70taD9OFnf/I8Iy1oTbobNQE/GrxCNmD7Ozh7GYwEX5zGfd2+PHq0BWwtu
Noadea/7jNzh4olpnVHgWjdP01luU0YFXoPJZwyXmpftLW5d2p4Pa9VnfoDk
DIdXM619uXk/j6xf/ArkSZDBlueZJs/d94RpMg/81dF38VFkX0+eFXsZ8BVn
vlv/6BfGzTAro9l6e/IZtX7Oh3NuXAZMfpeHfZ2Bpozejl5o3fPgGt+/lQ/V
HonJD9s96doHO42+1856eNAL1x7aB510Z1Jzme/boxN2PeGk5+Zxuv/cfOyM
4Y2zSm/3c/RpvNh93x9d2CxvJu48BGoKWQfvBzwN1pDRmK2rt97Netp3bv3Y
wz01eh18H8CvrfvC+LzX/QHJAzHzZjhbZOpB6PfRTcnUNuOb853nbK9CBh5e
rp/ujCXj7vsCD3LmfzY9XOy/D/4W+vh5Gmvrvl6zfyPvWbNzfZh/p/Ec85zf
7maaKcfrDhs3Vzn3wTyEr7cz2fy7n886g8JasafNOPPckmkAd6LpmYvdd2TV
o9g1T/nMdYS9PuaYyUMK13kasgzwELiGru+rt9/YuQjoxTBCzoXsA7Ry/M93
j+3Ex31M/X57rTm3fB/DmjGvOR7m4pw/6KZch7C/V1zMvQi+4+wQ8pntPWc6
9+FmH7E/3VOx+Zj9joaL5s0y3ecELwVZcDkm9jS774nraOkDyYDl2b7m4ubj
MLF7RMOmqbkL78K9GWFlfBT+v09OsX0T1N05q5jn4V04d/IW2zdhfZt5hG+u
uBgfbOc9uOZuyp6YNOTmYvzDcK41V3iY0d5iZ8t1thnT2hfQjJx1QC/Od9yr
2bkRrkHks7Bmj61fxwu75nk4Ot9BIya7Lbyb9WX94eCugSOXAhaHjSdPsbcp
+yDcS71dWDj6MDoxXuNnuRivNuztbIy+n20+8j15Z7A538GaVXNb39/uHGFn
nlEjP/l9WZct71iaW/TdM54wj6KBu9fIFY90ZoE9GDAYGWBhYpYx8WBvC9ok
mjZcbM+0dVBfc/Q+tifAvOsskPalTvm7cKE19OM82HnfXl9yHnxeHOeOcijs
z/G2kKfA970+9LyzZmyPA/kRvQ3tSeltb4+77znwGf5v57pxvlxx751hHwM+
ijtczDUf1y2ej68V/fd61Fha2xYXw0DwEHqe/Zv4FeivgC+2mXilJfKZPQb5
HZ/8yfAAn5uh4HVzTmcYt7fC9XbOM7aXorViszK+Tq4LrPPCvH4dbme/9bTN
vfCttWizMlxsDTvbZT+pte58hzyIlRe12diZbGiX5mJYK8ejtVofu6vcavtK
0Iq7h52ZkPe8DlOOR57D7rxGY0YvZrtyrDhn2ltsjw7Pvf5hyO57x/mV1+Hm
9lzAwPh13KPFui58bI+4uZj3vb+6t4x7xdAjhnkyj74Oy3LCs+5Zl+E6PPRi
1+WFj2FhRv6noN0mh5i6vDzCs+Zi5xg7g806sPvbwcuwcHsn/BxuPONi+yWc
87BiZbNv1+VN2WswqftBNxebiRmdW8F0fH7HXxxudZYaejEDnbbr3/Drrob5
2rV29HJmHfNe1z5SV5ltoZ6wPRX9Gs7HM4GejZZNLR7rl/mGve9yMTzcOSWZ
TzOxGah5xwyC1mnfcPt3nRcM83X/OaaLVvgUW1zce24OMat1LdhqZJ94fb0d
9mKYf7OfrAu/0gql/fG9MFnX1ZGvdmjS331gOLRq2LZ91HAwzGU+cmZvexEY
fRzCUrB798Rg+V0r6GsCuNLec59D2U7y5Kxnh5npYWEvjv3G1n59TFxXZz+N
1x1/BdPi5+A6h7+J1T2F9472JF9NP033wLi6D/DRO/zvHq5V+m8h7zsHq3U4
e1g7l9b3ufu+tuvyYITOrkKDXLGUGce/+/AitXd9v9j+iX7e/T3wIMCeaHgb
v7ysL97j1snt/4SLVxqxP28+pj4QdjazwPfTaKZlZNtyTx8fxcT8rUFTX5Zl
wpbdh4N+fjyaX+/cG+AcYdt8P6L92JxD1t05j2BjRucaNztzzeAcBtj3rAd0
PnffbrIbyHizlwKtFx6F6dvPzT0HHxf2P1nDnBP8veEZx4Pj5VDHmWPN9Sp/
Y8w7n+GXYD9lec5pg4vxSsDAeIDJkyDXmEwK9OLtGnzn4AzYN5+bja0Pm4nx
FrcW3DlseI+dQTHpyJkfbHSHi7u2beoP0fV35FGcZRJ3XtuUxTZN11luz3Kx
6+HsjeC9Q6fdvQzWlLuebXrO9KwnOi+PZNaxHt4udGV7OMzlvAencixgca9H
2D8DnZ3nz/iKM5wZxzbkPZjJPOR75808vtfdebrdfww2sY/C97qdEeF71Z9z
nPknJhZZZV1tGlxzr3wnSzYvjwVc3PvDHIqf2NcR9Ctx7i41iPbSWgftOki4
1rpp3n/YB7ufd6qj9PfNmfY4d42ieZpMEPsX7M8JEzt32P4VszFs3tkSk85s
lu5pzclm58nT8/vm4r6/4RoA5uPrV3wvrp/sexn5zPdeYRC4Is/Nw2Y+GKR9
oWGryZPAI8/xVl5xseur8jx8Qp3SpL9aF3O9nTnZ99adSQEDw2DOIja72T9h
1iVn1pzW3mHYB9YxC3ffazzGrVM278J/aIP0wqNXH/fO+cwaLOzbfMn77Atr
lc94J3z/gVo+Z414PTiPWEcfD85NvudrsOwzcyyPrhvMuYbHZtXzjgGjkhFo
L473P9oz62ku5pg4L8LXNs5R474EPWdYHscr65Hzfstq3q/Z+u9ryqSAiZ15
gk7MCLcmZw3uDQeTGYF+nOF+H3me/ympr4OJ8xgWNuvmc/RiZ1B0VlsYyPw7
9Xw2G+f9PLoGEFaGi1cZBFt2trRV+3fxF7fHor0Tk57sXOGJfScuxm+BTsx7
K26G+1juyhtgHRRPBcyHL8K+4/Ay3oZmY7MoPGwN3L05WF/8DOjErkPkM/sm
OqMt2Rb2JaMXZ2R7XCNnD8RbuNiczqP14q7L4n3Xt5kjJm+B6/XbP2FN2Rpz
L7/vVz/j3XyWj+9MN2VdoSOOo/zNzcDmmIdaw13XdE2dGbn1ZN4zL2+Zut98
7H3cNXG+LmHQu9AsC3fBxB5TPxVf67AOeL/be+LjjibeXtjsX84V94m2/9ps
3svxdQXsbb6f2N7Tt0eFWtRnzzF8C/H7ZD55JJu48yvucLR9FH2txb6zD/zO
OpsDYSPqh5qH7Wt1LZU5aOojvMpFCBOseMpZuP0afuS+eLMpr9GKnV+R5+i8
1JLhW4Y/fJ/fPX/NaHmEeVsrnpjZ9/Hh8emaw/V0q34S9np4cO+fnDLn3Zl9
8b/CzNkWfKzZdvtqzZo+Fh6+X9DXSZ07jO7O/Yiezhzt/e3rMTw2XCvxvnMh
6PXN9YF9NdQvNg/DzzBqzgVnobjPXeYBZ/Oe/R1m4c5ig5Xda9w9zznObKc1
azwynAP9t+b5w8XtZ2GfZhlkSSQzAv4NwzJ4z4OsNtgXvzEMvPV43nsyZ9Df
Y9KL3Qt6yptwz47WiqdHONt1X60TT1zMWHmJzb+TXtxeic594L1wnbVgeyqc
X2FG9uhtmLjfffHyne5tgv7qx0k3NhfznO94vvgj6FMSnd55FK7Hgzs9mo3x
/KKNt1ac5fU+z3c6o+3uYD3sYzH78vtqRkFXMmdZs6TGDu1y8r/CUq6XMuuh
6d3lYtj4WWY2J9zlYtckMvq7ox9ano2NezvfrDIrnJPs/dVZGOwzPqOnmvXl
roGc9GJnJVs/hIsZ1mvN7FNOsPl06rvSerPzIVxHxrUItXdcY7kX96rfnDVl
fBTsm+55xzr0uvX1B/dS7viA8a80/8LE3bPjLheT1zadx2jH7em5c21ordhZ
CnCMtdgMuMb6mId1sum+ve8jn3ExuqG1Yt87dzZac5M9FYxotNaLzSB4Mxhw
kX0QaLzt0/Tyms/9vnuAMA38Y8276/DcfzAcy7o1E8PZ7B9/B/5lveyRcK3l
xL19bdJ9r5uLPR2MiG+dmsrOwp6W721ozdjD7N5cTO0ZXMqxZ5zpxc4MwWPe
/Z9zTsDFefT2Z5/jk3BGth+pw+PahGs9M7qvSbxNfU+GGlHmzf2D7jvu8y/T
5v9j9GJq7MzEcHFrx2FaOBYu5lrcfArL5r3U5MHF9lSQ7ZbPyUF2n2ezsPt3
WEv2yPxgKLIbugebfRSuietMtCsubv+x+911xhnM2Jw7MbF74PU6XeXxejpz
tXkWlp36ykV3xW/R/mJq27wdvpboXhxZH7wVzuqAw8lty/LNxxwftpPMCbg4
73f+MsfmLVxMj2uzORrhxMUMtEMziXMmyAgwm1hT7tdMz4g34e5v+afSi+/q
c85oNo/fnY/ZqJmE96Jn4s+wLmyNlMfOr7BfpRm49fxw7ZbnISbvjIk+Du0r
7+F18vP2zDRH4+fFN+GeguQZk2UczThjquX0PYju42KPtnON+/7HdB+kteXV
+fnQK7Ez0IqNpx4f7+FieLg5uXsOnl0jOmPMHk2zCb1tYSx4ceLiMM8q66yz
w+Di1rTaS2E+NrP7XnczaedFwLL26JpReK/7QPO99v96mb73zXRdj4ee6Wmd
jRCuss/Y9+itscJ+eT3pxe0Ldv6vPSEe03H0/oY/zVSenznZ/NXHkesZ+qR0
zw7fg0DXhIu9Tj5PJy72PjoyHPaeJdbdV72f4WIyIvLc11h53/cfXOeJZt78
678DnlvLpt4ug94unYmBN4S+IGZiPzI6W5lj6OMYH0XYNpyKvxgm9nN7jNFx
45346+1v4xevdF4YOr6LMEeWc2jJ4uI80gckj85bMwM3G7u/HTwMj+MPCEO5
x0TXzk1ZvXe4ePJZmIvbI2ztN3qxOdh82Zzc87jyFsPF9tyGQbNf7dcgF8Lr
ABdaxyX3YeJipve6hnPtg2abzMVwsPtDm4En5u9+HujFnQfCduR15stxucPF
8W5QR5jn3PO2H9VeiikvoLPXpgHDTLomOQzw9lv8m1nnZ+5tP+Ndbv/Dxm83
cgMmlqFXX9c+eRm9f9sv4P3X/UmsubcHwNrtkeWlfGFz8RkDknFmnbY53Z5x
Pm8NdqrbQ7OFkV17h2aMl8I6bl87tK+HdfPI+3iv7RFhOa0X+zru7PxxhnH3
tYOPWx9+6GN310exM/CKi527wjVNn8/+/odze50vlt9qsqM6I4vf2Gaq/Ka7
l/BUH2YunZgMBmh9Eia2fwGPLl5MODSvyaxt1mw/R/uffQ+ceTX3Thlr9k+0
V9j83PV17YtmGdaKW/cjN8xMzDzti27OnYY/n3pTm6tZDt4bfBn5HK+4v9Pz
ZR/k+77eaX3atXnWle1H9vd8vyPzdi4wnAi7kmvXWcb23bCdeBdgYXwYzjax
/owPx9eH7nUHIzsbj2WZ5+3l5njAxVlO9/QwI9tTjf+irxmYX2rn4qWIZos2
DAc3E8PF8UhEM/7lVrP06wddGKaFifO4cfEXH3t/hIVdd5fX+V9kvRjmpZdI
9xuZMo+p+4tXNlyMZ6F7M7u/M8PsufJQnI2pJ4Y149aH/R6M2p6KaV5XPoqs
i2v14D1nRoQtqTfDAwGrukbOmRZw8eZPfhlsM8uCP9kOfNr2GqMdu7Zx8rmY
k+PJcJ8StOrpGsY5HGd5HB7kPKObs+1wket14DTraq6xgm0mBm790llX7m/3
ntE1RM/ysH0DV2wNF791vadavF53eLUzjeHhzsToesfe9+ixXOe0dmhNEX22
+/c1f+G99f0B+xo45qv3zMjkSMOo9J3gXMQfne+Eid0X2n7iXgfnAHaNnevQ
8EDjubb3pzNVWO871z89zMM9XX/nzjXXeM9h9xH7WPGZs+CcU5HP8QPZF9H6
HZ+5dsf33ac6rHzP/RSmTATey+/2xMX+7Tarcy89PML7zn2wVjwxrPPPVhm+
vt9O7lv7f6fnsE1nrvk5w5rxaljbznHgGHBt4syJDNix/S2tE3fvPfRZ5+9a
k+c8mPzm3o5eZuvU7X8xu/Pa9yFc59isbx6Hr+17cI9mere49x3n5qrfnZ8n
34PzBQb2edL9Y8y2ZLPxd+DrRWvJ+X4+43qnfSLmWDzveOOZrzVjvBnuG7Ji
Y7g4XBmPMTwMB3cmBe+Fd91fA90Yzdb1emFu/leZhRnoxUyDruxaOr8OF3/9
r7486vDIxsh8Mr9wWJgnOiMs1lyMvmvmtDd3xb+rrIoVF6+YmAw367Yrr7E5
meWfcTH1ZK7Bg4cnBrT/IY/h3zxvL0Xex++ABg+nsm/Qpt032sto/X7F+Kx3
+ojkOHYNYB/LTN9eaHiejON+7f557Av2i7NO4WHYuDm47zv7HrY1z34fjfKq
5+0zXDz1XG7uXdW+odEyjzM2vpvpdsbF3dOs183XIui9ZCG0TtvXHfZTwHvm
qGZhL3/liwhTtwbJemY57rdhz277cr2OU44a9yh8btm3wblH/zufZ7C5l9eM
y77z8SX/wjpy6+3WslnXs3sa0/ncvgp7LabhrGhnqfkajoHP5L/+t/+1DR+n
h97mYmH4mHOe/duaH7+X3YfNwxkG+ANgoui3Zsz2FJsLwgS+/95MTL6Ue955
Pajf5308wPY8TBy7yjbmPaYPF9uf0V7hMwa+4t6rAX+Ro8axgSNzvKb96OsU
tHSvT+/jyU+MDt91hXnP/O/8vtZ9O1ut70nAyu0dn/wyeT/LnnRkXwex38zF
ZO9xTnK9gTeifRTdI5p8Nviy6yCdoY3vgppCslmmmjuzMV6PLIscZGvE7Z/h
GjFj4mHXD6JJ85mz29CLM+IxhotdX5fHaLb4Kv5586T845FJ4f7MGfSTNheH
VeOjcG8Peyk2//FffPBahNHtU0YTjr7MsuBocjCiM7MN+TyMRC4ZPZubYZ3T
thpX+nDz8hUXd09m5zo0F7evgudnWjE8PHEz2RT4IHLdAAujFcdfgX8CPdUc
iV7szGJ61LlfHL098jzLIHvNmccMskN6u6jRay8H3IuXgmPJul9lMPdw7pw1
dH7znXnqYY0NzrBv1NzWNU3kErtfx6fwB3Nff+pbN2VEmKXtoW0N7VMO19s5
G7rXE27K59S1wYt5zXtca3QdHhqy6xZd22dGolcg/Y/RafN+s7h9LpkubBq/
L/2ZyYqY6iybk53z5mm47urrMq+DfQ7tHbFuzuM/bfUmr/3xXP+wr7sW0Qzv
91j+1TkyXVt1Xd3ExdPfRNaV2kP6RU8Df4mzJ9pLgVaMn/tBQ851kvwQkyZn
BkI/bs5pvdd6cdfdtc+y++02H7MOU2+MZl942Dqx+dX9zsxGPV+217V25jn3
h5h03vYQ3+FlM2bnUGQfWefjWsF5BtYWyVh23aTHys+N3m+PhK8/nDdHJh01
dPZjsP3Wc82y7EPOJ95zb4rmaFjdOda+PnFuX9fYuU7N+3bSizvHLXpxX6/4
moXei51LkfXF12wvxeR/gN0nTbePe+v9cC6Z2tknfi+D/UTNo/d72DS8Gp7s
3AnY2DxMrjEZxvh8462Idkv/D3NxvhN2zf+kqecdvAsXw+roy67zy3xY34ws
N/6MvJ/1CdOEq/JI/Vj7I9CKefS4w8cTU0+5FGdMjP7bnorJk8y0zpg7y6PI
Y2cnm4XxU4QlqXnDW+EecuZRuJieHt0Tw1xL7VwG9X70yoOL7TP29Na9891o
xRMXO3fOGvivfvGz0Uux4uJwvXuMmIvNY9YuXbdkXshjOCVaVc518netr6Hj
hcHag/ApvBTWvl7pbKUjMy3bBe9x3+buMq/yMSbd7yGXTfVuvb7bNYg8qc5s
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
AkOio+d9544w/YqLJw0524IP3ddOvNc6L9ea2RfmYnuK7a3guicc7nsn1P3B
xPBse1F4zbWQn9M73cyN5zjnA77c/I9wnZ3z0ZyRBv+Gi8lps9cXn3JzMXpz
68/mcXzE4eIMPMV5RA9GJ7Y+bCaHi8lfsJdiVV8H161yK/y+a8rOuHjyUOBp
cC8MczLsiNY9eZc7z2ylF2eeUy6ZcxfymOnpFTfVrvXz+DFYpzMuhkXNxSwL
Fs77cDrr7XwJ1xuaadmnMHAyJRgc72yr+x5Ox4t+1HBx1icj78Mwvrfu0bV4
TGO9dOo3Z1+Bfb78brfHIuwRLl55KuEBfM1n2VTWDM2/rRd3reFb2diZXEsu
3nMpzLLmZO7NuwbS+88cd/gt8MA071QvPTRTb7+z+aw9w8b4F9yHub28PkY5
Lj4e9kn0OeV6PF978Rk+YfdpzrB3AFZG+7XfhEczcucXw+Lu+9F9Q/KdTN/n
xep6zdcQrQ8/y8X5O2NbW5tv3X6rveM6ieyXfdt9jvu+COeda5zyG+uMYOp3
zMV9v77r5q390scWH0Ue6UE81eR1f1te9z14c/DEVJO3uBk6XlSmg3vN9s5V
cC1is3RngjXTNUPzGja/YmPvL/c/th7MPmpNt73GZ56J9pX7PgGc5r4T1G+x
nayb95W3s/cZnHt2TTG9hhfhV7bdx69rJF13x/Qrzbjfc21dPsOvbG9I6+gw
aD5zFobzQzpzGO3Y1zvowV5G+4PYF+jI5Cc7t9jXS0zD9V3Y4ZdHPtWjJwKO
pW9zhrPZJi7Oe5NePHknmovzmP9R9AChXwj6cOcV21OMrp1Ha6KuqzrLakMr
XuVNtF7czNpcDMt1ngQZFPQA8Xt8j896+c4vhkunHAe4GI6EicO0XSvHesOw
+CimzDO4uGsQ2Xe9Hq41JLfCTM77ed4ZeGd9/eJDzsh6tg/a10LkynE+4Gvh
uMDEraFnncyF4YJoh2jC7oHMby18e8dvy2+xPa7Ws3iN/jxpkuYv6ozws7Ye
C4uhIcJMaKV4S5uPVxm1k2d5lTtw1bsMznUGhn0nWRd7fq1zwsJeV7iPa4Gr
dbdXtv28PejJHDY2D0dHbT62fyDTc72C76PZuLPb/DnarbVi9GJGjj+DnGK+
0z4Q2NDDPvhpmd2LJNvR+3Vi4lzTkdcx+SjMwHf6lnNNMmn05mEe2d+dtzJ5
6O1Lgilaq+v38I66Jq779+ItNtflf6bZGO3RPStWbAx/4I/kPvFqPVeeimZj
swVejPZJZ5vQxn2tsOLflSfA/EJv3mk652o1F8PG6IfUe+W7eZ7vZf+c5Xp0
PePVMXcOBOvhrDj42Zo4WmnX7bmHhrnTbDzty5V33McAf3rWKX1FWLd8l/Mm
+8fenOwz+4h9fTL5KdgG9/BgvclVa62YaxbYN15jGJh6PGcYZx0yDfpwBv1q
4Fuew7TeH/ms+0NONbGsW/ZP9gPMmf8T4ZXUv+W5+8vhtYi2nM/Cs/FQ4HOA
j8PFea9r7vKY75M1MXEx9XfktMHE7emYPMWtH/f9e/IQ3ANtYmN0yjMudiZb
TzNlFXdvO/uFYWKmzXo4p8I9LpqLz/RistJaM+4eFmxH9kuWab24/cXNxXy3
fcU8h8vt3YWN8bjAyOi6zftXPa+9juFjuDjrmtfh4mwT9XzxT3NuTLV2nUdh
r0Fnth0ZCapl6hziMZuh6suOedU9XRg3TBgOmTys1gnxU3bvWzh7qufKoEYL
vbC5Ey08vGXWyeC+fT5vfsky8U+4d9mr9SPHWNqw90/eIy/NGm7zO3Vl3p9X
/mhrw84M7n7HzuAj9zfbnX1gvZF6M44H+wvNHS6esv26VzX82T1MzNJwKx5h
zoVmaI75Voc2eCeYr+fderbvnXB90PuzmfjoXfNyPMLGMHpzMM/v3IPI9ydP
sesP2Ve5XnFdpbNWXH/48D69+Hbm63wxa1J9H90sbD9jfnfDSu57694RsEv7
CczFnXWceZFTlvmccW8z61kuRX9mPc3bCBt39hustMqy6M/YZufrmg0nJu5B
HRgcFE7Lo/XiK4+EMySsCVsb9vvWqz2fsNW0br7/AN+633FzsY+Z9XTnDFsX
NWfjsSHbmGNln3Ve4/XA19t6MeufbZ342OtArzxz8ZSnxj0IclnwTLj2juXm
c3rYkTfC8vAFT3ls5mN8MvZDTecD+4W/dffGCPeGCcgUhk/RktGPj3tx6gsG
M2fa7gFCbw/y18gxbv04y/D/LXsj3PsZnbh5+aP3+KP2t/lH/+Hvjgzd1T11
68VT7w4+715rnftmf4S9sDCvPcT92j5nNGRrsu2jWPmLndNm9jb74WeAh82G
qzwHuPgOszpjzrwJDzPwLrCvrvzTExcznC9HPty0Xs3F+Eng521/43HQb6X1
JJiN+7S8d6UX92+8edDeY3Mx/c1aD+t7+d2PzfzZntRmIHNRMxH5t2dZsRPD
wMXdv6PXrX0bWy2j2La1ezyvWU+0WjRW54SgdXfdo7Vq19u5Z5y3v3k1+7d9
qczPx4N9FiZEXyUjuHPanMOGDr7qC8I28h7zJRslA9ZtH4RZf/IsN6uzvX3N
M51nnUFBHkSOPf024OK7fyPT+WJvhu+V5Pxv7d73cqa6U97n7896sbMdzmrZ
3H8BJuaeOXpueKD7KLs3gXPAoo81F089czNtvhemhrda17zDvmZ++zGcfdbc
7zqy9my0vtmeipUeOmUgrLjYevGk/9mPCht73d17xfVczNe6cI/OD0HzzMj8
m4u750lvqzOsfX2AJp3ps05m4tU+NCOjlXJecjzbB+KsNl+n9L0GstrMxT5W
rAfLtV7M/mc/h3kZPsa85/0XLu6/EQ//jfqcn7xEnU3huj3r+fYjuGcG7JpH
at8YfCe5EdF30YFh2XiT4WLq8MLUZA+vuDgj88y84Gx6hZiJ0Yud1/bor/jA
PmG56KR4KcJBV1y86mcHs3Y9XOdXTL2b8771Y3Oxa/J43r5jL/NOHkUvDz6m
Hi95DSwHXqVmDd3VngTnONzlYm9ra7HwMQOPy1XPkjMuNrs3F8O7Gc7C4B5C
9xbZphfrtIbZ2WLOijj1UHTd+87c3B+2Ruo+te4X0cNMuOLiQ0eVVogGieba
OqRZ0Nqnc2Iz7N/o5U568cQ5nQFB7h3c2n7X1kGd08B0aJrHNUt7i19eWx9u
BrYHu7OF2VZ6BpsVzWXst3Ax9ZSMSZf2drknh7k4mWto/Fl+97NmcD3lTOPO
0XaWsuvser3Itp6GjyV9TszF2ffxmGc+4WJntTUD32HjLBNfxsbZlYHN8cJb
snnC92sF7pvYu4NnCR8Jff+mHhgTY7ZnYuqRhlfVvW+5D535wgJhnzAFerF7
UU+chlbtfmesZ/sBpvotT98ZaiyD7ULbbq5sXbN14an+zl7aDOq0rnzF8JNz
aX19YF8wui/TWG/snoTmYjzCzHfi4mndWJ7ryqiZNL96P1uX9XP2U+ZjnraH
2N4L9jfnVvanj4Uzr637w4HoxfYqw5vu4egc45X3mOspe4imjLX2FXFc0ZPR
/9GN7SPu82117Tf5cvBikFVhLmaZma771TkLLc/pt9y1dfh/6SMNGzcXk1/B
48bDL/PIIxlxrsejLzQ+CjN7czHZcl2DFxZ2rwbqsZxLsaqtI/93xca+1z/l
W0z97qbMie4L3bqxszGsJd/No4BL7WOGi60L8xnZxvhy7S+mp0c4Mlzcy2ye
/ZN/8W8e9rOz51xzCBfjL36GickpDsfjMcY/sXHxfsyn71onhot7GjNG5xvA
Ve1JhIvP8ijaS2E2dL8tODm/2+iyk0YMh+GBNqvw3FqoR/tYm4fRkO2X7XHF
xfZJjB5k6cXUQ016qWvFrGObi/OcfhS+VvHx6eudfCecOem3EyuaiztrOqP1
SmeFoJfSP4N8hyl3wv2tzf35TgY5gr0v2c8ZnYE89Q7xvrTH2Zlv5JI0D/fx
hH3x2mx9BPe/hez7fJZ1v9KLz7g42zdxsftLcwzwbmRdOP5mY+opp3rU5rvp
95f77is2xmeAXtZ1Rng77R/O5/l9dlaFGdc6KczdGtqZtn01XMvPspuNVz5c
D3Ovs8MmLXnSic8G/l3zsesCYUD0RxgPLzSj8xJcN9f9z6yl9mAa5xObFXNc
V/Vyzbn4ejOyzvC26/bc+9kM3/0xuOZyljLHlfsaXJ95HVkP99rDO8L+no5Z
vouvAe/Gqj9d1gcOtVaMz5h1oHeLa+VW13hTborPM67/rA/jKaaelnl0DVvn
BU88zNj+x+9cjEcCPrWXwjVx4eP0v0vPEH/HmnHX1OVxysVoDZnX/w8uHYT4

           "], {{0, 712}, {710, 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag[
          "Byte", ColorSpace -> "RGB", Interleaving -> False, MetaInformation -> 
           Association[
            "Exif" -> {
              "Software" -> 
               "Created with the Wolfram Language : www.wolfram.com", 
               
               GIS`GeoServerDump`copyrightData[{
                "https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?\
access_token=pk.\
eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa3dzOHQifQ\
.msWbRUe-nqmNC-DZyl40Ew", "Earth", "Mercator", "Satellite"}]}, 
             "GeoMetaInformation" -> {
              "Software" -> 
               "Created with the Wolfram Language : www.wolfram.com", 
               "TileSources" -> 
               "Wolfram Knowledgebase with tile data from \
https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_token=pk.\
eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa3dzOHQifQ\
.msWbRUe-nqmNC-DZyl40Ew"}]], Selectable -> False], DefaultBaseStyle -> 
         "ImageGraphics", ImageSizeRaw -> {710, 712}, 
         PlotRange -> {{0, 710}, {0, 712}}], TraditionalForm]], 
      PolygonBox[CompressedData["
1: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
/PyMew3mnoO595h/j3EPwtyLMPckzL3pP12e5Uk=
       "],
       VertexTextureCoordinates->CompressedData["
1:eJxlmAtQVdcVhlcwBqpEW+JzdFRiZErVGjraahSW7zjaphZLUBN0FBo1QR2V
2phBCDFRjJYSoxWLtJRGTSVIxQetEBGDRSM1sSDREF9BEhXENbaNSBS77zBn
Lf8rMz6+4T7O3Xvd8/3/Dp2/NPpXHYjoEfdno/srgB7+GX5pVm5t4ZvscVr+
LxxvVs7OTpHywD/5/f495YyBC6dU1f1VeXzaa+7xhcq7kt2vexcp7/n7DPf8
/crpX7+YdHpSsd/r/UN5YfSyvpXLSpWXZCS71y9Tfu/C+PkXTh3xe7+jyt26
/ezH5xI+Uu5ZFO3ev0K5z/SZnWpaj/ldT6Xyhrfcy2ceV27pu8C9wQnlbw8l
Fp0IO+l3vVXKr8jKtRWl//K7/k+UmzeNLZgb/qnyzXkT3Bsa7yyY1DMu6bTf
5/u38pzjU9NmlxnP3er7vNXK816a3hjbqUY5foRv/Y0THn0+JibmjPInVe7R
rcans2eXuRXzW5/PlNcfnBs+vdF4bIBvvc4qjzud8K67IuUJub71M77TuOje
1LTP/dazTnnvY0t9T1Ded8a3vl8oLwp1l9PzvN96Gy8uWzXarajywM6+9b+o
POjzlB1jCy767ccl26/W8sD+ycZTB/j2x/jjdRWlOaGXlafd9O2XcVj3SnfB
l/3270vlNXknwrITjTt0mub20/jiMPfwkHq//TW+1HYqM6vYuOQp335fUR6z
0S1PnHH7/Btn9a5p3RLQoLyC3TjEGP93Z21ht/eN2+fDePrwc26Dv/KbF+MP
yt3l/8d4aLib5klfKwf93I1LlnH7PBknfHFpTdeoq8oNvuXPNH4pv35kRr1x
+7xdUz468qsbweuNc+b4xsm43z+v5m344XW/eTR+bYbv62PcPp+NyslPNgev
X2UcO8U3r8Y/WuLGrX+T3/waZ3x7yw2scdd43zzfUL6e/r/BHV82bp9v46bY
FrdAzcqVq33zbjylwW3vAeP2+b9p98/l7uPONk7N8n0fjNt/5CGe0nlw5Hb1
hnDptZ1ntqs3hF99a+KgRPWG8IAe+x77o3pDeFhr4LNr1RvCW97OqF6i3hAu
2htRm6/eEJ7ap3RhrnpD+Ce/XRi6Rb0hHHN3OL2t3hDuGj+gY6p6Q7imJPzp
JPWGcM62D47sV2+45z83I7lQvSF8Mjh42m71hvC5EzVDdqg3hDNv7w7NVW8I
zyveHJ6t3hD++NcZE3+v3hCeM3Lb8nfUG8LlK/ft26jeEO455mJgunrD8fJe
S9eoN4QXFCdcS1FvCNeOmzc6Ur0h3CN+a+eSU8aBx2IaRqo3hD8bnHP8oHpD
eGZ14oHhZcbNdyvyi9Qbwp8O2pH/tHpDeEhIlwN7Co3P3GurHKLeEN70yqtX
drcabz+7qlO4ekO44vWAZ3apN4SPJnVfMajReFfY3w78Rb0hnDe7+pEn1RvC
z6evjs2tM04+svdgP/WGu/7bi/vnqDeEV+4teqdPlfETN1If/4N6Q/gHTWc2
9VJvCEfMLwrdWmrc5aneh7qrN9znCQt6cbN6Q3hsfmrgEwXGDSv5whT1hvCI
WWsig5KNJ+Rs+HPlKePHJ8zstE69Ifxl+LXfTE4y/m5E1PWOlcZz62LnHVNv
uHm8PPz8m4kPcFVt3MQy49TiMfUd1BvCz05asPijBONRw2LuvlFsfGJuUOZ4
9YbwT5emfj8gzvhWaMmx8kLjvO4lC9LUG8KTr6Z0GRdjPCsy8BC9b5wx4pcv
H2k1Hr0oof/r6g3h0LxR5zjX+Ht9q7fev2W8rFfEC2XqDeGQ6uiBqVnGNzaN
kqhG45KIK+VtkVeV4zbPyDqcabzjm7UrUuqNW7alzIhSbwgvvvTMyLZ046YF
JaGH64wLCu53TVFvuPltCeoQlWZ8J7629V61cVDEwtsfqjeEO5//sGX1KuM7
e862RVYZ3yov/k5bvyblb7q/0PvwMuNH848OTakwfuNo8+Qo9YbwuKwLCW2L
jNdFv7vucKlx5O+CC1PUG+7+9dzUuqj5xpUnpwXf32+8f2jI+DL1hpvPkJzk
1NnGx3o0lXCBsfcv+kQYfSOMPnJeAV+56wCfuX0A3wmjD4XRlz4PPOhTN4fg
W2H0sTD6Whh97u474HthzAPCmBfcvkKeEMa84TwEecTdFyGvuH2EPCOMecfd
dyAPCWNeEsY85eYQ8pYw5jFhzGvCmOeEMe8JYx4UxrwojHlSGPOm8xzkUWHM
q+57DHlWGPOuuy9CHhbGvCyMeVoY87b73kIeF8a8Lox53nkd8r7LJdAHhLEv
OC9BnxDGvuHNvzH2FW++zUvYd7z5Na9hX/Lm0xj7lvMS9DFv3oyxz3nzZN7G
PujNi3kf+6SbT+ibwthH3X0I+qq3v5ZLsO96+2eMfVkY+7S3H8bYx731ttyF
fd5bT8tteB4gjOcF3vpYLsTzBm/+LVfieYX3+SyX4nmHd/1lftdruRfPU7zr
sdyM5zHe+1nuxvMc7/Ust+N5kDCeF3m/t16A500P9wrvf+gTIvQNEfrI9R7w
FRH6jAh9R4Q+dL0RfEmEPiVC3xKhj4nQ165Hgs+J0Peu90IecI+HvECEeYII
84brfZBHiDCvEGGeIcK8Q4R5iAjzEhHmKSLMW0SYx4gwrxFhniPCvOd6L+RB
IsyLRJgniTBvuvWGPEqEeZUI8ywR5l0izMOu90JeJsI87RjyNhHmcTefkNeJ
MM8TYd4nwj5AhH2BCPsEEfYNIuwjRNhXiLDPEGHfIcI+RIR9iQj7FBH2LSLs
Y25/oK+5+YU+R4R9jwj7oPs80BeJsE8SYd8kwj5KhH3VXT/0WSLsu0TYh4mw
LxNhnybCvk2EfZwI+7pj6PNE2PeJ8DyACM8L3P0LzhOI8LzBzSOcRxDheQUR
nmcQ4XkHEZ6H+M6dHjwvcc+H8xQiPG8hwvMYIjyvIcLzHCI87yHC8yAiPC8i
wvMkIu+86f8g2i2O
        "]]},
     Annotation[#, "GeoBackground", "WolframGeoGraphics"]& ], 
    TagBox[
     TagBox[
      TooltipBox[
       {Opacity[0], 
        PolygonBox[{{-73.97739604796568, 
         44.62435444832326}, {-73.97587274660947, 
         44.62435444832326}, {-73.97587274660947, 
         44.622825245782096`}, {-73.97739604796568, 
         44.622825245782096`}, {-73.97739604796568, 44.62435444832326}}]},
       "\"Wolfram Knowledgebase with tile data from \
https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_token=pk.\
eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa3dzOHQifQ\
.msWbRUe-nqmNC-DZyl40Ew\"",
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       "Wolfram Knowledgebase with tile data from \
https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_token=pk.\
eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa3dzOHQifQ\
.msWbRUe-nqmNC-DZyl40Ew", "Tooltip"]& ],
     Annotation[#, "Metadata", "WolframGeoGraphics"]& ], 
    TagBox[{},
     Annotation[#, "GeoGridLines", "WolframGeoGraphics"]& ]}, 
   TagBox[{},
    Annotation[#, "GeoScaleBar", "WolframGeoGraphics"]& ]},
  CoordinatesToolOptions:>{
   "DisplayFunction" -> (
     GeoGraphics`GeoGridPositionDisplay[#, {
      "Mercator", "Centering" -> GeoPosition[{40.69743799927002, -73.979681}],
        "GridOrigin" -> {-73.979681, 0}}, "ITRF00"]& ), 
    "CopiedValueFunction" -> (
     GeoGraphics`GeoGridPositionCopiedValue[#, {
      "Mercator", "Centering" -> GeoPosition[{40.69743799927002, -73.979681}],
        "GridOrigin" -> {-73.979681, 0}}, "ITRF00"]& )},
  DefaultBaseStyle->"GeoGraphics",
  ImageSize->Medium,
  ImageSizeRaw->{645, 647},
  Method->{"OriginalInput" -> HoldForm[
      GeoGraphics[{
        Entity["City", {"NewYork", "NewYork", "UnitedStates"}]}, GeoServer -> 
       "https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_\
token=pk.eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa\
3dzOHQifQ.msWbRUe-nqmNC-DZyl40Ew", GeoRange -> Quantity[0.2, "Miles"]]], 
    "BasicGeoRange" -> {{40.694539535418045`, 
     40.70033646312201}, {-73.98348925339054, -73.97587274660947}}, 
    "GeoGraphicsOptions" -> {
     GeoBackground -> 
      GeoStyling[
       "Satellite", 
        GeoServer -> {
         "https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_\
token=pk.eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa\
3dzOHQifQ.msWbRUe-nqmNC-DZyl40Ew"}], GeoCenter -> 
      GeoPosition[{40.69743799927002, -73.979681}], GeoGridLines -> None, 
      GeoGridLinesStyle -> GrayLevel[0.4, 0.3], GeoModel -> "ITRF00", 
      GeoProjection -> {
       "Mercator", "Centering" -> 
        GeoPosition[{40.69743799927002, -73.979681}], 
        "GridOrigin" -> {-73.979681, 0}}, 
      GeoRange -> {{40.694539535418045`, 
       40.70033646312201}, {-73.98348925339054, -73.97587274660947}}, 
      GeoRangePadding -> None, 
      GeoServer -> {
       "https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_\
token=pk.eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa\
3dzOHQifQ.msWbRUe-nqmNC-DZyl40Ew"}, GeoZoomLevel -> 17, 
      MetaInformation -> {
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "TileSources" -> 
        "Wolfram Knowledgebase with tile data from \
https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_token=pk.\
eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa3dzOHQifQ\
.msWbRUe-nqmNC-DZyl40Ew"}}},
  PlotRange->{{-73.98348925339054, -73.97587274660947}, {44.622825245782096`, 
   44.6304712584879}},
  PlotRangeClipping->True,
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{
  3.7394788506299334`*^9, 3.739478897272835*^9, {3.739479103388966*^9, 
   3.73947912654987*^9}, 3.7394810803609743`*^9, 3.739481664352916*^9, 
   3.739482632899775*^9, 3.739483703030793*^9, 3.739484007549971*^9, 
   3.739484307653904*^9, 3.739485258875821*^9, 3.739493114157445*^9, {
   3.739493170438328*^9, 3.7394932298081303`*^9}, {3.7394932616160297`*^9, 
   3.7394932754510612`*^9}, {3.739493527232621*^9, 3.739493535842402*^9}, 
   3.7394939231584997`*^9, {3.7394939562163353`*^9, 3.739493968324246*^9}, {
   3.739494007776533*^9, 3.739494083384087*^9}, {3.739494114271069*^9, 
   3.739494134468665*^9}, {3.739494179706252*^9, 3.7394942054512167`*^9}, 
   3.739494246859983*^9, {3.739574387123723*^9, 3.7395743929988213`*^9}, 
   3.739725390629747*^9, 3.7397255062794657`*^9, 3.739725553114792*^9, {
   3.739725593378826*^9, 3.7397256080086937`*^9}, 3.7397257528619223`*^9, 
   3.739726462201045*^9, 3.73972650044153*^9, {3.739726801031835*^9, 
   3.739726825329446*^9}, {3.739733913787291*^9, 3.739733925012705*^9}, {
   3.739783959239139*^9, 3.7397839833857718`*^9}, 3.739784611255776*^9, 
   3.739809343135192*^9, 3.739809429705398*^9, 3.739809461104163*^9, 
   3.739809584382751*^9, 3.739809675802122*^9, {3.739811506562398*^9, 
   3.739811527271861*^9}, 3.739811582445055*^9, 3.739811826299049*^9, {
   3.739814272777957*^9, 3.739814298937096*^9}, 3.7398169074696007`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"674e1da4-7382-4e7a-9356-928e014f1f17"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{
  3.7394458501570063`*^9},ExpressionUUID->"4e3ea519-4e5c-44ff-9169-\
0de7d87dd3f8"],

Cell["\<\
Create a function to return a association of points and zoom level:\
\>", "CodeText",
 CellChangeTimes->{{3.7392920290046062`*^9, 
  3.739292064807222*^9}},ExpressionUUID->"7239a3fa-7e8e-4f7d-866a-\
449f2cbce6b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"associateThePositionsWithGeoRange", "[", "points_List", "]"}], 
   " ", ":=", " ", "\[IndentingNewLine]", "\t", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Point\>\"", "\[Rule]", "#"}], ",", 
        RowBox[{"\"\<Zoom\>\"", "\[Rule]", 
         RowBox[{"getZoomLevel", "[", "#", "]"}]}]}], "|>"}], "&"}], ",", 
     "points"}], "]"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.7392922312313013`*^9, {3.7394668939548693`*^9, 3.7394669160564337`*^9}, {
   3.7394680301053953`*^9, 3.739468055589905*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"9f4d1e6b-82a9-4913-a2ba-bbafd0ff2fed"],

Cell["Combine data:", "CodeText",
 CellChangeTimes->{{3.739725653910083*^9, 
  3.739725670539446*^9}},ExpressionUUID->"e4818244-97a3-4bb6-b33f-\
a78551d38c75"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingData", " ", "=", " ", 
   RowBox[{"RandomSample", "@", 
    RowBox[{"Join", "[", 
     RowBox[{"trainingDataOfCountry", ",", "trainingDataOfCities"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testingData", " ", "=", " ", 
   RowBox[{"RandomSample", "@", 
    RowBox[{"Join", "[", 
     RowBox[{"testingDataOfCountry", ",", "testingDataOfCities"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"validationData", " ", "=", " ", 
   RowBox[{"RandomSample", "@", 
    RowBox[{"Join", "[", 
     RowBox[{"validationDataOfCountry", ",", "validationDataOfCities"}], 
     "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.739725720987419*^9, 3.739725724089397*^9}, {
  3.7397257591118298`*^9, 3.739725826697736*^9}, {3.739733945168818*^9, 
  3.7397339517502203`*^9}, {3.739783839797543*^9, 3.7397838512355967`*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"b4914fab-1406-4ff2-975c-47e0ef507b50"],

Cell["Call the createTheDataSet function:", "CodeText",
 CellChangeTimes->{{3.739292075090303*^9, 
  3.7392920868513823`*^9}},ExpressionUUID->"9ff6564b-5c79-4acc-8b4f-\
41e821cef504"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"assocoatedtrainingData", " ", "=", " ", 
   RowBox[{"associateThePositionsWithGeoRange", "[", 
    RowBox[{"RandomSample", "@", 
     RowBox[{"Join", "[", 
      RowBox[{"trainingDataOfCountry", ",", "trainingDataOfCities"}], "]"}]}],
     "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"assocoatedvalidationData", " ", "=", " ", 
   RowBox[{"associateThePositionsWithGeoRange", "[", 
    RowBox[{"RandomSample", "@", 
     RowBox[{"Join", "[", 
      RowBox[{"testingDataOfCountry", ",", "testingDataOfCities"}], "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"assocoatedtestingData", " ", "=", " ", 
   RowBox[{"associateThePositionsWithGeoRange", "[", 
    RowBox[{"RandomSample", "@", 
     RowBox[{"Join", "[", 
      RowBox[{"validationDataOfCountry", ",", "validationDataOfCities"}], 
      "]"}]}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.739292630274317*^9, 3.739292655182761*^9}, 
   3.739466914936296*^9, {3.739725848836873*^9, 3.739725875900535*^9}, {
   3.7397339713612967`*^9, 3.7397339760972652`*^9}, {3.739828727100963*^9, 
   3.739828736579844*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"a42fbfa5-bcd2-42d9-a5e0-03d65778d6ca"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "@", "assocoatedtrainingData"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{"assocoatedtrainingData", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Take", "[", 
  RowBox[{
   RowBox[{"Dataset", "@", "assocoatedtrainingData"}], ",", "2"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.739292088044322*^9, 3.73929209076473*^9}, {
   3.739292140184062*^9, 3.739292146870885*^9}, {3.7392922107904873`*^9, 
   3.739292251556777*^9}, {3.739292648484479*^9, 3.739292650785531*^9}, {
   3.739478677520999*^9, 3.7394786857417097`*^9}, {3.739480954722131*^9, 
   3.739480971892568*^9}, {3.739481031899871*^9, 3.7394810326920652`*^9}, {
   3.739484403937911*^9, 3.739484416099373*^9}, {3.739725882979772*^9, 
   3.739725887054085*^9}, {3.739733966442622*^9, 3.739733968943809*^9}, 
   3.7397840002807703`*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"b4fc73f5-0934-4faf-8699-0de8205e8f9e"],

Cell[BoxData["1000"], "Output",
 CellChangeTimes->{{3.73929221932687*^9, 3.739292252569058*^9}, 
   3.739292662494555*^9, 3.739444753499214*^9, 3.7394463363529377`*^9, 
   3.739450801551374*^9, 3.739466920053255*^9, 3.739466970023397*^9, {
   3.73946803673452*^9, 3.739468058584859*^9}, {3.739478680223373*^9, 
   3.739478686129653*^9}, {3.739480960060438*^9, 3.7394809723516483`*^9}, 
   3.7394810340928926`*^9, 3.739484326714752*^9, 3.739484416877116*^9, 
   3.7394942578033*^9, 3.739725888172967*^9, 3.739726477887941*^9, 
   3.73972683609361*^9, {3.7397339586966343`*^9, 3.739733979939*^9}, {
   3.73978399671513*^9, 3.739784000682158*^9}, 3.7397846187837954`*^9, {
   3.7398115669310904`*^9, 3.739811590489355*^9}, 3.739811839754106*^9, 
   3.739814313358789*^9, 3.7398169151818523`*^9, {3.739828743076419*^9, 
   3.739828755242366*^9}, 3.7398290289164143`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"bf197c3b-ee00-4eb9-ba7c-8f8e1325ca91"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Point\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"29.99964018654861`", ",", 
        RowBox[{"-", "95.12358717181868`"}]}], "}"}]}], ",", 
     RowBox[{"\<\"Zoom\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Point\"\>", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"39.35112249787203`", ",", 
        RowBox[{"-", "120.86725051789631`"}]}], "}"}]}], ",", 
     RowBox[{"\<\"Zoom\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.73929221932687*^9, 3.739292252569058*^9}, 
   3.739292662494555*^9, 3.739444753499214*^9, 3.7394463363529377`*^9, 
   3.739450801551374*^9, 3.739466920053255*^9, 3.739466970023397*^9, {
   3.73946803673452*^9, 3.739468058584859*^9}, {3.739478680223373*^9, 
   3.739478686129653*^9}, {3.739480960060438*^9, 3.7394809723516483`*^9}, 
   3.7394810340928926`*^9, 3.739484326714752*^9, 3.739484416877116*^9, 
   3.7394942578033*^9, 3.739725888172967*^9, 3.739726477887941*^9, 
   3.73972683609361*^9, {3.7397339586966343`*^9, 3.739733979939*^9}, {
   3.73978399671513*^9, 3.739784000682158*^9}, 3.7397846187837954`*^9, {
   3.7398115669310904`*^9, 3.739811590489355*^9}, 3.739811839754106*^9, 
   3.739814313358789*^9, 3.7398169151818523`*^9, {3.739828743076419*^9, 
   3.739828755242366*^9}, 3.739829028931019*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"425b9837-f0ae-41d0-b791-d12b13da182b"],

Cell[BoxData[
 TemplateBox[{TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "RowCount" -> 2, "Length" -> 2, "InitialType" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Point", "Zoom"}, {
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 2], 
            TypeSystem`Atom[Real]}], 2], "Shape" -> 
        TypeSystem`PackageScope`HeaderShape[
          Association[{All, "Point"} -> 1, {All, "Zoom"} -> 1], 
          TypeSystem`PackageScope`Limited[
           TypeSystem`PackageScope`ColumnShape[
            TypeSystem`PackageScope`RowShape[
             Association[
             "Point" -> TypeSystem`PackageScope`UnknownShape, "Zoom" -> 
              TypeSystem`PackageScope`AtomShape[60]]]], 2, {}]], 
        "InitialData" -> TypeSystem`PackageScope`CacheHandle[779597098], 
        "Type" -> TypeSystem`Vector[
          TypeSystem`Struct[{"Point", "Zoom"}, {
            TypeSystem`Vector[
             TypeSystem`Atom[Real], 2], 
            TypeSystem`Atom[Real]}], 2], "HandleQ" -> True, "RowTarget" -> 20,
         "Data" -> TypeSystem`PackageScope`CacheHandle[779597098]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Point\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Point\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1829654638][{All, "Point"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1829654638][
                  GeneralUtilities`Slice[All, "Point"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Zoom\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Zoom\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1829654638][{All, "Zoom"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1829654638][
                  GeneralUtilities`Slice[All, "Zoom"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{29.99964018654861, -95.12358717181868}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{29.99964018654861, -95.12358717181868}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1829654638][{1, 
                    Key["Point"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1829654638][
                  GeneralUtilities`Slice[1, 
                   Key["Point"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1829654638][
                  GeneralUtilities`Slice[1, 
                   Key["Zoom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    
                    Style[{39.35112249787203, -120.86725051789631`}, 
                    ShowStringCharacters -> False], 
                    Style[
                    
                    Style[{39.35112249787203, -120.86725051789631`}, 
                    ShowStringCharacters -> False], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1829654638][{2, 
                    Key["Point"]}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1829654638][
                  GeneralUtilities`Slice[2, 
                   Key["Point"]]], "Mouse"]], 
               Pane[
                Annotation[
                 RawBoxes["0."], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1829654638][
                  GeneralUtilities`Slice[2, 
                   Key["Zoom"]]], "Mouse"], 
                ImageSize -> {{60, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1829654638][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1829654638]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1829654638][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1829654638][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {203., {42.134033203125, 47.865966796875}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellChangeTimes->{{3.73929221932687*^9, 3.739292252569058*^9}, 
   3.739292662494555*^9, 3.739444753499214*^9, 3.7394463363529377`*^9, 
   3.739450801551374*^9, 3.739466920053255*^9, 3.739466970023397*^9, {
   3.73946803673452*^9, 3.739468058584859*^9}, {3.739478680223373*^9, 
   3.739478686129653*^9}, {3.739480960060438*^9, 3.7394809723516483`*^9}, 
   3.7394810340928926`*^9, 3.739484326714752*^9, 3.739484416877116*^9, 
   3.7394942578033*^9, 3.739725888172967*^9, 3.739726477887941*^9, 
   3.73972683609361*^9, {3.7397339586966343`*^9, 3.739733979939*^9}, {
   3.73978399671513*^9, 3.739784000682158*^9}, 3.7397846187837954`*^9, {
   3.7398115669310904`*^9, 3.739811590489355*^9}, 3.739811839754106*^9, 
   3.739814313358789*^9, 3.7398169151818523`*^9, {3.739828743076419*^9, 
   3.739828755242366*^9}, 3.73982902901912*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"88430038-39a1-4fa7-a664-61abca7477f3"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s now write our function that will encode and decode \
name of the images:\
\>", "CodeText",
 CellChangeTimes->{{3.739288500494555*^9, 
  3.739288530591588*^9}},ExpressionUUID->"a50cd165-655d-4d47-af0b-\
17bcd8134cea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"encodeID", "[", "expr_", "]"}], ":=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{
    RowBox[{"Developer`EncodeBase64", "@", 
     RowBox[{"BinarySerialize", "@", "expr"}]}], ",", 
    RowBox[{"\"\</\>\"", "\[Rule]", "\"\<~\>\""}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"decodeID", "[", "expr_", "]"}], ":=", 
  RowBox[{"BinaryDeserialize", "@", 
   RowBox[{"Developer`DecodeBase64ToByteArray", "@", 
    RowBox[{"StringReplace", "[", 
     RowBox[{"expr", ",", 
      RowBox[{"\"\<~\>\"", "\[Rule]", "\"\</\>\""}]}], "]"}]}]}]}]}], "Code",
 CellChangeTimes->{3.739288613874835*^9},
 CellLabel->"In[69]:=",ExpressionUUID->"748e53f0-884a-424e-910a-2f234b61ef52"],

Cell["Try out the encodeID and decodeID: ", "CodeText",
 CellChangeTimes->{{3.739293026929965*^9, 
  3.739293038211898*^9}},ExpressionUUID->"45e77874-c5bf-4e4c-ae28-\
188c83e6bbf5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Part", "[", 
  RowBox[{"assocoatedtrainingData", ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"encodeID", "[", 
  RowBox[{"Part", "[", 
   RowBox[{"assocoatedtrainingData", ",", "2"}], "]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"decodeID", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.739451762740291*^9, 3.739451770890506*^9}, {
  3.739451820865142*^9, 3.739451845174436*^9}, {3.7397258983309717`*^9, 
  3.739725899940702*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"ac1c5322-8a62-4e34-b10a-7d0b570ddfd9"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Point\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"40.58499622098927`", ",", 
      RowBox[{"-", "74.13441695299083`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Zoom\"\>", "\[Rule]", "0.`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.739451771117959*^9, {3.7394518225503073`*^9, 3.739451845444305*^9}, 
   3.7394669245242443`*^9, {3.739466973895524*^9, 3.739466974995496*^9}, 
   3.739468070564568*^9, 3.739478690634439*^9, 3.739479157134426*^9, 
   3.739484435483831*^9, 3.7394942770545464`*^9, 3.739725900818038*^9, 
   3.7397268381545143`*^9, 3.7397339834290667`*^9, 3.739784006942915*^9, 
   3.739784621517128*^9, 3.739809734566688*^9, 3.739811596955171*^9, 
   3.739811842791671*^9, 3.7398143182337427`*^9, 3.7398169187321863`*^9, {
   3.7398287472746153`*^9, 3.739828757624405*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"f10208e3-3eb2-40aa-a989-3e8eeb67a2c7"],

Cell[BoxData["\<\"ODpBAi1TBVBvaW50wSMBAly3+\
ifhSkRA6UeQSZqIUsAtUwRab29tcgAAAAAAAAAA\"\>"], "Output",
 CellChangeTimes->{
  3.739451771117959*^9, {3.7394518225503073`*^9, 3.739451845444305*^9}, 
   3.7394669245242443`*^9, {3.739466973895524*^9, 3.739466974995496*^9}, 
   3.739468070564568*^9, 3.739478690634439*^9, 3.739479157134426*^9, 
   3.739484435483831*^9, 3.7394942770545464`*^9, 3.739725900818038*^9, 
   3.7397268381545143`*^9, 3.7397339834290667`*^9, 3.739784006942915*^9, 
   3.739784621517128*^9, 3.739809734566688*^9, 3.739811596955171*^9, 
   3.739811842791671*^9, 3.7398143182337427`*^9, 3.7398169187321863`*^9, {
   3.7398287472746153`*^9, 3.739828757638629*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"1526ee9e-42c8-494c-a67c-282590c5af63"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Point\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"40.58499622098927`", ",", 
      RowBox[{"-", "74.13441695299083`"}]}], "}"}]}], ",", 
   RowBox[{"\<\"Zoom\"\>", "\[Rule]", "0.`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.739451771117959*^9, {3.7394518225503073`*^9, 3.739451845444305*^9}, 
   3.7394669245242443`*^9, {3.739466973895524*^9, 3.739466974995496*^9}, 
   3.739468070564568*^9, 3.739478690634439*^9, 3.739479157134426*^9, 
   3.739484435483831*^9, 3.7394942770545464`*^9, 3.739725900818038*^9, 
   3.7397268381545143`*^9, 3.7397339834290667`*^9, 3.739784006942915*^9, 
   3.739784621517128*^9, 3.739809734566688*^9, 3.739811596955171*^9, 
   3.739811842791671*^9, 3.7398143182337427`*^9, 3.7398169187321863`*^9, {
   3.7398287472746153`*^9, 3.7398287576463757`*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"2e82e3ab-104a-41ec-9fb1-f4eaf3676fdf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
So, far we have created all the needed functions. Now, we will create our new \
function that takes all the function and creates folder for a image with \
association name which was encoded. Then, we will part our image into sub \
images and store them into the folder we created. This will continue for \
every image we get using GeoImage.\
\>", "Subsection",
 CellChangeTimes->{{3.739447492943597*^9, 
  3.7394476681510763`*^9}},ExpressionUUID->"831f9456-a7b3-4e0a-9d40-\
289d00e5a43c"],

Cell["Create a function to getImages from GeoImage:", "CodeText",ExpressionUUID->"8d3f76fc-7216-445b-9de9-29f45a9ee15f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"getImage", "[", 
    RowBox[{"coords_List", ",", " ", "range_"}], "]"}], " ", ":=", " ", "\n", 
   "\t", 
   RowBox[{"GeoGraphics", "[", "\n", "    ", 
    RowBox[{
     RowBox[{"GeoPosition", "[", "coords", "]"}], ",", "\n", "    ", 
     RowBox[{
     "GeoServer", " ", "->", " ", 
      "\"\<https://api.mapbox.com/v4/mapbox.satellite/``/``/``.png32?access_\
token=pk.eyJ1IjoicmljY2FyZG9kaXZpcmdpbGlvIiwiYSI6ImNqajhtdHhjNjJkYWozcG9oaHhxa\
3dzOHQifQ.msWbRUe-nqmNC-DZyl40Ew\>\""}], ",", "\n", "    ", 
     RowBox[{"GeoRange", " ", "->", " ", "range"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"800", ",", "800"}], "}"}]}]}], "\n", "]"}]}], ";"}], "\n", 
 RowBox[{"  \t", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"GeoImage", "[", 
     RowBox[{
      RowBox[{"GeoPosition", "[", "coords", "]"}], ",", " ", 
      RowBox[{"GeoRange", " ", "->", "range"}]}], "]"}], ";"}], 
   "*)"}]}]}], "Code",
 CellChangeTimes->{
  3.739451005086795*^9, {3.739809826120627*^9, 3.739809871887929*^9}, {
   3.739810264254697*^9, 3.739810267172497*^9}, {3.739810310613419*^9, 
   3.739810332776125*^9}, {3.7398112425617*^9, 3.7398112553493433`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"d24208c3-4ada-4567-b28c-7f512f4ad8f2"],

Cell["\<\
 Before we create our store image function, we should create a hash function \
to get unique names for images:\
\>", "CodeText",ExpressionUUID->"683a57ca-6e16-469d-8caa-36d7cad6769d"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"hash", "[", "expr_", "]"}], " ", ":=", " ", "\n", "\t", 
    RowBox[{"IntegerString", "[", 
     RowBox[{
      RowBox[{"Hash", "[", "expr", "]"}], ",", "36"}], "]"}]}], ";"}], 
  "*)"}]], "Code",
 CellChangeTimes->{3.739447195200952*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"c1703756-cd4e-4971-b72e-3d0902be07c4"],

Cell["Now, let\[CloseCurlyQuote]s create our storeImage function:", "CodeText",ExpressionUUID->"4c349f46-896d-442f-91c9-506e721dae41"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "imageLocation", "]"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"imageLocation", "[", 
      RowBox[{"zoomLevel_", ",", "imageNumber_"}], "]"}], " ", ":=", " ", 
     "\n", "\t", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        RowBox[{
         RowBox[{"ToString", "[", "zoomLevel", "]"}], "<>", "\"\<-\>\"", "<>", 
         RowBox[{"ToString", "[", "imageNumber", "]"}], "<>", 
         "\"\<.png\>\""}]}], "}"}], "]"}]}], ";"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"imageLocation", "[", 
    RowBox[{"notebookDirectory_", ",", "zoomLevel_", ",", "imageNumber_"}], 
    "]"}], " ", ":=", " ", "\n", "\t", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"notebookDirectory", ",", 
      RowBox[{
       RowBox[{"encodeID", "[", 
        RowBox[{
         RowBox[{"ToString", "[", "zoomLevel", "]"}], "<>", "\"\<-\>\"", "<>", 
         RowBox[{"ToString", "[", "imageNumber", "]"}]}], "]"}], "<>", 
       "\"\<.png\>\""}]}], "}"}], "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.739447216118417*^9, 3.739447266700036*^9}, {
   3.739452050441359*^9, 3.739452088397271*^9}, {3.7394521318503*^9, 
   3.739452143353545*^9}, {3.7394782978028307`*^9, 3.739478305994787*^9}, {
   3.739478599511551*^9, 3.739478612780447*^9}, 3.7394813670791616`*^9, {
   3.739481444205019*^9, 3.7394814500237083`*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"992a878a-ece8-4621-9f25-b9bb3ea4aaea"],

Cell["Create a function to get folder location with encoded name:", "CodeText",
 CellChangeTimes->{{3.739462716747381*^9, 
  3.7394627356389647`*^9}},ExpressionUUID->"b3405eda-1496-44dc-add9-\
30c3ede8f5f4"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "folderLocation", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"folderLocation", "[", 
     RowBox[{"exp_", ",", "trainingOrTestingFolder_"}], "]"}], " ", ":=", " ",
     "\n", "\t", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<StalliteImages\>\"",
        ",", "trainingOrTestingFolder", ",", 
       RowBox[{"encodeID", "[", "exp", "]"}]}], "}"}], "]"}]}], ";"}], 
  " "}]}], "Code",
 CellChangeTimes->{{3.7394477786402893`*^9, 3.739447901077332*^9}, {
   3.739447936160303*^9, 3.739447941423914*^9}, 3.739448420674364*^9, {
   3.739462466799013*^9, 3.739462470822237*^9}, {3.739462737424119*^9, 
   3.739462738819079*^9}, {3.7394670242368727`*^9, 3.739467026465727*^9}, {
   3.7394670932963247`*^9, 3.739467114214493*^9}, 3.739467160852457*^9, {
   3.739574184038179*^9, 3.739574201644327*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"34d04065-ea6f-44ec-b2ed-21d5be51a442"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Okey now it is time to create our function to partition images into smaller \
parts.\
\>", "Subsection",
 CellChangeTimes->{{3.739463460865419*^9, 
  3.739463486766983*^9}},ExpressionUUID->"00f8d736-527f-4bf6-b662-\
db5f231785ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"When", " ", "images", " ", "were", " ", "parted"}], ",", " ", 
    RowBox[{"their", " ", "zoom", " ", "level", " ", 
     RowBox[{"changed", ".", " ", "To"}], " ", "prevent", " ", "that"}], ",", 
    " ", 
    RowBox[{
    "I", " ", "also", " ", "converted", " ", "the", " ", "zoom", " ", "leve", 
     " ", "for", " ", "each", " ", "image", " ", "by", " ", "simply", " ", 
     "dividing", " ", "the", " ", "real", " ", "zoom", " ", "level", " ", 
     "with", " ", "the", " ", "number", " ", "of", " ", 
     RowBox[{"images", "!"}]}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"partitionTheImage", "[", 
      RowBox[{"img_", ",", "geoRange_", ",", "levelOfPartition_"}], "]"}], 
     " ", ":=", " ", "\[IndentingNewLine]", "\t", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"geoRange", "/", "n"}], "\[Rule]", 
         RowBox[{"Flatten", "@", 
          RowBox[{"ImagePartition", "[", 
           RowBox[{"img", ",", 
            RowBox[{"Scaled", "[", 
             RowBox[{"1", "/", "n"}], "]"}]}], "]"}]}]}], "|>"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "levelOfPartition"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"saveImages", "[", 
     RowBox[{"folderName_", ",", "partedImage_"}], "]"}], " ", ":=", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"key", ",", "values", ",", "imglocation"}], "}"}], ",", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"key", " ", "=", " ", 
          RowBox[{"First", "[", 
           RowBox[{"Keys", "@", "partedImage"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"values", " ", "=", " ", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Values", "[", "partedImage", "]"}]}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"imglocation", " ", "=", " ", 
          RowBox[{"imageLocation", "[", 
           RowBox[{"folderName", ",", "key", ",", "count"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"FileExistsQ", "@", "imglocation"}], ",", 
           RowBox[{"Missing", "[", "\"\<ImgAlreadyExist\>\"", "]"}], ",", 
           RowBox[{"Export", "[", 
            RowBox[{"imglocation", ",", 
             RowBox[{"ImageResize", "[", 
              RowBox[{
               RowBox[{"Part", "[", 
                RowBox[{"values", ",", "count"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"256", ",", "256"}], "}"}]}], "]"}]}], "]"}]}], 
          "]"}]}]}], "\[IndentingNewLine]", "\t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"count", ",", " ", "1", ",", " ", 
        RowBox[{"Length", "@", 
         RowBox[{"Flatten", "@", 
          RowBox[{"Values", "[", "partedImage", "]"}]}]}]}], "}"}]}], 
     "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.7394666169579906`*^9, 3.7394666433835783`*^9}, {
   3.739466757667954*^9, 3.739466859153536*^9}, {3.7394720800684223`*^9, 
   3.7394720997054043`*^9}, {3.739475631283024*^9, 3.7394756645550213`*^9}, {
   3.739475696818635*^9, 3.739475698683092*^9}, {3.739475812087162*^9, 
   3.7394758891988077`*^9}, {3.73947611052794*^9, 3.739476124820088*^9}, {
   3.739476490656246*^9, 3.7394765603329487`*^9}, {3.73947659528407*^9, 
   3.739476632361024*^9}, {3.739476683401979*^9, 3.739476784858365*^9}, {
   3.739476816944461*^9, 3.739476862380303*^9}, {3.739476975393155*^9, 
   3.739477018787198*^9}, {3.73947710168124*^9, 3.739477120263041*^9}, {
   3.739477165455797*^9, 3.739477241150093*^9}, {3.739477298600993*^9, 
   3.7394773583654747`*^9}, {3.739477392972145*^9, 3.739477393479424*^9}, {
   3.739477629181438*^9, 3.739477629476819*^9}, {3.73947783698877*^9, 
   3.739477849993491*^9}, {3.739477893039838*^9, 3.739477986543713*^9}, {
   3.739478017903351*^9, 3.739478213819571*^9}, 3.7394785305084543`*^9, {
   3.739480787275353*^9, 3.7394808970018167`*^9}, {3.739481113619956*^9, 
   3.739481148829143*^9}, {3.739726194092959*^9, 3.739726195480517*^9}, {
   3.7397840190764227`*^9, 3.739784021895563*^9}, {3.739810875122912*^9, 
   3.739810876176947*^9}, 3.739811085017045*^9},
 CellLabel->"In[76]:=",ExpressionUUID->"b545a918-adfa-43f8-980f-ed3a0b8ac2cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Time has come, Lets add all the functions:", "Subsection",
 CellChangeTimes->{{3.739466869521853*^9, 
  3.739466880913457*^9}},ExpressionUUID->"05a23029-b3d3-42f8-9e1a-\
a6762aee3e6c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "folderName", ",", "imgPosition", ",", "geoRangeZoom", ",", "img", ",", 
    "imglocation"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"createTheDataSet", "[", 
   RowBox[{
   "assoPointAndGeoRange_Association", ",", "trainingOrTestingFolder_String", 
    ",", "levelOfPartition_"}], "]"}], " ", ":=", " ", "\[IndentingNewLine]", 
  "\t", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "folderName", ",", "geoPosition", ",", "geoRangeZoom", ",", "img", ",", 
      "partedImage", ",", "imglocation"}], "}"}], ",", "\n", "\t", "\n", 
    "\t\t", 
    RowBox[{
     RowBox[{"folderName", " ", "=", " ", 
      RowBox[{"folderLocation", "[", 
       RowBox[{"assoPointAndGeoRange", ",", "trainingOrTestingFolder"}], 
       "]"}]}], ";", "\n", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "@", "folderName"}], ",", " ", ",", "\n", 
       "\t\t\t", 
       RowBox[{
        RowBox[{"CreateDirectory", "@", "folderName"}], ";", "\n", "\t\t\t", 
        RowBox[{"geoPosition", " ", "=", " ", 
         RowBox[{"assoPointAndGeoRange", "[", "\"\<Point\>\"", "]"}]}], ";", 
        "\n", "\t\t\t", 
        RowBox[{"geoRangeZoom", " ", "=", " ", 
         RowBox[{"getGeoRange", "@", 
          RowBox[{"assoPointAndGeoRange", "[", "\"\<Zoom\>\"", "]"}]}]}], ";",
         "\n", "\t\t\t", 
        RowBox[{"img", " ", "=", " ", 
         RowBox[{"Image", "[", 
          RowBox[{"getImage", "[", 
           RowBox[{"geoPosition", ",", 
            RowBox[{"Quantity", "[", 
             RowBox[{"geoRangeZoom", ",", "\"\<Miles\>\""}], "]"}]}], "]"}], 
          "]"}]}], ";", "\n", "\t\t\t", 
        RowBox[{"If", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"ImageQ", "@", "img"}], ",", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"partedImage", " ", "=", " ", 
            RowBox[{"partitionTheImage", "[", 
             RowBox[{
             "img", ",", " ", "geoRangeZoom", ",", "levelOfPartition"}], 
             "]"}]}], ";", "\[IndentingNewLine]", "\t\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"saveImages", "[", 
              RowBox[{"folderName", ",", "#"}], "]"}], "&"}], "/@", 
            "partedImage"}]}]}], "\n", "\t\t\t", "]"}]}]}], "\n", "\t\t", 
      "]"}], ";"}]}], "\[IndentingNewLine]", "\t", 
   "]"}]}], "\[IndentingNewLine]"}], "Code",
 CellChangeTimes->{{3.739467347631217*^9, 3.739467400121348*^9}, {
   3.739468362575338*^9, 3.7394684389765177`*^9}, {3.739468480493491*^9, 
   3.739468612557733*^9}, {3.7394686751556673`*^9, 3.739468675783675*^9}, {
   3.7394687214068737`*^9, 3.73946876039183*^9}, {3.7394688607331448`*^9, 
   3.739468861977964*^9}, {3.739469069594213*^9, 3.739469073283037*^9}, {
   3.7394691281313477`*^9, 3.739469203421577*^9}, {3.739469313956441*^9, 
   3.739469429987874*^9}, {3.739469518279748*^9, 3.7394695348908463`*^9}, {
   3.739469574609304*^9, 3.739469618965536*^9}, {3.739469897267374*^9, 
   3.73946990979012*^9}, {3.7394700514017477`*^9, 3.7394700607710733`*^9}, {
   3.739470300200817*^9, 3.739470303706621*^9}, {3.739470354833145*^9, 
   3.73947037019112*^9}, {3.739470427579221*^9, 3.739470428183654*^9}, 
   3.7394704647412043`*^9, 3.73947050312679*^9, {3.7394708118847227`*^9, 
   3.7394708138122797`*^9}, 3.739471433622591*^9, {3.739471477735765*^9, 
   3.739471482846342*^9}, {3.739471565117153*^9, 3.739471580496258*^9}, {
   3.739471766341708*^9, 3.739471769938924*^9}, {3.739471817642435*^9, 
   3.739471879264933*^9}, {3.7394719227283363`*^9, 3.739471995415757*^9}, {
   3.739472115690226*^9, 3.739472119867248*^9}, {3.739475677702608*^9, 
   3.7394756869491053`*^9}, {3.739476527827445*^9, 3.739476527976363*^9}, {
   3.739478502868257*^9, 3.739478506899797*^9}, {3.739478710627852*^9, 
   3.7394787111606903`*^9}, 3.739480191505872*^9, {3.739545531436269*^9, 
   3.739545593312727*^9}, {3.739726579530631*^9, 3.739726587759081*^9}, 
   3.7397268868003073`*^9, {3.739784190732204*^9, 3.739784263363302*^9}, {
   3.7398099276422977`*^9, 3.7398099343915997`*^9}, {3.7398106258652782`*^9, 
   3.739810626845846*^9}, {3.739810689489172*^9, 3.739810716927815*^9}, {
   3.73981089806651*^9, 3.7398108994561663`*^9}, {3.739811067825844*^9, 
   3.739811179923625*^9}, {3.739811633597741*^9, 3.73981163453881*^9}, {
   3.739814983066636*^9, 3.739815089988367*^9}, {3.739815140783486*^9, 
   3.739815141857728*^9}, {3.739815201747532*^9, 3.739815221593416*^9}, {
   3.739815470193613*^9, 3.739815531908276*^9}, {3.73981557666512*^9, 
   3.7398155811840887`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"45a3f555-28af-4a06-b18a-f941f28f51b8"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Scan", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"createTheDataSet", "[", 
        RowBox[{"#", ",", "\"\<Training\>\"", ",", "3"}], "]"}], "&"}], ",", 
      "assocoatedtrainingData"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"createTheDataSet", "[", 
         RowBox[{"#", ",", "\"\<Validation\>\"", ",", "3"}], "]"}], "&"}], 
       ",", "assocoatedvalidationData"}], "]"}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"createTheDataSet", "[", 
         RowBox[{"#", ",", "\"\<Testing\>\"", ",", "3"}], "]"}], "&"}], ",", 
       "assocoatedtestingData"}], "]"}], ";"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.739574418567245*^9, 3.739574423350889*^9}, {
   3.7397259318264627`*^9, 3.7397259326382217`*^9}, {3.739726040575419*^9, 
   3.73972607058571*^9}, {3.739726184238943*^9, 3.739726275864451*^9}, {
   3.739726322062097*^9, 3.739726371989555*^9}, 3.739726610906889*^9, {
   3.739726865220351*^9, 3.7397268837879477`*^9}, {3.739727069752077*^9, 
   3.7397270721397448`*^9}, {3.739734004200671*^9, 3.739734018358386*^9}, {
   3.739734070265163*^9, 3.739734071409971*^9}, {3.7397341308565607`*^9, 
   3.7397341498330307`*^9}, 3.7397350333716307`*^9, 3.739735196830658*^9, 
   3.739735270487424*^9, 3.739784027844791*^9, {3.739784069846386*^9, 
   3.739784117858322*^9}, {3.7397841815356083`*^9, 3.73978418328797*^9}, {
   3.73978428219316*^9, 3.739784314575788*^9}, {3.739809765193885*^9, 
   3.739809768234674*^9}, {3.739810639681491*^9, 3.739810641743112*^9}, 
   3.739811353014769*^9, {3.739811686685358*^9, 3.7398117053592*^9}, {
   3.739811861322955*^9, 3.7398118632638493`*^9}, {3.73981554114067*^9, 
   3.7398155506019917`*^9}, {3.739815620102478*^9, 3.739815621370327*^9}, 
   3.739816936976357*^9, {3.739818473135785*^9, 3.739818477315627*^9}, 
   3.739827955453761*^9, {3.739828989638504*^9, 3.739828990115234*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"5931a2df-e0a2-47f6-bd9e-b486326c4654"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create the Network", "Section",
 CellChangeTimes->{{3.73948216192352*^9, 3.739482171299431*^9}, {
  3.739574492898245*^9, 
  3.739574493509609*^9}},ExpressionUUID->"69c2789e-757d-42de-8e7a-\
aa67a7c35b9d"],

Cell[TextData[StyleBox["In the last section, we collected the satellite \
images using GeoImage and store all those images on our hard drive. In this \
section, we will create our Neural Network so we can feed it with the data we \
have. ",
 FontColor->GrayLevel[0.5]]], "Text",
 CellChangeTimes->{{3.739574452568635*^9, 
  3.739574518511454*^9}},ExpressionUUID->"7de5c4c6-a64b-46a1-a690-\
20421acf8327"],

Cell["Obtain the all the satellite images\[CloseCurlyQuote] file name:", \
"CodeText",
 CellChangeTimes->{{3.739617512346897*^9, 
  3.7396175322899933`*^9}},ExpressionUUID->"397141f2-5191-422a-93be-\
13de607758e9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingFileNames", " ", "=", " ", 
   RowBox[{"FileNames", "[", 
    RowBox[{
    "\"\<*.png\>\"", ",", 
     "\"\</Users/mehmetsahin/Downloads/SatelliteImages/Training\>\"", ",", 
     "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testingFileNames", " ", "=", " ", 
   RowBox[{"FileNames", "[", 
    RowBox[{
    "\"\<*.png\>\"", ",", 
     "\"\</Users/mehmetsahin/Downloads/SatelliteImages/Testing\>\"", ",", 
     "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ByteCount", "[", "trainingFileNames", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ByteCount", "[", "testingFileNames", "]"}]}], "Input",
 CellChangeTimes->{{3.7396441047060003`*^9, 3.73964411240676*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"15c30300-e287-4825-9e66-2fa1922b0dcd"],

Cell[BoxData["3155680"], "Output",
 CellChangeTimes->{3.739642124337412*^9, 3.7396435430670977`*^9, 
  3.739644115820108*^9, 3.739655084389327*^9, 3.7396569305283813`*^9, 
  3.7396963812139893`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"0b058348-c50c-4941-a577-f6fad6929fd0"],

Cell[BoxData["312488"], "Output",
 CellChangeTimes->{3.739642124337412*^9, 3.7396435430670977`*^9, 
  3.739644115820108*^9, 3.739655084389327*^9, 3.7396569305283813`*^9, 
  3.739696381224489*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"c99c177e-e454-4703-a338-649e3463bcc1"]
}, Open  ]],

Cell["\<\
Define a function to get geo range (zoom level) from the image\
\[CloseCurlyQuote]s name:\
\>", "CodeText",
 CellChangeTimes->{{3.7396421464655533`*^9, 
  3.7396421896453333`*^9}},ExpressionUUID->"7aa12ef3-26bc-483c-a725-\
6d772e623a7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"fromFileNameGetGeoRange", "[", "fileName_", "]"}], " ", ":=", " ",
    "\[IndentingNewLine]", "\t", 
   RowBox[{"ToExpression", "@", 
    RowBox[{"First", "@", 
     RowBox[{"StringSplit", "[", 
      RowBox[{
       RowBox[{"decodeID", "[", 
        RowBox[{"FileBaseName", "@", "fileName"}], "]"}], ",", "\"\<-\>\""}], 
      "]"}]}]}]}], ";"}]], "Code",
 CellChangeTimes->{{3.73964219174292*^9, 3.739642197595091*^9}},
 CellLabel->
  "In[132]:=",ExpressionUUID->"255aacb6-794c-4ff6-8454-598bc0609fe5"],

Cell["Obtain the training and testing data files:", "CodeText",
 CellChangeTimes->{{3.739642209962819*^9, 
  3.739642217770356*^9}},ExpressionUUID->"b19a2987-604b-4b47-a42b-\
7b327a644fcd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingDataFiles", " ", "=", " ", 
   RowBox[{"ParallelMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"File", "[", "#", "]"}], "->", 
       RowBox[{"fromFileNameGetGeoRange", "[", "#", "]"}]}], "&"}], ",", 
     "trainingFileNames"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testingDataFiles", " ", "=", " ", 
   RowBox[{"ParallelMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"File", "[", "#", "]"}], "->", 
       RowBox[{"fromFileNameGetGeoRange", "[", "#", "]"}]}], "&"}], ",", 
     "testingFileNames"}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"b976f20c-aaaa-4f9e-b731-796d2f78847e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Import", "[", 
   RowBox[{"File", "@", 
    RowBox[{"First", "@", "trainingFileNames"}]}], "]"}], "//", 
  "ImageDimensions"}]], "Input",
 CellChangeTimes->{{3.7396431212209673`*^9, 3.739643147359289*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"fe6bd8c0-663f-4630-8621-cf33d8934ac7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"120", ",", "133"}], "}"}]], "Output",
 CellChangeTimes->{{3.739643135729952*^9, 3.7396431481949453`*^9}, 
   3.739643549915168*^9, 3.7396441235382357`*^9, 3.73965697431929*^9, 
   3.739696408303183*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"34f91dba-873c-4a47-9c76-40803f9aad4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
  "File", "@", 
   "\"\</Users/mehmetsahin/Downloads/SatelliteImages/Testing/\
ODpBAi1TBVBvaW50wSMBAhOrJ8EVmklA5GSwdV05JEAtUwRab29tch+5Dfr4OGE~/\
ODpTCDYuMjMzNi03.png\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7396439732757998`*^9, 3.7396440139631987`*^9}, {
   3.739644343776167*^9, 3.739644346457222*^9}, {3.739644465300364*^9, 
   3.739644483600669*^9}, {3.739646147598063*^9, 3.739646169279684*^9}, {
   3.739646208945277*^9, 3.739646393235332*^9}, {3.739664316413259*^9, 
   3.739664328706561*^9}, {3.739664377408153*^9, 3.7396643901475067`*^9}, {
   3.7396644283234587`*^9, 3.739664474793721*^9}, 3.739704568213902*^9, 
   3.739704614222939*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"574ec43b-d24e-461d-9af8-b5ab63b47242"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxMvdmPZXly3yfYfvCj/wUb0MaZ3qpry33fM+++7/u+35s396X27urumeke
jjjkkARJkZRESTYsgaBESwZhw4sk2IAE+dEbLNsw4Be/+DX8+UZWCX44dbMy
7z33nF9EfOMb8YuI8x9WhpHGv/OX/tJfmv77/BMpn21MJuWL6H/Af+KDabs5
qNcOBrN6sz55Xvl3+eX5h+Pf48jXzy2S6VuyOLFYYWQHsYYdJVoWSHet0L7y
I9+6tJX9jH22dGxbJyWLpAaWLZ9Zis+Ekh3LVeccM2uP7q09fmG54shG3Wsb
da6tXplao3lu9eaFZfl9tXVuzc4lP48tXZrafrBse6GyLe+m7NFKyLaCVduL
NW3loGhPdzK2Fqja852sPV6P2/PtpC3tZmx5L2W907d29fLXrcL1Nbo31h3c
WLUx53tOrVqbWrU6tkplYMPBpU3HtzYc3VqT94753GD22mrdKyt3LqwxvPXX
ev/KItm+xSo3dpIa22agYfvhDt+Xt42jkh1H21bt3Fm5dWWV5qWlufdIpsf9
92zruGIH0Y7tRjhiXQvmZhZMDizDe4qliXXb59auz2w2vrNa7dQa/VvLNy5s
I1i3zUjbFg5KthqoW7A4t1DpzPb47NJh2dZDTTtI9m35IGcLu2lb2s/6zwnW
u9i7s3znxg5Z/+1Q1XbDddsJIbv4wDZPWlx7146iXctWTq0z1v3eWiw/smzj
3KqDe5dpiPvVEeca96N8P/eTrZ1bvopOpHsWzw251jvrs1515FlunVmuzn0n
G1YtT23Uv7dW68JqjTNrsLYV7q3du7LR5IX1hneWyA1s6zBnu4GinSRbrGsX
GYft8UbcFpDp0mHRFg8K9mQzZV+uxWxxL2NbgYp9uRqyaK5vzeELK6M3JelO
ZcZ6Tll7ZIZedVnDWuPU5dxtn1mve8nPpzYYv7R658o66KLLF7lPLt9ba3Br
pfalpVp3FmONj9Hh3XDDjpNdfn9t6fKM+x3YXqBkWfRS66UjUz3jmqq2E27Z
UXpke6zvfnJo4VTfWvy9xfU0q1Mb969tjA4mU223pRPWL5Af2268axt8z1Fm
aFuRlm1FW/7/tWDNIpVz5NtFb+q2ESjbdrhmT7cStsP/C5w7XBjb6lHBAtmB
RbmmWOWMaxjbSWZmicqVxYtn6P8168O983oSa9lhvGlR7DjJeuk1XTtz+WbR
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
H1adTxcM0kwIxcTJ0thr6ry/Gn4dxUdmuH7F9mmwJKv6YfhtRDNR0gPvCVMt
4Tb2cqz6GuxfPF/5goJ6iFTXyWdL6GdD+A/mV1TXo9g42vBclWSq/LXmobRG
b3y/QbXyqZpq67vggPjQABwf4GPO/Dzaw1Jc5FikuRm8lnhVLVoIHprgXrfj
2GisZFniqQTrU1btFhxJuL2Gf//IrdbwAdp//mjHpS7rr54dYq669tinyjNd
Wjzd9By/4p7a6Wsr4ofz6sHiWoTFmq+j/qSN49IDV4PfSL4pYsIUcYPingrY
pR7a5of7uOA8E85Z4NyZGFwaf9lBXml4m/amhZ1t5V0VC4LFXbj3y29+6X5I
e0xeC6x9zfbHWo0Lz+XpECbID6rXQ/MXmgOuu3/nc6Y0a0j5zAyYnQIfUiXV
X+NzUnWfaVJoXVmCeHr/uOL1zfXhK593ofp62bZ6KmrEbRXwva46uKr8A/rE
e/LEFfFU1zEirhkTlVOfx1AkjivBfTX3RzNftHe6o1q0Q+2TV20TWxtht+op
qorXYEPq7Uyga5pxpX5Pr+9mHQ/hRvJ5Nc3DQaZJbKSCPjSJocZX773uWX2n
i8Rdmyc11yf1OO1Eqja6eW+lAf4Obqtc1QSeong6xZqMz9/bGO5ZUQ8Cckui
+xV4RxL8Wt5Les5E85GewtlUo6O9Z9VGq2ZlO1z1mQKH4Qo88Axfc+t5oprO
UdGa1C0ULVm9ferYNBrDXfE55RrXUR9ii/AI8KlYHvr+sNcKcn098KylvCyH
6k1yRcUsdd4zRDce+vpK8KMS1ysulEau8qH7Sc2xQDboRr0jHbnwvH6lfYOs
J74nmNZ8MOXCWFP5Je2vVTqqXwJP0J266kKJexq8DuBi4qLqDS6Ck4fxKpwD
3oUfj2en3sOUIbY48P7asu2CE882H2ZeLO+X8MVxbK/vdatFcE17PeqhLDYu
vXayho/eOam4brbgad0zbBX+O7z6Bnt86fGnsHJ49TVrXbG//OWuLYP9mvu1
GXjoC1RNdANec/rqWxtMsXfwsMN31Yrimvc+P6zhtq06t4n3Hu0cZ33vc+M4
63Wp6p3/bPnEa+lCmgEVqPlsmFXknGtfg4H4YOy2r7pk7FF2mkjXwdtTO7/9
1q7uvnMfXELmiVTVcvkmeoDtaq6PYlnkkcH/JNAH1RXlWBPVjwm/xdOKZeLo
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
u3rWO/q1Q4yZQ8fGp6/9GRdDPTeGmOpYMaY4E/JR74leD+V3NN84Db9ExpHC
wzxxxWDq834KX1QtqXr6xL/0DEv1amj/ZqZnLqqGvnvpfWl67sR2pAT+9G3+
+nvLtucuU+8d7+jZ1Zp3f+ozODQPWvNHNWdX3FncSvar8/XgtF3i2L7Ptj3z
GroG39/m56riNuxfNezqdWmBG+1Kz7KxnKUCCcuEUmB4087hBuFIwXYOki4v
zQ596vubCd83Ukyz+yFXtgd31bPANPNq+P81dZ7NbWbXlv4f8/3OtdvubmWR
opgJAiRA5JxzzmAmRVGh1Wq3bN/29dypmqmp+Tr/8sx69ou3yx9QoCgSBM4+
O++91tVX5X5DmytA1+m1BDM6d+OXUdyo3yGOoT+X0Ptuzj5Y3sLcHbv9YBbC
cYVPxpezN9KQLel1FZN25rankZG+sIexFcha/RVuI/D74ZBKlMaGQcU+OTXu
oNUw62YnDsCW1TP1mi6zGnrAbXG5+qw8453N5zLPxHwkPXxm78B0AMdyPyIf
Jd/Gbtkz65FUFEe0rIaxtQ8f4ND26iLgRbHPSh0L3DX9vbp8EnuE4Ryz12Xd
j7qbyTZH2TGCK55cQc9gxoEfMta9ILeOKgbqsGex+snqYnD5or/T2a23Gzq/
lR2/dH1qq+Drya9yz4jBwAFmT7Siv9GUrxi0Ri6fyLt8POdK2bLr6t/hk7Q7
lW+A/5LZMeYD4d1Eh//wPGDYE8gQHpgI/LqSTVh6g2yZnzli9oCec7KvmHdo
3LlwYVN7ikrfwJo8ALNdd4NZOrAemLOkh4/PqdmswcTbccWPKFZZLDxsArBO
G8zfje4Nj5OcDbyrqPGU9Q3PH/wB6qIB7InsSl46BV7uWbRk9baJYpALxXXn
imGT+ozU3kK6C9QgkC+9SPgd2YGmX3kYzlndid2PM3KJSF3xc113rWV7PsSU
YPAXytI3OPr0nrrEC3pfYL9i18EhZ/+LHkUdrN/6zJ2kmzb3T78QHPlia27x
c7LYM/+QlP2oyw+Te7JPD8/AmDORjueVo2eLXdtHYhaKnbGkfHkoUnRp5TPN
+sxyoSa9fvnfUVt+oNRwrXrf5TN1dxrKuOBp2bCY4TZ9tZ1wG37vKly2mZdX
0iPmCrak2/TusVvoJHxWcGEhWzjB2W8nV9mVX95D59PwKDFDODeecWq+qbV9
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
vymO/ckFYhX3ZOfM4rCn+3r9YM04xvfD8Gsv5NMfjEue3JleZFA2gP1Y4md4
r0/1+8TP4LjBi7Jc3Lt377DRihvO8h5PnPxUQWeJ/ialb0Vm92V3i8WOzuvS
3YAxrjvB/FINXDnFuWCx1KXPSd2foPx+VjpHf2pT+TFc4MxPJ8GF5DMrPi+M
bnRePduPOdX7iSoeTteGNp/J/B7Yn16cMrX+wq70NHBaMN9BDgV3DPwBCzhs
mEfPj6y2Sy+gqPgT7ra79/9QziMbC++U5FGS/EtW45Mdk441dTeYvT4FM0x3
aAP+R/rjzLik25bLUTdgppO9HpuNDFVkU9kVCLsf30Rtho684ID7oc8Zkk7B
TzxdfLReNvgs8Dzm9LmQe6E8Mq4lMJXgsGC+nBoes1nspMJPtKk4aVN/+48b
UfdsJ2d4dE+304YhXVZ+sid/AX9WVXkcs0rwUMHhEdd7zsnXxWQLwAc6V4y5
nF67u9tPyn/OZWdSdr4TxZJggvaH967XuXEF2YPL5RezzfPZtZsoXuiD9SoZ
wzGMTwZTbsEsQIc8Fl6x94Y9CVbMtmLGM32ummSbbimHJ944/+RS4KAuyD9k
Kwodq0myH1tuMbczsHlo9IZaCzWuRKbt7d7qPOB0AXuFegxYLNRL2tJPanQj
eDcvfjac4AIYzPJRCZ0tHCE9w3qc2L7P5ePfbY8Ajpkw+Yr0dy+m82XeYt/L
1dmXZuec/u2x7vurIw8TyMcsQL7oEHVC+JdXV7+4i8uvbiK7MVNuSM5WXOPh
LSTr66uPbjG9tvnNxfKd3veFfELLtZY6G8UL5IPs3QbgpwmULDeifkiNKabc
GlyHUtebueZh84byDfQ4qSNGJWPDgUhUDVtqpFjm+vaL+/Tl7zbrexBKu/nl
Zzc7/2yc0uCc5eQTTg8TLq07ntVrVHUWdflpOFzg3nyn37+9/KA881Z2e+Vm
ynuIXZgTLin3Yf6GmUpmqNkDYL4sD2a2Pneud+kOFNtHZKMyOnP6RzHJ9m04
507Bi1s+GkbO/OKjcWbAAQWPO72Lx0//NG4b8A1n2EPZ6QY91+6F9SKb4A3B
L6a7m1Yc3YYfQJ85J3vBPCCY/ODpByVH+MbYm8CfUnNmhxbZ8jV7W9hsesM+
7oX/TP+O+uChbAQ7UnBfEzdPbn/x+Ccac4tv4FJoNCbG0ztRfsaj3aK/MHW3
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
39z/B7ofWeg=
    "], {{0, 120}, {120, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com"], 
      "Comments" -> 
      Association[
       "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
        "Creation Time" -> 
        DateObject[{2018, 7, 2, 15, 16, 30.}, "Instant", "Gregorian", -4.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{120, 120},
  PlotRange->{{0, 120}, {0, 120}}]], "Output",
 CellChangeTimes->{{3.7396439791838417`*^9, 3.739643995455798*^9}, 
   3.739644127916275*^9, 3.739644411266827*^9, {3.739644466113654*^9, 
   3.739644485016219*^9}, {3.739646148806944*^9, 3.7396461699582357`*^9}, {
   3.7396462095227003`*^9, 3.73964639362635*^9}, 3.7396569802588873`*^9, {
   3.739664316971977*^9, 3.739664329278933*^9}, {3.739664378042275*^9, 
   3.7396643978343287`*^9}, {3.739664428822541*^9, 3.739664475238312*^9}, 
   3.739696410768911*^9, 3.7397045692478523`*^9, 3.73970461534487*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"43ce7cd6-409d-4ae6-9309-dfeebfa4aff9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxUvdeSZFuOptdG8oKXfAW+xRivhjSaTXedkyKEa6211lp76MiMFEdUVU9P
kXxP8P+wPWrIi50eGcJ974UF4AfwA+t/zXeuy//Dv/zLvwz+Z/1znZv87/1+
bnbzv+g/ofagVmmXiv/WHpYqpf5/yv+P+ub0cv1Pum5iHUvlZxZJDu062rNU
YWXZ8tZy1b3F8ytda4vnVhbNLu3XcNfCGf1uamKJzMRKpZWlUgNLZwaWzw5s
t3uz+eLRmt2l7eZ3dr94sMf1s531vc3waKvB3iatlQ3qC+tWpjZqrmw/fbBJ
c22N4sBG7aUthydrlIa2GJ3s8fib9dsba1bn1u8eLJ8ZWr2y9NdwpGl5fZ3M
jvS6smJtbQl9fRtpWKmysNn0ybr626fzT3s6/bR6baWfNf1e09mhxRMdW67e
rFReWCzRtVxharni3GKpvq6RxTNz/X9thcLShr2zNcozq2Z7NqzP7G71ZKfV
o+2X97bVM/Y6KxuO7iyaaFu2MLZe/2T1xsZa7b1Va0v9/2zN1s5i8ZaFInWr
VubW0hr0dH/93s76/YNV9P+I/j5Xnlu5sbVkfmqF2sbSpaWlchNr6ufD3t7/
ZqTXidap39naYnJvi/G99bSG/dbWRlqnXnNr49G9NRsrrclE8hpZND2WbNd6
v41F0jML6fk+xUf2OTGxXyID+5QY23VqbJ+1B5LZqRWLrPPIMlqbTKxtbT33
cffFzsc3G08OdtTzn6Z3tupt7XH1as/bN1v199YpjqxT0hpUp5L12g7zJ1sP
72w/e7B5f2ed8sRq+b4dls/29vB36+i5kG+vvdOarK1SnAWXZFtv7CSXmdWb
Wh99HUkO7ONVydqdg203+rz5g22m9zbubqyQH1tWa5bWHijpb5vtg74eW0Ly
zOv9alrTgl6RdVZyTmQl6+TUut0Hi0dbWsu9LSdnv8fT+tF2s7PtFvd20P7t
d9aWz2ld0l2rcK/9o3W6ut+29CQ/tESyZTe3ZSvquRfLFzto397d/WZTvV+l
PLZqXfLu7KygPZTW/mhqP2S175J6tnRZz9k7+l5FnuyLTmNpXelGt4EePdt2
+mhjfdagvvKrmOpaIt60dmujvTqwZG5qmdJa+tu3UGJksdzc5XsrOceKGwtL
dz/qZzeJgX24aVi5urHx8Nnquoe+9spUn/90+GHz0cEm/a3tt4821Z5e6jP3
o7NtByfbaM9tB2c7635OkulE99cpDG2u+z5oD27GZ+tUxlZJd6yqtVrp/wv9
/kR7m71a07OjR8i23dxpXRZar5nrXa2+taLWISm9TqYH1uudrFlb2Fh/O9L+
mvRkA3Sf17d1/3ldf49cI9qXvBZKc/8eck/pPdLaB7X2vX2+7UjfpdfaE4fN
N1vP7q0l2zLvb2w7O0m2eg7ZpES0ZuFQxeU5njz4aybbt1t9L55o+del8tSm
syfJ99V/Pp3cWbu9ki5PfT+MZW+qjbXLt6q9HJeNuYm2LZTsWV37tSvZDrVn
kDE63NH6Nasz68k+jDrI4GBLrddmLHsivc1Ixr3u3mLSwbT2SSjetU+hlkX1
POhvJD21m+TY5Xwlmbve6rnj6aENB/e2W323cesg3ZN+yOaeZIMfZZ/vd6+W
T9esnutKf7XPh2dbS7Yz6epc+2mqz+Z7j6sv9rL9Zl/2P+xBz7yVPIfNRaC/
ku9Q7znXvmjXpA/6u4l0/O31/7L5+NkKubEVpHu1+sbtYF3rktF6ZHMjm81f
bTbT72hNe/rMTn1qTelITfY5mwt0vdO7176YS59nkic6zL6QnS8u3B7chDta
l5l80Fw/n9hi8cWm4zsb6J5GraVNJd/l+Ghr2YauvpeKNbR/1raSzZhIhsXS
xOWaSLYtkxu4Xi/0vMi2LP0eyJY3Ze8aejZsaF/P2ZGOYNuzRXzfQLJtWjTV
k58YyjZtZa+m0kfJUn5upH2LDnNNBkeb6VrpPRda16nszFj7YKSvkW+jfdR7
tewq0rLbeE+2WvZE+oudDiUndi0bfR0fux0vaY36kudKa7iePNtSdmSl+9pK
vw7ajwfsV3dts+7KHiW74/TZptKbnWRz0v4cyu/MJI+9/r/WZx/lI55WX+1x
+cXuFs/6O+1N7clKtmsd2e+5/Bi+Ztjdu3zn+kyunmzrdCKfLp1aLF5tpfdo
a883mxvXE/ZuWXaxLVvW0vvUtWfy0vPx/KsNxi/W6t5ZX/skKxnn5d/y0v20
bFixsrZqU/qYnlhavjdfkc3XmqSk86360h7Pv9nj4bt0915+Dj1aS77SJenT
UOvZ1X1WKzOLyzamUh3ZEdkPrfvb2/9tC9ktvl5KxlntvVisbmnJPZ3uyYaP
rSzMkC9OZUPmFtf9h+Nt3Zfsk2wLvqQk214pjyRj2b3WRXcvvhiMMpMMZrID
U93DXJ8zkU/GPvPcf/lQsOX+D+vpmf/yqWw3MT2Tni+E/urKlOXntAb50tRW
66+2kzw2kyc763Wp/bKSfZhp/54k46l0cDPc22704Pq90louOif9zlFyfrCD
rk33ZFvti2fJ5dvhN/uyZi882Ey2dKa9N9a6jbV+ba3VSP/fruSztt9lo8El
G70KP8kOjbWmHXz47rvrV1MyyGrNEtInnr2uNWhKR0boh/ZiUXYczFLUlZGP
TeviNV9dB7ZJNiGr50zltcbyvx9vWrLdK9lo2WTtz9VM9kh2aiW9HQlLIPMq
96Q929bnlQoj4biFlaW/eentVLZ6I71Fl1aS60z/z+j+QrclrfvIGtr7VelM
Lj/RHupbUra40z3KhmjNc0P9juxAsiM7tXYMVsUOab9ytWWfZ/J9+OGWnrGv
dRhKnkPdx0TPiz40dH9XNzXHFAvZWzBoSLINxWRT9IxR2eiE8HREtiqle8hX
JtbSe7C2u9mrMJF8u/R5VF1KHw+2kF9Zy1aMm0srya9NOveyF2f9XzZFa4uc
d+NH6fFC+2Jn346/29v+p307/SZ/rPcQZt5ITh19Dva5Jh2c6v0OwmYDvT9y
bctW5bQWdcm+mOtLf5a237zKNwufhsp65pP767rs2UzvxdXRHizp8/NV+en6
XjLeSY74uqW/5iobv/g6kZs53iSOyCmOKNcCGdSrC2vItuLTp3r/kWxLS36h
ov1QkoyJH4qSGVdXz4b+8IoOIfO15JyWTuOna3qfd9niV5Atr4lkV3tE8hMO
KEtv8/gh6XZJ+2UwOlpvKHswFm7ugo9Pfr374XS8YYVM121VTbrel15g++N6
z5ns1nD8ZNF4x/1rVDY6r+eNCyffJoZ2FdWe0+9FFR/kta74so7WeSS7sZIv
Xksnp4oF5tLL+UD7Rnqelj+v6z1aWp+usG1HOjKS7xvob+fovNZpr7X/Liy5
kwyXuued7N5ZWHsrLD3QfY+1PkPZhorWLKN9XJR/JT5CZ3KptvygbPz6xZoV
YeJsx+qKsb6//t2+PP3Nnw/d5hm70omqbAnyzRDTFRbS3f8u27L2X0ly53nD
yWBvN/tPVpftKVVXjqtrWm9scUPPX5BuZcHdrL/0PyvbHhdW6xO3EKt0g1ds
MvLNZqQzws9c6NTD/b/b0/M/FJ998/gM+1DWM1WIjYr4ZX2m5D2XjdzKXqaE
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
j7I7Me3JW917TvuR3FXd45umMOpEWFXxD3hD8p0NwR8PNp8/WFuxRl0xR0Tx
841+NyKdiyWb0uWlDfV7s8mdy7fdFO7S+5VkL8Dmn2X7w9RMJIubSEd/I1tE
TUb3PJW+3B1/OsZpSgfI5yDfhPQUOYaEM+OSUQQ/Ijv3jldS+ZXwzN5z49g4
sAprlpYdikpnqD3lZLfzpbUVdOUl66zWu6h9ViC21V7qyt9XpD/pWEv2o+f/
3woHriR7ZJjV3idX1dZeLsuW14UZR1rTifxcVc8GtkHveW3K73s9Qb70WrqX
Iz+y+W6rwx/CBWvPcSRkc2NpYiPtcf1+AvnKn0bxXYp9S/KbcelogjhXP0cn
amCSSNPzDw3Ju1gYul1sSBfrijOywg1XtyW7jQayLdRm/noVqShGEe7VvXV0
j0Xdb072qq3362qPN2vLYK8Sq8jGxmWjk8KTMenrp0hN8m3IjgzlN7paw6Ht
dl9tp5ij3xUGbAb1h+n0yWtW6Ba2Ni05xbPECAO7CrcsmdZ9KsbtCNcQjxSo
ZRSwKfKr2ufs9Qg5H2GwvHSvoRipqNeQ8HIc/ZVcb7XXbyWbKNgfny0ZkieJ
JPuy0QO3ax8+lR2rED+ViSe1bomw4qFIw+LC8R2tXU3yzslnI+O59LojnEpc
SW2mSD4y2xcW3Sn2v5fNf/SfVakpShfK+jl7IVcM/GhS69rVe2z2vwmzkIvs
y54MPfeb0b2BDwqSfxzfJZuW1tpTv8nKZtxqryXQZdl96hI57YFPV2X5ilGQ
w7p8bk62JUnuWfdVl6x7Q/JnwngVcBw12IHnAslnkNeoCFvVZDOxmw3FB9Sy
MlqvkGLqENhaeypEbkTyDOlK8NxVaitDr1HgRxvCL43qxLEpOZiBnhEs9TGs
v0lN7VayjUrOIfmej5Iv9eCCZJehJqMYKi39RrbImJpkQns+KpmHqT0JG7dG
z1ZuHbUGfdlN+QXhz0h6+M/6RUn+NiGZxyTTSKzruDEcaXtefyY/vN/8sJ38
0HknvZJ9AyvgT8k983VGfqQg29SqEXdvtVf3FlVcnMvig3suS2Rcp26mZ6zo
9+ZL+d7xWb5l5Dl+YiXinAr1V+1b9ge6X5RM+Rrcw5XOghW0rtoLXPi7GPsu
Hehck3yY8AKyiQqXpLSPwVXoXVvyJLdAzqmje5zJH0/mT9aQv0xLrrmy9Eb+
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
i307/pDP+OZ116YwCTgYWYKFyZuQK2GuD3kUbAFyhQf8PiMFH4x8qSOVZYOw
y/SEFsjXSb596Te9ajexqvfJxPVe9CJ9itTtc6zpfORIXusufEdun7goq3Vr
9J5sMPtui92fiiWf3M7Sp/Phuqqvx55DycCjp6dB6xbk6EeOr5AvvM+KfD1c
wE+hjj5HGFyYiPWlXyWjvVJtH30GBviqeOH+M1sC/vDj/b+7jKlDo8fU2HPM
D1CsnKTeqtcifdmyA+X61uutxJGH+TfZw4XncLpwWsFM0abnT/F31CxD9PnS
sy0bTY9rXPdPPZfcPTlK6gun7Q+7k2x3k0c7z19tqbhjrbjyaf3NhpJvX/7q
bvHF5sIvS9kpvldLdm0/fvRrJxv+vH2RjF/09w8+32soH9rz2Rjak/SHM3+B
PKvuEZuObSdPho1Gzu9cb34OZw6OTbk6cblmpMNxYfhckXrz3Psg4N3fRBrS
I2qzLfmcnscGSa0tdWV8EPwa4hjmqDBPpNQQLm6ffR4FGCwU73tcy5yKUoUZ
cHOLktOPUp8de78N/p5eqorWPZULegdTRWHd2s57lJjFgz8AvxYUH8RkP+Bv
wae8uS47l2U5/yqbv3MsnpT9jDvnjH5h/U1T+Lr75H332JmC88HlR/Jwo7Uu
wohx2fm11hn/5dzUfOB/E9Q70sJUwnoJ+aDP8Z7i8rY/U00yJm84VawCT3SN
vsr23+1+OL/6bvVmD/LzS3oWZBNPi1d976vtpk++DyZgZe3RhfbBF+Jlyfd+
ce+zg07yofTdY3PhUZaZf0RMCw4jF6LL5yjole/hz99f8ctj7HALjnFLPrPj
szeanZX3LDSZSSeZxlLkF+qux/SrZMj31AM/SPxbaZOD6vg6glmR8Y3Pnxj4
rEJmUX6O6OeSWRosi53NzZx7QgyM//X+f3g7hbHnZ9MX/Iv/ZQYeOWbmWnhs
nQnmsX28qrh8yanje7H1vB+1dPB/TmtWo5cFvr18Z1L4Ly6cFb3cJ7MEbqP4
bGF76eRQMS61soH8+XnzZkfJpEJ+8mLrbyRTerWZ1eZ9H/rbCPlj2RZywvAu
8P/E8/PZs8cF2MYufDD5s7r2ykpY8iCfvh4/yGa8WF/P3iIHrLU9SO5r7av7
5aN9Pb75PJGddLLH/I9K0MdYKU2c8+V5FH2v6f0XU5cxuoxety5xEXq8WVLT
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
Jcl3N763R8lzI/nfL+78vEl6VZlRV/K56iu3a6XanfeqxNLCrpwrBQ5mJiPc
R7gcuWVQt83Bn155rhMZN7pn11OfbUneVPESMuf/yJ2L2jN9qOFs0AsRhk8m
WcYu6/3eY3rN2RPMdwbXUFPU3kMvryI9x8Tv9TW+vopS02aG38rjbviJfC7x
JZ8Rl1yRbYZYF35pPVhT7uUqVHdM7OcdSo+JJVpD6WR763FapjAKZqHl+0F/
PTM3wUJp+NqdoKfN5zMunONad519EfaR3+vSt8/ZnN/s59t/SLYnyTjoyyY/
mWfGA2f56f8eB8KzgJ9BjVXruRUmgzu6lyyZd8GsC+xuS/4Y23ze/wzOF4Nv
KX+xkp35cvhuq+7aNl3Optvby/GHnRz/g1/0ecQi+Kcsclk6NyCte2LWA/kh
5vxTu01m516HzsqPkbvAL7f6987tQlfhEXi/JmdD0IdKLhEZSp413U+qsvA4
gd9BtugtfxfMQZ14jgo8jCw4Qwf+CHwWZn6CqyIu24FzB2PeL7dwecM54wxW
eHu8L/mDHPkDyTYKD7gYzHPk/vjMWCLo3SJGAs/BbUlrT32ONIJaB/3t9DvJ
DzarU+del6pz58WTRyJH1Wru3DbPpy+KqYQr9MxlPcOoxVl1D453mH0ELwns
yWwU/B3y5T7Yz8THzE2Cm0F9hD2yn3+xjWKbZz878Lu97t6cMzhmvnZz6+cf
MVsNXlS3EvjkF2G5h9WL7QbaH7ru9TV5HOot9Fhy1tKt7G61fvTaHufxJLXH
yBvAe8w3Dz7TBPwaipI/Xlyw0/z/J0OuArm72uYyByKYHQY2Q76uv6mAUwbf
Fh3HpvK7XDxvhpmrxJGx4KxNZMoFfrqKdPz8HDhlIWR0qS8wN5lYnP56bD+z
GovyUUnpbQpOlNaDWY7MKfE6HL3EwkucN8I8DuJ3xxDkiGpLt9dNxficUYHu
cn4l8xJ7g7PHP6Fw3fkp4OjV4qtNOH9q9OgzJ+hJ30rmzEcqJ5pun+PYIdff
ucdyN94zPrWWYp2ux6nbgGvRpGdNPpQz5aSnz+sv9rCQvZU+v0jGPerzhZnX
NtvSS3wCMp/JlzxvvtqXna79m593RD8IZ75hazjfljpuryts2Dm73BLYLuSH
j60Hc+OpQ8ckY483pONw9pIeBwVzIpBV9pLz4D2QL3u1IdlyjsKnWMv1N6vf
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
/YxcegzQ23fZUrsmXgb/wBNjjZAv/Pv3OJUcq3M9Lvzl7GWmIboLxnqXvc8X
YhafsNUHuPnJiXPm6W/ZHf5qq80Pn1kw1drB+0vH64EfrmgtavBNJn6GPf49
wVxQejecGxZgdOrRPA86Sn0Fu8v+YyYGF3PT4YUjnzKzvKoLP8+KWJVcZvLC
Sc56z+bU8UDOc1kT5zHR95/J9hx3MccTPYVngnyJHfgamfLK/7mQt+eTqL2z
DtngM+AkbtbfPffJeaNdcq3SjabWeDx5tf70JZgjqHVfz1/8PMxJf+99z8zv
gjfUZgZnW/a8GfS9oav0zyS9n6bvn4FNpI4Gv/aGmbqSL/r6KVxzvYZXTy3T
z9pW7ED/N7l7bDtrh73JXOYGpQtBHQDfi2z5mlyWc0nDzcus0oXnq369broO
1tvCi7rHHrONRg8+u4beE3o6S5eZzQNme7axBUuvATHbhDmLjp3ACx7DkzsK
5o8QwxKPwBPsyZ8VL3NPqeNwFgmyY74YF1wq7peeC3AQa//hc9HjI2IleG30
NaFLWfmLcnXq9h3OTVW+9J1ThyzBl8TmXKlLng0cw9k8Kc53INfi3Nqh91Xu
Dn94vblOvo16Jpxi7UGwBD3e9Ixzhupu/9NnlFNfTHEGlfYt+sKZhVXZKvKJ
EfkCn7FNjCkfWr30fm/QGe0DODQ+G4X+fO1Zvka+5OR97hE1merSOTjIl/2B
Lge27+A5I+TJ5+J3HVfpeq8v0r/6XlfCHlKb5tw4OAAZ6hHoDRwfOGKcNciZ
u8WR18OZkZXU2jLXOnPJTabrAVcI+cIXAp+n/BzLscf4nOv9eP83n/XsZxHA
IacHgXPea8G5DdlLj1Tcc+xD5zDlvTcuyEGPxo/Wlc/nDEY/u5S5z8Ojn9XB
3qh0jl638LgfjgxngDD3WPqEbHOX8405LwBOWZ55S+Wg5gI3fKr1hwOKL/Zc
9/jJa/vwbzN14VNm2QtrMJ9je/jde2PYf/gRzqksNKg9752jERbmJReKTQ1L
l8ip9DvMvHz2Wvgt/jXV8z4w5Au/hN4SfDLn9cCRe5etz+gpTN1HOBeWPtBG
wJnNXPJX5DeQK3YbuX66rftZUOFkkIfMl4L57XDiuvTr0bfK/AftT59XmQv6
tennTWWCOd0BPpi7PMlVcPYmuX3sJLP5+Z2K9J4e06rk8XD6w8+pgs/GTATO
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
     "], {{0, 120}, {120, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association[
      "Exif" -> Association[
        "Software" -> "Created with the Wolfram Language : www.wolfram.com"], 
       "Comments" -> 
       Association[
        "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
         "Creation Time" -> 
         DateObject[{2018, 7, 2, 15, 16, 31.}, "Instant", "Gregorian", -4.]]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{120, 120},
   PlotRange->{{0, 120}, {0, 120}}], "]"}]], "Input",
 CellChangeTimes->{{3.7396463680409803`*^9, 3.7396463952195272`*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"f8091a92-b296-494b-990d-075b88ef0ac1"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.739646358824539*^9, 3.7396463954683237`*^9}},
 CellLabel->
  "Out[303]=",ExpressionUUID->"d6093e98-2de6-4de3-abd0-13528c99e962"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testingDataFiles", " ", "//", " ", "Dataset"}], ";"}]], "Input",
 CellChangeTimes->{{3.739644442078629*^9, 3.739644443708956*^9}, {
   3.739646404068161*^9, 3.739646414271463*^9}, 3.7396643048393297`*^9, 
   3.739724460461378*^9},
 CellLabel->
  "In[238]:=",ExpressionUUID->"b7811403-7958-4d99-96aa-e0953d6541f2"],

Cell["\<\
Create a dataset of our training data files so it is easier to visualize:\
\>", "CodeText",
 CellChangeTimes->{{3.739642257145569*^9, 
  3.739642280506071*^9}},ExpressionUUID->"5b33f5a3-216c-471c-a9e2-\
e775cc05da3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingDataFiles", "//", "Dataset"}], ";"}]], "Input",
 CellChangeTimes->{{3.739646416219776*^9, 3.73964641682049*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"48688ea9-0207-4268-860c-96dfb031cff8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netCNNModel", " ", "=", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
    "NetModel", "[", "\"\<Vanilla CNN for Facial Landmark Regression\>\"", 
     "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\"\<ActivationAbs4\>\""}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7396551613967533`*^9, 3.739655166396806*^9}, {
  3.739655233824065*^9, 3.739655239182741*^9}, {3.739655321102219*^9, 
  3.739655353216674*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"ddbe139b-5d21-4377-b8c3-d272e43826f7"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"3\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["16", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "Conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{16, 3, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{16}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 16, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 40, 40}, 
                    NeuralNetworks`RealT]]], "ActivationTangH1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {16, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 40, 40}, 
                    NeuralNetworks`RealT]]], "ActivationAbs1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {16, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 40, 40}, 
                    NeuralNetworks`RealT]]], "Pool1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 16, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {20, 20}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 20, 20}, 
                    NeuralNetworks`RealT]]], "Conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{48, 16, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{48}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 48, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 16, "$GroupNumber" -> 1, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {20, 20}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 20, 20}, 
                    NeuralNetworks`RealT]]], "ActivationTangH2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {48, 20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 20, 20}, 
                    NeuralNetworks`RealT]]], "ActivationAbs2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {48, 20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 20, 20}, 
                    NeuralNetworks`RealT]]], "Pool2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 48, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {10, 10}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 10, 10}, 
                    NeuralNetworks`RealT]]], "Conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 48, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 48, "$GroupNumber" -> 1, 
                    "$InputSize" -> {10, 10}, "$OutputSize" -> {8, 8}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "ActivationTangH3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "ActivationAbs3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "Pool3_pad" -> 
                    Association[
                    "Type" -> "Padding", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> {{0, 0}, {0, 1}, {0, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {64, 8, 8}, 
                    "$OutputSize" -> {64, 9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "Pool3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {9, 9}, "$OutputSize" -> {4, 4}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 4, 4}, 
                    NeuralNetworks`RealT]]], "Conv4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 2, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {2, 2}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {4, 4}, "$OutputSize" -> {3, 3}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 3, 3}, 
                    NeuralNetworks`RealT]]], "ActivationTangH4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {64, 3, 3}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 3, 3}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 3, 3}, 
                    NeuralNetworks`RealT]]], "ActivationAbs4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {64, 3, 3}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 3, 3}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 3, 3}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool3_pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool3_pad", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs4", "Outputs", "Output"]}, 
                    "Inputs" -> Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {40, 40}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "MeanImage" -> Image[CompressedData["
1:eJxVV1dz20iXndp92cf9C/u2P2Fft2o8HnvGEjPFCAIgQIABAAECzDmTIpWz
REUqy7KCJVnB9szsD9vTpD3jr+qqCwLR9/Q5fe/t2//FyBb+33766SftPzBY
6OT/qiqdtv4n/rFLmhiSuOAbKcGFOPV/mH/Hy//+9keeGfMrzvpKtL+Wp94Y
3t8LjKkRsvVjriXVt5lk9nL8cTlyUZev2trHaeN+Jv1pNvs0n3tayD8vFMb2
NJ9/nMt9ms3c91O3Xf1DSz2vSUel8G6WWzfohbi3G3FWOWs2MKG630bsv3CW
n2nTz8Dlra8i9tdx15u0/105aG6HHXOyZzVBbWeCh0XxrCrB1W3XeJhJP83l
XhYKn5eKX5ZKX5bLxPCwVPq8WHgG+myWQHcSl03ltBodFoRBml3R/DOSqynY
wEj3/hZzvAYcY/6ZtbwKWX+JOl5r7rdYUo2zTkemFuPeDYPezfLHJUL2uq3d
9ZJw+7KQB8rXlfIfK5U/V6sjq+D56zKgi8/zuU8zGchy9Z3yDijrgXnFAy5g
lPK/k6d+FayvWPPPQcsrwfaL5PxV9/yWpye/i+z/UeQfcAvAHYP+tVYbGUH/
Y7k8ws1DEyjzg9T8xj9SWzLUO9X1JmwjUnOWV6LtFywDm1tkTE3BPhNzLWsE
F7MOS2HofNlUbzr6fZ/oDP9A+Wu1+n9rNRge/lypYDEAHZFNXrUTF3XlpBIb
FsSdDNliqNeLTtV5ay4wkfC8hba85Z/NTfl+L7Hmlmifkdzgi+8HaW4/LxyW
IqcV6aIev24n7nqpx9lv0ID7a+Uf0Id+5qZjXDa1s6p8XI4eFEA2tJUKrumB
MS6ULNCThvc3yfkaUods2NxfsbkQoRy0tEQHdF5QvCsatW4wmLiTCe3nxMMi
Qb9skAADr5f5/NfF4ldEFOJ5Nns3nbpqaedV+agU3c+DZmiQ4jaT7LpOL2vU
vEJwmyEb9AQ7ZeoNFBZtr8ebi6CqAFewI65mJfe87F2M+5fVwGqCXtfZrSS3
mwkdFsJwftNKPPRSz7PZ57nc40zmrmtc1uMnQMwKgyQCiVnRaExcilPwAArw
Nh1xArfMmjPUhEay6TVMcb1N+t7laROyDLjdsLMXmepFXL2Iux+FeWZj3gXZ
v6IGtgz2IBs6K0evm+r9tPHQS9519A915bgQ3klx6xq9KPtno55+xIO5Iw+u
PhmnumEHcMErR0/q3t8l55uY843m+S3tnyiy5jpvA25bcHQERzvkaPGOJu9o
8HhwdoWpmYh7SfZtJuhhNnRRid201I/txFUjflqK7GEfVWoh5umJU5hVD9pr
QXudszd5eztk7wj2juiA5xpvLTIkm+KutyBreN/lAqZK0IpgbouOtmBvhewN
zlZjrRXGWqatFdpaY20d3jEbnlqRvTtJ5rQYvqrLN834JfIlLwwSgSWACs5m
0FahLUXKXKDMpYAZHpqcbQzdFu1jytkAoax5fh+RtdTxa9g5HZ7qAhq4Yw8B
4qFIWaq0tcU5ZsSpZcmzrdMnBeFDTSK4VekoF9rSAotRdy/kaLC2SsBa8Jvz
flORMlUZSzNoBeg0PEecYF0n0QXKE4bvXY42VThbS3T2oq6ZmHsm6uqFp6Bz
I2ivMrYRX1uDtXdDzrmIe1X27YJvQQTf25aK8QR5ajCrsncu7OrwzkbQgVmQ
CGOTs3cFRz8yNRdzI7rgvy06K6RWm1L+yQJDyE5HXXOjGF5UfIuyby7mRXhM
i+6O4IL1RPdc1Lsi+0FtmOEvytHbZvy+ncD4vhw9zPCDBL2qUPMxXz/s6Qpu
GKYgxhYk75LiW1GRGn4kFFCAVWDMmYCpHLSC7IzkWVKpNZ3eMJhNg1lPMGsa
sxKnlxV6OU7jYV1jto3gQZo/LYSva/JDJ/GIkO4kruvKeTEyzIR2ktxmgl3T
2JU4mbiq0nCyabCDJNKQhVvk8qzkARYQc7S5ytk64ak5xbeq04NUEHXmICcc
5MSDXPggG97/ZuIwKx7lxLNi5ENVum9pz9PJl34a431bwzIuStGTfPhwNGVs
w1z4EG8KMHE/J2ynOZCaV3ydyBQQIXKNt3cjroW4f8NgAXpUDJ+VYxdV+X1N
eV+Lv6+OTXlfkS8r0lVN/thUH7vGl5n019ksxiecyy3tpq5c1ZTLqnJZQ5Cr
sA91Ypc15aIqnSDXsiFQxj5OR1xALLDWGu8ALt6gsmFhp+UY6g+K0l3buO8k
x3bX0j82tduGetdUP7UTL73UH7PZP+dyGD+jaOPUaGl3xPT7jvHQTT50Uw/T
KTzctfXrhnpekYZ5AWqPcckWE1zUKNRkH/YCCp9XYqQcdYynXvqln4U99zNP
06lPcIgK2UoA5XMv/SPuU8fAYh7a+Ml4xqyZ7GccH7O5l37m03TytqWB8jAn
IGwQtN0IzqZvuNhfFOQNndknZTB2A1Ld5MtM5utsDvZlJvvSSz8SXO2hqT22
Es/d5Jde5ms/+6WXxjPe4D35qaPjS0z5Yy4Pw0Qs+CNwKzEU2A2dXpC9wBrr
XEU1E3EWeNa0wG6aOy1Gruvxh46BsPk6kyW4/cwz+EL5evxjTbmrxR+aice2
8dQ2Hlv6Q0PDm+/vtScsqf9twZ/7GUTCTSN+hv1FXGmBOcmDFK5y9jxjraCQ
Ck4cActx/3aSPcqLiJ+7kQfo+aWffplOPbb1u7p6U5GvSjHYdVm6qSi31ThG
PP/9EuhY0vNo4ueRFNj3q6p0nBfheSXuR1FqCQ6UqRxjLQVtjZAD2w3xN3X6
IMMjH2/goaVh456x0W1C6rYqfyhGL3Lh86xILBe+yEXOR/+eZQWMl4UIga7H
P7U0rBMGD7eI5xKym99KBBZlL+pwI2QHYpaxFoM2hDTZYslLpE4Fj3PC+1L0
pibfNeL3iLGGCiJXZel9PnKWEY5ToaMk/y+W4k/SofOceFmMXlcIa7IjdeW2
Jl+Woyc5YS/JrqFeSe6u6KzxtiJrzTDWPIo5b28JThRnSL0FytjlvHBZilzj
vKtK11XpCslVjJ7nwycZ4SgVOjT4ocH9bYdJ/jgdOs2KF4XIZSmKj0cWhYez
gjDMcAM9sKJ4/xa5wFhTtGUktb0RwnHvghTrGoWT7jBDoC8K4vti+AKGTiMf
Ps0BVzxKC4fJ0BBmjCwZOoQCaeEkK5yioOXD5wVxZMJpPnSU5XCObGj+RRnN
ABGZFEnGkgxYMvRI6hCkdiHeUMO39MB+igX0cZY/QRcNy4SOMsQ5AU0B95sN
iYXGBvTDNIw/yuB7zOKOMtx+mgXZ1TgOGjc6GWQuRM7SFp2ypAKW3FhqcWom
5lmK+zYSAVDGlGE6OEyxB6hjBruns/t6cF/nDnT+QA8NR3ZAjN9PcHtacFdj
dzRmN8HsGcx+kj1Is/Cwm6Q3EtTSSGSSQbw9z1rTtCVBEcqIrhJnbwjO6agb
ndiqRm3hvpBi9mBJZidBD1RqS4EFBgq9E2f3VG5f5fc1HuNunNtR2IFMb0rU
Jg5KxT/ATuk0JkLhgRFY0/wLsgftYkNwlEcZBKaa3wzKWACiqxpytMMuFBCc
lRt6YHs0ccegtzVqU/Gvx7zrEe9G1L8VC2xL7I4c3FW4XSW4I7ODGL0ZpdYj
vvWob0P2ban+bT1AJhr0hk4tx32zMXeHRDIpUxnaYlDmuM+c8Jt/pNwjlH24
l4Hyzhg3EdjCaRXzEdyIfysS2I4xOxK7KwVheN6KBjYj/o2IbyPqA2WIA1yA
bhmB1RFZRFTzG1lsqznhMylek+oz6ZQ5HQBl1ExQniI9QNyHK9UAuGCt0zta
YFuhBjH/IEptR+ndGLMnBce2G2PxZhANDGLUQKa21QD2BasdGDj3qaW4Fxcf
tItV3jYmq/tNqndS9hJozWcGd4QZKkldIMcieh5cITdBdqQ2QmVPY/bi9J5C
78vMgcwOFW5sB3JwX2b3FPw6+kYfhUSS2UTOqr45aRTGpEaRME5SwJpUvJOS
xyR7THGvCdxTlBmbDjWgCXqwvwNsB/GcCh4kg0M9OEwED7XgocodqfzY8Hyo
cYcJbqhzw2TwAB1LigXZNY36rrAdTXKesaQpk+6bJGQ9kzGPCdCKh/wLBdKU
GR/gvEAX1I+5F6F2goLa6MyHae4ozR+n+ONk6MT4F8MbUjzTPJJ3Px2ERMhE
7BQURoHCNQRdDRo5w2/SvJOKZ0IiuGYC7ca/k3iJnzIBc/HboexE80nSGcGJ
fMzwR9kQKUo4CDJjC49MPM2IJ1nxOIuSyKO843BB8cFceKhxaJjRq5uS/smE
bzLumZBHuFHgugmu7MbLyYR3MumbzAbMJdZaH/UD47SCKzjEDeU4J56iEuYj
F/no2M7z0bN8hDR1WQGH7BZ6adwBZU83jL7CVmIt424ZCo/JQmQoHPNaQFn6
Tlkl0BP4LPcdGtPHxXNTZ9AVwDkgzgrR82LsohjDiOeTfASt5n6aHxjsqhZA
U4FTlZx3rCU3AjV8E3CrElwSyZLXTHC9FmkETSi7J1TPhP4PtAVrRsrPxjw4
qjaQIIgcXEihKs6IfAQjEA8ywi4uvLiBqhQOUwLK28sj0PQPoNATuaP4LLLP
EvNZJS/MInvMyijAsAWaB/eXyTSBNmF3akFbm1w3XAuyb1WlNhOkgd9NcntJ
HiOet9Dk48I7uoR2xak6Zysx30G9BBQOCa7XFPdZFL9V8dv+Hyxd+2c=
                    "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    "VarianceImage" -> Image[CompressedData["
1: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
s9sK3P8BbzfPVQ==
                    "], "Byte", ColorSpace -> "RGB", Interleaving -> True]], 
                    
                    NeuralNetworks`TensorT[{3, 40, 40}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 3, 3}, 
                    NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart = Null, 
                   NeuralNetworks`Private`NetChain`part = {"Nodes", "Conv1"}, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"40\"", "\"40\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"40\"", "\"40\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationTangH1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"40\"", "\"40\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationTangH1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationAbs1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"40\"", "\"40\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationAbs1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"20\"", "\"20\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"20\"", "\"20\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationTangH2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"20\"", "\"20\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationTangH2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationAbs2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"20\"", "\"20\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationAbs2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Pool2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"10\"", "\"10\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationTangH3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationTangH3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationAbs3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationAbs3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Pool3_pad\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool3_pad"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PaddingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool3_pad"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"9\"", "\"9\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Pool3_pad"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Pool3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"3\"", "\"3\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Conv4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationTangH4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"3\"", "\"3\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationTangH4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationAbs4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"3\"", "\"3\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationAbs4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"3\"", "\"3\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {319., {137.9169921875, 143.0830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.739655187508689*^9, {3.739655235007716*^9, 3.739655240002245*^9}, 
   3.739655355509411*^9},
 CellLabel->
  "Out[318]=",ExpressionUUID->"dd3e46c0-dce0-4eb3-8f68-043e5657928c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetModel", "[", 
  "\"\<Vanilla CNN for Facial Landmark Regression\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.739655372403574*^9, 3.739655373326333*^9}, 
   3.739655949086444*^9},
 CellLabel->
  "In[323]:=",ExpressionUUID->"5aa61712-b344-4b5e-8f18-b5d92a80df94"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"5\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["23", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "Conv1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{16, 3, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{16}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 16, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 40, 40}, 
                    NeuralNetworks`RealT]]], "ActivationTangH1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {16, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 40, 40}, 
                    NeuralNetworks`RealT]]], "ActivationAbs1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {16, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 40, 40}, 
                    NeuralNetworks`RealT]]], "Pool1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 16, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {20, 20}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 20, 20}, 
                    NeuralNetworks`RealT]]], "Conv2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{48, 16, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{48}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 48, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 16, "$GroupNumber" -> 1, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {20, 20}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 20, 20}, 
                    NeuralNetworks`RealT]]], "ActivationTangH2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {48, 20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 20, 20}, 
                    NeuralNetworks`RealT]]], "ActivationAbs2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {48, 20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 20, 20}, 
                    NeuralNetworks`RealT]]], "Pool2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 48, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {10, 10}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 10, 10}, 
                    NeuralNetworks`RealT]]], "Conv3" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 48, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 48, "$GroupNumber" -> 1, 
                    "$InputSize" -> {10, 10}, "$OutputSize" -> {8, 8}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "ActivationTangH3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "ActivationAbs3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {64, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, 
                    NeuralNetworks`RealT]]], "Pool3_pad" -> 
                    Association[
                    "Type" -> "Padding", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Specification" -> {{0, 0}, {0, 1}, {0, 1}}, "Padding" -> 
                    "Fixed", "$Rank" -> 3, "$InputSize" -> {64, 8, 8}, 
                    "$OutputSize" -> {64, 9, 9}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, 
                    NeuralNetworks`RealT]]], "Pool3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {9, 9}, "$OutputSize" -> {4, 4}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 9, 9}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 4, 4}, 
                    NeuralNetworks`RealT]]], "Conv4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 2, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {2, 2}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {4, 4}, "$OutputSize" -> {3, 3}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 3, 3}, 
                    NeuralNetworks`RealT]]], "ActivationTangH4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {64, 3, 3}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 3, 3}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 3, 3}, 
                    NeuralNetworks`RealT]]], "ActivationAbs4" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {64, 3, 3}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 3, 3}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 3, 3}, 
                    NeuralNetworks`RealT]]], "flatten_0" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 3, 3}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{576}, NeuralNetworks`RealT]]], 
                    "Dense1" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{100, 576}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{100}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {100}, "$OutputSize" -> 100, 
                    "$InputSize" -> 576, "$InputDimensions" -> {576}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{576}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], 
                    "ActivationTangH5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {100}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], 
                    "ActivationAbs5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {100}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], 
                    "Dense2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 100}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 100, "$InputDimensions" -> {100}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "Reshape" -> 
                    Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> Association["Dimensions" -> {5, 2}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5, 2}, NeuralNetworks`RealT]]], 
                    "PostProcess" -> 
                    Association[
                    "Type" -> "NetMap", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Net" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "ConstantPlus", "Arrays" -> 
                    Association["Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{2}]], "Parameters" -> 
                    Association["Dimensions" -> {2}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "ConstantTimes", "Arrays" -> 
                    Association["Scaling" -> 
                    NeuralNetworks`Private`DummyRawArray[{2}]], "Parameters" -> 
                    Association["Dimensions" -> {2}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> Association[
                    "Output" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]]], "$SequenceLength" -> 5, 
                    "$InputShape" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT], 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{5, 2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5, 2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool3_pad", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool3_pad", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Conv4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dense1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "flatten_0", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dense1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationTangH5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dense2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ActivationAbs5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Dense2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "PostProcess", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "PostProcess", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {40, 40}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "MeanImage" -> Image[CompressedData["
1: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
                    "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
                    "VarianceImage" -> Image[CompressedData["
1:eJx9mEuP3LoRhY1kk2X+wl3F0xKfeqvVenSP7WTrID/ARhwjG1/ADhDk3+ec
KlLSeC4ucCxo1CI/nWKxSPqXz79+/Ncf3rx58+NPuHz89N/t+/dP//v7n/HH
P779+PfXb1/++bdv//ny9cv3/vMf8fBt+sf7+23crsM29tvYbkOz9Ulr1yxd
Pbf11NTXph7quq+qrqpaKFZNUsw3fAjhhaGuxppNbm09d82aO2TnEChjB+J9
Um63DS1xJyIaovlYVyTG2IISYh1i5WP04SQ+qXzAT3gBr/VCz+h6hQ50S/S1
38jtlbsKN0FpsxJoIlZCCY7yznub5ajgfHQB7+xotJ2aiuj2hAaC6B5mV0DH
7iW02qGd2kxQgpz11riznHwA0XRNdEd0TOimQp+LoFfhrhJqXHG/nKAToXGo
Ys/woh/2plxnCSpLu8uUfKLcKnFDGwLQ6GGs4rWOgq4ONIjXfh1gts1jCijf
JLRC29CK0FWVuB6gsrCFCDf405mfocINfQxDFYCegAZ3d525MIsEEGgF6FiF
QVp1WfsQE22cKQ+umpUIx1YiLErcA93EwzKcjpnLKXOG+j74Prftow60uJbx
LQk1+AB8Bj4GCdDGNKx4mU2CT4oeHaZod/WSuYsM7k24+LATdJd4l+jVHnmb
LCvXG4cnjeevySCVoF1wfXD4E3bE8pnbKVeGldAuv3+S7zw6d7VzlXNgWWRU
YXD1Fk98TbRvvet8atL5Q/hzrHwa5RN3TtyKXCJc6y3UqZxtnW2crS0VLTxa
cktyg3URaPmpsXytPWR4ZSe0fFVud+a2iRszV1nW5Bt2WxkDkWuRTsI19Ju5
RtGtzVCbuSFxZSIfeTV37eGXQ3mgf+JGY4IRv+Ra5Ypl/gr0AZWGOc5Mramu
ztwlcRvhxsPySzS5CLKx4DrhStHgPeyHxE0vdyodX5kXklc/c5c+cTWfkbp4
ufXMJW3bOmYUTCWzUqmKwhQZHWTca0JfZJSkqHKjcFEVsRC85lasjZgyzF7f
ONcIUaGeTo1AzaUwTxdedzR+FTSbIPMbrxkObsjc+sQdTtx60CUPxQd1jywV
7YhNTFiDaSvQ8i1FOoyXkttKD3Zv6HR+AQ1HZ+4m3PnM1dUH2YICqEPJPg1m
K4jFCfqXJwo3F3kuZYSVxIpcmb4BsxsBHF76fcVlkPHmXhmUVUjnF71KhJWL
K77hSR4WL7VXUa1mQ8Tq8IK7Dv3Sd7tf5cImiReynkSXS+5cB1dcH8QyST/s
osEvaDza3+SOv8O9XMxT4moKGa655pAR5bWYvyY0P5iWtaBl7pHP2xXcQbnT
ieu54iTu7hQ9G5m5WP0h75zeWP0AcqlTqDnKSJV25za1cu/TlSnd93PbTimv
mMzgmhRnhnpPG6tVwmHtc9FzuccNSpbL2a4Jn94/uD77Fe7Q36dJQ42ShXwb
MxfJbNH2woyCSojjhygYr1UCXBXrJFLX7GlvEtTYwvoSVQ4FxI+nOG9D/7hN
EmoZYuH22Ktgh4ZgspNELHPeCDej7V7B+NCVeaRJpPAklCiwytX6jP0V95OP
+YZQczal1Dq4Hv1knFWVJ66gKWN27gsp15Dbi99bjS1Wo5Poeb49pul+zaHG
EEcWSSwBgW2Jc6UKQ54QUILKmuhPz5OILnHF96NiD8FfK+xzag3y/To8LzNC
Da5YbiXUEZWcBZnNE5RdZVBwKa9OwnBT8gI8IrxJWKGwOkiQufhqkIEjN4ca
EZg11LTs1LLnZ4NbskOBMpc8zwxQ3KVoi10BuKUKKyO2Hz3NBmzqsAJuQ3cf
h8d0fV4Whvp2CvVh2XKVV25Z0gW6xcPE8jGIcKNcK1zuDQiNug2QHQ7NNjit
aJDHx+36bl1g+fl1dh2Wy5fo5Ddxvcg5jbBCqfKVWQYZZjFzwZ3eraty4R3D
LXueZrfciGVfFr4QScCPpNLBPVKr1I+EgIbZ7jBbrRpknkCv5G4rQ63ZhbMh
tgF9O+c9nliWUBeF27Wn9yF9UngRzNayo0tm67hoRmmQwZ1v77ZNQy3clF0L
LXPP04vlShO7SIciLdZyr/O62IV3AiNcNk7TOJnlnkrLxZS47++bhvoxT3jC
MzhrF7eXk1hGc+6ZkdiKuBxrbUYfUIRFzOYNM0dWps8pk2HwMc/kItTr8shZ
ja/ihOoaHr3ruKPDji52bnkSuBxZbim9Fgqds4dZdC6De4PN9/c7uEeopYDw
pNa183Fi8sl1CnhpX8lJtisUozMKVNNYFiDWRkDvNAvu8uFxP1tOQ8zsEssS
bT0hdnI44v651DK4p5ORerhDww5Nu2XsHoceq88Oxch+eDw+3O/vtzzKsjzl
zQ8sM8EmHk414NzZ7rt3EStwxWMRF51B96v1/n8LDTohdBy2K81yzq4LcH99
fs5oRjtZRu2SGjIz2s0tnYvTUaIVum6qsdbgHk/0JLJDb3nruAz9SihGlulE
s9sK3P8BbzfPVQ==
                    "], "Byte", ColorSpace -> "RGB", Interleaving -> True]], 
                    
                    NeuralNetworks`TensorT[{3, 40, 40}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{5, 2}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart = {"Nodes", "Conv1"},
                    NeuralNetworks`Private`NetChain`part = {"Nodes", "Conv1"},
                    NeuralNetworks`Private`NetChain`selected = 
                   Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{16, 3, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{16}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 16, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 40, 40}, 
                    NeuralNetworks`RealT]]]}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"40\"", "\"40\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"40\"", "\"40\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Conv1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationTangH1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"40\"", "\"40\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationTangH1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationAbs1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"40\"", "\"40\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationAbs1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"20\"", "\"20\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"20\"", "\"20\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Conv2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationTangH2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"20\"", "\"20\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationTangH2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationAbs2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"20\"", "\"20\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationAbs2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Pool2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"10\"", "\"10\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Conv3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationTangH3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationTangH3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationAbs3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationAbs3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Pool3_pad\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool3_pad"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PaddingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool3_pad"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"9\"", "\"9\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Pool3_pad"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Pool3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Pool3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Conv4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Conv4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"3\"", "\"3\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Conv4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationTangH4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"3\"", "\"3\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationTangH4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationAbs4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"3\"", "\"3\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationAbs4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"flatten_0\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"576\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "flatten_0"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Dense1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Dense1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Dense1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Dense1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationTangH5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationTangH5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationTangH5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"ActivationAbs5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "ActivationAbs5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "ActivationAbs5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Dense2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Dense2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Dense2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Dense2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Reshape"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ReshapeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "Reshape"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\"", 
                    "\"2\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "Reshape"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"PostProcess\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "PostProcess"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{
                    TagBox["NetMapOperator", HoldForm], "[", 
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "PostProcess"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\"", 
                    "\"2\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "PostProcess"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\"", 
                    "\"2\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {412., {307.4169921875, 312.5830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.739655949929392*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"0d3c354a-4613-4fb4-bb65-4c0151e2896e"]
}, Open  ]],

Cell["\<\
Define a convolutional neural network that has an \"Image\" NetEncoder \
attached to the input port :\
\>", "CodeText",
 CellChangeTimes->{{3.73964235559569*^9, 
  3.7396423573432827`*^9}},ExpressionUUID->"76a4ef0e-ae8d-4476-a51a-\
891c46321316"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lenet", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"16", ",", "5", ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2"}], "}"}]}]}], "]"}], ",", "Tanh", ",", "Abs", 
      ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"48", ",", "3", ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}], ",", "Tanh", ",", "Abs", 
      ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", "3", ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", "Tanh", ",", "Abs", 
      ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"64", ",", "2", ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", "Tanh", ",", "Abs", 
      ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"128", ",", "2", ",", 
        RowBox[{"\"\<PaddingSize\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", "Tanh", ",", "Abs", 
      ",", 
      RowBox[{"FlattenLayer", "[", "]"}], ",", 
      RowBox[{"LinearLayer", "[", "1000", "]"}], ",", "Tanh", ",", "Abs", ",", 
      RowBox[{"LinearLayer", "[", "100", "]"}], ",", "Tanh", ",", "Abs", ",", 
      RowBox[{"LinearLayer", "[", "10", "]"}], ",", 
      RowBox[{"SoftmaxLayer", "[", "]"}], ",", "1"}], "}"}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", "\"\<Scalar\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"120", ",", "133"}], "}"}]}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdx00og3EAx/GnSdG0ssK8bXnKDtLqSZilPLuYltosxUpWamyajaUpVg6e
cHCZcpokbZIDWuygxYHsYmt5nlbM4uB9DlYrS4rn9z98+/RtGvNY7BKKourF
4M6kTJ+4z+klnMUAu3WrJqi2RW1wO/jtgrPheQ/kKg1zkG4tEO/ar4Lk12o2
YUrtPISFOj4C2SXuAhr5KNG+uNeYFG2hrpXQt7Hl4kXzqncv/JWtL0B5NuSH
xXhVDHpPGGJHm/ES0uZBoqB3J2C/tDQJG2h5GvZGfMS3wHgGHgX2H+Bp5PkJ
DlV/vsDHbOYDcsJuDsZU+TwsExQ/MEdZ/2BoQCcVRN2mcjl0OAsKmO5M0fBY
edsMK7QjGsiyDANLwn4tPLiJE7v48x54NqphoU+m64Nf5gkr+ZkpB7S7h6dh
UZ1dhq+1zAr8B+hhA4w=
  "],
 CellLabel->
  "In[389]:=",ExpressionUUID->"2ef03584-231a-4e69-8b3b-f7eb4c0adc53"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["29", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{16, 3, 5, 5}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{16}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 16, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 3, 
                    "$GroupNumber" -> 1, "$InputSize" -> {133, 120}, 
                    "$OutputSize" -> {133, 120}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 133, 120}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 133, 120}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {16, 133, 120}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 133, 120}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 133, 120}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {16, 133, 120}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 133, 120}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 133, 120}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 16, "$InputSize" -> {133, 120}, 
                    "$OutputSize" -> {66, 60}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 133, 120}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 66, 60}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{48, 16, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{48}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 48, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 16, 
                    "$GroupNumber" -> 1, "$InputSize" -> {66, 60}, 
                    "$OutputSize" -> {66, 60}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 66, 60}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 66, 60}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {48, 66, 60}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 66, 60}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 66, 60}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {48, 66, 60}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 66, 60}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 66, 60}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 48, "$InputSize" -> {66, 60}, 
                    "$OutputSize" -> {33, 30}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 66, 60}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 33, 30}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 48, 3, 3}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 48, 
                    "$GroupNumber" -> 1, "$InputSize" -> {33, 30}, 
                    "$OutputSize" -> {31, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 33, 30}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 31, 28}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {64, 31, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 31, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 31, 28}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {64, 31, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 31, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 31, 28}, 
                    NeuralNetworks`RealT]]], "12" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 64, "$InputSize" -> {31, 28}, 
                    "$OutputSize" -> {15, 14}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 31, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 14}, 
                    NeuralNetworks`RealT]]], "13" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{64, 64, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {2, 2}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {15, 14}, 
                    "$OutputSize" -> {14, 13}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 13}, 
                    NeuralNetworks`RealT]]], "14" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {64, 14, 13}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 13}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 13}, 
                    NeuralNetworks`RealT]]], "15" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {64, 14, 13}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 13}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 13}, 
                    NeuralNetworks`RealT]]], "16" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 64, "$InputSize" -> {14, 13}, 
                    "$OutputSize" -> {7, 6}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 13}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 7, 6}, 
                    NeuralNetworks`RealT]]], "17" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{128, 64, 2, 2}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{128}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {2, 2}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {7, 6}, 
                    "$OutputSize" -> {6, 5}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 7, 6}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 6, 5}, 
                    NeuralNetworks`RealT]]], "18" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {128, 6, 5}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 6, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 6, 5}, 
                    NeuralNetworks`RealT]]], "19" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {128, 6, 5}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 6, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 6, 5}, 
                    NeuralNetworks`RealT]]], "20" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 6, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3840}, NeuralNetworks`RealT]]], 
                    "21" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1000, 3840}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1000}, "$OutputSize" -> 1000, 
                    "$InputSize" -> 3840, "$InputDimensions" -> {3840}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3840}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]], 
                    "22" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {1000}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]], 
                    "23" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {1000}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]], 
                    "24" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{100, 1000}, NeuralNetworks`RealT],
                     "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {100}, "$OutputSize" -> 100, 
                    "$InputSize" -> 1000, "$InputDimensions" -> {1000}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], 
                    "25" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {100}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], 
                    "26" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {100}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], 
                    "27" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 100}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 100, "$InputDimensions" -> {100}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "28" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "29" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 10}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "22", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "21", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "23", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "22", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "24", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "23", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "24", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "26", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "27", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "26", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "28", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "27", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "29", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "28", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "29", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {120, 133}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{3, 133, 120}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Scalar", 
                    Association[], 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"133\"", "\"120\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"133\"", "\"120\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"133\"", "\"120\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"133\"", "\"120\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"66\"", "\"60\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"66\"", "\"60\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"66\"", "\"60\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"66\"", "\"60\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"33\"", "\"30\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"31\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"31\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"31\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"15\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"14\"", "\"13\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"14\"", "\"13\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"14\"", "\"13\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"7\"", "\"6\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"6\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"6\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"19\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"6\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"20\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3840\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"21\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"22\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"23\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"24\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"25\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"26\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"27\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"28\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"29\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"scalar\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.739642365819583*^9, 3.739642426998617*^9}, {
   3.73964249600773*^9, 3.739642500684453*^9}, {3.739642567483452*^9, 
   3.739642589023221*^9}, {3.7396427347390013`*^9, 3.739642748385078*^9}, 
   3.739642816282673*^9, 3.739643188038855*^9, 3.739643261360549*^9, 
   3.739643422296289*^9, 3.73964355603572*^9, 3.739644158525799*^9, {
   3.739655776400895*^9, 3.739655792725686*^9}, 3.7396558601528273`*^9, {
   3.739656004158619*^9, 3.739656030783969*^9}, {3.7396561876905823`*^9, 
   3.739656251339128*^9}, {3.7396562822212763`*^9, 3.7396563002597857`*^9}, {
   3.739656336973412*^9, 3.739656392259501*^9}, {3.7396564720502567`*^9, 
   3.739656495272943*^9}, 3.739656586705639*^9, 3.739656646874876*^9, 
   3.739656719195614*^9, 3.739656774309347*^9, {3.739656805343511*^9, 
   3.7396568605901403`*^9}, 3.7396569079202433`*^9, {3.7396570338308887`*^9, 
   3.739657060162876*^9}, 3.739657091200266*^9, 3.739657274332131*^9},
 CellLabel->
  "Out[389]=",ExpressionUUID->"6f9dccb6-3864-4dd9-8614-bc05cfb99196"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"trainingDataFiles", ";"}]], "Input",
 CellChangeTimes->{3.7397244511751337`*^9},
 CellLabel->
  "In[237]:=",ExpressionUUID->"41967255-2987-427c-9144-9590706b60f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testFile", " ", "=", " ", 
  RowBox[{"trainingDataFiles", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.739642870846777*^9, 3.73964288806444*^9}},
 CellLabel->
  "In[391]:=",ExpressionUUID->"1c5d055e-3b09-4ae6-a452-f46389d1741d"],

Cell[BoxData[
 RowBox[{"File", "[", 
  TemplateBox[{
   "\"/Users/mehmetsahin/Downloads/SatelliteImages/Training/\
ODpBAi1TBVBvaW50wSMBAg1ka+YXMEhAsVsEvF~ZKEAtUwRab29tcvjjAIjV3so~/\
ODpTCTE4NDcuNTQtMQ==.png\""},
   "FileArgument"], "]"}]], "Output",
 CellChangeTimes->{{3.739642878365778*^9, 3.739642888834486*^9}, 
   3.73964350109282*^9, 3.739643568510741*^9, 3.7396441681772623`*^9, 
   3.739656992161146*^9, {3.7396570389122677`*^9, 3.739657073145994*^9}, 
   3.739657279859046*^9},
 CellLabel->
  "Out[391]=",ExpressionUUID->"f6560439-6586-4464-ac5d-c2215ea53f93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NetInitialize", "[", "lenet", "]"}], "[", "testFile", 
  "]"}]], "Input",
 CellLabel->
  "In[392]:=",ExpressionUUID->"7ab6e1d0-314f-4e3f-b221-1e18352f8fcd"],

Cell[BoxData[
 RowBox[{"-", "0.10336174070835114`"}]], "Output",
 CellChangeTimes->{
  3.73964289622149*^9, {3.7396435027097883`*^9, 3.739643515925486*^9}, 
   3.739643570378289*^9, 3.739644170258333*^9, 3.739656994315486*^9, {
   3.7396570369321747`*^9, 3.739657093698291*^9}, {3.7396572781129723`*^9, 
   3.7396572810230837`*^9}},
 CellLabel->
  "Out[392]=",ExpressionUUID->"e10e6999-2e53-4d5b-9acc-c7bcddab2724"]
}, Open  ]],

Cell["Train the net for three training rounds :", "CodeText",
 CellChangeTimes->{{3.7396429140066147`*^9, 
  3.739642915592347*^9}},ExpressionUUID->"2117d55d-b43a-4341-8c6b-\
4e8649a2d77b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"lenet", ",", "trainingDataFiles", ",", "All", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "testingDataFiles"}], ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "3"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.739642930004449*^9, 3.7396434387275047`*^9, {3.7396446253901463`*^9, 
   3.739644626775319*^9}},
 CellLabel->
  "In[393]:=",ExpressionUUID->"bc334f20-f774-4d41-921b-fa116a02e74e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetTrainResultsObject", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             GridBox[{{
                StyleBox[
                 
                 TemplateBox[{"\"Total training time\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"], 
                StyleBox["\"5.3 min\"", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Total rounds\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["1", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Total batches\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["221", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Batch size\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["64", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Method\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], 
                StyleBox["\"ADAM\"", "SummaryItem"]}, {
                StyleBox[
                 TemplateBox[{"\"Final round loss\"", "\":\""}, "RowDefault"],
                  "SummaryItemAnnotation"], 
                StyleBox["670370.7699983394`", "SummaryItem"]}}, 
              BaselinePosition -> Automatic, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.8}}, "Rows" -> {{0.7}}}], 
             GridBox[{{
                StyleBox[
                 
                 TemplateBox[{"\"Loss evolution plot\"", "\":\""}, 
                  "RowDefault"], "SummaryItemAnnotation"]}, {
                StyleBox[
                 GraphicsBox[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    LineBox[CompressedData["
1:eJw1kW1Ik1EYhlXcfghFKbgtYzUxhWwgW6TYPm6bFpljObecZk335VQqjSwF
KQsZimFWrFhKOQOp/diPVeKEbMuFNqjUMCH6QCRxWmkfc1qUFb3PgZfDxXXf
55yXR2A4oTbHREVFZf79/u3MgjPemBGYT8R/5CLDl50tbOIwnIIQ37O54xv5
HXiv95ZqOORFEJ8vSeFPkt+F4XZnTL+RfDYaZ/pCcimXYRmW2U1C1ivK5+Bt
7Lhk+SrlFYiwRwLyYuI8BDz9e1RniPfBIbu1ONVK/f1wFbR9T0slfwCxS9oB
QZi8Eo6umtOPNXS/CqwCf2bLb8Y3H0S0bHxB6Wb6zYVgWbYuXucx+WY1gsPt
nfIHlC+CeNY+qvpMrMFYj9eTtIn6WuycmRoXaIkPgSV83ckLExfj5uBkvHSW
+jqEk0NjUjVxCR66/YUf4ihfimfitPqghfgwrtnlnjY1cRnWT7Nt5V3ER5Bv
y5+rvUN8FBJHa9G7CTpfj1z/nG7lEsMox94tvX1rDQz7ylH1Y5o3QO9DBea3
PX2Uq2DO81VgdOMV99JlhmFAbKPxizWZvAHaTxYj7w31jbh3f+i2LYO8ES3d
nOCvi9Q3IdJR75CIyJvAZetXpmjeMKMu68bzsh7yZrjunpqIpv+BBatNJxX5
ieQt6Dy33VBL80QlGhJU+kGal68SWUMJSR9TyFuh7UnfELdAfSuU69J3O3PI
V+FrxJtnp/f6qqAbqWvo7iVfjf4Xq8cUF8hX47jL9DOVT74GouCTl2tnOfgD
0rbvjA==
                    "]]}, {}}, {}}, ImageSize -> {132, 82}, Frame -> True, 
                  Axes -> None, AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRange -> {{0, 220}, {5.2, 6.2}}, 
                  GridLines -> {{50., 100., 150., 200., 250., 300.}, {{5., 
                    GrayLevel[0.9]}, {6., 
                    GrayLevel[0.9]}, {5.301029995663981, 
                    GrayLevel[0.95]}, {5.477121254719662, 
                    GrayLevel[0.95]}, {5.602059991327962, 
                    GrayLevel[0.95]}, {5.698970004336018, 
                    GrayLevel[0.95]}, {5.778151250383643, 
                    GrayLevel[0.95]}, {5.845098040014256, 
                    GrayLevel[0.95]}, {5.903089986991943, 
                    GrayLevel[0.95]}, {5.954242509439324, 
                    GrayLevel[0.95]}, {6.30102999566398, 
                    GrayLevel[0.95]}, {6.477121254719662, 
                    GrayLevel[0.95]}, {6.602059991327962, 
                    GrayLevel[0.95]}, {6.698970004336019, 
                    GrayLevel[0.95]}, {6.778151250383643, 
                    GrayLevel[0.95]}, {6.845098040014256, 
                    GrayLevel[0.95]}, {6.903089986991943, 
                    GrayLevel[0.95]}, {6.954242509439323, 
                    GrayLevel[0.95]}}}, PlotRangePadding -> {0, 
                    Scaled[0.05]}, PlotRangeClipping -> True, Background -> 
                  GrayLevel[1], FrameStyle -> GrayLevel[0.5], GridLinesStyle -> 
                  GrayLevel[0.93], FrameLabel -> None, ImagePadding -> 1, 
                  FrameTicks -> None], "SummaryItem"]}}, BaselinePosition -> 
              Automatic, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{1}}, "Rows" -> {{1, 0.1}}}]}}, BaselinePosition -> 
           Automatic, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 1}], 
       BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetTrainResultsObject[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.73964315386709*^9, 3.739643194567767*^9, 
  3.739643266821566*^9, 3.739643426133651*^9, 3.739643518391814*^9, 
  3.739643572345893*^9, 3.739644411192296*^9, 3.7396445927863817`*^9, 
  3.739645867404615*^9, 3.739657004180952*^9, 3.739657044403754*^9, 
  3.739657075762825*^9, 3.73965725699269*^9, 3.739657602386339*^9},
 CellLabel->
  "Out[393]=",ExpressionUUID->"9dbd8d36-c5f1-4ddd-9e00-8d5d27afc6e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", "[", "\"\<TotalTrainingTime\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.739644417522543*^9, 3.739644424078862*^9}, 
   3.73964449079531*^9, {3.739645888705885*^9, 3.7396459348181334`*^9}, {
   3.7396459755579987`*^9, 3.739646007205337*^9}, {3.73964605596876*^9, 
   3.7396460646393414`*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"8fad11a1-ad6b-4b12-a1c9-d8a165f8ffbf"],

Cell[BoxData["1230.537855`"], "Output",
 CellChangeTimes->{
  3.739644424748353*^9, 3.739644491694393*^9, {3.739645881519155*^9, 
   3.739645935615604*^9}, {3.73964598155504*^9, 3.739646007584779*^9}, {
   3.73964605635528*^9, 3.739646065483304*^9}},
 CellLabel->
  "Out[267]=",ExpressionUUID->"8c69c020-928f-4c17-bb6c-698d474fdf84"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", " ", "=", " ", 
  RowBox[{"trained", "[", "\"\<TrainedNet\>\"", "]"}]}]], "Input",
 CellChangeTimes->{{3.739646070261177*^9, 3.739646077445765*^9}},
 CellLabel->
  "In[387]:=",ExpressionUUID->"df8516ff-7be7-4802-8691-42743f0bfb18"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"scalar\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["29", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{16, 3, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{16}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 16, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {2, 2}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 3, 
                    "$GroupNumber" -> 1, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {128, 128}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 128, 128}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {16, 128, 128}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 128, 128}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {16, 128, 128}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 128, 128}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 16, "$InputSize" -> {128, 128}, 
                    "$OutputSize" -> {64, 64}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 128, 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{48, 16, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{48}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 48, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 16, 
                    "$GroupNumber" -> 1, "$InputSize" -> {64, 64}, 
                    "$OutputSize" -> {64, 64}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{16, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 64, 64}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {48, 64, 64}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 64, 64}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {48, 64, 64}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 64, 64}, 
                    NeuralNetworks`RealT]]], "8" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 48, "$InputSize" -> {64, 64}, 
                    "$OutputSize" -> {32, 32}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 64, 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{48, 32, 32}, 
                    NeuralNetworks`RealT]]], "9" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 48, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 48, 
                    "$GroupNumber" -> 1, "$InputSize" -> {32, 32}, 
                    "$OutputSize" -> {30, 30}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{48, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 30, 30}, 
                    NeuralNetworks`RealT]]], "10" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {64, 30, 30}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 30, 30}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 30, 30}, 
                    NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {64, 30, 30}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 30, 30}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 30, 30}, 
                    NeuralNetworks`RealT]]], "12" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 64, "$InputSize" -> {30, 30}, 
                    "$OutputSize" -> {15, 15}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 30, 30}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]]], "13" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 2, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {2, 2}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {15, 15}, 
                    "$OutputSize" -> {14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 15, 15}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "14" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "15" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {64, 14, 14}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]]], "16" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 64, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {7, 7}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 7, 7}, 
                    NeuralNetworks`RealT]]], "17" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 2, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {2, 2}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "Interleaving" -> False, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {7, 7}, 
                    "$OutputSize" -> {6, 6}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 7, 7}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 6, 6}, 
                    NeuralNetworks`RealT]]], "18" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {128, 6, 6}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 6, 6}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 6, 6}, 
                    NeuralNetworks`RealT]]], "19" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {128, 6, 6}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 6, 6}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 6, 6}, 
                    NeuralNetworks`RealT]]], "20" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 6, 6}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4608}, NeuralNetworks`RealT]]], 
                    "21" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1000, 4608}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{1000}]],
                     "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1000}, "$OutputSize" -> 1000, 
                    "$InputSize" -> 4608, "$InputDimensions" -> {4608}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4608}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]], 
                    "22" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {1000}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]], 
                    "23" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {1000}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]]], 
                    "24" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{100, 1000}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{100}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {100}, "$OutputSize" -> 100, 
                    "$InputSize" -> 1000, "$InputDimensions" -> {1000}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1000}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], 
                    "25" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {100}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], 
                    "26" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Abs], 
                    "$Dimensions" -> {100}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], 
                    "27" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 100}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 100, "$InputDimensions" -> {100}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "28" -> Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "29" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1, 10}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{1}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "22", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "21", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "23", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "22", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "24", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "23", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "24", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "26", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "27", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "26", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "28", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "27", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "29", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "28", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "29", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {128, 128}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "MeanImage" -> None, 
                    "VarianceImage" -> None], 
                    
                    NeuralNetworks`TensorT[{3, 128, 128}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Scalar", 
                    Association[], 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"128\"", "\"128\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"16\"", 
                    "\"64\"", "\"64\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"64\"", "\"64\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"64\"", "\"64\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"64\"", "\"64\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"48\"", 
                    "\"32\"", "\"32\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"30\"", "\"30\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"30\"", "\"30\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"30\"", "\"30\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"12\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"15\"", "\"15\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "12"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"13\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "13"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"14\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "14"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"15\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "15"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"16\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"7\"", "\"7\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "16"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"17\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"6\"", "\"6\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "17"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"18\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"6\"", "\"6\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "18"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"19\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"6\"", "\"6\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "19"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"20\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4608\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "20"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"21\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "21"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"22\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "22"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"23\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1000\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "23"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"24\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "24"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"25\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "25"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"26\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Abs", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "26"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"27\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "27"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"28\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"10\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "28"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"29\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "29"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"scalar\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.739646074522499*^9, 3.739646077805539*^9}, 
   3.739657261337678*^9},
 CellLabel->
  "Out[387]=",ExpressionUUID->"7394c4c4-3d75-4715-aace-e70b21950f36"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"n", "[", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJxcvceSZOmynQcjOeCQbwDSYAAI3IMju7t0pRaRmZGhtdZa69RZusXpo3CF
XdBoMOOYHMCMc074XM5veVQ2YBzsiojKEHv/rtby3933/1IdRZv/3b/4F/9i
9j/yT7Sy2ptOK5vY/8SLxHDWaQ0b9cBw3mg1ps+r/z3/uf56/A8c6cLIWv0r
qzVnVqpOrFCZWLo4tkC4ZpHsyJKVtWVa95btvLdweWNnuZEFCxOLVpd2lh1a
oXdv1dEHK3TvLZLn/4szy3Vv7YLvfXVestP0wE5SPTuK9+wwxvPk2IK5hZ3n
ZhxTuywuLNG4sYv89vVpeuSPxeFHyw8+WLRxZaHKkt9bW5LfTJZnFkq0LRRr
2GWkZrl8zwaDjfW7Sxv11zZoL2zcXtq0s7ZV79quBje26G6s0+Ma22tr9O8s
X1vZ4WXVDrnGcG5oZ7G2lZo3liqPrd6/sfbw3spN3tu7tayuNdqyIueZ4xxv
F59t3d9Ys9ixTnNs/eHSZlfv7Pbzn+3x53+06fufLFEdW2v63oo9vrOx5noH
1hi/t+Hik3U41/nsxq5uP1n76rMNbn+yi2zPghwn0bqdJ5pWbm8snu1avjG3
Xa7xPDuwi2jTcqz3lHNaDe9sObiyxWBl4+7MOq2p1dtzK7fmVmjMrMqxnjzY
u/mDhTNdKzbnlsx3LJXrIduRJfJDjjHyHdtRpM3azy1Wu7XG4mdkd2+J2tKP
UJFrr8xdnpXhoxX793aZH1m4MrNwdW7nPI+ylruRhu1HO3YY5zzzC/RDujFB
7kN0ZmXJ5q0/l1xfX9Ts2UnR5Z7rv7NofW2RKs+7N5YoTy2F7jW4/k7n2lpN
5B4uWbPBOnfntpgiy9GVrYfXNkfGy9bSrrtXNkJn27WxFQo9a7ZX1h49WJbv
jCHbWLZvx+dFS7GGpcrYVptPtlp9svHozjbrz1ZD5qeHCfRmYw/XP9mn6+9t
UO7atMVv1vt8b9cG3Yn1+wu7efjehrM7a7Zm1kefVpvvbTz7YHnWojd5b+3+
tfUHa7ta3dvd4w82/fyPtvj8T+juwp6fFu3NWdlixbnFS3MrtW4si24cxroW
LmAPia7l0PMx3zMZ3Np8cO0yXnO9M456c2oVfrfSWVgWne+hG5sh+lWdWWt0
i269s0xpbBlkFuNaQ8meHUeatnfZtDcXTTvNzFjnG4sjrxJyPI427PVZHt3q
W5a1P8v0LdO+tgzrHuD/XvC3b48z9uw0b4ecm+zy5VnNZRyr3XBcuwxjtSuL
4CMk26NE3/UgkBnbHnr18qJsu7E6/1ezQLJl2drcivW51RoLayO7q9VHm03v
bDBG3sh3OMRm53fI+NqG6LBkvGadp/UZ9jy3+fCKdV9bi3WpdjYWy3Qsgr3M
Zx9tiN12GlPXg2Z5aKvpPbb6zh7XH+wGmV2Nb+x+9mAb5LNoTWyDPIfVjg1r
HVv0Zjbpza1bG1kfO1qwrht+d8I59lvYGPY2Hj/YcMT/b/i+9b0tr95b9/Fv
lsL/HaYG2MLC4nXsZPTFcq13dpme2s55zQ5CHR4bdoycg+m+JfCLPXzSavpo
0+bClvirGb6rVu5bpT62GvItFIfWQKf7tRn+d24N/f76k+VKE8si33Cqi/+q
2HcHaTtNDuxloGpvgi373X7Gfvc2bL95cW4vj1IW5bcu0h0LoxcHkkO8YXux
mr0I5LDZur26KLnt7uFbnp+WbCfU/mq7M44p1yN9eHDZyn53Qk075vekC3qu
z708z6EXWdsNFuwSGeerU+tq7dDJCdc5Rw4bfN1gcmWD0QZ537KeaxtLnr2V
zbneKbFn1p7avL/Cp06tUELHMi07j5TxBWtr4gd62HWjPLBWZWC5WMlGvO8G
3dHnRrWhLTvoSB25873XwxV6M/Nj0RraqN6zCX+TPo2ld/jv++GG9y45hw1x
Y2MDjuXqg81m99Ztj22+ebTBh7+3xtVPlht+sETrDvt4Z2lk+/ywZHsXLXt9
WuWo2ZsAckbvj2KsSbBk5+h7h/NejdET/Mqgjn8u9a1cGVqtteCauE70qkW8
rRM7S12+G99XxH918GexTM9C2PBb7OfFWckO4i0L4hefnSbt272wHV4U7OV+
3CLoUyjVt2BmhK9eYN9X+OUN9trD3kfYas/9rQ7ZpeKs7DVUWrpffoq/ir2S
rx71N/nuc+R/np/aAbZ/hC85IuYeojOJwtiy+P88OtUhvk4nj/isW7u5/mID
5DnqsabEpTlxaYYPlZ3NOxObdKbWlw8r9qzdWVk8jX/YjVmS73t1mLGTcB0c
co3urK1LXG1V+tbCjmdD9KVzZUt+a4G9SNYrvn9CTNgQS5ccU+ynzXvlE0es
35zveCT2zTmXHj6zy98byD6V61oF36PzbnSJ74s7G958tubs0WN1bYycKyvb
O69bIDq0/WDb9sNtO8avBdD5vXDLTljbV/jyYzBBoYW9Ey9TmQE6i99Ntq3I
2rT5rhbfL38xufqj9eafLUhsb9Yn6MWKc1hZlNgUyo1Z7xnYqAlOWFhGcZr1
qXZXVsRXlokPiglR/GmA3925bNh32Knip57/4SDrh2QmOUqm8sWR8pqYs/Hn
wcL8Fznneu/cnvW3S/7/Qn8jHl3oAOcEOadzdO2AeHmJLieICV3WaoC/HWPP
+WwL+5zYzYL4xvHA+l2NVnY3uwaHLPG/+C/ss1Tsu34E+a4Xe3F7dZJzfNiZ
vHOc2eJ9I+y0D14ZdK+tU18h03u7QdarLn651nc5z/HJgzo+Gb8+YU2mxMQB
urPCPz8uH8E/a/ebBa0Zsq8p9g/BPImOvT6I22migH1dW4XzL4IBhfUOLmvI
t2Y7ATALPlP+8xTdP2ONdUjOisl6vh+RzoNrLip2wXrEWI888m201lbGdnO5
jtU5/1J9aWnwWhfb7hGXpAt55CZ8lQa3htCPPDLvYCtN/F0DO5hM7m06ZT34
/2RONpDm3Op2we/K3oJF2WQfuUzBW0t/nW7f+utzcHawOP8FL+uQ7Uqusl3F
X8n+srTAfsGV+ALh9kuuP4BMXh+l7SRUtdNgZRtT8Du1+tRtb0yMvVm/tw0x
83Z5Zw9gmYcVsQ95tRoT1+FMtm31lvSyZ2/4rreBgtVG763J2pdr6Dg2N+Q6
u+hzH3us4rvul1/sgZg3xyeMawNb9Ymz3aldj6/s3QYcgK1O8R8DfYY4vNF5
TB+sxffl813roX8z8NYQ/B3AD705SdleKGtlZJsCH+yHysTZIv64YLvI9/Vp
BRvtE/uW+LKJ27A4iI6n5ydJ5M7ayW8fEE+j+YFlkG+O803hnxo1fHIJn833
t9Bb6d8cHW63rq3KUSQ+prCrs3DDgsTRHrxhynkvuKYlsalHfOnjCwZg5xK2
nG9siOUfOGfiSPsGOQ2IsWvnSAl4Tnv9E1jszlL8Ld2+Q4Yb99eyWffJyFuH
ZKvXB7GOncLRAuhPIKtrAX/znWfxNnbctjPi8xl+VVwiA6boYF8jYtIY+xnC
lXrwhn5j5LaouNsAO7XAXQ1kMADvyAcVOO8QcSaHjZZa6DZ4s8F7BvCrIevR
4/rqtYXdrb+3D5vP9v3NB/v7zz/b3z5x8PjXT3+yv3z6s/vscRvcLNvnt2ay
lerI8ukm53Rn0yWYfPXFSvj6l8foJ7juKFaFF4Hx4CxnqQ5H107gavvYSQj+
eAlOefLNJ9ixbHYXXCLfqMcL1iqgOJgEg0X4LuQbgmcJryfx1Xm40RR8UiMu
D4n/c86jXV/YhDhQKC/B00uL8d2yz0oV39KGa+DnJmDVe3R2zPVP4BEt/EEX
/zWYfYIzPsD1PoID31uZI928sjifLfYfLI9sSwPxKA70oDT6hLwfnR8JVylO
K2bruWxY536UBHvjd87haxfY/SUxOcZ5hSR35L8Pp4ijr0XOIQNmLDfxM8TR
en2LJ4o5bBWf3MVvjsBjTfFD9LmBn+rhf1robLWDDHt3VuHcq3C9qmIk8VI4
tcJajfBbG7D6u6uP9s8//Uf7Tz//zf7h+z/ZP//xP9rP736wL7cf7Z5YoBg/
AltPwLTy2W3kW4J3VrGj2fqL1eCu4gEvTnMWg8sH0ctD5HJK/DuJ4YvjXa5r
gmzBuHDSg1DrF7nqEMaRvJ9krhgm330Knz1AnufINw6OynHOF8GyJYm5Hflb
cQL81gD/1ke/anDbFteak33xvaX6xqrIqAwWaVRGyBUbBhNoDZr4uRKYVjG7
gg10R/hs7DmNXdR4Pr79s3XwbeLHneX3/pjk+8WjK5PvPY8hWxW+/vYo7zjs
Lfp5QIw5SYOpsc+3oRoyhkMgU13PhXSb6z9NDOwkzvWi87tczz7Y8jBYtCLy
GeBLW9hgH1sej2/BrzfgHOTO3xpgy84ATFkauT608Ms1OF6p+2Al/EoDjifZ
Cgcl4Xo95RPgSnfrd/bp6tF+uH20Pz5+ts/X7+yH+4/24/0Xl++7K95DLOgT
B+SX66xVGzsuo3dVfEMEPdV5HhF/hSf2iTEBbDaA/e1egJUDcAx0XNe1F2y4
75VcJU/JWfYaxbfJZz/ZtDjlHt93mOqhMwt0A1xMzEnyWw1eN6TnxP8WMadD
/KhzPlVsoYR/rvXfW5b4G0n20fmN2/UAfW8pRsP78/iyAHHj21dB2z8BRykO
wHl3zwqcZ8li5RmYbON8uYqsJddoCZ+CroWLU0u17t0XvwnW3XblqyXrXXCi
+NHLc+QFblaOJIEfeMJigaxyXTzPLrg+/DZyP8HH7kkXzgt2HK7gBzfw/bVj
mj5YYUTc6eJr9VgoT2zI4wj7vYhW8U89y3I9Ub6/SKyotK7Q1QV6vbBousfr
pS2X7+09clz0xnY9mtu75S3++sH++vnP9qePP9tPH/9of/7+b/bh7gtxa47N
4lPgYXniRg0dOg/X7PgSnhkocp4NxyMXOcWkMTqL3EN1cBO+OdJy3/sWHy1d
DnyV8RO2kkyDyvUpfmEL/jflijJD8Om9HRHbj4nFRWTbwt/mib8ZcLswSqbc
hX90LZLv20FYfqNjGTBPurxwXtzCj1XASCnwUpa4GkNW3+xG4cplK/NdEXTx
9KLouc0UPiJGXDnHHymHEsOHnsbg6ZGanSVannNzDIXPkTzlo/Vc5yr7lcz3
8VlpfjOPTw+iD+JXicYtOOzGQuVr/u/KzgsrexttOwaLcF5vwVwBYlmONS00
kS82W0bG4/lHWxBD+6MHdLuLHq9tufkBHrGxKHHwGI69c1FHJ9f46nu4wYrP
XsGfRuDKe7u++8Ee7j7ZB2z2arSw9YAYtbi1f/jj39ufvvzZGsW2Xc2xYfiO
bKVCLK4Ty0r45mx+5Pq/B3Z6fZIHV2GbGXBkSsfY5Si5CReLAx2DKQ/gP4fE
H+Gorc+auiz1XPLVa+Fn/Z/LO0UcxRZ34bP7Z0X0lXPAtqKpNr8/QH5gr2rf
kuD5vUvZnziO8icNi+FLCtheUXlJ+JnsSLr0lr+H+Z7B5ifr44M7o0d8G7qP
f1NubQc7PkKe+/ikF4cpcGEBnFfeyhh/GwCfyx7Fm4Sd9b2SuZ5vufLaWvLp
+I0c8bswABeMPlr76m9WGv9o8cajxdsfLAQOPMEWhMM8TvPdJeJpEZ+Yxwar
+N46+lcS7gAzl8FVss/R9L1NFh/AtncWz3Ts1VmVNetasjR3jq041sCP9+Z6
36PdP3yyL+++2PvNo63hXVeTjV3Bva7hYlccP37+K/ENvU5UsAG4CjG4hh9J
E9eO8Wcn2O8FsgvgD0/BvoHkBF+MzJJb29QhX3yW0fO+xyPZ+P/ffp8et7rQ
dywWiPVtX3mG84rtIV/xyBR+Ko7/UZ4+nu5YHCwSTNTtIFjwWLaHnb84zrrf
C+NPlMd4DbfeOS/zt6rl8GOtKT5befPRPWu4tAJYLUscPkl0iS8News3e8ln
nh/n0ZmqHWFrZ8rHcb7nmSkYcrC9PvQ4XlU+/s6iZeJ+5dousnPLtIln13+1
xvwHay5+RK4frLn+wcr8brjC38FDB2Dp/PCdc/V95c1O83COledt0uCYDHKq
w2UrwjvERO2jZAoDC+Nbdo5TVkYPGtj1rvYc8JFB9C6Hn0jkF1ZsEo/xH/ID
g/mj3d6Ag3sLmysXOruxGVxiNb+3j+9/thvwVzJZdv6YTDX5PeTbWPoeRZy1
CyLbc/DCSQwMiTxOUuKGkttWz8URxRVPUtsc3rHH3DlYY8ka8f/EIq3JeYb3
pbbrd8FxhowvhLPgpYesxR5+702wZi/BniHkfIZuhYmdoQS4Bj/18iBmexfI
GFs7IC6E4KrKUeyG28ijjVyvbXzzJ7j5o2PCanuDP2DdiOWVpvLjM3Si7ecr
LCA98zw5z4UHnK+n0csU55aebveTOOdwcc3aLtxv6fVlfuXXU5tItj9Za/ED
MQaZYRO1+Qcrwil1xGv4wsl7q2OP4hqH0Zpl8c1x4scZsb6A/EaTW5vO7m19
9cnKYMkkMSmtmJvrs+5tz7VWx+84lzE+pmmR3BL7Awvi/8stsDVxoimctfrg
NlrINqxc7MA7VvCpEdgNfjklfsGNS6U+uB0/USAmgneqDfGutaXERzgu/NrH
zhEkw6ecndZGeTz9n16fIn+thdboPDP3tdBa6XG7bku7RP4RsOYZMfwUm78g
jh1h99+C1b45LtgZGO4iJIyBTUWw7dOMvUGnD7HfC+LYObgsrD2y0sJ2iIny
C+XxJ+uuf7YC9pHAj2ltXsPp/gDOiuPr6/CjWJXYpXiJ79SjZPtG2NAxw5AY
1HYZ6nxdrjweRHpuz9u4NPH/l013N3+x9upnfvej860M8qrP3luDo4Ldlfvo
GLivhK7V0LkKXK0z/4Ttzj3miztVsanF+iN+9p0trr6Am5Effro9frQE2CAG
xwjiu/eDVdYLnIrtltvvrDn4aE34nPYKq/D94ejabq8/2xz+r9xUF/7RkU+O
FcFUQ+I5HOY4Zgl4Txldq9WXlmK9j/BjJ5Em64luf7VF5XAlW+FKYQ/JVfKV
7Uq+QeQWQr+0FrJhrYVey9892cUF9qBzDXz16wdwrGfY7Q44TXxEe71h9Fe5
vkiaNYczHcExXh8miSEzy7OWMbDVSRRfS+xWrGwsf3ac4/ll/P3uZcM5ShS7
Pcffp7Rny/kq/r8MlB0jKGbo9evz6hYzJIUpFG+G7nuO8FfH8QHXsfBHxx1J
xaHJV1wBPmjdWq59bU18cwe8VIHzpMFuJWJrG/stE2dlq3X4Tpv3VImdRe0j
gpU7cPs6fGkwQ77XP1qKtZcuVrriCbcWQ79D6a5fc4a4nyytwJtr/LPyPCtr
wpWa8Avl8Jf46dn0Hj5xa7PZg/V6a5d7odQDK8N70YMeOKSNn6njR4TBT8Aq
h/jCE60F8rksLC3Z2u6LCk/qUfbs/EDX+3UfXHJUrEo3H1yeJ4n/atN67b6O
/ztLKn8/dU55xFopP/gdMVE5OuGmKNfm1yjuAr4ME4+1N1rl+j/96T973ivN
+5RritVv7FmgYr/dy9grMOfv9rN8V8F+vZOwZ8TaV2cVe8Zr2bpwvB63uGH8
CyeXDV9yDk98fS/c3OarOLe3xI54bcP1TWwPPdTfDqNN1gbcDR7MYHc15eiR
b0FYCRygnE1RmFccaPW9dbDtOpigKRtHfmHwU0m5D+x1P5CD/233+kvEFslX
+P883rCk9B2fFWetMuUl/OrWOujLRBhrDneqjq3f29hm88nubn+0xfydDZTH
l5wHV8TbqaUzLfxyz7m2sHqQ2HcKJ9qXjNHxANg52YQbVte/5GNlu7IXYUz9
37Gv3Va2kdIV1w9+Cnd/8XnbQ2s52fr79FYnQpxzlHigfMG3BynkiM6WwJz4
sSSPOiTfCP8fxj9vHv5i/9f//f/a8vaPcOEZvnbj5/H8RLUZ6A4+JIiuB8Bw
bzn3nWiXWNvf7nV8zb085dOecqfKm0qOF8S6o3jH+Z+w+tMhfnjiWKFLTOry
mS7+p0O8YK3Qv2xlis+8cXusw31q8IAyuldDzo6VsFvZZZX3VAbYpq6JOFsb
PNg5a70DV4miy7pWybeCbCX3S+Qb49ql86ehGjq9AFfdWpe429G+Ule5kZk1
uyubw4evbr73x/7wmvh+5496Xw0M0kYHWr0r4u7U8/7HYFTlHs881z7fyheu
IP8c+Mphn3LxT68lX8Uo2ehT7JV85aPlr59wSgD7PU8TJytXFsUuhDefn+bs
7UnOAmARyTOEXWjvLQdv0HUr19fmuj7++M/2f/6X/8e+/PTPls73PL8vXxwp
zy3VvLHy6JPv+6RaD+DZjdcBhIpLl+sTn5NP1nPxcclZz2W/Z3DyfWKSyzLW
djleFqYu8zdgdPGvFwFiBXhfuVntaUnvIuDepPLnzYUtFh/xj7dwzo0NlYcS
72VNS62lVXrKrYBtWOfm9BPcdm7f7iXsmBh0QUzK43dVM1BynoxuwFXFmyTj
ULLD3/GhxOViZWy9/tqadThmukFMRp74ee0JKRfaVd5T+258Xo8NfrvOudU4
CmA/2ZDWTfnzUBmOr9ok7LS5/KPn63Qo7mk//CmH84SlhUeES+SXo+UrPyRb
yVgy1/PLzMJx6SX/dwb2fwPvOUenAvAi5TIukW2BdYlyLSkwp+JVH3x6++Fv
NgWTTNHRj5/+5hilgM9pgTPFd+Nw30RZcX8Njrr5ulevuNvxPFqEcz7+ipcl
W8lVh16HwWtBuOoJ63iSlOwb2G4F3wz3CtfQgyp6UcTnR/H3BWK7dG8JJ50h
B/ByfW7d1sqm43tbTDjH0TtrI6cmttjFL/dY/+5cNVBry3fXyPiRGHaHbnbs
daDg/DxZnrqfzqEP6dLQ2ryvj6zKyFjcV7USys9JVtqX6jYnyFA5Te31Lb1u
bTDFLw9vfT+qCIeQbCVn5Y3y6EUcP618kvaoLsGp2j97jT9Lqqat++DylCwl
Wz1qHcX/tzxptOVCxOsn3yy5PvlnxeAtlp45lo7iy5U3UF3EHuso/1sHdwax
hxPwXrq2wG61p7KyzeNf7Pbxz/bh8390btHg2lQ71GM9W/g/cYUs7z+QPMCG
4uySaeIrVlacFcbS81Tz1v92+TUvouexKvqn+qeq9E5+uuUyPk11vdbH5Yz+
vYGjhdE5YeOGcDF4eb78ZKvFB9Z7YdXiwPr459Xsox9T9HIJfpqBkdvExBJ2
l0fGMfxW7/pv/PbK/YFy+gntg8JPpbPKTyqXPpk8oB93zvlSyFc1PPFE3Vq1
sU36S5suiMHKz6Jf/ek7Gy8/Yr/EaGK49l1bfK6NLxiwTsprBsJl5yJHkQa/
vfBawWPWIN19Z8XBB/j8do8lBQdLt+9/wdHbODx1nCk/LLuVr5Y8I6XNFlen
tzjrMr/BfvHZxZXb2At0SbV6ETBUTrV6YKcItqv9lAo2EbgsglfGfp0r1mqM
/ba0v4QtS1cHrEGuNLI8ayJspj22o8uq7cJ/zsEOkql4kXJoGc7Z5c7rLL/t
/pzrSdSvsG+wPdcbB6++hZfoEK4K5iceg+XLz/iOHBin2tuueX/8wO8r37AB
O0+91rCMXQ/Byw8f/9Gu3/3N3v/4v9nt53+w2+//ye6JL9ff/6OV+ExW+0qL
9+gPOC3ZAEOBBYJ5uEPbayt8X5DrbKE3TQ75gyqxPgpvFKft9lZuv238fZ+1
GeMfhpN7z3HKnjPFvttxilif4XMJ+O+J8rzE/Es4kq5Le+Ex1kJ1oUX8YB6d
TaEXeXSkit88weaU37gk1l2A3wPOfWcuxyeeJCztfvkJT6flC7e86Rycpb2K
EDaSUk1HdeF6VQCPFKojqzRnyI44kaihu6obxe9wVNpr8CT+JtX0uJIr9L02
NVscWgb7CisPRkw9CIkD1Vymsltx36fcmny1ZP/Eiz3fIcz4NV8ufrytS+j4
a+V1IuVry/E9hToxkhirta2Cq0riRmDlIrhocvsnG179ZD1wc501KygXCVcq
Y/PiwdO7P9nkw89Wmd+BayaWbeNbsi3ieccSyLVcn3meuIKN5gsd67Tm+IJH
W2KDHWLsGB+nuJrH/3bxyX2OBuvUHyn2brzmNQcXLtaJ01POlc8kWZNzsGAg
rr0U7Az/FsI3J+Fbyj2/RpdfXRbApR3kKpyPr+HaIsK6qolgjUJw0IDwE3Yq
2e2FO15fnKjfsWZL1uYKG0LGyD0ozMVz7ZFcKHeIj3p9kPR6yN8S47LYwQhf
00Ev5VfKyLCLrUiuWbBWAl1XLJGeS75DbHi5+WI9Yp3qkc/wrQlx3su2/fp1
3LmXbPlp3/JJnpKbZC+5ClfLZytOS/56rTgtfnXIY7CwcJ54gb9Kw61lpxnl
yfEdWXSuhL7PsdnHn/531oa4BadtIN9kdcvb42X0HSwc5/xzYNvjTNP2YxWr
ce7hovYV8RfoZ4HvEh8swm1SeXBVoYftzr3mbgQPq7HmXdXZ4gOkX8Op9tC0
xwjH5WiBp/PYd60NvuZ5Bf2L49vDYPRLeMqR4g5cYB+f9Oyk4HufqnF5ie84
xI8k6hOrDtFH/Iv8aVA1xsLB8P+9WM95ygm6HsT/qv50BzlHa9e+dxbITO2Q
R9VKJKpXFgCnvtpPWJDf1D6Z4uB3R1nLtq49FlX4/snme2sRX2W7aa0l66Pn
BXRc/rmCvnc5l8H4zms6Ks0rx5thZJmq3dpeqOX7W2+DdfvN24Qfeh74b/Yz
levQ/z3thwh3KRci2UrOkr/0/E2w4fVk6fLc93RUP1lnrbvg5gL2menAffGP
5YFqsO/AYfiJGJygMLA94syL4yTYoGnHKZ1TiTUaWgmdTDQU55rgQfg/eCKL
zVfhsWVkJB1O8f4qcq3gY/0AKyl33VZNB5iq3lXtGXEUPSnwN2FpHfLPiiNp
sGcQ3HwOdlQe/zi6ze3uwuUvVc+Mrz7g93eJz3W+r7/5YDX8QQPd07mESqpt
b9shGOtEvow1CmIHF3DRS/x2uHZlb1jnU9W7IOsk2PEIXKV6skS2hy4+wC0+
+B6FOIryB79+fu74Wbj62W7Enu2E7e1RwmLZLueMf+ys/PyfDtVBjGbvsfWN
7wmeaU8e7nsIB1YMkb/9w37Gj1+/if/CjcSXJF/J9olDybb/W64s2XtNvGox
4cdJ7LfqdUNr39ctcKTA0WX8dAbdO8MOjqNVHpvwXXg+cgskGtjFneXAFA3i
c75zawn8VRW8HQY7x8R/WMsoeh1E1yPIKau4q70S+EQs1rAUOKykPFd56PsT
ZfhvJNfCV/WsNVKvA9+Jj5Xv1nqoTyIEjw6ID4D7T1WXgX+T/Z7DBy8Lwso3
9hze9zIIL0BfC13l3K6sN//qL9Fj7YEpP3ABRjlERseqUSqCn4lTer6LDz7n
b5dglyw4TXnJE+J8Gv1t4XfWi3c27K7dprTOnkeMtvAnQ3sDN94N5L/miW7c
XsQJCrWJ2+4UvZB/HqvebP3FOsN3tstnLlQ3Qrw/QL7fHeX9eMpNSl6Sm2Su
5098WLJ+yoXofWlwpPz1AfJ/cVb2+qvz3MhyDdXTfALn3f/CXcTVxV/lX3Na
W86nCy8KIusLMG+b12NiSBfcWEAHE9iEvqfYReYd1erj74nTMe2/831J6Yz2
e/he1YYGkE8MHJrV3hp+PYvvLhJ3C+2V8+saPqyHz5ZPKeEPwuhTBl04DORs
5zRr32FL+8GK/frVpb3lWi6x2VTr1jmGru2MeCJMlef76mD8zvDa/XsdeWtP
U7XpYeEjdDJYUk8I1zkAm6LnyfYNGAyurnguXiIdAMs5RuioV2dl7drI816K
3Yfxrc/UnrL2HlN8p/K4qhmVr86AudL4rQKfF/YfEqcXq0+Oo5us+QV6unMq
HgDfi/fdDp8O5SqfZCtZ6rkeX6iW9mse84knPx2e11R9jvKSqZ7bgPIRuerC
966Vj1SvivZps2B91e32wURp7CxJLFRPRn8O9tp8xOYUW1Zwukfn7iVkXelz
TU31VoHt0Y8gPlj2nKpvvH6hyPtj/Ob5ecGCoaJF4xVic8u/P6N6BfBIVfiO
z1Q71543Uy2A6naPLkqey9Y+95vTvH0jOROvVIeWaFw7v5W9Sacqo0dwIPJU
3Uxj4vnNFq876oFqi3PcwJ/ufW+lwpH32rV31lj84D7cfa/qlPCXwkBh9LAB
zpuOrlzGT/xZvV/iT/vYlWpjDuBrl6xrDvsQ7mrwm0kwp2KM5NvHL/VZwxhx
SvFX/vlQ9bHgeNVkS0aS2VMuWjH4tzspfy37lc/+9jDnNnzytcb3aY9b9qt8
zpE4NbJQXZ34sfKTEe1fwJdjPMbBL8KC+YpqADvuXwpVcbaJDZF1l/NTDqJD
bG4Tq8fzT16DoP4x9SCdx+u+B94mxsTLygF3LQkO7Ey/t9H8B67vndeKx/AH
e0dROzxPWES5ZXi/6lyVB1V+swwGUP5Px24ga4eqYdF+DHYs+1V9VQa5Zlo3
9uq84rVIx1zbq4syvvnW/Y7yYAN8dFn9E1yLanuKHn+ErT/5++L44zT6FylM
tnvzh2l7dpD2PIjXyhJPTgJpyyRr1m4Mrd/dcqa35w1/DFWu8APbmvNgDuyl
dcz2PSYksm2Lp+vwiInn2pfrz9YkHheV++F9uyfqAWjZ3kXza3556P5A9itb
Pc+qb3DqMn+yaz2/yG5rPJ9qFLQnFlPtuzA1nzlBhhfwOHGLs0THa4cDcO3z
UBVdbXieUjVO6qkSZ1PuSI9PuaQ2vm6IPnaJ0zMw2QRZtgc3XpdVEk5EBypw
1yJ6mxJnB4/GwfvpIrg+oX6DpfXAkWU4VSCWt73TpJ2GKr4uMXiu5NuCo705
Sdvzw7g9A6+8PEzYKecZ47zTVa1x2/1zBHvzfXdioWzoskjsxT4b6N+YuKI+
yHZzalV8hI66517kq4lJxNl8Xbm2ldez7wUK3juyf152fiSeHCWOKfY24XmN
at86YMULsNyLsxr4DN6EfBPtR7soii9P0Tl4u3L1HfUrdrCVhWWw4Sz4ooqc
xZMmyy/4pmt7De4XttqBH+2G2r43rTxqClynIw7G814ysJ/+lqjdeE5G+5dh
/IZy1vJbsfqVpdq3xBx4EbwxCA6Kqp+iunZ8ElCvSgj8EmlZkFiyi/8LEHcS
WfGTjdfEJcGPqn+9ffizDUZ37msk7yxyT8Hpo9jtePbRa7JUH6t6Iq/lYa1T
rGEef5QGy6ivUDWDqq3uTohHd8RycEeR9+yeZL0fKkkMLeLnw2DQ8xQ4PVoh
/jfdL9RV60UMPVddGr7hgvV/fVG1b8AlO+Bo1Yvl+N3W6MF9jmpM6uAc5Y3U
h5AhDlWJI9Wh9rQf4X0re3WUsxf7KYuwDrPlj/AyYRF+A92PgROurvA92tuo
Trx28lv1JUY69lZ7ssqJIdsj9EK+vYFf6CK/LDGm4HWk8KHuwuZw+On0Dpwl
vvzeexe9Dgh5nar+QrUY5Y37e/WTqdYxVr/1R+8vy21zpuHiFXLf9lV53Rzy
T4Jx04qNyOSM+KR6KmGLYAluzTm+we7fXgrvI2dhB7jfU81PoiK8tfQ9vg5x
9urhZ++3Kla3eZlQtIzN18ERQ7j7H20AXksgR+9Z7t17jieH/pfxyb3pR4tm
+l7fUsWOzkMFq2MP7z//M7F/ZTvHWe8JEXfQvqT2KoW5cuoLwYeUO6r3Xzie
T9bkk+bItuR7Yr8nLv3qTQI8UobTPVgT+y/jI7v4afmEHPpVGX7wWu8weplU
jon3FMbv3a+rF8hrWivql4MfFrn2VN2S8Spx99Z7C7uNbW3sr97G7ffHeedY
+/z2i0CJ7+Dz6E6ytsWnPbiF+lgUx0bECNXCjyf3VhXuJE6fwuvkZ1/jm18H
2/D3ATy+7Fxc8gzh87UfJvkeJ0fO1z1vWsBuSxvn5ooJqqETPlTNZITfPU6B
r4lfJ+mB599Pv9YnKJZ/Q/x+dljA79U8pmsvSj3JaexFe3riUXkwVw27KJcH
1gFTVpVbRH6r1Wf89S14SXUVZXhqz3NMSWJNFj8tHJfi9Skx7gA7DYYrvreU
KXStJbyN3HeOiUeqQwVnJ7Bhj+NgUWHvONy7TgyQfMXDtTcSgXfuglEO4h37
/X7a/sPbmL05L+EzrnnvnfeVK8eg/Y4m/C3o+byqvTnL2hG4PMT3h5Qn5PoC
2FMCTJKFJw3QyzE+ZQDOyIEN8ukW3OiDrRbvbYSsVXeqeizZ7HN8rHLA4ohl
bGi4/N5rnCv87hAeUCXea42Um1MPruJuKKU9w57nNF6dq661Yy/P4ELhjudX
JMtIRfUnS9/3lKyVc8n1PrjNhsvbeK+8uvpWMh3iAXqqnrZ91QzLZsEjr+BR
qnFWzaxwkPzdCf45lJ9t63/RSb1fuDWHT69xrsv5O9fn6fjGxgPtNV3b1eqD
113EYnw3WCiBLauvJoo8Qxnxn5XvFyq+5sHq8vsXIbjjadriSXjdScpOZYfw
xzN+L+/+AptFzsqXqQ6sQJzIoCvad43i27X/nKzjszI9sGba+xeeYf8n+NQK
8UH1Q+LcBfBAzfvYZ+6P/oAePCOWP+M33wRLtg9mi7l8O2DMmbVYqz6xua3+
EX5TRxl+Vs4Pkfu189fSQHtUY9Z34vWzwmmJsnz6xHlEg99THbjq+bvwZemw
amnb6H+az+wQ5w98777vcX4nDK+N9Rwfvbmo/1Jv/7vdtOcptWeiPQft54i/
5dSrhE/OKOYSj5Kqk2XNTxPIkRh7SkzXnvgu+iPZvgZbqSZXdTqd6WfsZeM5
ONV3qudcvrmITmp/YIROz9XXBW65Xtzht67t7vqT1cDbIfxtBk6Uwv8nNGcg
O/Aa72xJPdJXxFzhxolV21dWZE1lw/tHMXu7E7YQ8b6hXqXK3NdI/dI1fE+E
dYyydnHNNGjBhSpffYL8K+utvJpsOZBo2ndHSXBWgf/H17CWisGSr/YkgtjM
vuIQWGzvsmS/341g81H0uu37utqvUO9jFd/cxn41y6CCD8mAB5RPbaLb0m/l
2hQbdvmOXfRDOfBERbn3oefXqlpD5N/GN683XyyZatghvH0X36RauleHKXtx
lPE6WOU0DpCF9vcDYOcQsSMFVooRN1/hF3awvwv4bK59Z7GiYvSQeLuw5up7
69/8yWrEwjR2pD4c1SmpbvMUXHDptUbq997Wu4fUpzy495q6DrZS691ZXjko
ZKRrrnOt6tmeg/HV/9asjmyB/apvajW7d84QIw43iMvS0X1sSfKVn02Dyy6x
1Ty4t0GM0CwD8eD+5IPPhLgEN4f4exvZDliXEf8/xscp36u96eb4g+tYFDlH
8MvKr+U5F+W/Q2Cfk0jFLojHQXxoQX1myDeCPgp/l9GHpHA/35MAb7w6KXqd
ewAO/uwgYd+BzY/jDbAaHALfdsmjzruGDWtfskKcLhK7k9GapfDneX5ffPHt
GbLaCcHBo/Ycn7FPPA2B88qs2yXffQFHv1C/B+eozyjPfKaefO0xqvYCHync
fKY8N3hHfjlSVE3ByIZXf/b6+F89v7QjbDFalF7f8t1gBWEo7aOiv3GwR071
T/iv5wfozGEW7lgCJzftLD50//wGu02oDhfsUx0/uL4Pp+9tCgacLOFq+Bnl
Wkb4pKubn6xBHFUeZz4lNglPqk8KXKreI3GjHrFSa3mBPBSvS2DiDFyrJwzO
mqt/pyIbJRZLziV0cQB3ns8+8J3vWU/snFjbRJ8O8fPKcUTx5Tun2/6c16pD
DWTgIMQdly/8UhyuJvzFZ/GH6kOK4dOVI1TeP0+MF6eXfalW3DFrRjMS4Pz8
/jnfodyrZib47ATx6urS+6XKlalV0MsUNlwqjrwXULmBInp8AqY/ilR9loJw
806o5r1Cqj2Uv1NdWlJ7mnwuhuxDGdV4dr3fN5AYeD+U6ki093ycUA8nfk89
g+jWt3tJ7zU/4DsviPEtfGoenp/Ah6YbM+uAwSvgi1RtG1e0D34mfFjY9lwc
Rbd9ha/5fFD+DvkoH6H+MM21uEG2c+TdbW/7A682n33vY76C684f4UGP3osS
/1qjqr6qKr5UMU5+UH370uMy8i1iv4uh+imJnfBXyTWLP8uqvkDrge+oc95D
5DEDj6g3WOuZTLUsBX/cO45bHNt8g+9V38YLYuf+ZdGxdAHeI7k2B1f4mLnz
bdXjS77i0HXN2hGPV30KPld76cr7aN5KkfUSbkzg20/w8a/g2sKESeUuC1Of
t6CY1Fe+Ufsk2Iv6cHr4heXdTzaFM52ptl19L/ho4dV9fHyU6xmsfyC23FmQ
eFjBp2gmwEVaNeANP4ffvIl7nnEX3vvtQcFr6tXfWB++83kgr/AJEdXhRJu+
V6ZD9e+NsfpI4aXY2O55ztLYQr515f1nqrO9UG+GZjSgMzth1ozPB7j+FHJU
jnnCscGOrrmOFfIcsX4rOKr2bQe89j0ufqOkPTHZFlj9PDUFr77zmrbDuLAZ
fhR9PcU3FLGDCb5kJKzTUG6y5fj5nN+NpNTTojp2dEA5M2xHff0N5Z3xqVPv
dYcvzvh98Fuzd2Vvz+G4Z3nPebw+Qu559Ye0wH5w8/YE/nbreUfV4VeU43f5
DrwuIMDavySmnRHn4pJv89rr6//pP/8X62EPQXyzasiEz9RrEfG92y46OLcl
8W5A/MpxjsoH3H74iy1ufwBXrW1P+3apsc9zyfYePCeoetQg/iCEXnaxm/nt
X/AfY3sdKPte7+vzuj0/rdi3RyX30SFhZNashM/zuEgs2gNvHoiHcD6qkVO/
mnzZKX5j5yyNrpd9vyeDv9RMqiPNEol2Pae2G+vat8SifT4bRkcz2K/2C+aq
D1t9sgVrqfkxE/SkBQ8aKU+vHA5xL8l1q5Z750x5UO2jzuBdN17rqdzYse+5
EO/xhYfn27g6Uj+a+uCRbwhMksE2Mti1+EIUGzi/yBLfatZUTzz/N+xvZ72s
Fo8cD3CTB5998SaQtufI9TBctm/AZL99HkBf+L7y0GdAqBe9hg/QXkUGzqx9
2Iw4EFjt5SGYRnOLAhVsfuNYVzmU7//2f8DB4KVdODfrIJ+vGpYq56D9CcWm
DThpofVR/Rn4arb+jI/K2yGxP9y8tXP4yklmbIXRB+wH3sxvpkqaE9X2+UrK
PV+IW3hee2iR+oOd5rENYm64tMIO15ZlbXcu8va7t5f4Z/UXFn3Pp/i1HjFK
3FDeLoLPOYyB2eJ1u1AdBT43DK9LwKfS1XvH48/ga7vYWgT7iRJf1P/eUw4Z
37hUbxh4KZNv8XrlczhUm9yTzJcfia0VfCW4hNijOp8d8FpAfXfgBfEx2fGR
9jThVuo9OpAvxQbk7zUb7Qab0gytDX6h0yX+xcAcwbhls8hXczrQKc3yqSKf
NrFmwu9fI99efwkf7hGP4LuXJffVh+CQV+CKs3CT3wD39u+tO7nBT098f0Sy
FRd/e5K3g2DDnu3l+VzXawCVg0gS78PKHcJPSw3hv4XXmlSqfTjOAiw9sdH4
ynujpl244egKfbv3mvajiHL+4DXVzqtmorz0PbmoZsVpjlpdc7OW8MGhlTiX
FD7pKFR1zrIT1XyMGeu1di4Uh/Pssk7CbN+B6d8Gst7j05t/5Hreb2tR1WcK
/tS+1yF2cgFuSyOXsmqk4EriU/th5aqI28Ry7YGKp4sTVfGhlcba7XOmXDKx
TXuyDfRXfScZzk2zBDRn4QS8q/in+XDbvuKO9wnouc/xeeoJUc4z3sbWqp6T
Uvwa4ttmHc3W+N7uiOm5fBsdRTcTJXxyy/sVasi0J24jbIR+1sHqc2Q2Z10b
A53XAg5QtTcnGXSM+Kdeu72UHQSKxHSwRAG8lGt77iua0yyQjL09LXIeTZ97
pb5A5bB1yP5en6bwpzXvTayrl6Ix3e459cH+pR6yGeBLruwKXzJTHmokTtby
us1T5XZz2xxWhFiUl36tWC9kGwU7tMdgoELPEum618hcwsXk21SDoz2oA2wj
3bh2372jPtBgweuotUcrbqAegYFwLvFS+Rr1fJcnH62++GTdmx+sDh4q8Bv7
2LP2RlWDcpye2jExWHNWlPuojt/jr7Q/eut4uVKfb2cqNuZeI+Z5CeJ7g+8O
RIQPyvYmWIa3bfc3TtSXCbZwnt248pzXtgZ/5H9X7bX2hpW7SqH3KWJTCz8o
3iDcrdlqjYbmeIx8los4herqNbugrr9rX7KNHU9vbUIc7uJL1a/35jDpNbL7
gbwd63z0yBppr7GO/ZfVZ6warUR7WwOvvfCE+qGmjkMu86p54W8p1cd34ClV
cPl8W1uInufhIUlxsZrqC27wLTqXETq0rbFVvaZq+iL4zMvSdn5kEUyVVS6H
3xauT3PucXx0Fp+QVL0hPFx7grGvMycTkgGxQhhZ/aeX+GDVs7aRyWDxxUab
H23z/u+thQ2r91pc6KKgOHBn/fufrHn1ycLwg0h9W5OwozoQ5TELC5+TFKms
3LZzzQ0yXm71n/iaU+0Q+En1dCnwZBncoPys6i/FL5SvPgLTy69oZkSc95S0
hwpHkzxjlc22F9799NAq48+8d+l4Pqn9n5L2G/le9Zui93XN76gMnG8pV6k6
J+UrVcdeQO698bWN5w/Ehw8+Z6yA/iWwTZ1rBJtQr8sAv5PMi58uPB+puQ2q
dzwEy788zmGrLceWocJ2L817zVhfxagw13Gq+WTg0ITwc1E9JOr10fyBicdq
5Vs0X9J7JsBT3x4V7fcHWfsWPbvkd9XbnQF35tHJVGVkiWLfmsMbrzvSHuF5
MOf1OcKYyidUwb3pysxz9cG0ZlR1sAGwEOvUwkaFtdSLq30QYXrtq8f0fnFD
8VJhSXxMHAwcay7sQHvjOe0dbfshTjITl5FqPsTbhMO0x5772v8nmauvLYYf
L/bfe12Peln1uYvC0vNp0qvR+kef9dVf/QiuufOeSPU3SQ/UC3KErqfaDz77
RXNBtfeqmnDtH2RLkvGVXYKX1GOmmRyD2UdwydDC6s3LdO0sVkbfm86BNLtD
fSqquyzX4QRgMtXSztef+OyNz1JTDuGbV2H7difme7nqrQ6CfU78fLZ1iOrz
SDTh9oP3Pueuvv6jXcoOVUed6vu+vuaD6XWqwftaYOfmnfcEq99T+5DfHeRZ
n6HnVOLY9CW47DRa87qXLPoXJbb0wTKaU/B299ISiarPphG2ETeo4beayldi
+6exDni15DWaF3DkMHH8EO6q3F0aG7jMDr2ecAcfFcTfhFXLVlfNJ/G+OvR6
0R38z6Hmzmbkm6+Q8dTeXqqHWLUhHctqL0+zJTg/9ZGpxt57KbCvdGtbk6s9
C8n3+VnN9yTVa9Ic3Nrs+o+eV1d9SgQdPIi2PbetGgj1UakuUXujSf5eQSdb
w0evo6gSHy7g8efhitdaDMDvXeQrLl/CZ1wS48+TdbhNCRvq+aza2UqyvHbs
p95jHS3NTOuvfW9VmOvFATh7PwV/3NZoBZCX8If3JcFDNWuoMf9CLPvA+c2t
uvzJMsP3+DVxAeQFJtbrFFxL+f3juHK7cL7ExOtnNXvh+LIGfxp5z8IQ3Nmb
aZ+q4738cWJtujK2Bn70zXHCLoJ5eP0GjNGxIbhtObm1sfffbLyu4kz9NMjz
iJinHv9X+Jso2Eizg722S/Mn4CIx5FfRfjXfnUe+xfYcu1b9Nn4bf6M+OMn1
OAUXVk8Gh3r5lWvex+8cwf+Us9eMIeXpOrNPdqk5vPNP3gP367dx+/cvw/aH
gxxctOpzVIZwhtXtz15/ob3wQ/TsBTajPlnpQtD7rMc+n6EzUF/ge+Iu3IND
dSO7gRwYtmOZ2sQG6++9tqbYfbDa+JP7j/1QifXq28F5ljhb8Hrb8ezBRsh4
MtT8qWubai7l9N4SSTDyfs72L+r4PHyksGlV1znzmrXngRK6yroi1x64pcPv
neDXNHPmmLVLas7P8meLN/CNk89wx5Xjx1cBbDbY9kP7dR24QCKtmua1zx/o
zzU7l7gcysOLiFsF1Sis7DikeoGWz6dU/fdUcxd7c1uN1i7jDjhW+0mnYc3t
6ngeTLWZyrOF81Pvmd4P1sAYmqXXsyLym7J+A+J8p6+eoSuf7aL1C+dH3id0
FFft7MbitQfw3idLtx+/9kJrL7LAWgyIpbcex9TfeqZax4H2Kjb2/CTrOhYm
xqYrK/eVs+V736sPxus+MyvE77w4LdgeHEA9QfJ3GXSuUNHcSPAg/rilPYTi
yOWlvdxjfNceaxEpq1d3aPH6ZovVfDZZHV4Ttt2zjNf7pMrqZ5gh35XNOWZd
zgH+MuvMrIZe7wc7+MoZfu3W6100U+bbw7zPzk3gL4qjd9jae/edmlWzc8m5
Ks+IbmvPT3E5JyzB+zQjVLFm26skPzfyPk7V7jfwc+Ia3dGNjcDWqqU7JsZe
xMHi+Ot99FG5cdUoNvFNfeXtwRjtStfG3aktwYvqcS5qZk5OdTjgtdrS95C1
n5ICLynPtgcuPuIaEnnND1rDF8Eh6j+Aly83n8CnE8/RBcFmylUmqur9f8fx
aGH1zlWuvs4t3M7E1Oxp5WXVz6laCtWyn/IYUw4o1fH5Uuq5PYPz1DSrV7Ws
2a73OF8SO9SrfwCP3/bfqj96BM6/R4fxy/xOh3MuwZ1OjlK2Czc5ile8hvaQ
dfnmMIE8Km7/p+C5PD5cfcZNfkP5pDyxTnWc4qntztzGmuNQ6tgAPjOojX2e
dIpr0vz0FBhKWEB4L9O591lQhTGyvVZu8Qs49QosM/a9iXhF/UZD3/NLNa99
JklKNWpZ9cnD651TKVeH/uIL6sh2uxfyzpbwlOH8Hevfc339l//mmffHH8CN
w/mh67z4fL+7tjX4cDzc+Hw09U563Tu4WL20Bd/jHvp6q8ZWvQQhPr+jXjHk
XRi881jY78MxlSOe3lkXH6aZvao1jaqnC5yX5L055RNVu/MV5yq2Stejjqfv
rT794phKcVT++Pfwy32PqRWvvQ14n2rH5walfG72rQWIo9KzALEkAo475f3B
1NBrodT/3+yBKVRXjB8MogOHZwXf2ztOt1xfT6Nd2/U5NfJFbfjanXOkDtxc
M7bqfMeh9oi53rfHaTuPYCdcf119yny+jVxUd7F979JGxHLv/VEvBVynqJpu
YmAOX9ka34B77ljTifcXlOrih6qtvLXGGLxFbFBOKQMeFNY55do022978H3Y
p+bVaTZUZ3zPut94riwQLtmztyHPEWif+hx7UX9Df3DtObkKfKmuXnbNxld8
US5psp1Tob0Q8YUotlIQL+xeE1tX3heomoyQ95VqHsvYfbNmsigOa5aQYqP2
vjQvoKJa5+6j97AcgT3U5/DUZ6paPHEH+TT1m+sQTt6LbLGzei3Vkxf72lN7
muj6/lW5/471uPK9SmHoRGXpzy+Qpeax1Ye6hnuwAXFBfTxHxFJ4tPZtNec6
oRiJrUs/5Ku0v6QeO+0fzjQzQnsT4MYD1u000bRdYrJmTV4IX+NDVfNRrq7B
XLe+R5kjXtc0L4uY1xxdYwtz57Jp1ku5WPXRqRa0KNnWNNv52ur4bnHEOriq
PFCN18qx2dvzss82Old9lWrjwTuqKRyNH37B++Jj2tO+IJaoB1J9R6rhUG2R
z/NTj4b605uzba0O8u2p36qzdi6qeuQEtqfzGsw++MxZ8d3G5L3vde5yffLb
qkdTzZ50SXWll6xBDhvIcKgn61w5TMnB54zMtvOCc1PfKxSfkZwle2ER1e74
3OHKf5138DQX/mnugWo0Vc/5+720zw7IdR7cF8jGNbcixprr/gKqvdI8StV0
HweKdnSa5zzBe5me1zMrny7eF8kMPOevXIrmiMlmNUtXe8/75znwUQZ8q/nV
ddvV3Jqo/AncFrlrL0i10loz9R628X9dZNshPjbgTpq9J1+S116lZiyJB6oG
UPqn2ixsVXUFZeSsPTBxfWHEZ8d5131di2YeqVZL8XS2eOe/E88OvCc45fti
E7jtxnsg1VOomULD8Z33UDbhc6px6bY0l3Xms5eVL0+Bd5SvyuuzYLLp+rPP
wVeepQ8G1H6jZhNqv1d5beWk1XcoLqbchGb0SufONSNWvevKpWlmtGaBZyde
Zyu7jSM7vZb96nHLd1vOc4RNJG/xvv/wJu72rfklb/l7IDt1HvTdiWaWy5eM
/FGcKAHPqE4/ootrj8EpeIVqy0Lommo5ZNNNxTG41QQePVr94LarGp488opy
XVXsTfcn+d2rc/vDfsyi4BX59COOQK5nZxyXBc3MbMCHahZC9pqJoP0GzWVR
/aTmTCkXrXof1ScX0IOS5svlx3Crayup7qKxzfEW4HyBaNOvezeinrWhX892
ZgYcC/1uguHV76i+hKz2mpHBfiDruTjtJTTbS9vcfPEaNeWz27yuYsN3tz9Y
GzlrnvXtzY+2vv7BsZFqy1SHWkN32z6nXPudV2Dzj94/UMF/K9+k/knpv3RZ
cw7DXIu4vTC3z+VDDqqXlT5+c5D1Q3FXOWOfVS9/zKPPUv06n+Rp7qz2DnTI
bpVv1r0e1IOl3qwYfEJcSPsh8ead5Yaf4Bbgl+4771lpwHlUC/JsN2b7Z3nP
KYbxJZPlD8TJLzZWvQl+SfXx8sOqf9CcNOEJxSdhjzPwrWosThIN9887xLoQ
8bU8vHe/G5UfU18E8q2yfl31IbYXNiXOqodJ98HQHB/xtCTYLQnnz+Fvk+m+
8zXVlmhWr+prdC8Y5UGko6eaoaW5ePi5mHpwub4F+KZSGXocUC+g8wf8ieSt
ejL5Y+Va67WR119rToz2TspwmYbypxz5TNv7qlQnndZMaWJpWTVayuFpDi/f
q75/9dWpNrHSVj/Hdo6h9guUI1KuSLlf8Rn1Qcsvyyer10GH/KiuQz76acaD
/PbTHoHyi+qDV831U//701wLzxXI/nnPhdf/jnwddonVB+iHZC75ai5SEb+n
/UzN/hIu1IyCXHXp9pJhjXOsfRwcGMMmNdOwpLns3Y3nfoUttYcSzyoX2SXm
dHyei2pqkuqhl3+Eo7c0Yxde2Jq+896ZdncJB7m3K7CtZk5U+c1a74E4sPbf
jOJD4sqBfvUVOb6rB77WejaJJ4rByt/6DClhisaVzyZSffVkrBnHQ/+NFrYp
eepRvVTReNlyPBY0fxzMXMKGm6pjWuHH0k3r49s1E3ym+szRnaXRiRpxXL3t
VTjWiL9p70z1FBPsd7z4ZHMw/2D+aWvPX2tCNYMpDr5ULbfmFyuHqRqArOZD
fZ2Lm++923JE4q9k6nMeNJNEORz8sWQqPPX0XLYvW/Y5tGfbnhB95mnfSL3n
8u/qS/ba+SwxWzNKk13ve0/j+87Sbc9LiUvJV0exo3iqBQ8cggvhDIqXvY3n
+ML6f9VQ6R5KxMV2WzN3HrGzz+63Suiz7sdzAcbSvXky0ht0vzPd3ldljXyX
rFef9VAdQaEq3QJDcE7quRI20axW9U06ziVudljrGr+pmKKeUs1eVu73PA0H
xK+nuIZuG39eBTNpDlt77phpPrv33gbVQdRrE8tkmj7bqYh8o8mq1xRrtrfk
O0D/FvBX9T6rVy+GjNPIvq33gKsH2HUGPV+tvyD3R59zHQS7pYg7JXjgCGyo
XKx4kebJCd+Jk0VYV9Vxan9WMx3kj9WP6DlZ3T+HeCobPUr0fpkNJmwlueq1
5Cx5S66y8xi6rBqwDNxE+wea56fXqjVRLXkRrtXkuNScqkDBcdBJSn2NTZ+B
p72UPOej/v1aYwzuGdp09R47Ig4S40Jc80kYPTpJgRknrgsRjsEc3MHax1SD
pTmuzZVjafXpqzc0C66Rb+7gB6fg1pHm12imcv0GTDf1Xr+g5gNegvVSTeff
EflabH2I761qBglxUHtQmqVS4bE91WwZsHJHM3/GPs+2Du/uI+PRYO19Z7MJ
8YTYUFPNEHJUjbx6PGKpmvfB9rDxIX+fIr81v9VBjwfaM1Ffv2pUKtv3SA80
O12zjJr4u1dwLs1BjCRrcI+whWNl67NGAzhwk7Wrfp0Dobkm6vn1Gn7dqwE9
ToKn080bf52VH6ptfI9FPbXCwMJe4sXCxtKD8uij5zmVz93BhjVfNV+/tYT4
f0LzJEZ+P4HR+me/f1lZPW3HOa9rln/W+udYO+2/qt5EvQri/50e8mCdBtNb
uKh6Gsd2dFngM5rB3rDfPDuzP7wIwi1r/lnNN/G8E9f98ixHzIDHc52h8shz
1tls25rEuz5rNlJOHYyczGqvRjlTOAN68+KiYAd8/5twkevpYwNjn5cozF3T
PZ1GN74/UGcNr9//1W4+/NW6+IZCcXtvlSTrqd6i5lc599pT7PLWZ/HpfgVl
9Er1hGV0tzdcez3DavmIDiz8vjTKmWvvUzXzM80Mwvf0VYurmTSzd46n1cel
HORvnh3am6OonYby9i//9e/xCXXvr1IuTfMPivi7qvZ2iWmSs/pqcvBK9eTk
K8KyN17/qB7KIb6+wWNK/dqFod/npy4dAKPlq2uvB3+DTb48qWCrS3DLDf5r
6vxBebASOEmzY4UndY3SPb+/F7hevcJN4qlqNZWHGOg+YOh9f3zr/fs1zYcH
a4kTnmPjp+Aq1bL+6uWl1/9q1pXmtB85R1Ntfs/r/JX3F358FSy4TTt/rkuu
G7DrzHmueiKOolXPw353koZf1dGRpteNabayfK/6adLKP4KLqsihiZ00WfvO
6hO/M/QZYqqrVC2WeJbPj0EXVAMw7GDTla7fp0L7WspZaP88U+S6Sx34/wjc
vXaepHuCiQ9P0SHdc6TNOk3Hjy5fzWBUv6HmRJW0d4ot754m7Lcvju1f/d1z
+/Z1wH7zzT48M4VMql9ng82tx2d1r4wkWKaIXufVL8mjehYVz/W4uvpitw8/
23zz2bmYYzj104DfpoP36NYNsXzuen8KZj6I9H1mrWb+CXPtaPYoWKGn3Az8
TnOzxPt1T6SweFqi61ypPX6Ao2K72GwWPyqsEMROtc+q/NU5h2rOXqrX9yAN
7+pZpA72R666b5X2KKPVW4tUiQ21ewvmrsCDQ9tPEGOy6m1Z+P0ulPdode+t
xvmr5uUypz1pYgP4VTOaNadRNVDekxkixqkmu6j9AeKGfAmyyKFze9KLy7Jz
xrbmAcBpauDAOb5VvvZq+c42c/xlDTyWAVek1Qvc9P085VHk81v4+Tz2UlRt
A7rfFu7TDCnVZsKHpiPdG4Z40r+19eoL3PlhuxeqPh7tEUW1V9px35ItDfHb
QcfsigGaJ1b1uee9X3rKn2bFFb72AWr2n+7nJ/nePf6R2K75J/eO2XW/omvV
FIA3VG8Yg7McKdeI7QRzM+9B1ezHg0TT864JzS7UjOimaplLtntStF38uepz
49rHguucq/eAdTjj8ZKYGMtrPqn6cwb+HvULqTcwVOZ6wFWnWXwJsjrUPmyo
5fdd1Nz5c3zICTqmHq2X2peMduFjc/zSFf6LWF5d+d55ojjxPVDPVWIjmnG0
nUky9nik+ffy+RHNjQDz9hePPr+jNNRv9P2+Bt+d5L0mrQu+73EswUnXYOPb
5Xvw3I1drcDFQzgPNqs6v0s+p3mzHfUcq68cPU+iw0V8UA9uMxo8Yrsbq+Hv
pwNwNFhphpxr5YnfL22iuRbqHcG++x4rNr5ndRmrWOAi57VT6t/VPoDiRixe
c3nKN8q2tWcqTj762g8tOWu253CwBOerbmromG7Y0j2mHra4Xnud4IVj8Nqh
38e067Pz4pznbrjqM4TLrF2Za8iCoUMxZJdV3dkcrrbarqd6I4gRl4mGxwDV
inSnn6zY0D0JBl4PehCs+V58pvPo91Y4Vw9I6xr+u80taS6d+ilPiQ1HSd3b
beizjuRTjiPqJcYna1Yyf9P9wnJgDe0NJtS3hI4fw8E1y93rObyeaOhxvO5z
+nQ8gBPBWUPlZOe+V6J7E2mPXvmnIXKe87cJOGnF6/lQ981bgCeWnv9s8T2R
0sjzYvXOHT56brEk+oSPL6G/LfBqnvVpgumLxIe67oOIP5+qf4q1rXMuI+XT
kX1T80GF7Tif6dVn7AIO8+bCZXxylrGXr8+toB489KDu92eZ2L/71Su7CBX9
7+LXkq3idJ54XszVrVTA1xZajg/n6PAKXdJ8kSLcPgl3b179YBfKH2vPWXPd
W9fe76XZz50OWBKsNui8s3hibOfRgZ0lp/Duts+Q05wT9fGqF1r3MNrgMxab
7225/t7jQQNMLGygGV3qNdC+4wV8Naz7BWivVr2PqYHHXPVTai8skCFuRJFR
EY5WvnFscJlWb8MtHPzeIumxpX32GxikttWX7dzO7YwD2a/qsfL4sVRN9wwa
+ByhAvYuTFjSLM7JJ3DS0rGz7nUzwSauwcCqB9X8+X5nCqbsgWXuiGMTr19V
7jWEDWjefEKYFi6Swo+Fw23LoncN5NviOlXjr16PDlxN91RqYLd6rCH3rno9
dF+/9Ue7evdnj82agXAOBj04ivs9t3TPR59vrxmd2LBkKzn//ttD+1//7qX9
23/33F7tXMLbNsQCsE61x7l2iRUjl+8a/NWsTjx+B+F3Vd3PB5loHrlqSfLd
W+/ZDCPjCvZbhC9VivIDKzu5bHst/AE2duT3Kxl7fc8Yec7wbwt84XJ+b6vJ
jS11T1LtD5QHvlcjHKi5IAX15dY3PlPiDDu4kG/Q/C/ig3y4+qFD+Y3PZQ8V
4ITINI/tl7qc9/izz56OY6/iyKHS9n4Mstvt3LC6z8gKFdVr2yLup+0FvEw1
xrnutdc9aQZUffrBa0fEa2vKL2O7C81NAodJvrp/cZUYrNkMF6y/z/qGo6vv
WX07uo9eAluNxFqWQk/DkYZdXNbA4X0LhUsWAYtewtt0n17F5DrxWTJvIuv5
8qPNrr+AT8r4g5X3d8guC5rLqdwX9h3FPyc4f81R099k3/vIX8ezlwEeE+gn
PKW7dD/T6iiX/ui6pbjfbGz3RCJ59LGMLwdXKmem+c7ajz9T76fmXOvetpr5
HNW9qPCjup9JYuC2q3mRyhno3maT+Qef6/3h8SePX6vh0jbEhn6lZ/lE2fM5
ur+dekovNbcuCXbAh2uvZO+ytrVhzRohViseJ/0eEzM70Qwj5WYLU/ctQc4n
ir22Ru+tqLmFxKOwetzhgMrneN8Z8o5jL5Lvc7DpAbjgXLNitV+jvUZ8tOa8
aV0L4NJMvuNzPVq6jx88Z4Z8F1MwrPY1VDc+e+9zJrVfWPZZd1/8XlbRVNdz
Z7o/coLryRe2+5ThVN0ukPEZNqleEc2F2Kw++7pnky3Hq73ZgwUTVfsWWek9
4kjCefmvsTfIZ2XTPquTv+v5WTBvl5Gyv5avLmkekO5xpB6C2x/s9v1fiN+8
X/3prEHYe7P4Tni81r6Efakn/0LzrSsTz2EksOOi3wsK/if/lFYem5iIHyrB
A4bY/c39n+AEd/zWwu5vv9i4q/sM6j6TfZvj54aq/Ue+4lcH4OgT3bv8suL9
S+of2sPmVCui2ppXPNdcr3B+ew8k3TMhpF43zsf3I6I1nxfhteLq4eX6FU+U
a7v8yvc1c/UU3XyjGXjwAOVAjpJtPzTDbcvbx46FtdbqqSjoHrIcpXwbf0rM
5BiCb69ufvA+ntMQeC3btfHV9x6HNBfkHCyufX1x6EJ56o/qwRiuP4A5y35P
FvHbi1DB+aP654W3ZZcZYmOpxfnGq15Lqp4D5dd1H23h51Pk94K4vOL3xJ9k
s4rTkq/w9Nv9iP3q12/s2bNT29E9Qc7SXhfQUG8MGCdb2NZ06t4MM/V6I58O
uhlLqW8PDoT/j+PLQqyH+rq7/Tuf/+yzBTW7Dv9WBh/GiPWqix2xRupJSYEX
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
lvT+KvKrdd0fuET9PhyPY5vhqpWZ7egaPlRW+nt8kpPvXuMcgNvILmlKr71z
mJS+wk8BXuKdfQ/M1s2dqPPsx203MIstYbZSuSL8VsyAUA/GpzJ/T2+hSWxH
biL/Vyn3DUMB/LoWM56K/ZbTRzfVvbM71WmvDP+rrPsPJ5o2OxWQvDa8afds
L+6e7ScMU38vVDacdP6/Awd2cWJ1ocNExzgDXsjGbOlemXnlzAb1DEuKBdij
ZB40qDwKPOWhcpLpkPkWxamK45utmc0jEq80de6o/5OjF6prLLVshTMifyDZ
MsNt/LHSa2YF2K2m3llGtnCgMifzJJMis1jM/+l5lPU8Wno+BfjH9Nx9uv/j
QN4delPOp/g/X1hzE9fZi4P7SnZ1yEyV7BsYe/QBmLOqSbY9+eKFxWnKyQtN
m8XqyO7h/9gFB/fv9DTnGoozZ8oFevLLY8V6ReX3YD5G2T3i9SePOgMzt70X
dc9e+hWb1AwPjn7Q3f3PigVvZFNvbEZs2FsqBrw03Km6ZAiWTVlyTclXt5T7
NHUNxuCcrXvI2G2LDeF3ai7NBoDlC3YSs5Ienb/nB0mTI/gCcNF+7tN7Tgrr
78eaxiWEnaTWyA4rOobvbyjOLZeo393oOaxspjwWLSiGYqbk3GqDcdk4uHfg
jrAdJD27I8UfYAMXbS5Y50LP6IXOFrhwvP7GSdU9PyraPDA9KPD94rJnLcU3
HdlhdgqYaeQsM4vDDkRbPoZnwVwstvBYsdmhzuHhUdKdhgo2J8UMG1fLYuex
za9P5+td455yQ2YrKrKP2OeRzkCbPh21OtkidlbaOj/oCnhUzMeHQ3nzM8Rn
NqdTn1ttk74ufb760znO5PvWs6DXe+RPSS9nhiEJru+K/fO24re63kvxyrSt
OHfITsWD8tSl/G9DslWuAwa55E4ex0w1vp56JbuR7DN7/GnnOc5KZgWzwQdR
dpTK8mt500m4PCLglsDLbHypTavlBnPwgHSsRwAXaBA8PuWrYN81lKf02rfy
DT3LJXLZpuKXpmLmrp69bAtnLw+mm+Ik5VjPDrO2c0pvI6w47Llslec0LzmW
rS8EL5JH+QO7ruzFwZNr9U3lSHnZVfoMYFvRy6F3tWImA9yP6sh6lVzVXMuw
ejyyPwe+tIvqdTucB+Z0ZAe5wJkFSxO8RXLK5fUPxkeQB2dKMuno2TWY8ZSs
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
rhcbVxbP8Fwa8pfUF4fzt9abO32KCT/XxKiPUYMJ54Zmgzyn8PNWDDsuqdw0
XBjaZwMnsTN9NPwwsIXAvk0rNyq34KLrSm+HyrOuJcOu1VCoUaWeZvoCGX2m
dNfsHbO2PumOL1xeY0zr9SKyjzk9E3rs0xl1hoWebU352cLVuwvLjdjXbSkH
M91P0GeNm+4y082+OPY5rFjlVP4q02QmiXla9q3OLW+wOWLwfdiJlY1sX3x0
3avvDasHzK1s98riffo3zCX4ZUPTej3qfjvsDyiX/fYwJhsQc8/2Y25TsUtU
Z5YdtXa66qatseFoz8BtWsiPyk8d6Dx4QgX59rJi+ZJ7eVCwmUmeSZ56KNim
OsfdFXh+c8WVQ5Nb2eoC5y5CDEhvpHdp8W3f8FLnriMbxSwhPR/2DyOxsmEf
gXGQgBNF58jjX/eurH4iH0WPjhiB3ZVd/e6Z7ENc9w6/5NbTTu8Z2H7gzUu2
qSL2FmzNhuzDRHHthWtPZdeUd8Cryw5CtnFhZ+ZE8Sq7v7z+kezsgWK5oJ5j
C0wz+FWLI8NWG8gngycSV0ydVdxWasgH1JXXSBfpeQRDedt/Yt5/00c/TbFx
fmFchWecXd1fUnYerOnS4No4lEOF0TpfeJofiZSUJ+YWimnAxL60mktOse/o
9jcuLT//0l+0XXR8cJr54EzLbfjS7hvJ9K83g+7fb5+5v3p5bGcsQz1M53BQ
armriXyYzvhAZ3S1emdzTl7mzZmXU/wB7tiWN6vn9Nq14SyQTvIaRfJJ5fjH
YMOTrxiOnJ6d7CC47nnpi2FDwSGm3LJLD0j+yfq4ik3R8bLOJXXbfHWp86gz
r7yL+gsXsQfzix7F7c8VW8J755Mf34EzWucBjEg4AJjve34QNx6k+ujBZjSa
irls1lHyqZgPuDZet0SBve2RO9LZ3wW3R/rF3Dp6dvI0TwDHeFb3k9SzL+r+
4PYEeyyb79pe6vn5G1fV1x75sWRVaYwNw4864e6x/HbtzqWaig8qYCEuDMcy
xSy6zgF4/3A45GTPwNSKwMNgfo8avXxy6cpF8uzMr6xO1JavzXfuLP716z7B
rcj07myXeSecV26SV1ydlexzujLKeekRpZRT1V21OnAT2bBFb+5Gbfhd7txc
usYcGBxj8IEfhKo6rzPDwmbvmc9L/T2Y6bre+QeXkJ0Ff73K3LaeATj0cZ6D
Yg+wcen5dOS72JGEi7is9zGeJtl3cs+m5OE7W3P9wvNObM7MBPnhc29OZ5N7
L9ke4KHiAJ/NO87c9knBdiH89PXk444Nw71i8QE8loUnblku+FpPwY7Rz7bl
s17tyobtJ9we+zCK0Xf0WmBXwgFB3yFDfP6E0wHnA9i6GdkiZgYeHn52y9mD
5dkL2c6Rntf940/G/RqRfY3q/G15S+7orG+YSuxIcG6K9DipV1x/st4JcSKx
Snv2zpV7ikuKcL6Cq3tl5ypTmllPGTwjn3JjOPIaM+mz4rJUE85HdmZ6Vt+m
Tsj8qU8+gVxyA6zlXMuNJvAoyCb3z6VjtzYDzfy0cYTrteOKweAh4/0a/XvD
Hw2Cs6NnWaTfrXiMWdd4dWZ4ulxZMH90Ps9v1xwZtksOtpNk3J2wazcyXG1w
LRIF5vOqipEGyn0e5NNuDZPhROf0WOcUHlv2mjw6u98qpt9U/khe/9K73lXC
b5HDHj3tuCBbcHiYxUVm8ILvyAd+p7zwxXbEZEsv5+VO1HpXxMzMU1GjhNeR
uIo5Es4zc3rgGRGfV+i5wqGTWPOB3klG7P91dIYf3/3e/fnP/9cVius90dNY
y+ahqt0H2TLwDVbGdzxZfFCOfWvzjgVdUcX38N6BYZtVboBdgVO63JZ8wQCW
DqWlTz7FF9TcKsr/8uCayCb55KN2qHUwd6TzzYziN/qMfvkHn2IU73HCOK3h
/qgxI6B7y5f67kw+k9goxd40nItdOCluDVMW/QroWReUzyNbZirBLtpldxds
oEjN+rbwV0bZxVFsDA9rlhkFeHcm964mXc7pszXHdzrPcNg1bS6mMbg3XvGK
4sOUdIb4lt4SuCzsoNi+tXFUt63fvye5nTztuHAfzMl/npdH7szcUjdHpq/2
4iZj5sGQ64nuFd8T1nMpy0bS40ux60Wsp4udYGK+mu6f2Z+y4sWE3r8Afung
xjDAwBxkxxaO13/7X//P/eEPfzQuC3DG0PmacoZMcZ07wakY0fmDVyGl85iw
GslMn0c+RnEDfWxweKndcO7BoTtVnMbuCH4SPHbm/8AjTIIXne/Z2QhI/ifs
1mXXXGHUT8EWYj6a/TBy/oxyucOjuPPJfm/KR/MM9qXfezoH4F/gx1PNa5ew
+vq17deBb8fsCrLdki6Ab/GS2cen5+phNtZLXUKyVy4Cvhq40vCHZxRPFbpP
XJCKN0ZXn2zOgZjnVD+HGwh7zZwEtgmM5zp+c6bcS/oyO3+nc3KrZ7PeT/s8
N8++BLaZmgt9De7D7oHZa3YZqflgl8EKkL4XlZsTR5SkE3Gdb3ocKZ1vcJrh
24VXhh2dagku9aVhkzF/2+7fuLHuJSHZVCojw4taXv3s3n/8g3HQ4G+KjfXF
7GBZ8cAp89jHReeHq9yXVw7ast+j3418jedbz6Cn+B+5xxX3g5lMvX1X+c7B
ccYwY8EVbY6k//C8K46ED+JIOVKqBn/Zwvbxz2UjwBaCE4U5U7BhDk7yltfz
DJAfteX9s6ZxiMANRt8WP5+TnGPyEcwOH8k3ek7pG4xcoDC22tuW4vYN9nDl
M+lFoFcHeubMx9H7OzwruVf+tGKEtisoJmmQL+tZpcCX6YIDemU7J9RwwTbh
e+AS8j0498DYxcYw+0qeCc7sNztRkyv+F7miv9hpejYbOn+HcMgFCu6ZckSP
P2s8peyLw3lYkM2jxpTryYZ2lKcPLgy3F4ynjPxJXLaYmUf0NaF4BBtJTxhd
Qq/IwcA2+f8Ip72K
     "], {{0, 120}, {120, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association[
      "Exif" -> Association[
        "Software" -> "Created with the Wolfram Language : www.wolfram.com"], 
       "Comments" -> 
       Association[
        "Software" -> "Created with the Wolfram Language : www.wolfram.com", 
         "Creation Time" -> 
         DateObject[{2018, 7, 2, 15, 16, 30.}, "Instant", "Gregorian", -4.]]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{120, 120},
   PlotRange->{{0, 120}, {0, 120}}], "]"}]], "Input",
 CellChangeTimes->{{3.739646078903373*^9, 3.739646095169026*^9}, {
   3.7396461306975203`*^9, 3.7396462446211967`*^9}, 3.739646274963299*^9, {
   3.739646324519318*^9, 3.7396463511966267`*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"f013dd30-4577-4994-8b94-ebb34a8c86a0"],

Cell[BoxData["0.88946533203125`"], "Output",
 CellChangeTimes->{
  3.7396460957281713`*^9, {3.739646131229712*^9, 3.73964624497788*^9}, 
   3.739646275280718*^9, {3.739646324908828*^9, 3.739646349836022*^9}, 
   3.7396572627851057`*^9},
 CellLabel->
  "Out[388]=",ExpressionUUID->"b9c65fbf-0f76-468b-ad83-c08bfc9e2003"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempnet", " ", "=", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{
    "NetModel", "[", "\"\<VGG-16 Trained on ImageNet Competition Data\>\"", 
     "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "\"\<relu3_1\>\""}], "}"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[426]:=",ExpressionUUID->"1b651804-4e43-4df8-8d0f-d72c490f97a3"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"256\"", "\"56\"", 
                    "\"56\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["12", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 3, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "$GroupNumber" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "conv1_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{64}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {224, 224}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "relu1_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 224, 224}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {224, 224}, "$OutputSize" -> {112, 112}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 224, 224}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "conv2_2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {112, 112}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "relu2_2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 112, 112}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]]], "pool2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {0, 0}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 128, 
                    "$InputSize" -> {112, 112}, "$OutputSize" -> {56, 56}, 
                    "$MXPoolingConvention" -> "full", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 112, 112}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]]], "conv3_1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 3, 3}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {56, 56}, "$OutputSize" -> {56, 56}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], "relu3_1" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 56, 56}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu1_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu2_2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv3_1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu3_1", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {224, 224}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.4850196078431373, 0.457956862745098, 
                    0.4076039215686274}], 
                    
                    NeuralNetworks`TensorT[{3, 224, 224}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 56, 56}, 
                    NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu1_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"224\"", "\"224\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu1_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu2_2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"112\"", "\"112\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu2_2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pool2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"128\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pool2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"conv3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "conv3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"relu3_1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "relu3_1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"256\"", 
                    "\"56\"", "\"56\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7396617010484257`*^9},
 CellLabel->
  "Out[426]=",ExpressionUUID->"68ace686-cf40-497d-a2f4-8c238d41dbcb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test the Network", "Section",
 CellChangeTimes->{{3.739482174386187*^9, 
  3.739482180716022*^9}},ExpressionUUID->"363992ed-65d6-4a46-9388-\
9c42d41918e4"],

Cell[TextData[StyleBox["Now ..",
 FontColor->GrayLevel[0.5]]], "Text",ExpressionUUID->"847150e1-f1fb-45c6-bb18-d5b8ffe48274"]
}, Closed]],

Cell["Conclusion", "Section",ExpressionUUID->"92ccd538-e94d-4872-84e7-cfa5924c7e52"],

Cell[CellGroupData[{

Cell["Author contact information", "Section",ExpressionUUID->"a78f6e4f-dbdf-4763-a44f-16569b36e665"],

Cell["Mehmet Sahin", "Text",ExpressionUUID->"44146aed-2d19-4c66-bfba-1e67f1c1dfb3"],

Cell["6/28/2018\[LineSeparator]mehmetmshin@gmail.com", "Text",ExpressionUUID->"42b89b8a-7845-4e69-bcf1-628283f83f62"]
}, Closed]],

Cell[CellGroupData[{

Cell["Further Work", "Section",ExpressionUUID->"658c402b-fd06-4703-b019-cf7fdcc0431f"],

Cell["Mehmet Sahin", "Text",ExpressionUUID->"9e798bcc-6464-4251-bae9-945f2cbc5b51"],

Cell["6/28/2018\[LineSeparator]mehmetmshin@gmail.com", "Text",ExpressionUUID->"34b36ed2-7921-4035-8d22-1b39b858f1c9"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1184, 855},
WindowMargins->{{Automatic, 3}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 182, 3, 98, "Title",ExpressionUUID->"755e0098-9782-4df5-8299-7f54266c54d6"],
Cell[765, 27, 91, 0, 20, "Abstract",ExpressionUUID->"db4efd27-b72d-4835-a486-b18956bba0cb"],
Cell[859, 29, 105, 0, 20, "AuthorInfo",ExpressionUUID->"59a63784-4e95-46b9-9a1d-2c013f47161b"],
Cell[967, 31, 71, 0, 35, "Text",ExpressionUUID->"85271f44-5b04-421c-bf31-0395fab10c35"],
Cell[1041, 33, 87, 0, 35, "Text",ExpressionUUID->"a6bd12b6-0886-47fc-9fa5-02f0e3c1bd26"],
Cell[CellGroupData[{
Cell[1153, 37, 98, 0, 67, "Section",ExpressionUUID->"35feb7e4-4e93-4e64-abc0-7b0b86e8128f"],
Cell[1254, 39, 201, 3, 35, "Text",ExpressionUUID->"55ddc81f-fcf7-4026-af30-c2c4c901f21b"],
Cell[1458, 44, 87, 0, 35, "Text",ExpressionUUID->"dc3fa30d-000e-45b8-9f6e-f2ffca697a75"],
Cell[1548, 46, 566, 10, 30, "Input",ExpressionUUID->"fc097bea-1c77-45d9-b139-f63fc32e60f7"],
Cell[2117, 58, 153, 1, 38, "CodeText",ExpressionUUID->"d4717b68-e7a9-459d-b0b1-28ff62c78660"],
Cell[2273, 61, 1135, 28, 167, "Code",ExpressionUUID->"bc28cecf-a8f1-44a1-9a88-a545439b7d8a"],
Cell[3411, 91, 169, 3, 38, "CodeText",ExpressionUUID->"7fc79341-27e5-45f6-b25b-6a94bb02c292"],
Cell[CellGroupData[{
Cell[3605, 98, 10157, 199, 338, "Code",ExpressionUUID->"0da66e61-053c-44ed-bd6f-ec8918405511"],
Cell[13765, 299, 537715, 11122, 238, "Output",ExpressionUUID->"55e061f4-ed51-48c5-ba92-bdb25dbd427a"],
Cell[551483, 11423, 497222, 10457, 235, "Output",ExpressionUUID->"23523178-6db4-44e0-996f-fab508631b64"]
}, Open  ]],
Cell[1048720, 21883, 442, 11, 72, "Code",ExpressionUUID->"f179bd6c-bbff-4ff9-94f6-1da12fffed4d"],
Cell[1049165, 21896, 2557, 55, 110, "Code",ExpressionUUID->"4397839f-173c-446c-baa3-710888ff32b1"],
Cell[1051725, 21953, 1346, 26, 72, "Code",ExpressionUUID->"bc1a30f6-fb29-427d-8765-418a35a6504f"],
Cell[1053074, 21981, 198, 3, 38, "CodeText",ExpressionUUID->"82cff098-1e9b-4ea7-96d4-f49811c01086"],
Cell[CellGroupData[{
Cell[1053297, 21988, 3039, 57, 347, "Code",ExpressionUUID->"5fce33a1-1021-4d3d-8485-479547660791"],
Cell[1056339, 22047, 9464, 256, 240, "Output",ExpressionUUID->"25ced112-57c1-4e5d-b9e3-8d247553f38e"],
Cell[1065806, 22305, 9162, 243, 240, "Output",ExpressionUUID->"ecb3dc16-7b00-4859-a541-0ba98e710189"],
Cell[1074971, 22550, 1516, 21, 34, "Output",ExpressionUUID->"95513da8-4fe4-4fd1-9477-a7538e9e6f16"],
Cell[1076490, 22573, 279812, 4611, 333, "Output",ExpressionUUID->"ec1e7cca-63b0-4f7d-b59c-45805f1f319d"],
Cell[1356305, 27186, 1513, 21, 34, "Output",ExpressionUUID->"2e52184f-8986-48bc-a00f-5362038846df"],
Cell[1357821, 27209, 477900, 7859, 378, "Output",ExpressionUUID->"674e1da4-7382-4e7a-9356-928e014f1f17"]
}, Open  ]],
Cell[1835736, 35071, 131, 3, 30, "Input",ExpressionUUID->"4e3ea519-4e5c-44ff-9169-0de7d87dd3f8"],
Cell[1835870, 35076, 223, 5, 38, "CodeText",ExpressionUUID->"7239a3fa-7e8e-4f7d-866a-449f2cbce6b8"],
Cell[1836096, 35083, 693, 17, 72, "Code",ExpressionUUID->"9f4d1e6b-82a9-4913-a2ba-bbafd0ff2fed"],
Cell[1836792, 35102, 159, 3, 38, "CodeText",ExpressionUUID->"e4818244-97a3-4bb6-b33f-a78551d38c75"],
Cell[1836954, 35107, 980, 22, 73, "Input",ExpressionUUID->"b4914fab-1406-4ff2-975c-47e0ef507b50"],
Cell[1837937, 35131, 183, 3, 38, "CodeText",ExpressionUUID->"9ff6564b-5c79-4acc-8b4f-41e821cef504"],
Cell[1838123, 35136, 1195, 26, 91, "Code",ExpressionUUID->"a42fbfa5-bcd2-42d9-a5e0-03d65778d6ca"],
Cell[CellGroupData[{
Cell[1839343, 35166, 930, 16, 73, "Input",ExpressionUUID->"b4fc73f5-0934-4faf-8699-0de8205e8f9e"],
Cell[1840276, 35184, 945, 13, 34, "Output",ExpressionUUID->"bf197c3b-ee00-4eb9-ba7c-8f8e1325ca91"],
Cell[1841224, 35199, 1565, 31, 37, "Output",ExpressionUUID->"425b9837-f0ae-41d0-b791-d12b13da182b"],
Cell[1842792, 35232, 16036, 299, 109, "Output",ExpressionUUID->"88430038-39a1-4fa7-a664-61abca7477f3"]
}, Open  ]],
Cell[1858843, 35534, 249, 6, 38, "CodeText",ExpressionUUID->"a50cd165-655d-4d47-af0b-17bcd8134cea"],
Cell[1859095, 35542, 699, 16, 72, "Code",ExpressionUUID->"748e53f0-884a-424e-910a-2f234b61ef52"],
Cell[1859797, 35560, 181, 3, 38, "CodeText",ExpressionUUID->"45e77874-c5bf-4e4c-ae28-188c83e6bbf5"],
Cell[CellGroupData[{
Cell[1860003, 35567, 551, 11, 73, "Input",ExpressionUUID->"ac1c5322-8a62-4e34-b10a-7d0b570ddfd9"],
Cell[1860557, 35580, 961, 18, 37, "Output",ExpressionUUID->"f10208e3-3eb2-40aa-a989-3e8eeb67a2c7"],
Cell[1861521, 35600, 759, 11, 34, "Output",ExpressionUUID->"1526ee9e-42c8-494c-a67c-282590c5af63"],
Cell[1862283, 35613, 963, 18, 37, "Output",ExpressionUUID->"2e82e3ab-104a-41ec-9fb1-f4eaf3676fdf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1863283, 35636, 498, 9, 108, "Subsection",ExpressionUUID->"831f9456-a7b3-4e0a-9d40-289d00e5a43c"],
Cell[1863784, 35647, 120, 0, 38, "CodeText",ExpressionUUID->"8d3f76fc-7216-445b-9de9-29f45a9ee15f"],
Cell[1863907, 35649, 1299, 30, 167, "Code",ExpressionUUID->"d24208c3-4ada-4567-b28c-7f512f4ad8f2"],
Cell[1865209, 35681, 193, 3, 38, "CodeText",ExpressionUUID->"683a57ca-6e16-469d-8caa-36d7cad6769d"],
Cell[1865405, 35686, 383, 10, 72, "Code",ExpressionUUID->"c1703756-cd4e-4971-b72e-3d0902be07c4"],
Cell[1865791, 35698, 134, 0, 38, "CodeText",ExpressionUUID->"4c349f46-896d-442f-91c9-506e721dae41"],
Cell[1865928, 35700, 1565, 36, 129, "Code",ExpressionUUID->"992a878a-ece8-4621-9f25-b9bb3ea4aaea"],
Cell[1867496, 35738, 207, 3, 38, "CodeText",ExpressionUUID->"b3405eda-1496-44dc-add9-30c3ede8f5f4"],
Cell[1867706, 35743, 1030, 21, 91, "Code",ExpressionUUID->"34d04065-ea6f-44ec-b2ed-21d5be51a442"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1868773, 35769, 240, 6, 54, "Subsection",ExpressionUUID->"00f8d736-527f-4bf6-b662-db5f231785ae"],
Cell[1869016, 35777, 4522, 94, 262, "Code",ExpressionUUID->"b545a918-adfa-43f8-980f-ed3a0b8ac2cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1873575, 35876, 190, 3, 54, "Subsection",ExpressionUUID->"05a23029-b3d3-42f8-9e1a-a6762aee3e6c"],
Cell[1873768, 35881, 4705, 90, 376, "Code",ExpressionUUID->"45a3f555-28af-4a06-b18a-f941f28f51b8"],
Cell[1878476, 35973, 2210, 44, 94, "Input",ExpressionUUID->"5931a2df-e0a2-47f6-bd9e-b486326c4654"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1880735, 36023, 211, 4, 67, "Section",ExpressionUUID->"69c2789e-757d-42de-8e7a-aa67a7c35b9d"],
Cell[1880949, 36029, 404, 7, 58, "Text",ExpressionUUID->"7de5c4c6-a64b-46a1-a690-20421acf8327"],
Cell[1881356, 36038, 214, 4, 38, "CodeText",ExpressionUUID->"397141f2-5191-422a-93be-13de607758e9"],
Cell[CellGroupData[{
Cell[1881595, 36046, 825, 18, 94, "Input",ExpressionUUID->"15c30300-e287-4825-9e66-2fa1922b0dcd"],
Cell[1882423, 36066, 276, 4, 34, "Output",ExpressionUUID->"0b058348-c50c-4941-a577-f6fad6929fd0"],
Cell[1882702, 36072, 273, 4, 34, "Output",ExpressionUUID->"c99c177e-e454-4703-a338-649e3463bcc1"]
}, Open  ]],
Cell[1882990, 36079, 247, 6, 38, "CodeText",ExpressionUUID->"7aa12ef3-26bc-483c-a725-6d772e623a7f"],
Cell[1883240, 36087, 551, 14, 72, "Code",ExpressionUUID->"255aacb6-794c-4ff6-8454-598bc0609fe5"],
Cell[1883794, 36103, 189, 3, 38, "CodeText",ExpressionUUID->"b19a2987-604b-4b47-a42b-7b327a644fcd"],
Cell[1883986, 36108, 718, 19, 52, "Input",ExpressionUUID->"b976f20c-aaaa-4f9e-b731-796d2f78847e"],
Cell[CellGroupData[{
Cell[1884729, 36131, 319, 7, 30, "Input",ExpressionUUID->"fe6bd8c0-663f-4630-8621-cf33d8934ac7"],
Cell[1885051, 36140, 321, 6, 34, "Output",ExpressionUUID->"34f91dba-873c-4a47-9c76-40803f9aad4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1885409, 36151, 784, 14, 52, "Input",ExpressionUUID->"574ec43b-d24e-461d-9af8-b5ab63b47242"],
Cell[1886196, 36167, 50356, 831, 137, "Output",ExpressionUUID->"43ce7cd6-409d-4ae6-9309-dfeebfa4aff9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1936589, 37003, 46655, 772, 75, "Input",ExpressionUUID->"f8091a92-b296-494b-990d-075b88ef0ac1"],
Cell[1983247, 37777, 181, 3, 34, "Output",ExpressionUUID->"d6093e98-2de6-4de3-abd0-13528c99e962"]
}, Open  ]],
Cell[1983443, 37783, 348, 7, 30, "Input",ExpressionUUID->"b7811403-7958-4d99-96aa-e0953d6541f2"],
Cell[1983794, 37792, 227, 5, 38, "CodeText",ExpressionUUID->"5b33f5a3-216c-471c-a9e2-e775cc05da3c"],
Cell[1984024, 37799, 238, 5, 30, "Input",ExpressionUUID->"48688ea9-0207-4268-860c-96dfb031cff8"],
Cell[CellGroupData[{
Cell[1984287, 37808, 542, 13, 30, "Input",ExpressionUUID->"ddbe139b-5d21-4377-b8c3-d272e43826f7"],
Cell[1984832, 37823, 63159, 1246, 76, "Output",ExpressionUUID->"dd3e46c0-dce0-4eb3-8f68-043e5657928c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2048028, 39074, 288, 6, 30, "Input",ExpressionUUID->"5aa61712-b344-4b5e-8f18-b5d92a80df94"],
Cell[2048319, 39082, 84624, 1675, 76, "Output",ExpressionUUID->"0d3c354a-4613-4fb4-bb65-4c0151e2896e"]
}, Open  ]],
Cell[2132958, 40760, 256, 6, 38, "CodeText",ExpressionUUID->"76a4ef0e-ae8d-4476-a51a-891c46321316"],
Cell[CellGroupData[{
Cell[2133239, 40770, 2951, 69, 178, "Input",ExpressionUUID->"2ef03584-231a-4e69-8b3b-f7eb4c0adc53"],
Cell[2136193, 40841, 83085, 1683, 75, "Output",ExpressionUUID->"6f9dccb6-3864-4dd9-8614-bc05cfb99196"]
}, Open  ]],
Cell[2219293, 42527, 187, 4, 30, "Input",ExpressionUUID->"41967255-2987-427c-9144-9590706b60f9"],
Cell[CellGroupData[{
Cell[2219505, 42535, 307, 7, 30, "Input",ExpressionUUID->"1c5d055e-3b09-4ae6-a452-f46389d1741d"],
Cell[2219815, 42544, 569, 12, 42, "Output",ExpressionUUID->"f6560439-6586-4464-ac5d-c2215ea53f93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2220421, 42561, 191, 5, 30, "Input",ExpressionUUID->"7ab6e1d0-314f-4e3f-b221-1e18352f8fcd"],
Cell[2220615, 42568, 415, 8, 34, "Output",ExpressionUUID->"e10e6999-2e53-4d5b-9acc-c7bcddab2724"]
}, Open  ]],
Cell[2221045, 42579, 189, 3, 38, "CodeText",ExpressionUUID->"2117d55d-b43a-4341-8c6b-4e8649a2d77b"],
Cell[CellGroupData[{
Cell[2221259, 42586, 485, 10, 30, "Input",ExpressionUUID->"bc334f20-f774-4d41-921b-fa116a02e74e"],
Cell[2221747, 42598, 6579, 131, 138, "Output",ExpressionUUID->"9dbd8d36-c5f1-4ddd-9e00-8d5d27afc6e6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2228363, 42734, 409, 7, 30, "Input",ExpressionUUID->"8fad11a1-ad6b-4b12-a1c9-d8a165f8ffbf"],
Cell[2228775, 42743, 333, 6, 34, "Output",ExpressionUUID->"8c69c020-928f-4c17-bb6c-698d474fdf84"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2229145, 42754, 259, 5, 30, "Input",ExpressionUUID->"df8516ff-7be7-4802-8691-42743f0bfb18"],
Cell[2229407, 42761, 80964, 1644, 75, "Output",ExpressionUUID->"7394c4c4-3d75-4715-aace-e70b21950f36"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2310408, 44410, 50399, 834, 75, "Input",ExpressionUUID->"f013dd30-4577-4994-8b94-ebb34a8c86a0"],
Cell[2360810, 45246, 319, 6, 34, "Output",ExpressionUUID->"b9c65fbf-0f76-468b-ad83-c08bfc9e2003"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2361166, 45257, 376, 10, 30, "Input",ExpressionUUID->"1b651804-4e43-4df8-8d0f-d72c490f97a3"],
Cell[2361545, 45269, 46136, 932, 76, "Output",ExpressionUUID->"68ace686-cf40-497d-a2f4-8c238d41dbcb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2407730, 46207, 161, 3, 67, "Section",ExpressionUUID->"363992ed-65d6-4a46-9388-9c42d41918e4"],
Cell[2407894, 46212, 125, 1, 35, "Text",ExpressionUUID->"847150e1-f1fb-45c6-bb18-d5b8ffe48274"]
}, Closed]],
Cell[2408034, 46216, 84, 0, 53, "Section",ExpressionUUID->"92ccd538-e94d-4872-84e7-cfa5924c7e52"],
Cell[CellGroupData[{
Cell[2408143, 46220, 100, 0, 53, "Section",ExpressionUUID->"a78f6e4f-dbdf-4763-a44f-16569b36e665"],
Cell[2408246, 46222, 83, 0, 32, "Text",ExpressionUUID->"44146aed-2d19-4c66-bfba-1e67f1c1dfb3"],
Cell[2408332, 46224, 117, 0, 52, "Text",ExpressionUUID->"42b89b8a-7845-4e69-bcf1-628283f83f62"]
}, Closed]],
Cell[CellGroupData[{
Cell[2408486, 46229, 86, 0, 53, "Section",ExpressionUUID->"658c402b-fd06-4703-b019-cf7fdcc0431f"],
Cell[2408575, 46231, 83, 0, 35, "Text",ExpressionUUID->"9e798bcc-6464-4251-bae9-945f2cbc5b51"],
Cell[2408661, 46233, 117, 0, 58, "Text",ExpressionUUID->"34b36ed2-7921-4035-8d22-1b39b858f1c9"]
}, Open  ]]
}, Open  ]]
}
]
*)

